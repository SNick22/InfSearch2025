<!DOCTYPE html>
<html lang="ru">

  <head>
    <title>Вопросы и ответы для собеседования по Kotlin. Часть 1 &#x2F; Хабр</title>
<meta property="fb:app_id" content="444736788986613">
<meta property="fb:pages" content="472597926099084">
<meta name="twitter:card" content="summary_large_image">
<meta name="twitter:site" content="@habr_com">
<meta property="og:site_name" content="Хабр">
<link href="https://habr.com/ru/rss/post/721084/?fl=ru" type="application/rss+xml" title rel="alternate" name="rss">
<link href="https://habr.com/ru/articles/721084/" rel="canonical" data-hid="e3fa780">
<link rel="image_src" href="https://habrastorage.org/getpro/habr/upload_files/c73/420/1d9/c734201d91a3a6b141891f97efd6e3cb.png" data-hid="2a79c45">
<link rel="amphtml" href="https://habr.com/ru/amp/publications/721084/">
<meta property="og:title" content="Вопросы и ответы для собеседования по Kotlin. Часть 1">
<meta name="twitter:title" content="Вопросы и ответы для собеседования по Kotlin. Часть 1">
<meta name="aiturec:title" content="Вопросы и ответы для собеседования по Kotlin. Часть 1">
<meta name="description" content="Вопросы и ответы для собеседования по Kotlin. Часть 1 — вы находитесь здесь Вопросы и ответы для собеседования по Kotlin. Часть 2 &nbsp; Вопросы и ответы для собеседования по Kotlin. Часть 3 Вопросы и...">
<meta itemprop="description" content="Вопросы и ответы для собеседования по Kotlin. Часть 1 — вы находитесь здесь Вопросы и ответы для собеседования по Kotlin. Часть 2 &nbsp; Вопросы и ответы для собеседования по Kotlin. Часть 3 Вопросы и...">
<meta property="og:description" content="Вопросы и ответы для собеседования по Kotlin. Часть 1 — вы находитесь здесь Вопросы и ответы для собеседования по Kotlin. Часть 2 &nbsp; Вопросы и ответы для собеседования по Kotlin. Часть 3 Вопросы и...">
<meta name="twitter:description" content="Вопросы и ответы для собеседования по Kotlin. Часть 1 — вы находитесь здесь Вопросы и ответы для собеседования по Kotlin. Часть 2 &nbsp; Вопросы и ответы для собеседования по Kotlin. Часть 3 Вопросы и...">
<meta property="aiturec:description" content="Вопросы и ответы для собеседования по Kotlin. Часть 1 — вы находитесь здесь Вопросы и ответы для собеседования по Kotlin. Часть 2 &nbsp; Вопросы и ответы для собеседования по Kotlin. Часть 3 Вопросы и...">
<meta itemprop="image" content="https://habrastorage.org/getpro/habr/upload_files/c73/420/1d9/c734201d91a3a6b141891f97efd6e3cb.png">
<meta property="og:image" content="https://habrastorage.org/getpro/habr/upload_files/c73/420/1d9/c734201d91a3a6b141891f97efd6e3cb.png">
<meta property="og:image:width" content="1200">
<meta property="og:image:height" content="630">
<meta property="aiturec:image" content="https://habrastorage.org/getpro/habr/upload_files/c73/420/1d9/c734201d91a3a6b141891f97efd6e3cb.png">
<meta name="twitter:image" content="https://habrastorage.org/getpro/habr/upload_files/c73/420/1d9/c734201d91a3a6b141891f97efd6e3cb.png">
<meta property="vk:image" content="https://habrastorage.org/getpro/habr/upload_files/c73/420/1d9/c734201d91a3a6b141891f97efd6e3cb.png?format=vk">
<meta property="vk:image" content="https://habrastorage.org/getpro/habr/upload_files/c73/420/1d9/c734201d91a3a6b141891f97efd6e3cb.png?format=vk">
<meta property="aiturec:item_id" content="721084">
<meta property="aiturec:datetime" content="2023-03-20T08:54:02.000Z">
<meta content="https://habr.com/ru/articles/721084/" property="og:url">
<meta property="og:type" content="article">
<meta property="og:locale" content="ru_RU">
<meta property="og:image:width" content="1200">
<meta property="og:image:height" content="630">
<meta name="keywords" content="kotlin, java, собеседование вопросы, подготовка к собеседованию, вопросы для собеседования, faq, собеседования в it, вопросы-ответы, котлин, jvm">
<script type="application/ld+json" data-hid="1e0f0a2">{"@context":"http:\/\/schema.org","@type":"Article","mainEntityOfPage":{"@type":"WebPage","@id":"https:\/\/habr.com\/ru\/articles\/721084\/"},"headline":"Вопросы и ответы для собеседования по Kotlin. Часть 1","datePublished":"2023-03-20T11:54:02+03:00","dateModified":"2024-01-25T12:37:23+03:00","author":{"@type":"Person","name":"Дмитрий"},"publisher":{"@type":"Organization","name":"Habr","logo":{"@type":"ImageObject","url":"https:\/\/habrastorage.org\/webt\/a_\/lk\/9m\/a_lk9mjkccjox-zccjrpfolmkmq.png"}},"description":"Вопросы и ответы для собеседования по Kotlin. Часть 1 &mdash; вы находитесь здесьВопросы и ответы для собеседования по Kotlin. Часть 2&nbsp;Вопросы и ответы для собеседован...","url":"https:\/\/habr.com\/ru\/articles\/721084\/#post-content-body","about":["h_programming","h_java","h_android_dev","h_kotlin","h_study","f_develop","f_management"],"image":["https:\/\/habr.com\/share\/publication\/721084\/03b1c78eb0eab8ad091b1f21b7c203ac\/","https:\/\/habrastorage.org\/getpro\/habr\/upload_files\/949\/bdc\/1e2\/949bdc1e2b5f2acbe17488bcafcfae9e.png","https:\/\/habrastorage.org\/getpro\/habr\/upload_files\/78c\/dde\/a3c\/78cddea3ca15b60997861e9e2332906e.png"]}</script>
    <meta charset="UTF-8">
    <meta name="viewport"
      content="width=device-width,initial-scale=1.0,viewport-fit=cover,maximum-scale=1,user-scalable=0">
    <meta name="referrer" content="unsafe-url">
    <style>
      /* cyrillic-ext */
      @font-face {
        font-family: 'Fira Sans';
        font-style: normal;
        font-weight: 400;
        font-display: swap;
        src: url(https://fonts.gstatic.com/s/firasans/v17/va9E4kDNxMZdWfMOD5VvmojLazX3dGTP.woff2) format('woff2');
        unicode-range: U+0460-052F, U+1C80-1C88, U+20B4, U+2DE0-2DFF, U+A640-A69F, U+FE2E-FE2F;
      }

      /* cyrillic */
      @font-face {
        font-family: 'Fira Sans';
        font-style: normal;
        font-weight: 400;
        font-display: swap;
        src: url(https://fonts.gstatic.com/s/firasans/v17/va9E4kDNxMZdWfMOD5Vvk4jLazX3dGTP.woff2) format('woff2');
        unicode-range: U+0301, U+0400-045F, U+0490-0491, U+04B0-04B1, U+2116;
      }

      /* latin-ext */
      @font-face {
        font-family: 'Fira Sans';
        font-style: normal;
        font-weight: 400;
        font-display: swap;
        src: url(https://fonts.gstatic.com/s/firasans/v17/va9E4kDNxMZdWfMOD5VvmYjLazX3dGTP.woff2) format('woff2');
        unicode-range: U+0100-02AF, U+0304, U+0308, U+0329, U+1E00-1E9F, U+1EF2-1EFF, U+2020, U+20A0-20AB, U+20AD-20C0, U+2113, U+2C60-2C7F, U+A720-A7FF;
      }

      /* latin */
      @font-face {
        font-family: 'Fira Sans';
        font-style: normal;
        font-weight: 400;
        font-display: swap;
        src: url(https://fonts.gstatic.com/s/firasans/v17/va9E4kDNxMZdWfMOD5Vvl4jLazX3dA.woff2) format('woff2');
        unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+0304, U+0308, U+0329, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;
      }

      /* cyrillic-ext */
      @font-face {
        font-family: 'Fira Sans';
        font-style: normal;
        font-weight: 500;
        font-display: swap;
        src: url(https://fonts.gstatic.com/s/firasans/v17/va9B4kDNxMZdWfMOD5VnZKveSxf6Xl7Gl3LX.woff2) format('woff2');
        unicode-range: U+0460-052F, U+1C80-1C88, U+20B4, U+2DE0-2DFF, U+A640-A69F, U+FE2E-FE2F;
      }

      /* cyrillic */
      @font-face {
        font-family: 'Fira Sans';
        font-style: normal;
        font-weight: 500;
        font-display: swap;
        src: url(https://fonts.gstatic.com/s/firasans/v17/va9B4kDNxMZdWfMOD5VnZKveQhf6Xl7Gl3LX.woff2) format('woff2');
        unicode-range: U+0301, U+0400-045F, U+0490-0491, U+04B0-04B1, U+2116;
      }

      /* latin-ext */
      @font-face {
        font-family: 'Fira Sans';
        font-style: normal;
        font-weight: 500;
        font-display: swap;
        src: url(https://fonts.gstatic.com/s/firasans/v17/va9B4kDNxMZdWfMOD5VnZKveSBf6Xl7Gl3LX.woff2) format('woff2');
        unicode-range: U+0100-02AF, U+0304, U+0308, U+0329, U+1E00-1E9F, U+1EF2-1EFF, U+2020, U+20A0-20AB, U+20AD-20C0, U+2113, U+2C60-2C7F, U+A720-A7FF;
      }

      /* latin */
      @font-face {
        font-family: 'Fira Sans';
        font-style: normal;
        font-weight: 500;
        font-display: swap;
        src: url(https://fonts.gstatic.com/s/firasans/v17/va9B4kDNxMZdWfMOD5VnZKveRhf6Xl7Glw.woff2) format('woff2');
        unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+0304, U+0308, U+0329, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;
      }

      /* cyrillic-ext */
      @font-face {
        font-family: 'Fira Sans';
        font-style: normal;
        font-weight: 700;
        font-display: swap;
        src: url(https://fonts.gstatic.com/s/firasans/v17/va9B4kDNxMZdWfMOD5VnLK3eSxf6Xl7Gl3LX.woff2) format('woff2');
        unicode-range: U+0460-052F, U+1C80-1C88, U+20B4, U+2DE0-2DFF, U+A640-A69F, U+FE2E-FE2F;
      }

      /* cyrillic */
      @font-face {
        font-family: 'Fira Sans';
        font-style: normal;
        font-weight: 700;
        font-display: swap;
        src: url(https://fonts.gstatic.com/s/firasans/v17/va9B4kDNxMZdWfMOD5VnLK3eQhf6Xl7Gl3LX.woff2) format('woff2');
        unicode-range: U+0301, U+0400-045F, U+0490-0491, U+04B0-04B1, U+2116;
      }

      /* latin-ext */
      @font-face {
        font-family: 'Fira Sans';
        font-style: normal;
        font-weight: 700;
        font-display: swap;
        src: url(https://fonts.gstatic.com/s/firasans/v17/va9B4kDNxMZdWfMOD5VnLK3eSBf6Xl7Gl3LX.woff2) format('woff2');
        unicode-range: U+0100-02AF, U+0304, U+0308, U+0329, U+1E00-1E9F, U+1EF2-1EFF, U+2020, U+20A0-20AB, U+20AD-20C0, U+2113, U+2C60-2C7F, U+A720-A7FF;
      }

      /* latin */
      @font-face {
        font-family: 'Fira Sans';
        font-style: normal;
        font-weight: 700;
        font-display: swap;
        src: url(https://fonts.gstatic.com/s/firasans/v17/va9B4kDNxMZdWfMOD5VnLK3eRhf6Xl7Glw.woff2) format('woff2');
        unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+0304, U+0308, U+0329, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;
      }
    </style>
    <link rel="preload" href="https://assets.habr.com/habr-web/css/theme/light-v1.css" as="style" media="(prefers-color-scheme: light)" /><link rel="preload" href="https://assets.habr.com/habr-web/css/theme/dark-v1.css" as="style" media="(prefers-color-scheme: dark)" /><link id="light-colors" rel="stylesheet" href="https://assets.habr.com/habr-web/css/theme/light-v1.css" media="(prefers-color-scheme: light)" /><link id="dark-colors" rel="stylesheet" href="https://assets.habr.com/habr-web/css/theme/dark-v1.css" media="(prefers-color-scheme: dark)" />
    <script>window.i18nFetch = new Promise((res, rej) => {
          const xhr = new XMLHttpRequest();
          xhr.open('GET', '/js/i18n/ru-compiled.35b2fec11bb79a62419ab67779c2dd82.json');
          xhr.responseType = 'json';
          xhr.onload = function(e) {
            if (this.status === 200) {
              res({ru: xhr.response});
            } else {
              rej(e);
            }
          };
          xhr.send();
        });</script>
    <style>
      .grecaptcha-badge {
        visibility: hidden;
      }
    </style>
    <meta name="habr-version" content="2.233.0">
    
    <meta name="apple-mobile-web-app-status-bar-style" content="#303b44">
    <meta name="msapplication-TileColor" content="#629FBC">
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="mobile-web-app-capable" content="yes">
    <link rel="shortcut icon" type="image/png" sizes="16x16" href="https://assets.habr.com/habr-web/img/favicons/favicon-16.png">
    <link rel="shortcut icon" type="image/png" sizes="32x32" href="https://assets.habr.com/habr-web/img/favicons/favicon-32.png">
    <link rel="apple-touch-icon" type="image/png" sizes="76x76" href="https://assets.habr.com/habr-web/img/favicons/apple-touch-icon-76.png">
    <link rel="apple-touch-icon" type="image/png" sizes="120x120" href="https://assets.habr.com/habr-web/img/favicons/apple-touch-icon-120.png">
    <link rel="apple-touch-icon" type="image/png" sizes="152x152" href="https://assets.habr.com/habr-web/img/favicons/apple-touch-icon-152.png">
    <link rel="apple-touch-icon" type="image/png" sizes="180x180" href="https://assets.habr.com/habr-web/img/favicons/apple-touch-icon-180.png">
    <link rel="apple-touch-icon" type="image/png" sizes="256x256" href="https://assets.habr.com/habr-web/img/favicons/apple-touch-icon-256.png">
    <link rel="apple-touch-startup-image"
      media="screen and (device-width: 320px) and (device-height: 568px) and (-webkit-device-pixel-ratio: 2) and (orientation: landscape)"
      href="https://assets.habr.com/habr-web/img/splashes/splash_1136x640.png">
    <link rel="apple-touch-startup-image"
      media="screen and (device-width: 375px) and (device-height: 812px) and (-webkit-device-pixel-ratio: 3) and (orientation: landscape)"
      href="https://assets.habr.com/habr-web/img/splashes/splash_2436x1125.png">
    <link rel="apple-touch-startup-image"
      media="screen and (device-width: 414px) and (device-height: 896px) and (-webkit-device-pixel-ratio: 2) and (orientation: landscape)"
      href="https://assets.habr.com/habr-web/img/splashes/splash_1792x828.png">
    <link rel="apple-touch-startup-image"
      media="screen and (device-width: 414px) and (device-height: 896px) and (-webkit-device-pixel-ratio: 2) and (orientation: portrait)"
      href="https://assets.habr.com/habr-web/img/splashes/splash_828x1792.png">
    <link rel="apple-touch-startup-image"
      media="screen and (device-width: 375px) and (device-height: 667px) and (-webkit-device-pixel-ratio: 2) and (orientation: landscape)"
      href="https://assets.habr.com/habr-web/img/splashes/splash_1334x750.png">
    <link rel="apple-touch-startup-image"
      media="screen and (device-width: 414px) and (device-height: 896px) and (-webkit-device-pixel-ratio: 3) and (orientation: portrait)"
      href="https://assets.habr.com/habr-web/img/splashes/splash_1242x2668.png">
    <link rel="apple-touch-startup-image"
      media="screen and (device-width: 414px) and (device-height: 736px) and (-webkit-device-pixel-ratio: 3) and (orientation: landscape)"
      href="https://assets.habr.com/habr-web/img/splashes/splash_2208x1242.png">
    <link rel="apple-touch-startup-image"
      media="screen and (device-width: 375px) and (device-height: 812px) and (-webkit-device-pixel-ratio: 3) and (orientation: portrait)"
      href="https://assets.habr.com/habr-web/img/splashes/splash_1125x2436.png">
    <link rel="apple-touch-startup-image"
      media="screen and (device-width: 414px) and (device-height: 736px) and (-webkit-device-pixel-ratio: 3) and (orientation: portrait)"
      href="https://assets.habr.com/habr-web/img/splashes/splash_1242x2208.png">
    <link rel="apple-touch-startup-image"
      media="screen and (device-width: 1024px) and (device-height: 1366px) and (-webkit-device-pixel-ratio: 2) and (orientation: landscape)"
      href="https://assets.habr.com/habr-web/img/splashes/splash_2732x2048.png">
    <link rel="apple-touch-startup-image"
      media="screen and (device-width: 414px) and (device-height: 896px) and (-webkit-device-pixel-ratio: 3) and (orientation: landscape)"
      href="https://assets.habr.com/habr-web/img/splashes/splash_2688x1242.png">
    <link rel="apple-touch-startup-image"
      media="screen and (device-width: 834px) and (device-height: 1112px) and (-webkit-device-pixel-ratio: 2) and (orientation: landscape)"
      href="https://assets.habr.com/habr-web/img/splashes/splash_2224x1668.png">
    <link rel="apple-touch-startup-image"
      media="screen and (device-width: 375px) and (device-height: 667px) and (-webkit-device-pixel-ratio: 2) and (orientation: portrait)"
      href="https://assets.habr.com/habr-web/img/splashes/splash_750x1334.png">
    <link rel="apple-touch-startup-image"
      media="screen and (device-width: 1024px) and (device-height: 1366px) and (-webkit-device-pixel-ratio: 2) and (orientation: portrait)"
      href="https://assets.habr.com/habr-web/img/splashes/splash_2048x2732.png">
    <link rel="apple-touch-startup-image"
      media="screen and (device-width: 834px) and (device-height: 1194px) and (-webkit-device-pixel-ratio: 2) and (orientation: landscape)"
      href="https://assets.habr.com/habr-web/img/splashes/splash_2388x1668.png">
    <link rel="apple-touch-startup-image"
      media="screen and (device-width: 834px) and (device-height: 1112px) and (-webkit-device-pixel-ratio: 2) and (orientation: portrait)"
      href="https://assets.habr.com/habr-web/img/splashes/splash_1668x2224.png">
    <link rel="apple-touch-startup-image"
      media="screen and (device-width: 320px) and (device-height: 568px) and (-webkit-device-pixel-ratio: 2) and (orientation: portrait)"
      href="https://assets.habr.com/habr-web/img/splashes/splash_640x1136.png">
    <link rel="apple-touch-startup-image"
      media="screen and (device-width: 834px) and (device-height: 1194px) and (-webkit-device-pixel-ratio: 2) and (orientation: portrait)"
      href="https://assets.habr.com/habr-web/img/splashes/splash_1668x2388.png">
    <link rel="apple-touch-startup-image"
      media="screen and (device-width: 768px) and (device-height: 1024px) and (-webkit-device-pixel-ratio: 2) and (orientation: landscape)"
      href="https://assets.habr.com/habr-web/img/splashes/splash_2048x1536.png">
    <link rel="apple-touch-startup-image"
      media="screen and (device-width: 768px) and (device-height: 1024px) and (-webkit-device-pixel-ratio: 2) and (orientation: portrait)"
      href="https://assets.habr.com/habr-web/img/splashes/splash_1536x2048.png">
    <link rel="mask-icon" color="#77a2b6" href="https://assets.habr.com/habr-web/img/favicons/apple-touch-icon-120.svg">
    <link crossorigin="use-credentials" href="/manifest.webmanifest" rel="manifest">
    <script async src="https://unpkg.com/pwacompat" crossorigin="anonymous"></script>
    <script>window.yaContextCb = window.yaContextCb || []</script>
    <script src="https://yandex.ru/ads/system/context.js" async></script>
  <link rel="preload" href="https://assets.habr.com/habr-web/css/chunk-vendors.04465f7c.css" as="style"><link rel="preload" href="https://assets.habr.com/habr-web/js/chunk-vendors.3b11d41f.js" as="script"><link rel="preload" href="https://assets.habr.com/habr-web/css/app.20959a76.css" as="style"><link rel="preload" href="https://assets.habr.com/habr-web/js/app.7a97ea6d.js" as="script"><link rel="stylesheet" href="https://assets.habr.com/habr-web/css/chunk-vendors.04465f7c.css"><link rel="stylesheet" href="https://assets.habr.com/habr-web/css/app.20959a76.css"></head>
  <body>
    
    <div id="mount"><div id="app" data-async-called="true"><div class="tm-layout__wrapper"><!--[--><!----><div></div><div class="tm-feature tm-feature"><!----></div><header class="tm-header" data-test-id="header"><div class="tm-page-width"><!--[--><div class="tm-header__container"><div class="tm-header__burger-nav" data-test-id="burger-nav"><button class="tm-header__button tm-header__button_burger" type="button"><svg class="tm-svg-img tm-header__icon tm-header__icon-burger" height="16" width="16"><title>Меню</title><use xlink:href="/img/megazord-v28.371b7fa3..svg#header-burger"></use></svg></button></div><span class="tm-header__logo-wrap"><a class="tm-header__logo tm-header__logo_hl-ru tm-header__logo" href="/ru/"><svg class="tm-svg-img tm-header__icon" height="16" width="16"><title>Хабр</title><use xlink:href="/img/habr-logo-ru.svg#logo"></use></svg></a><span style="display:none;" class="tm-header__beta-sign">β</span></span><!----><div class="tm-header-user-menu tm-header_user-menu"><a href="/ru/search/" class="tm-header-user-menu__item tm-header-user-menu__search" data-test-id="search-button"><svg class="tm-svg-img tm-header-user-menu__icon tm-header-user-menu__icon_search" height="24" width="24"><title>Поиск</title><use xlink:href="/img/megazord-v28.371b7fa3..svg#search"></use></svg></a><!----><!----><div class="tm-header-user-menu__item tm-header-user-menu__write"><div><svg class="tm-svg-img tm-header-user-menu__icon tm-header-user-menu__icon_write" height="24" width="24"><title>Написать публикацию</title><use xlink:href="/img/megazord-v28.371b7fa3..svg#write"></use></svg></div><!----></div><!--[--><div class="tm-header-user-menu__item"><button class="tm-header-user-menu__toggle" data-test-id="user-menu-settings"><svg class="tm-svg-img tm-header-user-menu__icon" height="24" width="24"><title>Настройки</title><use xlink:href="/img/megazord-v28.371b7fa3..svg#page-settings"></use></svg></button></div><a href="https://habr.com/kek/v1/auth/habrahabr/?back=/ru/articles/721084/&amp;hl=ru" rel="nofollow" class="tm-header-user-menu__item"><!--[--><button class="btn btn_solid btn_small tm-header-user-menu__login" type="button"><!--[-->Войти<!--]--></button><!--]--></a><!--]--><!----><!--teleport start--><!--teleport end--><!----></div></div><!--]--></div></header><div class="tm-layout"><div class="tm-page-progress-bar"></div><!----><!----><div class="tm-page-width"><!--[--><!--]--></div><main class="tm-layout__container"><div class="tm-page" hl="ru" data-async-called="true" style="--0c809c5a:16px;--a086013e:100%;--7c457026:0;"><div class="tm-page-width"><!--[--><!----><div class="tm-page__wrapper"><div class="tm-page__main_has-sidebar tm-page__main"><div class="pull-down"><!----><div class="pull-down__header" style="height:0px;"><div class="pull-down__content" style="bottom:10px;"><svg class="tm-svg-img pull-down__icon pull-down__arrow" height="24" width="24"><title>Обновить</title><use xlink:href="/img/megazord-v28.371b7fa3..svg#pull-arrow"></use></svg></div></div><!--[--><!--[--><div class="banner-wrapper narrow" style="--467224fc:100px;--58ff5eba:auto;" data-v-ad758baa><!--[--><div class="placeholder-wrapper placeholder" data-v-ad758baa><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><div class="adfox-banner-placeholder narrow" data-v-12f7bcca><div class="image loads" data-v-12f7bcca></div><div class="lines" data-v-12f7bcca><div class="line loads" data-v-12f7bcca></div><div class="line loads" data-v-12f7bcca></div><div class="line loads" data-v-12f7bcca></div></div></div><!----></div><div id="adfox_169815559787254866" class="tm-adfox-banner" data-v-ad758baa></div><!--]--></div><div class="tm-article-presenter"><!--[--><!--]--><div class="tm-article-presenter__body" data-test-id="article-body"><div class="tm-misprint-area"><div class="tm-misprint-area__wrapper"><!--[--><article class="tm-article-presenter__content tm-article-presenter__content_narrow"><!--[--><div class="tm-article-presenter__header"><!--[--><!--]--><div class="tm-article-snippet tm-article-snippet tm-article-presenter__snippet"><!--[--><!--]--><div class="tm-article-snippet__meta-container"><div class="tm-article-snippet__meta"><span class="tm-user-info tm-article-snippet__author"><a href="/ru/users/dmt_ovs/" class="tm-user-info__userpic" data-test-id="user-info-pic" title="dmt_ovs"><div class="tm-entity-image"><img alt="" class="tm-entity-image__pic" height="32" src="//habrastorage.org/r/w64/getpro/habr/avatars/84b/afb/1c1/84bafb1c17208f6b124be4429e2a8104.png" width="32"></div></a><span class="tm-user-info__user tm-user-info__user_appearance-default" data-test-id="user-info-description"><a href="/ru/users/dmt_ovs/" class="tm-user-info__username">dmt_ovs <!----></a><!--[--><span class="tm-article-datetime-published"><time datetime="2023-03-20T08:54:02.000Z" title="2023-03-20, 11:54">20  мар  2023 в 11:54</time></span><!--]--></span></span></div><!----></div><h1 class="tm-title tm-title_h1" lang="ru" data-test-id="articleTitle"><span>Вопросы и ответы для собеседования по Kotlin. Часть 1</span></h1><div class="tm-article-snippet__stats" data-test-id="articleStats"><div class="tm-article-complexity tm-article-complexity_complexity-medium"><span class="tm-svg-icon__wrapper tm-article-complexity__icon"><svg class="tm-svg-img tm-svg-icon" height="24" width="24"><title>Уровень сложности</title><use xlink:href="/img/megazord-v28.371b7fa3..svg#complexity-medium"></use></svg></span><span class="tm-article-complexity__label">Средний</span></div><div class="tm-article-reading-time"><span class="tm-svg-icon__wrapper tm-article-reading-time__icon"><svg class="tm-svg-img tm-svg-icon" height="24" width="24"><title>Время на прочтение</title><use xlink:href="/img/megazord-v28.371b7fa3..svg#clock"></use></svg></span><span class="tm-article-reading-time__label">14 мин</span></div><span class="tm-icon-counter tm-data-icons__item"><svg class="tm-svg-img tm-icon-counter__icon" height="24" width="24"><title>Количество просмотров</title><use xlink:href="/img/megazord-v28.371b7fa3..svg#counter-views"></use></svg><span class="tm-icon-counter__value" title="103973">104K</span></span></div><div class="tm-publication-hubs__container" data-test-id="articleHubsList"><div class="tm-publication-hubs"><!--[--><span class="tm-publication-hub__link-container"><a href="/ru/hubs/programming/" class="tm-publication-hub__link"><!--[--><span>Программирование</span><span class="tm-article-snippet__profiled-hub" title="Профильный хаб">*</span><!--]--></a></span><span class="tm-publication-hub__link-container"><a href="/ru/hubs/java/" class="tm-publication-hub__link"><!--[--><span>Java</span><span class="tm-article-snippet__profiled-hub" title="Профильный хаб">*</span><!--]--></a></span><span class="tm-publication-hub__link-container"><a href="/ru/hubs/android_dev/" class="tm-publication-hub__link"><!--[--><span>Разработка под Android</span><span class="tm-article-snippet__profiled-hub" title="Профильный хаб">*</span><!--]--></a></span><span class="tm-publication-hub__link-container"><a href="/ru/hubs/kotlin/" class="tm-publication-hub__link"><!--[--><span>Kotlin</span><span class="tm-article-snippet__profiled-hub" title="Профильный хаб">*</span><!--]--></a></span><span class="tm-publication-hub__link-container"><a href="/ru/hubs/study/" class="tm-publication-hub__link"><!--[--><span>Учебный процесс в IT</span><!----><!--]--></a></span><!--]--></div></div><div class="tm-article-labels" data-test-id="articleLabels"><div class="tm-article-labels__container"><div class="tm-publication-label tm-publication-label_variant-faq"><span>FAQ</span></div><!--[--><!--]--></div></div><!----><!----></div></div><!--[--><!----><div class="tm-article-body" data-gallery-root lang="ru"><div><!--[--><!--]--></div><div id="post-content-body"><div><div class="article-formatted-body article-formatted-body article-formatted-body_version-2"><div xmlns="http://www.w3.org/1999/xhtml"><p><a href="https://habr.com/ru/post/721084/" rel="noopener noreferrer nofollow">Вопросы и ответы для собеседования по Kotlin. Часть 1</a> — вы находитесь здесь<br/><a href="https://habr.com/ru/post/722686/" rel="noopener noreferrer nofollow">Вопросы и ответы для собеседования по Kotlin. Часть 2</a> <br/><a href="https://habr.com/ru/articles/728742/" rel="noopener noreferrer nofollow">Вопросы и ответы для собеседования по Kotlin. Часть 3</a> <br/><a href="https://habr.com/ru/articles/736392/" rel="noopener noreferrer nofollow">Вопросы и ответы для собеседования по Kotlin. Часть 4</a></p><a class="anchor" name="%D0%A1%D0%BF%D0%B8%D1%81%D0%BE%D0%BA%20%D1%82%D0%B5%D0%BC%20%D0%B8%20%D0%B2%D0%BE%D0%BF%D1%80%D0%BE%D1%81%D0%BE%D0%B2" id="Список тем и вопросов"></a><h2>Список тем и вопросов:</h2><h4>1. Kotlin и Java</h4><ul><li><p><a href="#%D0%9F%D1%80%D0%B5%D0%B8%D0%BC%D1%83%D1%89%D0%B5%D1%81%D1%82%D0%B2%D0%B0%20%D1%8F%D0%B7%D1%8B%D0%BA%D0%B0%20Kotlin%20%D0%BF%D0%B5%D1%80%D0%B5%D0%B4%20Java" rel="noopener noreferrer nofollow">Преимущества языка Kotlin перед Java</a></p></li><li><p><a href="#%D0%A0%D0%B0%D0%B7%D0%BD%D0%B8%D1%86%D0%B0%20%D0%BC%D0%B5%D0%B6%D0%B4%D1%83%20Exception%20%D0%B2%20Java%20%D0%B8%20Kotlin" rel="noopener noreferrer nofollow">Разница между Exception в Java и Kotlin</a></p></li><li><p><a href="#%D0%9A%D0%B0%D0%BA%20%D0%BF%D0%B5%D1%80%D0%B5%D0%BD%D0%B5%D1%81%D1%82%D0%B8%20%D1%81%D1%82%D0%B0%D1%82%D0%B8%D1%87%D0%BD%D1%8B%D0%B5%20%D0%BC%D0%B5%D1%82%D0%BE%D0%B4%D1%8B%20%D0%B8%D0%B7%20Java%20%D0%B2%20Kotlin?" rel="noopener noreferrer nofollow">Как перенести статичные методы из Java в Kotlin?</a></p></li><li><p><a href="#%D0%92%20%D0%BA%D0%B0%D0%BA%D0%BE%D0%B9%20%D0%BC%D0%BE%D0%B4%D0%B8%D1%84%D0%B8%D0%BA%D0%B0%D1%82%D0%BE%D1%80%20%D0%BF%D1%80%D0%B5%D0%BE%D0%B1%D1%80%D0%B0%D0%B7%D1%83%D0%B5%D1%82%D1%81%D1%8F%20internal%20%D0%B2%20Java?" rel="noopener noreferrer nofollow">В какой модификатор преобразуется internal в Java?</a></p></li><li><p><a href="#%D0%9E%D1%82%D0%BB%D0%B8%D1%87%D0%B8%D1%8F%20%D0%B2%20%D0%BF%D1%80%D0%BE%D0%B2%D0%B5%D1%80%D0%BA%D0%B5%20%D0%BD%D0%B0%20%D1%80%D0%B0%D0%B2%D0%B5%D0%BD%D1%81%D1%82%D0%B2%D0%BE%20==%20%D0%B8%20equals()" rel="noopener noreferrer nofollow">Отличия в проверке на равенство == и equals()</a></p></li></ul><h4>2. Анонимные классы и объекты, object и companion object</h4><ul><li><p><a href="#%D0%9A%D1%80%D0%B0%D1%82%D0%BA%D0%BE%20%D0%BF%D1%80%D0%BE%20%D0%B0%D0%BD%D0%BE%D0%BD%D0%B8%D0%BC%D0%BD%D1%8B%D0%B5%20%D0%BA%D0%BB%D0%B0%D1%81%D1%81%D1%8B%20%D0%B8%20%D0%BE%D0%B1%D1%8A%D0%B5%D0%BA%D1%82%D1%8B,%20object%20%D0%B8%20companion%20object" rel="noopener noreferrer nofollow"><u>Кратко про анонимные классы и объекты, object и companion object</u></a></p></li><li><p><a href="#%D0%9E%D0%B1%D1%8A%D1%8F%D0%B2%D0%BB%D0%B5%D0%BD%D0%B8%D0%B5%20%D0%BE%D0%B1%D1%8A%D0%B5%D0%BA%D1%82%D0%B0%20(object%20declaration),%20object%20%D0%BA%D0%B0%D0%BA%20Singleton" rel="noopener noreferrer nofollow">Объявление объекта (object declaration), object как Singleton</a></p></li><li><p><a href="#%D0%A1ompanion%20object%20(%D1%82%D0%B0%D0%BA%D0%B6%D0%B5%20Singleton)" rel="noopener noreferrer nofollow">Сompanion object (также Singleton)</a></p></li><li><p><a href="#%D0%9E%D0%B1%D1%8A%D0%B5%D0%BA%D1%82-%D0%B2%D1%8B%D1%80%D0%B0%D0%B6%D0%B5%D0%BD%D0%B8%D0%B5%20(%D0%B0%D0%BD%D0%BE%D0%BD%D0%B8%D0%BC%D0%BD%D1%8B%D0%B9%20%D0%BE%D0%B1%D1%8A%D0%B5%D0%BA%D1%82/object%20expression)" rel="noopener noreferrer nofollow">Объект-выражение (анонимный объект/object expression)</a></p></li><li><p><a href="#%D0%A0%D0%B0%D0%B7%D0%BD%D0%B8%D1%86%D0%B0%20%D0%BC%D0%B5%D0%B6%D0%B4%D1%83%20%D0%B0%D0%BD%D0%BE%D0%BD%D0%B8%D0%BC%D0%BD%D1%8B%D0%BC%20%D0%B8%20%D0%B4%D0%B5%D0%BA%D0%BB%D0%B0%D1%80%D0%B8%D1%80%D1%83%D0%B5%D0%BC%D1%8B%D0%BC%20(%D0%BE%D0%B1%D1%8A%D1%8F%D0%B2%D0%BB%D1%8F%D0%B5%D0%BC%D1%8B%D0%BC)%20%D0%BE%D0%B1%D1%8A%D0%B5%D0%BA%D1%82%D0%BE%D0%BC" rel="noopener noreferrer nofollow">Разница между анонимным и декларируемым (объявляемым) объектом</a></p></li><li><p><a href="#%D0%90%D0%BD%D0%BD%D0%BE%D1%82%D0%B0%D1%86%D0%B8%D1%8F%20@JvmStatic" rel="noopener noreferrer nofollow">Аннотация @JvmStatic</a></p></li></ul><h4>3. Null safety</h4><ul><li><p><a href="#%D0%A7%D1%82%D0%BE%20%D1%82%D0%B0%D0%BA%D0%BE%D0%B5%20Null%20safety,%20nullable%20%D0%B8%20non-nullable%20%D1%82%D0%B8%D0%BF%D1%8B?" rel="noopener noreferrer nofollow">Что такое Null safety, nullable и non-nullable типы?</a></p></li><li><p><a href="#%D0%A1%D0%BF%D0%BE%D1%81%D0%BE%D0%B1%D1%8B%20%D0%BF%D1%80%D0%BE%D0%B2%D0%B5%D1%80%D0%BA%D0%B8%20%D0%B7%D0%BD%D0%B0%D1%87%D0%B5%D0%BD%D0%B8%D1%8F%20%D0%BD%D0%B0%20null%20(if-else,%20%D0%BE%D0%BF%D0%B5%D1%80%D0%B0%D1%82%D0%BE%D1%80%D1%8B%20&quot;?.&quot;,%20&quot;!!.&quot;,%20&quot;?:&quot;)" rel="noopener noreferrer nofollow">Способы проверки значения на null (if-else, операторы "?.", "!!.", "?:")</a></p></li></ul><h4>4. Any</h4><ul><li><p><a href="#%D0%9E%D1%82%20%D0%BA%D0%B0%D0%BA%D0%BE%D0%B3%D0%BE%20%D0%BA%D0%BB%D0%B0%D1%81%D1%81%D0%B0%20%D1%83%D0%BD%D0%B0%D1%81%D0%BB%D0%B5%D0%B4%D0%BE%D0%B2%D0%B0%D0%BD%D1%8B%20%D0%B2%D1%81%D0%B5%20%D0%BE%D1%81%D1%82%D0%B0%D0%BB%D1%8C%D0%BD%D1%8B%D0%B5%20%D0%BA%D0%BB%D0%B0%D1%81%D1%81%D1%8B%20%D0%B2%20Kotlin?" rel="noopener noreferrer nofollow">От какого класса унаследованы все остальные классы в Kotlin?</a></p></li><li><p><a href="#%D0%A7%D0%B5%D0%BC%20Any%20%D0%B2%20Kotlin%20%D0%BE%D1%82%D0%BB%D0%B8%D1%87%D0%B0%D0%B5%D1%82%D1%81%D1%8F%20%D0%BE%D1%82%20Object%20%D0%B2%20Java?" rel="noopener noreferrer nofollow">Чем Any в Kotlin отличается от Object в Java?</a></p></li><li><p><a href="#%D0%9A%D0%B0%D0%BA%D0%BE%D0%B9%20%D1%82%D0%B8%D0%BF%20%D0%BD%D0%B0%D1%85%D0%BE%D0%B4%D0%B8%D1%82%D1%81%D1%8F%20%D0%BD%D0%B0%20%D0%B2%D0%B5%D1%80%D1%88%D0%B8%D0%BD%D0%B5%20%D0%B8%D0%B5%D1%80%D0%B0%D1%80%D1%85%D0%B8%D0%B8%20%D1%82%D0%B8%D0%BF%D0%BE%D0%B2%20%D0%B2%20Kotlin?" rel="noopener noreferrer nofollow">Какой тип находится на вершине иерархии типов в Kotlin?</a></p></li></ul><h4>5. Unit</h4><ul><li><p><a href="#%D0%9A%D1%80%D0%B0%D1%82%D0%BA%D0%BE%20%D0%BE%20Unit" rel="noopener noreferrer nofollow"><u>Кратко о Unit</u></a></p></li><li><p><a href="#%D0%A1%D0%BA%D0%BE%D0%BB%D1%8C%D0%BA%D0%BE%20%D1%81%D1%83%D1%89%D0%B5%D1%81%D1%82%D0%B2%D1%83%D0%B5%D1%82%20instance%20Unit%20(1)?" rel="noopener noreferrer nofollow">Сколько существует instance Unit (1)?</a></p></li></ul><h4>6. Nothing</h4><ul><li><p><a href="#%D0%9A%D1%80%D0%B0%D1%82%D0%BA%D0%BE%20%D0%BE%20Nothing" rel="noopener noreferrer nofollow">Кратко о Nothing</a></p></li><li><p><a href="#%D0%9D%D0%B0%D0%B7%D0%BE%D0%B2%D0%B8%D1%82%D0%B5%20%D0%BF%D0%BE%D0%B4%D1%82%D0%B8%D0%BF%20%D0%B2%D1%81%D0%B5%D1%85%20%D1%82%D0%B8%D0%BF%D0%BE%D0%B2%20%D0%B2%20Kotlin" rel="noopener noreferrer nofollow">Назовите подтип всех типов в Kotlin</a></p></li><li><p><a href="#%D0%A1%D0%BA%D0%BE%D0%BB%D1%8C%D0%BA%D0%BE%20%D1%81%D1%83%D1%89%D0%B5%D1%81%D1%82%D0%B2%D1%83%D0%B5%D1%82%20instance%20Nothing%20(0)?" rel="noopener noreferrer nofollow">Сколько существует instance Nothing (0)?</a></p></li><li><p><a href="#%D0%95%D1%81%D1%82%D1%8C%20%D0%BB%D0%B8%20%D0%B0%D0%BD%D0%B0%D0%BB%D0%BE%D0%B3%20Nothing%20%D0%B2%20Java%20(%D0%BD%D0%B5%D1%82)?" rel="noopener noreferrer nofollow">Есть ли аналог Nothing в Java (нет)?</a></p></li></ul><figure class="full-width "><img src="https://habrastorage.org/r/w1560/getpro/habr/upload_files/949/bdc/1e2/949bdc1e2b5f2acbe17488bcafcfae9e.png" width="1587" height="753" data-src="https://habrastorage.org/getpro/habr/upload_files/949/bdc/1e2/949bdc1e2b5f2acbe17488bcafcfae9e.png"/></figure><a class="anchor" name="%D0%9F%D1%80%D0%B5%D0%B8%D0%BC%D1%83%D1%89%D0%B5%D1%81%D1%82%D0%B2%D0%B0%20%D1%8F%D0%B7%D1%8B%D0%BA%D0%B0%20Kotlin%20%D0%BF%D0%B5%D1%80%D0%B5%D0%B4%20Java" id="Преимущества языка Kotlin перед Java"></a><h2>Преимущества языка Kotlin перед Java</h2><details class="spoiler"><summary>Код на Kotlin компактнее на 30-40%</summary><div class="spoiler__content"><h3>Меньше кода = меньше ошибок, выше скорость разработки.</h3><p></p></div></details><details class="spoiler"><summary>Безопасная работа с обнуляемыми переменными (Null Safety)</summary><div class="spoiler__content"><h3>В отличие от Java, в Kotlin по умолчанию все типы являются non-nullable, то есть не могут принимать значение null. Присвоение или возврат null приведет к ошибке компиляции. Чтобы присвоить переменной значение null, в Kotlin необходимо явно пометить эту переменную как nullable (добавив после типа знак вопроса). В Java же при использовании ссылки на объект с указанным значением null, появляется исключение в виде «NullPointerException!».</h3><p></p></div></details><details class="spoiler"><summary>Функции-расширения (Extensions)</summary><div class="spoiler__content"><h3>Kotlin позволяет расширять класс путём добавления нового функционала без необходимости наследования от такого класса. Это реализовано с помощью специальных выражений, называемых расширения. Например, вы можете написать новые функции для класса из сторонней библиотеки, которую вы не можете изменить. Такие функции можно вызывать обычным способом, как если бы они были методами исходного класса. Этот механизм называется функцией расширения.</h3><p></p></div></details><details class="spoiler"><summary>Классы данных (data classes)</summary><div class="spoiler__content"><h3>Разработчику на Java приходится писать много стандартного, но часто встречающегося кода (т.н. шаблонный код или boilerplate). В Kotlin же есть возможность создания специальных классов для определения полей для хранения данных, конструктора, функций сеттеров и геттеров для каждого поля, и функций Hashcode(), toString() и equals(). Для этого достаточно добавить data в определение класса, затем компилятор сделает все сам.</h3><p></p></div></details><details class="spoiler"><summary>Синглтоны на уровне языка (Object)</summary><div class="spoiler__content"><h3>В Java все должно объявляться внутри класса. Но в Kotlin все иначе. Компоненты могут объявляться за пределами класса, и это автоматически делает их статическими. Поэтому нам не требуется ключевое слово static. В Java статические члены обрабатываются не так, как члены-объекты. Это означает, что для статических членов нам недоступны такие вещи, как реализация интерфейса, помещение экземпляра в ассоциативный список (map) или передача его в качестве параметра методу, который принимает объект. В Kotlin static не является ключевым словом и вместо статических членов используются объекты-компаньоны, позволяющие преодолеть вышеуказанные ограничения. В этом и заключается преимущество. Даже если члены объектов-компаньонов выглядят как статические члены в других языках, во время выполнения они все равно остаются членами экземпляров реальных объектов и могут, например, реализовывать интерфейсы.</h3><p></p></div></details><details class="spoiler"><summary>Корутины </summary><div class="spoiler__content"><h3>Kotlin предоставляет возможность создавать дополнительные потоки, однако в нем также существуют т.н. корутины (сопрограммы), которые позволяют использовать меньше памяти в сравнении с обычным потоком, т.к. реализованы они без стека. Корутины же в свою очередь способны выполнять интенсивные и длительные задачи методом приостановления выполнения без блокировки потока и его последующего восстановления. Что в дальнейшем позволяет сгенерировать асинхронный код без блокирования, который при его выполнении не отличить от синхронного. К тому же, они генерируют эффектные доп. стили например async или await.</h3><p></p></div></details><p><strong>Дополнительно:</strong></p><p><a href="https://kotlinlang.ru/docs/typecasts.html" rel="noopener noreferrer nofollow">Умные приведения</a></p><p><a href="https://kotlinlang.ru/docs/basic-types.html#strings" rel="noopener noreferrer nofollow">Строковые шаблоны</a></p><p><a href="https://kotlinlang.ru/docs/delegation.html" rel="noopener noreferrer nofollow">Делегирование на уровне языка</a></p><p><a href="https://kotlinlang.ru/docs/basic-types.html" rel="noopener noreferrer nofollow">Выведение типа для переменных и свойств</a></p><p><a href="https://kotlinlang.ru/docs/generics.html" rel="noopener noreferrer nofollow">Более гибкая работа с generics</a></p><a class="anchor" name="%D0%A0%D0%B0%D0%B7%D0%BD%D0%B8%D1%86%D0%B0%20%D0%BC%D0%B5%D0%B6%D0%B4%D1%83%20Exception%20%D0%B2%20Java%20%D0%B8%20Kotlin" id="Разница между Exception в Java и Kotlin"></a><p><a href="#%D0%A1%D0%BF%D0%B8%D1%81%D0%BE%D0%BA%20%D1%82%D0%B5%D0%BC%20%D0%B8%20%D0%B2%D0%BE%D0%BF%D1%80%D0%BE%D1%81%D0%BE%D0%B2" rel="noopener noreferrer nofollow">—————— ↑↑↑ к списку вопросов ↑↑↑ ——————</a></p><h2>Разница между Exception в Java и Kotlin</h2><p>Одним из ключевых отличий между Java и Kotlin является подход к исключениям. В Java есть два типа исключений: <strong>checked</strong> и <strong>unchecked</strong>. </p><p><strong>Checked</strong> исключения это те, которые должны быть обработаны в коде, иначе компилятор не позволит коду скомпилироваться. <strong>Unchecked</strong> исключения не требуют обработки в коде.  </p><p>С точки зрения исключений компилятор Kotlin отличается тем, что не различает <strong>checked</strong> и <strong>unchecked</strong> исключения. Все исключения — <strong>только unchecked</strong>, поэтому нет необходимости отлавливать или объявлять какие-либо исключения (вы самостоятельно принимаете решение, стоит ли их отлавливать и обрабатывать).</p><p>Такой подход был выбран разработчиками Kotlin, чтобы упростить и ускорить процесс разработки, сократив количество бойлерплейта и улучшив читаемость кода. Однако, это может привести к тому, что некоторые ошибки могут быть упущены при компиляции и проявиться только во время выполнения программы.</p><p>Некоторые разработчики считают, что отказ от checked исключений является недостатком Kotlin, поскольку это может привести к ошибкам, которые могут быть предотвращены на этапе компиляции в Java. Однако, другие разработчики утверждают, что этот подход снижает количество шаблонного кода и упрощает написание программ.</p><p><strong>Подробнее:</strong> <a href="https://code.tutsplus.com/ru/tutorials/kotlin-from-scratch-exception-handling--cms-29820" rel="noopener noreferrer nofollow">code.tutsplus.com</a>, <a href="https://habr.com/ru/company/maxilect/blog/447380/" rel="noopener noreferrer nofollow">habr.com</a></p><a class="anchor" name="%D0%9A%D0%B0%D0%BA%20%D0%BF%D0%B5%D1%80%D0%B5%D0%BD%D0%B5%D1%81%D1%82%D0%B8%20%D1%81%D1%82%D0%B0%D1%82%D0%B8%D1%87%D0%BD%D1%8B%D0%B5%20%D0%BC%D0%B5%D1%82%D0%BE%D0%B4%D1%8B%20%D0%B8%D0%B7%20Java%20%D0%B2%20Kotlin?" id="Как перенести статичные методы из Java в Kotlin?"></a><p><a href="#%D0%A1%D0%BF%D0%B8%D1%81%D0%BE%D0%BA%20%D1%82%D0%B5%D0%BC%20%D0%B8%20%D0%B2%D0%BE%D0%BF%D1%80%D0%BE%D1%81%D0%BE%D0%B2" rel="noopener noreferrer nofollow">—————— ↑↑↑ к списку вопросов ↑↑↑ ——————</a></p><h2>Как перенести статичные методы из Java в Kotlin?</h2><p>В Kotlin нет статических методов, для этих целей обычно служит <code>companion object</code>.<br/>Для того чтобы метод из Java был представлен как статический используется аннотация <code>@JvmStatic</code>. Эта аннотация говорит компилятору Kotlin создать статический метод в  байт-коде, что позволяет использовать методы так же, как в Java.  </p><p> Например, если у нас есть статический метод в Java:  </p><pre><code class="java">public class MyClass {
    public static int sum(int a, int b) {
        return a + b;
    }
}</code></pre><p>Мы можем использовать этот метод в Kotlin, добавив аннотацию <code>@JvmStatic</code>:</p><pre><code class="kotlin">object MyClass {
    @JvmStatic
    fun sum(a: Int, b: Int): Int {
        return a + b
    }
}</code></pre><p><a href="#%D0%A1%D0%BF%D0%B8%D1%81%D0%BE%D0%BA%20%D1%82%D0%B5%D0%BC%20%D0%B8%20%D0%B2%D0%BE%D0%BF%D1%80%D0%BE%D1%81%D0%BE%D0%B2" rel="noopener noreferrer nofollow"> </a><strong>Подробнее:</strong> <a href="https://kotlinlang.ru/docs/reference/java-to-kotlin-interop.html" rel="noopener noreferrer nofollow">kotlinlang.ru</a></p><a class="anchor" name="%D0%92%20%D0%BA%D0%B0%D0%BA%D0%BE%D0%B9%20%D0%BC%D0%BE%D0%B4%D0%B8%D1%84%D0%B8%D0%BA%D0%B0%D1%82%D0%BE%D1%80%20%D0%BF%D1%80%D0%B5%D0%BE%D0%B1%D1%80%D0%B0%D0%B7%D1%83%D0%B5%D1%82%D1%81%D1%8F%20internal%20%D0%B2%20Java?" id="В какой модификатор преобразуется internal в Java?"></a><p><a href="#%D0%A1%D0%BF%D0%B8%D1%81%D0%BE%D0%BA%20%D1%82%D0%B5%D0%BC%20%D0%B8%20%D0%B2%D0%BE%D0%BF%D1%80%D0%BE%D1%81%D0%BE%D0%B2" rel="noopener noreferrer nofollow">—————— ↑↑↑ к списку вопросов ↑↑↑ ——————</a></p><h2>В какой модификатор преобразуется internal в Java?</h2><p>В Java нет эквивалента модификатору доступа <code>internal</code> из Kotlin. При компиляции Kotlin-кода в Java-байткод, модификатор доступа <code>internal</code> преобразуется в модификатор <code>public</code> в Java. </p><p>Таким образом, все члены класса, отмеченные как <code>internal</code>, будут видны из любого места в том же пакете, а также из любого другого модуля, которому был разрешен доступ к этому модулю. Члены <code>internal</code> классов проходят через искажение имен, чтобы усложнить случайное использование их из Java и позволить перегрузку для членов с одинаковыми сигнатурами, которые не видят друг друга в соответствии с правилами Kotlin.</p><p><strong>Подробнее:</strong> <a href="https://4comprehension.com/kotlins-internal-visibility-modifier-and-java-interoperability/" rel="noopener noreferrer nofollow">4comprehension.com</a>, <a href="https://kotlinlang.ru/docs/reference/java-to-kotlin-interop.html" rel="noopener noreferrer nofollow">kotlinlang.ru</a></p><a class="anchor" name="%D0%9E%D1%82%D0%BB%D0%B8%D1%87%D0%B8%D1%8F%20%D0%B2%20%D0%BF%D1%80%D0%BE%D0%B2%D0%B5%D1%80%D0%BA%D0%B5%20%D0%BD%D0%B0%20%D1%80%D0%B0%D0%B2%D0%B5%D0%BD%D1%81%D1%82%D0%B2%D0%BE%20==%20%D0%B8%20equals()" id="Отличия в проверке на равенство == и equals()"></a><p> <a href="#%D0%A1%D0%BF%D0%B8%D1%81%D0%BE%D0%BA%20%D1%82%D0%B5%D0%BC%20%D0%B8%20%D0%B2%D0%BE%D0%BF%D1%80%D0%BE%D1%81%D0%BE%D0%B2" rel="noopener noreferrer nofollow">—————— ↑↑↑ к списку вопросов ↑↑↑ ——————</a></p><h2>Отличия в проверке на равенство == и equals()</h2><h4>1. Проверка на равенство в Java</h4><p><strong>Структурное равенство</strong> <strong>(значение)</strong> — метод <code>equals().<br/></code><strong>Ссылочное равенство</strong> — оператор <code>==</code>:<br/>— примитивные типы данных: сравнивает значения переменных<br/>— ссылочные типы данных (объекты, массивы): сравнивает ссылки</p><h4>2. Проверка на равенство в  Kotlin</h4><p><strong>Структурное равенство</strong> <strong>(значение)</strong> — оператор <code>==</code> (проверка через <code>equals()</code>)<br/><strong>Ссылочное равенство</strong> — оператор <code>===</code>:<br/>— примитивные типы данных: сравнивает значения переменных<br/>— ссылочные типы данных (объекты, массивы): сравнивает ссылки</p><h4>3. Разница == с Java</h4><p><strong>Структурное равенство</strong> <strong>(значение) </strong>— оператор <code>==</code> в Kotlin это <code>equals()</code> в Java, т.е. в Kotlin строки можно всегда сравнивать через <code>==</code>.<br/><strong>Ссылочное равенство </strong>— оператор <code>===</code> в Kotlin это <code>==</code> в Java.</p><p><strong>Подробнее:</strong> <a href="https://kotlinlang.ru/docs/reference/equality.html" rel="noopener noreferrer nofollow">kotlinlang.ru</a>, <a href="https://translated.turbopages.org/proxy_u/en-ru.ru.0519f9eb-63f2e6e6-7f84a483-74722d776562/https/www.baeldung.com/kotlin/equality-operators" rel="noopener noreferrer nofollow">baeldung.com</a>, <a href="https://habr.com/ru/company/otus/blog/532270/" rel="noopener noreferrer nofollow">habr.com</a></p><a class="anchor" name="%D0%9A%D1%80%D0%B0%D1%82%D0%BA%D0%BE%20%D0%BF%D1%80%D0%BE%20%D0%B0%D0%BD%D0%BE%D0%BD%D0%B8%D0%BC%D0%BD%D1%8B%D0%B5%20%D0%BA%D0%BB%D0%B0%D1%81%D1%81%D1%8B%20%D0%B8%20%D0%BE%D0%B1%D1%8A%D0%B5%D0%BA%D1%82%D1%8B,%20object%20%D0%B8%20companion%20object" id="Кратко про анонимные классы и объекты, object и companion object"></a><p><a href="#%D0%A1%D0%BF%D0%B8%D1%81%D0%BE%D0%BA%20%D1%82%D0%B5%D0%BC%20%D0%B8%20%D0%B2%D0%BE%D0%BF%D1%80%D0%BE%D1%81%D0%BE%D0%B2" rel="noopener noreferrer nofollow">—————— ↑↑↑ к списку вопросов ↑↑↑ ——————</a></p><h2>Кратко про анонимные классы и объекты, object и companion object</h2><p><strong>Анонимный класс</strong> — это класс, которые явно <strong>не объявлен</strong> с помощью <code>class</code>, наследуется от заданного класса или реализует заданный интерфейс. </p><p>Анонимный класс <strong>не всегда является синглтоном</strong>. Анонимный класс создается каждый раз при вызове соответствующего конструктора и используется только в контексте, где был создан. При этом каждый экземпляр анонимного класса имеет свое уникальное состояние и может отличаться от других экземпляров того же анонимного класса. В Kotlin анонимный класс создается следующим образом:</p><pre><code class="kotlin">val obj = object : SuperClassOrInterface() {
    // implementation here
}</code></pre><p>Объекты анонимных классов полезны для одноразового использования.</p><p>Экземпляры анонимных классов называют <strong>анонимными объектами</strong>, потому что они <strong>объявляются выражением, а не именем</strong>. Анонимный объект начинается с ключевого слова <code>object</code>.</p><ul><li><p>можно задавать свойства, функции, блоки инициализации;</p></li><li><p>можно наследоваться от других классов и реализовывать интерфейсы;</p></li><li><p><strong>нельзя</strong> создавать конструкторы (как основные, так и вторичные).</p></li></ul><p>Ключевое слово <code>object</code> позволяет одновременно объявить класс и создать его экземпляр (т.е. объект). При этом применять его можно по-разному:</p><ul><li><p><code>object Name</code> — это <strong>объявление объекта</strong> (оbject declaration), реализация паттерна <strong>Singleton;</strong></p></li><li><p><code>companion object</code> — это объект-компаньон внутри класса (<strong>также Singleton</strong>);</p></li><li><p><code>object</code> — это объект-выражение (анонимный объект/object expression), <strong>не Singleton</strong>.</p></li></ul><a class="anchor" name="%D0%9E%D0%B1%D1%8A%D1%8F%D0%B2%D0%BB%D0%B5%D0%BD%D0%B8%D0%B5%20%D0%BE%D0%B1%D1%8A%D0%B5%D0%BA%D1%82%D0%B0%20(object%20declaration),%20object%20%D0%BA%D0%B0%D0%BA%20Singleton" id="Объявление объекта (object declaration), object как Singleton"></a><p><a href="#%D0%A1%D0%BF%D0%B8%D1%81%D0%BE%D0%BA%20%D1%82%D0%B5%D0%BC%20%D0%B8%20%D0%B2%D0%BE%D0%BF%D1%80%D0%BE%D1%81%D0%BE%D0%B2" rel="noopener noreferrer nofollow">—————— ↑↑↑ к списку вопросов ↑↑↑ ——————</a></p><h2>Объявление объекта (object declaration), object как Singleton </h2><p>Объявляется объект при помощи ключевого слова <code>object</code>, после которого следует <code>имя объекта</code>.</p><p>Файл, содержащий только <code>object</code> представляет из себя <strong>Singleton</strong>, т.е. будет создан <strong>только один экземпляр</strong> этого класса. Пример:</p><pre><code class="kotlin">object One {
	val cats = arrayListOf&lt;Cat&gt;()
	
	fun callCat() {
		for (cat in cats) {
			...
		}
	}
}</code></pre><p>Можно обращаться к методам и свойствам класса через имя объекта:</p><pre><code class="kotlin">One.cats.add(Cat(...))
One.callCat()</code></pre><p>Инициализация объявления объекта потокобезопасна и выполняется при первом доступе (лениво).</p><a class="anchor" name="%D0%A1ompanion%20object%20(%D1%82%D0%B0%D0%BA%D0%B6%D0%B5%20Singleton)" id="Сompanion object (также Singleton)"></a><p><a href="#%D0%A1%D0%BF%D0%B8%D1%81%D0%BE%D0%BA%20%D1%82%D0%B5%D0%BC%20%D0%B8%20%D0%B2%D0%BE%D0%BF%D1%80%D0%BE%D1%81%D0%BE%D0%B2" rel="noopener noreferrer nofollow">—————— ↑↑↑ к списку вопросов ↑↑↑ ——————</a></p><h2>Сompanion object (также Singleton)</h2><p>Объекты можно объявлять внутри класса, при этом нет каких-либо ограничений по их количеству. Но <strong>только один объект</strong> можно пометить ключевым словом <code>companion object</code> в рамках одного класса.</p><p>Синглтон-свойство <code>companion object</code> достигается за счет того, что он создается внутри класса в качестве статического поля. Он будет инициализирован при первом обращении к нему или при создании первого экземпляра класса, в котором он объявлен.</p><p>Важно отметить, что <code>companion object</code> <strong>будет инициализирован первым</strong>, а затем уже будет создан экземпляр класса:</p><pre><code class="kotlin">class MyClass {
  init {
    // Выполняется всегда после инициализации companion object
  }

  companion object {
    init {
      // Выполняется всегда перед блоком init содержащего класса
    }
  }
}

val myClass = MyClass()</code></pre><p><strong>Такому объекту можно не указывать свое имя</strong>, и обращаться к методам и свойствам объекта через имя содержащего его класса <strong>без явного указания имени объекта</strong>.</p><pre><code class="kotlin">class SomeClass {

  companion object {
    fun create()
  }
}

val someClass = SomeClass.create()</code></pre><p>Компилируется в <code>public static final class</code> на Java. Работает подобно ключевому слову <code>static</code> в Java.</p><a class="anchor" name="%D0%9E%D0%B1%D1%8A%D0%B5%D0%BA%D1%82-%D0%B2%D1%8B%D1%80%D0%B0%D0%B6%D0%B5%D0%BD%D0%B8%D0%B5%20(%D0%B0%D0%BD%D0%BE%D0%BD%D0%B8%D0%BC%D0%BD%D1%8B%D0%B9%20%D0%BE%D0%B1%D1%8A%D0%B5%D0%BA%D1%82/object%20expression)" id="Объект-выражение (анонимный объект/object expression)"></a><p><a href="#%D0%A1%D0%BF%D0%B8%D1%81%D0%BE%D0%BA%20%D1%82%D0%B5%D0%BC%20%D0%B8%20%D0%B2%D0%BE%D0%BF%D1%80%D0%BE%D1%81%D0%BE%D0%B2" rel="noopener noreferrer nofollow">—————— ↑↑↑ к списку вопросов ↑↑↑ ——————</a></p><h2>Объект-выражение (анонимный объект/object expression)</h2><p>Объект-выражение — это выражение, которое "на ходу" создает анонимный объект.</p><p><strong>Для объекта-выражения не указывается имя!</strong><br/>Если же объекту всё-таки требуется имя, то его можно сохранить в переменной:</p><pre><code class="kotlin">val tom = object {
        val name = "Tom"
        var age = 37
        fun sayHello() {
            println("Hi, my name is $name")
        }
    }
    println("Name: ${tom.name}  Age: ${tom.age}")
    tom.sayHello()</code></pre><p><strong>Анонимные объекты не являются синглтонами!</strong><br/>Каждый раз при выполнении объекта-выражения создаётся новый объект.</p><p>Анонимный объект является заменой анонимным внутренним классам в Java.</p><a class="anchor" name="%D0%A0%D0%B0%D0%B7%D0%BD%D0%B8%D1%86%D0%B0%20%D0%BC%D0%B5%D0%B6%D0%B4%D1%83%20%D0%B0%D0%BD%D0%BE%D0%BD%D0%B8%D0%BC%D0%BD%D1%8B%D0%BC%20%D0%B8%20%D0%B4%D0%B5%D0%BA%D0%BB%D0%B0%D1%80%D0%B8%D1%80%D1%83%D0%B5%D0%BC%D1%8B%D0%BC%20(%D0%BE%D0%B1%D1%8A%D1%8F%D0%B2%D0%BB%D1%8F%D0%B5%D0%BC%D1%8B%D0%BC)%20%D0%BE%D0%B1%D1%8A%D0%B5%D0%BA%D1%82%D0%BE%D0%BC" id="Разница между анонимным и декларируемым (объявляемым) объектом"></a><p><a href="#%D0%A1%D0%BF%D0%B8%D1%81%D0%BE%D0%BA%20%D1%82%D0%B5%D0%BC%20%D0%B8%20%D0%B2%D0%BE%D0%BF%D1%80%D0%BE%D1%81%D0%BE%D0%B2" rel="noopener noreferrer nofollow">—————— ↑↑↑ к списку вопросов ↑↑↑ ——————</a></p><h2>Разница между анонимным и декларируемым (объявляемым) объектом</h2><ul><li><p>анонимный объект (<code>object</code>) инициализируется непосредственно при использовании;</p></li><li><p>декларированный (объявляемый) объект (<code>object Name</code>) инициализируется лениво, в момент первого к нему доступа;</p></li><li><p>вспомогательный объект (<code>companion object</code>) инициализируется в момент, когда класс, к которому он относится, загружен и семантически совпадает со статическим инициализатором Java.</p></li></ul><a class="anchor" name="%D0%90%D0%BD%D0%BD%D0%BE%D1%82%D0%B0%D1%86%D0%B8%D1%8F%20@JvmStatic" id="Аннотация @JvmStatic"></a><p><a href="#%D0%A1%D0%BF%D0%B8%D1%81%D0%BE%D0%BA%20%D1%82%D0%B5%D0%BC%20%D0%B8%20%D0%B2%D0%BE%D0%BF%D1%80%D0%BE%D1%81%D0%BE%D0%B2" rel="noopener noreferrer nofollow">—————— ↑↑↑ к списку вопросов ↑↑↑ ——————</a></p><h2>Аннотация @JvmStatic</h2><p>С помощью аннотации <code>@JvmStatic</code> есть возможность объявить методы по настоящему статическими, ее можно добавить как к методам <code>object</code>, так и к методам <code>companion object</code>.</p><pre><code class="kotlin">object ObjectWithStatic {
    @JvmStatic
    fun staticFun(): Int {
        return 5
    }
}</code></pre><p>В этом случае метод <code>staticFun</code> будет действительно объявлен статическим:</p><pre><code class="kotlin">public final class ObjectWithStatic {
   public static final ObjectWithStatic INSTANCE;
 
   @JvmStatic
   public static final int staticFun() {
      return 5;
   }
 
   private ObjectWithStatic() {
      INSTANCE = (ObjectWithStatic)this;
   }
 
   static {
      new ObjectWithStatic();
   }
}
</code></pre><a class="anchor" name="%D0%A7%D1%82%D0%BE%20%D1%82%D0%B0%D0%BA%D0%BE%D0%B5%20Null%20safety,%20nullable%20%D0%B8%20non-nullable%20%D1%82%D0%B8%D0%BF%D1%8B?" id="Что такое Null safety, nullable и non-nullable типы?"></a><p><a href="#%D0%A1%D0%BF%D0%B8%D1%81%D0%BE%D0%BA%20%D1%82%D0%B5%D0%BC%20%D0%B8%20%D0%B2%D0%BE%D0%BF%D1%80%D0%BE%D1%81%D0%BE%D0%B2" rel="noopener noreferrer nofollow">—————— ↑↑↑ к списку вопросов ↑↑↑ ——————</a></p><h2>Что такое Null safety, nullable и non-nullable типы?</h2><p><strong>Null safety</strong> — это концепция безопасности, которая предотвращает некоторые из наиболее распространенных ошибок в программировании, связанных с использованием <strong>null</strong>-значений. В Kotlin эта концепция реализуется за счет строгой типизации и системы <strong>Nullable/Non-nullable</strong> типов данных.</p><p><strong>Nullable</strong> типы — это типы, которые могут содержать значение <code>null</code>. <strong>Non-nullable</strong> типы — это типы, которые не могут содержать значение <code>null</code> и всегда должны иметь некоторое значение.</p><p>В Kotlin переменные по умолчанию являются <strong>non-nullable</strong> — это означает, что они не могут принимать значение <code>null</code>. Если переменная может принимать значение <code>null</code>, то ее нужно объявить с использованием знака вопроса (<strong>?</strong>). При использовании <strong>Nullable</strong> переменной в коде Kotlin не допустит обращение к ней без предварительной проверки на <strong>null</strong>-значение.</p><p>Также Kotlin предоставляет множество функций для безопасной работы с <strong>nullable</strong>-значениями, таких как операторы <strong>elvis</strong> <code>?:</code>, <strong>безопасный вызов</strong> <code>?.</code> и другие.</p><p>В целом, концепция <strong>Null safety</strong> помогает разработчикам избежать ошибок связанных с <strong>null</strong>-значениями, уменьшает количество ошибок в работе приложения и упрощает разработку и поддержку кода.</p><a class="anchor" name="%D0%A1%D0%BF%D0%BE%D1%81%D0%BE%D0%B1%D1%8B%20%D0%BF%D1%80%D0%BE%D0%B2%D0%B5%D1%80%D0%BA%D0%B8%20%D0%B7%D0%BD%D0%B0%D1%87%D0%B5%D0%BD%D0%B8%D1%8F%20%D0%BD%D0%B0%20null%20(if-else,%20%D0%BE%D0%BF%D0%B5%D1%80%D0%B0%D1%82%D0%BE%D1%80%D1%8B%20&quot;?.&quot;,%20&quot;!!.&quot;,%20&quot;?:&quot;)" id="Способы проверки значения на null (if-else, операторы &quot;?.&quot;, &quot;!!.&quot;, &quot;?:&quot;)"></a><p><a href="#%D0%A1%D0%BF%D0%B8%D1%81%D0%BE%D0%BA%20%D1%82%D0%B5%D0%BC%20%D0%B8%20%D0%B2%D0%BE%D0%BF%D1%80%D0%BE%D1%81%D0%BE%D0%B2" rel="noopener noreferrer nofollow">—————— ↑↑↑ к списку вопросов ↑↑↑ ——————</a></p><h2>Способы проверки значения на null (if-else, операторы "?.", "!!.", "?:")</h2><p>Kotlin разграничивает типы с поддержкой и без поддержки <strong>null-</strong>значений. Это означает, что при объявлении переменной, которая может хранить <strong>null</strong>, нужно явно объявить ее как <strong>nullable</strong> при помощи символа <code>?</code>.</p><pre><code class="kotlin">val languageName: String? = null</code></pre><p>Объявляя <strong>nullable</strong> переменную вы берёте на себя ответственность по проверке её значения. Иначе компилятор будет запрещать вызов функций для таких значений, ведь это может привести к <strong>NullPointerException</strong>.</p><p>Рассмотрим все доступные способы проверки значения на <strong>null</strong>.</p><h4>1. Проверка с помощью if-else</h4><p>Пожалуй, это самый простой способ проверки значения на <strong>null</strong> и скорее всего будет многим знаком.</p><pre><code class="kotlin">if(languageName != null) {
    print("Name is : $languageName")
} else {
    print("Please enter a valid name")
}</code></pre><p>Использование оператора безопасного вызова будет предпочтительнее, так как он позволяет решить проблему меньшим количеством кода. Однако, если со значением переменной производятся какие-то сложные вычисления и перед началом вычислений нужно проверить равно ли оно <strong>null</strong>, то <strong>if-else</strong> вполне подойдёт.</p><h4>2. Оператор безопасного вызова "?."</h4><p>Оператор безопасного вызова позволяет сказать компилятору, что значением данной переменной может быть <strong>null</strong> и его стоит проверить перед дальнейшим использованием.</p><pre><code class="kotlin">languageName?.length</code></pre><p>То есть, если значение переменной <code>languageName</code> равно <strong>null</strong>, то компилятор не будет пытаться определить длину слова, а просто вернёт <strong>null</strong>.</p><p>Если вы хотите вызвать функцию или каким-то другим способом обработать значение, отличное от <strong>null</strong>, то совместно с оператором безопасного вызова используйте функцию <strong>let</strong>. Всё, что будет указано в функции <strong>let</strong> выполнится только в том случае, если значение переменной отлично от <strong>null</strong>.</p><pre><code class="kotlin">languageName?.let { println(it) }</code></pre><h4>3. Оператор "!!"</h4><p>Два восклицательных знака, стоящих после <strong>nullable</strong>-значения, преобразуют его к типу без поддержки <strong>null</strong>. При этом перед преобразованием никак не проверяется, что значение действительно не содержит <strong>null</strong>. Поэтому, если в процессе выполнения программы окажется, что значение, которое пытается преобразовать оператор <code>!!</code>, все-таки <strong>null</strong>, то останется только один выход — выбросить исключение <strong>NullPointerException</strong>. Если оно не обрабатывается кодом, программа аварийно завершится. Несмотря на удобство этого оператора, его следует использовать только там, где вы уверены, что <strong>null</strong> быть не может.</p><p>Данный оператор понравится любителям <strong>NullPointerException</strong>. Он как бы говорит компилятору, что если значение переменной — <strong>null</strong>, то <strong>ТРЕБУЮ</strong> выбросить <strong>NullPointerException</strong>.</p><pre><code class="kotlin">val languageName: String? = null
val size = languageName!!.length</code></pre><p>Использование данного оператора <strong>крайне не рекомендуется</strong>, потому что (очевидно) это один из немногих способов словить <strong>NPE</strong>. При его использовании вы должны быть уверены, что значение переменной ни при каких обстоятельствах не может быть <strong>null</strong>. В противном случае лучше использовать оператор безопасного вызова.</p><h4>4. Элвис оператор или оператор объединения по null "?:"</h4><p>Оператор элвис подобен проверке на <strong>null</strong> в варианте <strong>if-else</strong>. Элвис используется для замены <strong>null</strong> каким-либо значением, принадлежащим обычно зауженному типу. В результате выражение с элвисом <strong>позволяет не увеличивать в программе количество nullable-переменных</strong>.</p><p>Оператор указывается между двумя значениями. Если значение слева от оператора равно <strong>null</strong>, то применяется значение справа.</p><pre><code class="kotlin">val size: Int = languageName.length ?: 0</code></pre><p>Если значение <code>languageName</code> не равно <strong>null</strong>, его длина будет присвоена переменной <code>size</code>.</p><p>Если <code>languageName</code> равно <strong>null</strong>, тогда будет присвоено значение <strong>0</strong>.</p><p>Но в любом случае переменной <code>size</code> будет присвоено значение типа <strong>Int</strong>, а не <strong>Int?</strong>, то есть <strong>non-null</strong> тип.</p><p>Использование данного оператора с функцией <strong>let</strong> может полностью заменить проверку с помощью оператора <strong>if-else</strong>.</p><pre><code class="kotlin">// с использованием if-else
if(languageName != null) {
    print("Name is : $languageName")
} else {
    print("Please enter a valid name")
}

// Элвис оператор и функция let
languageName?.let {
  print("Name is : $languageName")
} ?: print("Please enter a valid name")</code></pre><p><strong>Подробнее:</strong> <a href="https://bimlibik.github.io/posts/kotlin-null-safety/" rel="noopener noreferrer nofollow">bimlibik.github.io</a>, <a href="https://kotlinlang.ru/docs/reference/null-safety.html" rel="noopener noreferrer nofollow">kotlinlang.ru</a>, <a href="https://younglinux.info/kotlin/null-operators" rel="noopener noreferrer nofollow">younglinux.info</a></p><a class="anchor" name="%D0%9E%D1%82%20%D0%BA%D0%B0%D0%BA%D0%BE%D0%B3%D0%BE%20%D0%BA%D0%BB%D0%B0%D1%81%D1%81%D0%B0%20%D1%83%D0%BD%D0%B0%D1%81%D0%BB%D0%B5%D0%B4%D0%BE%D0%B2%D0%B0%D0%BD%D1%8B%20%D0%B2%D1%81%D0%B5%20%D0%BE%D1%81%D1%82%D0%B0%D0%BB%D1%8C%D0%BD%D1%8B%D0%B5%20%D0%BA%D0%BB%D0%B0%D1%81%D1%81%D1%8B%20%D0%B2%20Kotlin?" id="От какого класса унаследованы все остальные классы в Kotlin?"></a><p><a href="#%D0%A1%D0%BF%D0%B8%D1%81%D0%BE%D0%BA%20%D1%82%D0%B5%D0%BC%20%D0%B8%20%D0%B2%D0%BE%D0%BF%D1%80%D0%BE%D1%81%D0%BE%D0%B2" rel="noopener noreferrer nofollow">—————— ↑↑↑ к списку вопросов ↑↑↑ ——————</a></p><h2>От какого класса унаследованы все остальные классы в Kotlin?</h2><p>Класс <code>Any</code> находится на вершине иерархии — все классы в Kotlin являются наследниками <code>Any</code>. Это стандартный родительский класс для всех классов, которые явно не унаследованы от другого класса. Именно в нем определены <code>equals</code>, <code>hashCode</code> и <code>toString</code>. Класс <code>Any</code> по назначению похож на <code>Object</code> в Java.</p><pre><code class="kotlin">public open class Any {
   public open operator fun equals(other: Any?): Boolean
   public open fun hashCode(): Int
   public open fun toString(): String
}  
</code></pre><p><strong>Подробнее:</strong> <a href="https://gb.ru/posts/razbiraemsya-v-tipah-kotlin-unit-nothing-any-i-null" rel="noopener noreferrer nofollow">gb.ru</a>, <a href="https://kotlins.org/any-unit-and-nothing-types" rel="noopener noreferrer nofollow">kotlins.org</a></p><a class="anchor" name="%D0%A7%D0%B5%D0%BC%20Any%20%D0%B2%20Kotlin%20%D0%BE%D1%82%D0%BB%D0%B8%D1%87%D0%B0%D0%B5%D1%82%D1%81%D1%8F%20%D0%BE%D1%82%20Object%20%D0%B2%20Java?" id="Чем Any в Kotlin отличается от Object в Java?"></a><p><a href="#%D0%A1%D0%BF%D0%B8%D1%81%D0%BE%D0%BA%20%D1%82%D0%B5%D0%BC%20%D0%B8%20%D0%B2%D0%BE%D0%BF%D1%80%D0%BE%D1%81%D0%BE%D0%B2" rel="noopener noreferrer nofollow">—————— ↑↑↑ к списку вопросов ↑↑↑ ——————</a></p><h2>Чем Any в Kotlin отличается от Object в Java?</h2><p><code>Any</code> не является полным аналогом <code>java.lang.Object</code>.</p><p>В <code>Object</code> <strong>11 методов</strong> в классе, в <code>Any</code> только <strong>3 метода</strong>: <code>equals()</code>, <code>hashCode()</code> и <code>toString()</code>. При импорте типов Java в Kotlin все ссылки типа <code>java.lang.Object</code> преобразуются в <code>Any</code>. Поскольку <code>Any</code> не зависит от платформы, он объявляет только <code>toString()</code>, <code>hashCode()</code> и <code>equals()</code> в качестве своих членов, поэтому, чтобы сделать другие члены <code>java.lang.Object</code> доступными, Kotlin использует <strong>функции расширения</strong>.</p><p>Несмотря на то, что классы <code>Object</code> и <code>Any</code> имеют сходства (корневые классы иерархии классов), они также имеют и отличия, связанные с языковыми особенностями Kotlin и Java:</p><ol><li><p>Класс <code>Any</code> в Kotlin является не только базовым классом для пользовательских классов, но также и <strong>супертипом для всех не-nullable типов данных, включая примитивные</strong>. В то время как в Java, класс <code>Object</code> является базовым классом <strong>только для пользовательских классов</strong>.</p></li><li><p>Класс <code>Any</code> в Kotlin также имеет <strong>nullable</strong> версию <code>Any?</code>, которая является супертипом для всех <strong>nullable</strong> типов данных в Kotlin. В то время как в Java, класс <code>Object</code> <strong>не имеет nullable версии</strong>.</p></li></ol><a class="anchor" name="%D0%9A%D0%B0%D0%BA%D0%BE%D0%B9%20%D1%82%D0%B8%D0%BF%20%D0%BD%D0%B0%D1%85%D0%BE%D0%B4%D0%B8%D1%82%D1%81%D1%8F%20%D0%BD%D0%B0%20%D0%B2%D0%B5%D1%80%D1%88%D0%B8%D0%BD%D0%B5%20%D0%B8%D0%B5%D1%80%D0%B0%D1%80%D1%85%D0%B8%D0%B8%20%D1%82%D0%B8%D0%BF%D0%BE%D0%B2%20%D0%B2%20Kotlin?" id="Какой тип находится на вершине иерархии типов в Kotlin?"></a><p><a href="#%D0%A1%D0%BF%D0%B8%D1%81%D0%BE%D0%BA%20%D1%82%D0%B5%D0%BC%20%D0%B8%20%D0%B2%D0%BE%D0%BF%D1%80%D0%BE%D1%81%D0%BE%D0%B2" rel="noopener noreferrer nofollow">—————— ↑↑↑ к списку вопросов ↑↑↑ ——————</a></p><h2>Какой тип находится на вершине иерархии типов в Kotlin?</h2><p>Аналогично <code>Object</code> в Java, к чему можно привести любой тип в Kotlin? <br/>Правильным ответом будет <code>Any?</code>.</p><p>Сам по себе класс <code>Any</code> это почти аналог <code>Object</code>, однако, благодаря поддержке <strong>nullable</strong> и <strong>не-nullable</strong> типов в Kotlin мы получили <code>Any?</code>. Фактически, <code>Any?</code> соответствует <strong>любому типу и </strong><code>null</code>, а <code>Any</code> <strong>только любому типу</strong>.</p><p>Если по порядку:</p><ol><li><p><code>Any</code> является корнем иерархии <strong>не-nullable</strong> типов.</p></li><li><p><code>Any?</code> является корнем иерархии <strong>nullable</strong> типов.</p></li><li><p>Так как <code>Any?</code> является супертипом <code>Any</code>, то <code>Any?</code> <strong>находится в самом верху иерархии типов в Kotlin</strong>.</p></li></ol><p>Картинка для понимания:</p><figure class="full-width "><img src="https://habrastorage.org/r/w1560/getpro/habr/upload_files/78c/dde/a3c/78cddea3ca15b60997861e9e2332906e.png" width="2310" height="1146" data-src="https://habrastorage.org/getpro/habr/upload_files/78c/dde/a3c/78cddea3ca15b60997861e9e2332906e.png"/></figure><a class="anchor" name="%D0%9A%D1%80%D0%B0%D1%82%D0%BA%D0%BE%20%D0%BE%20Unit" id="Кратко о Unit"></a><p><a href="#%D0%A1%D0%BF%D0%B8%D1%81%D0%BE%D0%BA%20%D1%82%D0%B5%D0%BC%20%D0%B8%20%D0%B2%D0%BE%D0%BF%D1%80%D0%BE%D1%81%D0%BE%D0%B2" rel="noopener noreferrer nofollow">—————— ↑↑↑ к списку вопросов ↑↑↑ ——————</a></p><h2>Кратко о Unit</h2><p>Тип <code>Unit</code> в Kotlin выполняет ту же функцию, что и <code>void</code> в Java.</p><p>Возвращаемый тип можно не указывать, если функция ничего не возвращает. По умолчанию там будет <code>Unit</code>:</p><pre><code class="kotlin">fun knockKnock() {
   println("Who’s there?")
}

// то же самое, но с указанным типом Unit
fun knockKnock(): Unit = println("Who’s there?")
</code></pre><p><strong>Подробнее:</strong> <a href="https://gb.ru/posts/razbiraemsya-v-tipah-kotlin-unit-nothing-any-i-null" rel="noopener noreferrer nofollow">gb.ru</a>, <a href="https://kotlins.org/any-unit-and-nothing-types" rel="noopener noreferrer nofollow">kotlins.org</a></p><a class="anchor" name="%D0%A1%D0%BA%D0%BE%D0%BB%D1%8C%D0%BA%D0%BE%20%D1%81%D1%83%D1%89%D0%B5%D1%81%D1%82%D0%B2%D1%83%D0%B5%D1%82%20instance%20Unit%20(1)?" id="Сколько существует instance Unit (1)?"></a><p><a href="#%D0%A1%D0%BF%D0%B8%D1%81%D0%BE%D0%BA%20%D1%82%D0%B5%D0%BC%20%D0%B8%20%D0%B2%D0%BE%D0%BF%D1%80%D0%BE%D1%81%D0%BE%D0%B2" rel="noopener noreferrer nofollow">—————— ↑↑↑ к списку вопросов ↑↑↑ ——————</a></p><h2>Сколько существует instance Unit (1)?</h2><p>В стандартной библиотеке Kotlin <code>Unit</code> определён как объект, наследуемый от <code>Any</code> и содержащий единственный метод, переопределяющий <code>toString()</code>:</p><pre><code class="kotlin">public object Unit {
   override fun toString() = "kotlin.Unit"
}
</code></pre><p><code>Unit</code> <strong>является синглтоном</strong> (ключевое слово <code>object</code>). <code>Unit</code> ничего не возвращает, а метод <code>toString</code> всегда будет возвращать <code>“kotlin.Unit”</code>. При компиляции в java-код <code>Unit</code> всегда будет превращаться в <code>void</code>.</p><a class="anchor" name="%D0%9A%D1%80%D0%B0%D1%82%D0%BA%D0%BE%20%D0%BE%20Nothing" id="Кратко о Nothing"></a><p><a href="#%D0%A1%D0%BF%D0%B8%D1%81%D0%BE%D0%BA%20%D1%82%D0%B5%D0%BC%20%D0%B8%20%D0%B2%D0%BE%D0%BF%D1%80%D0%BE%D1%81%D0%BE%D0%B2" rel="noopener noreferrer nofollow">—————— ↑↑↑ к списку вопросов ↑↑↑ ——————</a></p><h2>Кратко о Nothing</h2><p><code>Nothing</code> является типом, который полезен при объявлении функции, которая <strong>ничего не возвращает и не завершается</strong>.</p><p>Примеры:</p><ul><li><p>функция, которая выбрасывает <code>exception</code> или в которой запущен бесконечный цикл;</p></li><li><p>функция <code>TODO()</code> — <code>public inline fun TODO(): Nothing = throw NotImplementedError()</code>;</p></li><li><p>в тестах есть функция с именем <code>fail</code>, которая выдает исключение с определенным сообщением:</p></li></ul><pre><code class="kotlin">fun fail(message: String): Nothing {
    throw IllegalStateException(message)
}
</code></pre><p><strong>Подробнее:</strong> <a href="https://gb.ru/posts/razbiraemsya-v-tipah-kotlin-unit-nothing-any-i-null" rel="noopener noreferrer nofollow">gb.ru</a>, <a href="https://kotlins.org/any-unit-and-nothing-types" rel="noopener noreferrer nofollow">kotlins.org</a></p><a class="anchor" name="%D0%9D%D0%B0%D0%B7%D0%BE%D0%B2%D0%B8%D1%82%D0%B5%20%D0%BF%D0%BE%D0%B4%D1%82%D0%B8%D0%BF%20%D0%B2%D1%81%D0%B5%D1%85%20%D1%82%D0%B8%D0%BF%D0%BE%D0%B2%20%D0%B2%20Kotlin" id="Назовите подтип всех типов в Kotlin"></a><p><a href="#%D0%A1%D0%BF%D0%B8%D1%81%D0%BE%D0%BA%20%D1%82%D0%B5%D0%BC%20%D0%B8%20%D0%B2%D0%BE%D0%BF%D1%80%D0%BE%D1%81%D0%BE%D0%B2" rel="noopener noreferrer nofollow">—————— ↑↑↑ к списку вопросов ↑↑↑ ——————</a></p><h2>Назовите подтип всех типов в Kotlin</h2><p><code>Nothing</code> в Kotlin — это т.н. <strong>bottom type</strong>, то есть он является подтипом любого другого типа. Наличие <code>Nothing</code> в системе типов позволяет типизировано выражать то, что без него принципиально невозможно.</p><p><strong>Bottom type</strong> — это тип, который не имеет значений и предназначен для обозначения невыполнимых ситуаций в программе.</p><a class="anchor" name="%D0%A1%D0%BA%D0%BE%D0%BB%D1%8C%D0%BA%D0%BE%20%D1%81%D1%83%D1%89%D0%B5%D1%81%D1%82%D0%B2%D1%83%D0%B5%D1%82%20instance%20Nothing%20(0)?" id="Сколько существует instance Nothing (0)?"></a><p><a href="#%D0%A1%D0%BF%D0%B8%D1%81%D0%BE%D0%BA%20%D1%82%D0%B5%D0%BC%20%D0%B8%20%D0%B2%D0%BE%D0%BF%D1%80%D0%BE%D1%81%D0%BE%D0%B2" rel="noopener noreferrer nofollow">—————— ↑↑↑ к списку вопросов ↑↑↑ ——————</a></p><h2>Сколько существует instance Nothing (0)?</h2><p><code>Nothing</code> — класс, который является наследником любого класса в Kotlin, даже класса с модификатором <code>final</code>. При этом <code>Nothing</code> <strong>нельзя создать</strong> — у него <strong>приватный конструктор</strong>. В коде он объявлен так:</p><pre><code class="kotlin">public class Nothing private constructor()
</code></pre><a class="anchor" name="%D0%95%D1%81%D1%82%D1%8C%20%D0%BB%D0%B8%20%D0%B0%D0%BD%D0%B0%D0%BB%D0%BE%D0%B3%20Nothing%20%D0%B2%20Java%20(%D0%BD%D0%B5%D1%82)?" id="Есть ли аналог Nothing в Java (нет)?"></a><p><a href="#%D0%A1%D0%BF%D0%B8%D1%81%D0%BE%D0%BA%20%D1%82%D0%B5%D0%BC%20%D0%B8%20%D0%B2%D0%BE%D0%BF%D1%80%D0%BE%D1%81%D0%BE%D0%B2" rel="noopener noreferrer nofollow">—————— ↑↑↑ к списку вопросов ↑↑↑ ——————</a></p><h2>Есть ли аналог Nothing в Java (нет)?</h2><p>Тип <code>Nothing</code> является особенным, поскольку <strong>в Java ему нет аналогов</strong>.</p><p>Действительно, каждый ссылочный тип Java, включая <code>java.lang.Void</code>, принимает в качестве значения <code>null</code>, а <code>Nothing</code> не принимает даже этого. Таким образом, этот тип не может быть точно представлен в мире Java. Вот почему Kotlin генерирует необработанный тип, в котором используется аргумент типа <code>Nothing</code>:</p><pre><code class="kotlin">fun emptyList(): List&lt;Nothing&gt; = listOf()
// is translated to
// List emptyList() { ... }
</code></pre><p><a href="#%D0%A1%D0%BF%D0%B8%D1%81%D0%BE%D0%BA%20%D1%82%D0%B5%D0%BC%20%D0%B8%20%D0%B2%D0%BE%D0%BF%D1%80%D0%BE%D1%81%D0%BE%D0%B2" rel="noopener noreferrer nofollow">—————— ↑↑↑ к списку вопросов ↑↑↑ ——————</a></p><h3>БОНУС:</h3><p><a href="https://kotlinlang.ru/docs/keyword-reference.html" rel="noopener noreferrer nofollow">1. Ключевые слова и операторы Kotlin: kotlinlang.ru</a><br/><a href="https://hr-vector.com/kotlin" rel="noopener noreferrer nofollow">2. Темы по Kotlin: hr-vector.com</a><br/><a href="https://devhints.io/kotlin" rel="noopener noreferrer nofollow">3. Шпаргалка по Kotlin: devhints.io</a></p><p><a href="https://habr.com/ru/post/721084/" rel="noopener noreferrer nofollow">Вопросы и ответы для собеседования по Kotlin. Часть 1</a> — вы находитесь здесь<br/><a href="https://habr.com/ru/post/722686/" rel="noopener noreferrer nofollow">Вопросы и ответы для собеседования по Kotlin. Часть 2</a> <br/><a href="https://habr.com/ru/articles/728742/" rel="noopener noreferrer nofollow">Вопросы и ответы для собеседования по Kotlin. Часть 3</a> <br/><a href="https://habr.com/ru/articles/736392/" rel="noopener noreferrer nofollow">Вопросы и ответы для собеседования по Kotlin. Часть 4</a> </p></div></div></div><!----><!----></div><!----><!----></div><!--]--><!----><div class="tm-article-presenter__meta" data-test-id="article-meta-links"><div class="tm-separated-list tm-article-presenter__meta-list"><span class="tm-separated-list__title">Теги:</span><ul class="tm-separated-list__list"><!--[--><li class="tm-separated-list__item"><!--[--><a href="/ru/search/?target_type=posts&amp;order=relevance&amp;q=[kotlin]" class="tm-tags-list__link"><span>kotlin</span></a><!--]--></li><li class="tm-separated-list__item"><!--[--><a href="/ru/search/?target_type=posts&amp;order=relevance&amp;q=[java]" class="tm-tags-list__link"><span>java</span></a><!--]--></li><li class="tm-separated-list__item"><!--[--><a href="/ru/search/?target_type=posts&amp;order=relevance&amp;q=[%D1%81%D0%BE%D0%B1%D0%B5%D1%81%D0%B5%D0%B4%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D0%B5+%D0%B2%D0%BE%D0%BF%D1%80%D0%BE%D1%81%D1%8B]" class="tm-tags-list__link"><span>собеседование вопросы</span></a><!--]--></li><li class="tm-separated-list__item"><!--[--><a href="/ru/search/?target_type=posts&amp;order=relevance&amp;q=[%D0%BF%D0%BE%D0%B4%D0%B3%D0%BE%D1%82%D0%BE%D0%B2%D0%BA%D0%B0+%D0%BA+%D1%81%D0%BE%D0%B1%D0%B5%D1%81%D0%B5%D0%B4%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D1%8E]" class="tm-tags-list__link"><span>подготовка к собеседованию</span></a><!--]--></li><li class="tm-separated-list__item"><!--[--><a href="/ru/search/?target_type=posts&amp;order=relevance&amp;q=[%D0%B2%D0%BE%D0%BF%D1%80%D0%BE%D1%81%D1%8B+%D0%B4%D0%BB%D1%8F+%D1%81%D0%BE%D0%B1%D0%B5%D1%81%D0%B5%D0%B4%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D1%8F]" class="tm-tags-list__link"><span>вопросы для собеседования</span></a><!--]--></li><li class="tm-separated-list__item"><!--[--><a href="/ru/search/?target_type=posts&amp;order=relevance&amp;q=[faq]" class="tm-tags-list__link"><span>faq</span></a><!--]--></li><li class="tm-separated-list__item"><!--[--><a href="/ru/search/?target_type=posts&amp;order=relevance&amp;q=[%D1%81%D0%BE%D0%B1%D0%B5%D1%81%D0%B5%D0%B4%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D1%8F+%D0%B2+it]" class="tm-tags-list__link"><span>собеседования в it</span></a><!--]--></li><li class="tm-separated-list__item"><!--[--><a href="/ru/search/?target_type=posts&amp;order=relevance&amp;q=[%D0%B2%D0%BE%D0%BF%D1%80%D0%BE%D1%81%D1%8B-%D0%BE%D1%82%D0%B2%D0%B5%D1%82%D1%8B]" class="tm-tags-list__link"><span>вопросы-ответы</span></a><!--]--></li><li class="tm-separated-list__item"><!--[--><a href="/ru/search/?target_type=posts&amp;order=relevance&amp;q=[%D0%BA%D0%BE%D1%82%D0%BB%D0%B8%D0%BD]" class="tm-tags-list__link"><span>котлин</span></a><!--]--></li><li class="tm-separated-list__item"><!--[--><a href="/ru/search/?target_type=posts&amp;order=relevance&amp;q=[jvm]" class="tm-tags-list__link"><span>jvm</span></a><!--]--></li><!--]--><!----></ul></div><div class="tm-separated-list tm-article-presenter__meta-list"><span class="tm-separated-list__title">Хабы:</span><ul class="tm-separated-list__list"><!--[--><li class="tm-separated-list__item"><!--[--><a href="/ru/hubs/programming/" class="tm-hubs-list__link"><!--[--><span>Программирование</span><!--]--></a><!--]--></li><li class="tm-separated-list__item"><!--[--><a href="/ru/hubs/java/" class="tm-hubs-list__link"><!--[--><span>Java</span><!--]--></a><!--]--></li><li class="tm-separated-list__item"><!--[--><a href="/ru/hubs/android_dev/" class="tm-hubs-list__link"><!--[--><span>Разработка под Android</span><!--]--></a><!--]--></li><li class="tm-separated-list__item"><!--[--><a href="/ru/hubs/kotlin/" class="tm-hubs-list__link"><!--[--><span>Kotlin</span><!--]--></a><!--]--></li><li class="tm-separated-list__item"><!--[--><a href="/ru/hubs/study/" class="tm-hubs-list__link"><!--[--><span>Учебный процесс в IT</span><!--]--></a><!--]--></li><!--]--><!----></ul></div></div><!----><!--]--></article><!--]--></div><!----></div><div style="" class="tm-article-sticky-panel" data-test-id="article-sticky-panel"><div class="tm-data-icons tm-data-icons tm-data-icons_space-big tm-article-sticky-panel__icons" data-test-id="article-stats-icons"><div class="tm-article-rating tm-data-icons__item"><div class="tm-votes-meter tm-article-rating__votes-switcher"><svg class="tm-svg-img tm-votes-meter__icon tm-votes-meter__icon tm-votes-meter__icon_appearance-article" height="24" width="24"><title>Всего голосов 2: ↑2 и ↓0</title><use xlink:href="/img/megazord-v28.371b7fa3..svg#counter-rating"></use></svg><span class="tm-votes-meter__value tm-votes-meter__value_positive tm-votes-meter__value_appearance-article tm-votes-meter__value_rating tm-votes-meter__value" data-test-id="votes-meter-value" title="Всего голосов 2: ↑2 и ↓0">+2</span></div><!--teleport start--><!--teleport end--><!----></div><!----><!----><button class="bookmarks-button tm-data-icons__item" title="Добавить в закладки" type="button"><span class="tm-svg-icon__wrapper bookmarks-button__icon"><svg class="tm-svg-img tm-svg-icon" height="24" width="24"><title>Добавить в закладки</title><use xlink:href="/img/megazord-v28.371b7fa3..svg#counter-favorite"></use></svg></span><span class="bookmarks-button__counter" title="Количество пользователей, добавивших публикацию в закладки">239</span></button><div class="tm-sharing tm-data-icons__item" title="Поделиться"><button class="tm-sharing__button" type="button"><svg viewbox="0 0 24 24" xmlns="http://www.w3.org/2000/svg" class="tm-sharing__icon"><path fill="currentColor" d="M13.8 13.8V18l7.2-6.6L13.8 5v3.9C5 8.9 3 18.6 3 18.6c2.5-4.4 6-4.8 10.8-4.8z"></path></svg></button><!--teleport start--><!--teleport end--></div><div class="tm-article-comments-counter-link tm-data-icons__item" title="Читать комментарии"><a href="/ru/articles/721084/comments/" class="tm-article-comments-counter-link__link" data-test-id="counter-comments"><!--[--><svg class="tm-svg-img tm-article-comments-counter-link__icon" height="24" width="24"><title>Комментарии</title><use xlink:href="/img/megazord-v28.371b7fa3..svg#counter-comments"></use></svg><span class="tm-article-comments-counter-link__value">13</span><!--]--></a><!----></div><!--[--><!--[--><!--[--><!----><!--]--><!--]--><!--]--><!--teleport start--><!--teleport end--><!----></div></div></div><!--[--><!--]--><div class="tm-article-presenter__footer"><!--[--><!--[--><div class="tm-article-blocks"><!----><!--[--><section class="tm-block tm-block tm-block_spacing-bottom"><!----><!--[--><div class="tm-block__body tm-block__body tm-block__body_variant-balanced"><!--[--><div class="tm-article-author" data-test-id="article-author-info" data-async-called="true"><!--[--><!--]--><div class="tm-user-card tm-user-card tm-user-card_variant-article tm-article-author__user-card" data-async-called="true"><div class="tm-user-card__info-container"><div class="tm-user-card__header"><div class="tm-user-card__header-data"><a href="/ru/users/dmt_ovs/" class="tm-user-card__userpic tm-user-card__userpic_size-40"><div class="tm-entity-image"><img alt="" class="tm-entity-image__pic" src="//habrastorage.org/getpro/habr/avatars/84b/afb/1c1/84bafb1c17208f6b124be4429e2a8104.png"></div></a><div class="tm-user-card__meta"><div class="tm-counter-container tm-karma tm-karma" title=" 32 голоса "><div class="tm-counter-container__header"><!--[--><div class="karma-display positive" data-v-7635202e>24</div><!----><!--]--></div><div class="tm-counter-container__footer"><!--[--><div class="tm-karma__text">Карма</div><!--teleport start--><!--teleport end--><!--]--></div></div><div class="tm-counter-container" title="Рейтинг пользователя"><div class="tm-counter-container__header"><!--[--><!--[--><!--]--><div class="tm-votes-lever tm-votes-lever tm-votes-lever_appearance-rating"><!----><div class="tm-votes-lever__score tm-votes-lever__score_appearance-rating tm-votes-lever__score"><!--[--><span><span class="tm-votes-lever__score-counter tm-votes-lever__score-counter_rating tm-votes-lever__score-counter" data-test-id="votes-score-counter">0</span></span><!--]--></div><!----></div><!--]--></div><div class="tm-counter-container__footer"><!--[--><span class="tm-rating__text tm-rating__text">Рейтинг</span><!--]--></div></div></div></div></div><div class="tm-user-card__info tm-user-card__info_variant-article tm-user-card__info"><div class="tm-user-card__title tm-user-card__title_variant-article tm-user-card__title"><span class="tm-user-card__name tm-user-card__name_variant-article tm-user-card__name">Дмитрий</span><a href="/ru/users/dmt_ovs/" class="tm-user-card__nickname tm-user-card__nickname tm-user-card__nickname_variant-article"> @dmt_ovs</a><!----></div><p class="tm-user-card__short-info tm-user-card__short-info_variant-article tm-user-card__short-info" data-test-id="user-card-speciality">(-_-)</p></div></div><!----><div class="tm-user-card__buttons tm-user-card__buttons_variant-article tm-user-card__buttons"><!----><div class="tm-user-card__button"><div class="tm-button-follow tm-user-card__button-follow"><!----><button class="tm-button-follow__button tm-button-follow__button_big" data-test-id="follow-button" type="button">Подписаться</button></div></div><!----><div class="tm-user-card__button tm-user-card__button_write" data-test-id="user-card-conversations"><svg class="tm-svg-img tm-user-card__button-icon" height="16" width="16"><title>Отправить сообщение</title><use xlink:href="/img/megazord-v28.371b7fa3..svg#mail"></use></svg></div><!----></div><!----></div><div class="tm-article-author__user-contacts" data-test-id="author-contacts"><!----><!----><!----></div></div><!--]--></div><!--]--><!----></section><!----><!--[--><div class="banner-wrapper leaderboard tm-page-article__banner" style="--467224fc:200px;--58ff5eba:auto;" data-v-ad758baa><!--[--><div class="placeholder-wrapper placeholder" data-v-ad758baa><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><div class="adfox-banner-placeholder leaderboard" data-v-12f7bcca><div class="image loads" data-v-12f7bcca></div><div class="lines" data-v-12f7bcca><div class="line loads" data-v-12f7bcca></div><div class="line loads" data-v-12f7bcca></div><div class="line loads" data-v-12f7bcca></div></div></div><!----></div><div id="adfox_164725660339535756" class="tm-adfox-banner" data-v-ad758baa></div><!--]--></div><!--]--><!--]--><div class="tm-article-blocks__comments"><div id="publication-comments" class="tm-article-page-comments"><div><!--[--><div class="tm-article-comments-counter-link tm-article-comments-counter-button"><a href="/ru/articles/721084/comments/" class="tm-article-comments-counter-link__link tm-article-comments-counter-link__link_button-style" data-test-id="counter-comments"><!--[--><svg class="tm-svg-img tm-article-comments-counter-link__icon tm-article-comments-counter-link__icon_contrasted" height="24" width="24"><title>Комментарии</title><use xlink:href="/img/megazord-v28.371b7fa3..svg#counter-comments"></use></svg><span class="tm-article-comments-counter-link__value tm-article-comments-counter-link__value_contrasted"> Комментарии 13 </span><!--]--></a><!----></div><!--]--></div></div></div><!--[--><!--[--><!--]--><section class="tm-block tm-block tm-block_spacing-bottom"><header class="tm-block__header tm-block__header tm-block__header_variant-borderless"><div class="tm-block__header-container"><h2 class="tm-block__title tm-block__title tm-block__title_variant-large">Публикации</h2><!--[--><!--]--></div><!----></header><!--[--><div class="tm-block__body tm-block__body tm-block__body_variant-condensed-slim"><!--[--><!--[--><div class="tm-tabs tm-tabs"><div class=""><!--[--><span class="tm-tabs__tab-item"><button class="tm-tabs__tab-link tm-tabs__tab-link_active tm-tabs__tab-link_slim tm-tabs__tab-link">Лучшие за сутки</button></span><span class="tm-tabs__tab-item"><button class="tm-tabs__tab-link tm-tabs__tab-link_slim tm-tabs__tab-link">Похожие</button></span><!--]--></div><!----></div><div class="similar-and-daily__tab-view"><div class="daily-articles-list"><ul class="tm-article-card-list"><!--[--><!--]--><div class="tm-bordered-card"><!----><!--[--><!--]--></div></ul><div class="daily-articles-block__button-container"><button class="btn btn_transparent btn_small tm-button tm-button_color-horizon" type="button"><!--[--><!--[-->Показать лучшие за всё время<!--]--><!--]--></button></div></div><!----></div><!--]--><!--]--></div><!--]--><!----></section><!--[--><section class="tm-block tm-block tm-block_spacing-around tm-stories-block" data-navigatable tabindex="0" data-async-called="true"><header class="tm-block__header tm-block__header"><div class="tm-block__header-container"><h2 class="tm-block__title tm-block__title">Истории</h2><!--[--><!--]--></div><!----></header><!--[--><div class="tm-block__body tm-block__body tm-block__body_variant-equal"><!--[--><div class="tm-stories-empty"><!--[--><div class="tm-stories-card-empty"><div class="tm-stories-card-empty__image"></div><div class="tm-stories-card-empty__title"><div class="tm-stories-card-empty__title-block"></div><div class="tm-stories-card-empty__title-block"></div><div class="tm-stories-card-empty__title-block"></div></div></div><div class="tm-stories-card-empty"><div class="tm-stories-card-empty__image"></div><div class="tm-stories-card-empty__title"><div class="tm-stories-card-empty__title-block"></div><div class="tm-stories-card-empty__title-block"></div><div class="tm-stories-card-empty__title-block"></div></div></div><div class="tm-stories-card-empty"><div class="tm-stories-card-empty__image"></div><div class="tm-stories-card-empty__title"><div class="tm-stories-card-empty__title-block"></div><div class="tm-stories-card-empty__title-block"></div><div class="tm-stories-card-empty__title-block"></div></div></div><div class="tm-stories-card-empty"><div class="tm-stories-card-empty__image"></div><div class="tm-stories-card-empty__title"><div class="tm-stories-card-empty__title-block"></div><div class="tm-stories-card-empty__title-block"></div><div class="tm-stories-card-empty__title-block"></div></div></div><div class="tm-stories-card-empty"><div class="tm-stories-card-empty__image"></div><div class="tm-stories-card-empty__title"><div class="tm-stories-card-empty__title-block"></div><div class="tm-stories-card-empty__title-block"></div><div class="tm-stories-card-empty__title-block"></div></div></div><div class="tm-stories-card-empty"><div class="tm-stories-card-empty__image"></div><div class="tm-stories-card-empty__title"><div class="tm-stories-card-empty__title-block"></div><div class="tm-stories-card-empty__title-block"></div><div class="tm-stories-card-empty__title-block"></div></div></div><!--]--></div><!----><!--]--></div><!--]--><!----></section><div><div class="placeholder-wrapper"><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><div class="tm-placeholder-inset tm-placeholder-salary"><div class="tm-placeholder-inset__header"><div class="tm-placeholder__line tm-placeholder__line_inset-header loads"></div></div><div class="tm-placeholder-salary__body"><div class="tm-placeholder-salary__text"><div class="tm-placeholder__line tm-placeholder__line_salary_average"></div><div class="tm-placeholder-salary__description"><div class="tm-placeholder__line loads"></div><div class="tm-placeholder__line loads"></div><div class="tm-placeholder__line loads"></div><div class="tm-placeholder__line loads"></div></div></div><div class="tm-placeholder-salary__image loads"></div></div><div class="tm-placeholder-inset__footer tm-placeholder-inset__footer_salary"><div class="tm-placeholder__line tm-placeholder__line_inset-footer loads"></div></div></div><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----></div></div><!--]--><!----><!--[--><div><div class="placeholder-wrapper"><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><div class="tm-placeholder-promo"><div class="tm-placeholder-promo__header"><div class="tm-placeholder__line tm-placeholder__line_promo-title"></div></div><div class="tm-placeholder-promo__body"><div class="tm-placeholder-promo__posts"><div class="tm-placeholder-promo__post"><div class="tm-placeholder-promo__image"></div><div class="tm-placeholder__line tm-placeholder__line_post-title"></div></div><div class="tm-placeholder-promo__post"><div class="tm-placeholder-promo__image"></div><div class="tm-placeholder__line tm-placeholder__line_post-title"></div></div><div class="tm-placeholder-promo__post"><div class="tm-placeholder-promo__image"></div><div class="tm-placeholder__line tm-placeholder__line_post-title"></div></div></div><div class="tm-placeholder-promo__dots"><div class="tm-placeholder-promo__dot"></div><div class="tm-placeholder-promo__dot"></div><div class="tm-placeholder-promo__dot"></div></div></div></div><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----></div></div><section class="tm-block tm-block tm-block_spacing-top" data-async-called="true"><header class="tm-block__header tm-block__header"><div class="tm-block__header-container"><h2 class="tm-block__title tm-block__title">Работа</h2><!--[--><!--]--></div><!----></header><!--[--><div class="tm-block__body tm-block__body"><!--[--><!--[--><div class="tm-vacancies-block__item"><a class="tm-vacancies-block__vacancy-title" href="https://career.habr.com/vacancies/java_developer" target="_blank">Java разработчик</a><div class="tm-vacancies-block__vacancies-count">211
    вакансий</div></div><div class="tm-vacancies-block__item"><a class="tm-vacancies-block__vacancy-title" href="https://career.habr.com/vacancies/android_developer" target="_blank">Android разработчик </a><div class="tm-vacancies-block__vacancies-count">10
    вакансий</div></div><!--]--><!--]--></div><!--]--><footer class="tm-block__footer"><!--[--><a class="tm-block-extralink" href="https://career.habr.com/catalog">Все вакансии</a><!--]--></footer></section><section class="tm-block tm-block tm-block_spacing-around tm-events-block" data-navigatable tabindex="0" data-async-called="true"><header class="tm-block__header tm-block__header tm-block__header_variant-borderless-large"><div class="tm-block__header-container"><h2 class="tm-block__title tm-block__title">Ближайшие события</h2><!--[--><!--]--></div><!----></header><!--[--><div class="tm-block__body tm-block__body tm-block__body_variant-equal"><!--[--><div class="swiper-container tm-events-widget" style="--swiper-space-between:22px;"><div class="swiper-wrapper"><!--[--><!--[--><div class="swiper-slide"><!--[--><section class="tm-block tm-block tm-block_spacing-none" id="588" tabindex="-1"><!----><!--[--><div class="tm-event-card tm-event-card_is-widget tm-event-card_responsive"><a href="/ru/events/588/" class=""><img alt class="tm-event-card__image" data-src="https://habrastorage.org/getpro/habr/upload_files/f79/1fc/79d/f791fc79d0d9fdda84397ed0c0717764.png" loading="lazy" src="https://habrastorage.org/r/w390/getpro/habr/upload_files/f79/1fc/79d/f791fc79d0d9fdda84397ed0c0717764.png" srcset="https://habrastorage.org/r/w390/getpro/habr/upload_files/f79/1fc/79d/f791fc79d0d9fdda84397ed0c0717764.png, https://habrastorage.org/getpro/habr/upload_files/f79/1fc/79d/f791fc79d0d9fdda84397ed0c0717764.png 2x"></a><!----><div class="tm-event-card__info"><div class="tm-event-card__date"><!----><div class="tm-event-card__day"><span>17  февраля   – 24  марта  </span></div></div><a href="/ru/events/588/" class="tm-event-card__title-link"><span>Конкурс «Снежный код» от Хекслета. Три гранта на бесплатное 10-месячное обучение</span></a><div class="tm-event-card__places"><div class="tm-event-card__places-list"><!--[--><span class="tm-event-card__places-item"><span>Онлайн</span><!----></span><!--]--></div></div></div><div class="tm-event-card__footer tm-event-card__footer_widget"><a href="/ru/events/#588" class="tm-event-card__link">Больше событий в календаре</a><div class="tm-event-card__categories"><!--[--><div class="event-category__label event-category__label_type-development"><span>Разработка</span></div><!--]--></div></div></div><!--]--><!----></section><!--]--></div><div class="swiper-slide"><!--[--><section class="tm-block tm-block tm-block_spacing-none" id="596" tabindex="-1"><!----><!--[--><div class="tm-event-card tm-event-card_is-widget tm-event-card_responsive"><a href="/ru/events/596/" class=""><img alt class="tm-event-card__image" data-src="https://habrastorage.org/getpro/habr/upload_files/b14/cd3/772/b14cd3772bc67698c8fbfd846e23824a.png" loading="lazy" src="https://habrastorage.org/r/w390/getpro/habr/upload_files/b14/cd3/772/b14cd3772bc67698c8fbfd846e23824a.png" srcset="https://habrastorage.org/r/w390/getpro/habr/upload_files/b14/cd3/772/b14cd3772bc67698c8fbfd846e23824a.png, https://habrastorage.org/getpro/habr/upload_files/b14/cd3/772/b14cd3772bc67698c8fbfd846e23824a.png 2x"></a><!----><div class="tm-event-card__info"><div class="tm-event-card__date"><!----><div class="tm-event-card__day"><span>20  марта  </span></div></div><a href="/ru/events/596/" class="tm-event-card__title-link"><span>Офлайн-конференция Хабр х K-team: как удерживать таланты в 2025 году</span></a><div class="tm-event-card__places"><div class="tm-event-card__places-list"><!--[--><span class="tm-event-card__places-item"><span>Москва</span><!----></span><!--]--></div></div></div><div class="tm-event-card__footer tm-event-card__footer_widget"><a href="/ru/events/#596" class="tm-event-card__link">Больше событий в календаре</a><div class="tm-event-card__categories"><!--[--><div class="event-category__label event-category__label_type-other"><span>Другое</span></div><!--]--></div></div></div><!--]--><!----></section><!--]--></div><div class="swiper-slide"><!--[--><section class="tm-block tm-block tm-block_spacing-none" id="604" tabindex="-1"><!----><!--[--><div class="tm-event-card tm-event-card_is-widget tm-event-card_responsive"><a href="/ru/events/604/" class=""><img alt class="tm-event-card__image" data-src="https://habrastorage.org/getpro/habr/upload_files/733/9ef/194/7339ef1945f3ee6906daf89db79829d4.png" loading="lazy" src="https://habrastorage.org/r/w390/getpro/habr/upload_files/733/9ef/194/7339ef1945f3ee6906daf89db79829d4.png" srcset="https://habrastorage.org/r/w390/getpro/habr/upload_files/733/9ef/194/7339ef1945f3ee6906daf89db79829d4.png, https://habrastorage.org/getpro/habr/upload_files/733/9ef/194/7339ef1945f3ee6906daf89db79829d4.png 2x"></a><!----><div class="tm-event-card__info"><div class="tm-event-card__date"><!----><div class="tm-event-card__day"><span>20  марта  </span></div></div><a href="/ru/events/604/" class="tm-event-card__title-link"><span>IX HappyWorkForum | Аутентичность и ментальное здоровье персонала</span></a><div class="tm-event-card__places"><div class="tm-event-card__places-list"><!--[--><span class="tm-event-card__places-item"><span>Москва</span><span class="tm-event-card__places-separator"> • </span></span><span class="tm-event-card__places-item"><span>Онлайн</span><!----></span><!--]--></div></div></div><div class="tm-event-card__footer tm-event-card__footer_widget"><a href="/ru/events/#604" class="tm-event-card__link">Больше событий в календаре</a><div class="tm-event-card__categories"><!--[--><div class="event-category__label event-category__label_type-other"><span>Другое</span></div><!--]--></div></div></div><!--]--><!----></section><!--]--></div><div class="swiper-slide"><!--[--><section class="tm-block tm-block tm-block_spacing-none" id="612" tabindex="-1"><!----><!--[--><div class="tm-event-card tm-event-card_is-widget tm-event-card_responsive"><a href="/ru/events/612/" class=""><img alt class="tm-event-card__image" data-src="https://habrastorage.org/getpro/habr/upload_files/38f/10d/f4c/38f10df4c7f9d7c5d4610fe426af0ab4.png" loading="lazy" src="https://habrastorage.org/r/w390/getpro/habr/upload_files/38f/10d/f4c/38f10df4c7f9d7c5d4610fe426af0ab4.png" srcset="https://habrastorage.org/r/w390/getpro/habr/upload_files/38f/10d/f4c/38f10df4c7f9d7c5d4610fe426af0ab4.png, https://habrastorage.org/getpro/habr/upload_files/38f/10d/f4c/38f10df4c7f9d7c5d4610fe426af0ab4.png 2x"></a><!----><div class="tm-event-card__info"><div class="tm-event-card__date"><!----><div class="tm-event-card__day"><span>20  марта  </span></div></div><a href="/ru/events/612/" class="tm-event-card__title-link"><span>Вебинар «Мастерская бюджета: как управлять затратами на облачные ресурсы»</span></a><div class="tm-event-card__places"><div class="tm-event-card__places-list"><!--[--><span class="tm-event-card__places-item"><span>Онлайн</span><!----></span><!--]--></div></div></div><div class="tm-event-card__footer tm-event-card__footer_widget"><a href="/ru/events/#612" class="tm-event-card__link">Больше событий в календаре</a><div class="tm-event-card__categories"><!--[--><div class="event-category__label event-category__label_type-development"><span>Разработка</span></div><div class="event-category__label event-category__label_type-admin"><span>Администрирование</span></div><!--]--></div></div></div><!--]--><!----></section><!--]--></div><div class="swiper-slide"><!--[--><section class="tm-block tm-block tm-block_spacing-none" id="616" tabindex="-1"><!----><!--[--><div class="tm-event-card tm-event-card_is-widget tm-event-card_responsive"><a href="/ru/events/616/" class=""><img alt class="tm-event-card__image" data-src="https://habrastorage.org/getpro/habr/upload_files/523/7fb/13a/5237fb13ad7fb6fb483c49691aaec836.png" loading="lazy" src="https://habrastorage.org/r/w390/getpro/habr/upload_files/523/7fb/13a/5237fb13ad7fb6fb483c49691aaec836.png" srcset="https://habrastorage.org/r/w390/getpro/habr/upload_files/523/7fb/13a/5237fb13ad7fb6fb483c49691aaec836.png, https://habrastorage.org/getpro/habr/upload_files/523/7fb/13a/5237fb13ad7fb6fb483c49691aaec836.png 2x"></a><!----><div class="tm-event-card__info"><div class="tm-event-card__date"><!----><div class="tm-event-card__day"><span>21  марта  </span></div></div><a href="/ru/events/616/" class="tm-event-card__title-link"><span>Бизнес-конференция «Digital Brand Day 2025: Орбита 2025»</span></a><div class="tm-event-card__places"><div class="tm-event-card__places-list"><!--[--><span class="tm-event-card__places-item"><span>Москва</span><!----></span><!--]--></div></div></div><div class="tm-event-card__footer tm-event-card__footer_widget"><a href="/ru/events/#616" class="tm-event-card__link">Больше событий в календаре</a><div class="tm-event-card__categories"><!--[--><div class="event-category__label event-category__label_type-marketing"><span>Маркетинг</span></div><div class="event-category__label event-category__label_type-other"><span>Другое</span></div><!--]--></div></div></div><!--]--><!----></section><!--]--></div><div class="swiper-slide"><!--[--><section class="tm-block tm-block tm-block_spacing-none" id="608" tabindex="-1"><!----><!--[--><div class="tm-event-card tm-event-card_is-widget tm-event-card_responsive"><a href="/ru/events/608/" class=""><img alt class="tm-event-card__image" data-src="https://habrastorage.org/getpro/habr/upload_files/8fd/e04/ddd/8fde04ddd9ba3f6bcd515aa6209f96b7.png" loading="lazy" src="https://habrastorage.org/r/w390/getpro/habr/upload_files/8fd/e04/ddd/8fde04ddd9ba3f6bcd515aa6209f96b7.png" srcset="https://habrastorage.org/r/w390/getpro/habr/upload_files/8fd/e04/ddd/8fde04ddd9ba3f6bcd515aa6209f96b7.png, https://habrastorage.org/getpro/habr/upload_files/8fd/e04/ddd/8fde04ddd9ba3f6bcd515aa6209f96b7.png 2x"></a><!----><div class="tm-event-card__info"><div class="tm-event-card__date"><!----><div class="tm-event-card__day"><span>27  марта  </span></div></div><a href="/ru/events/608/" class="tm-event-card__title-link"><span>Вебинар «Контент-маркетинг здорового человека: как привлечь внимание аудитории»</span></a><div class="tm-event-card__places"><div class="tm-event-card__places-list"><!--[--><span class="tm-event-card__places-item"><span>Онлайн</span><!----></span><!--]--></div></div></div><div class="tm-event-card__footer tm-event-card__footer_widget"><a href="/ru/events/#608" class="tm-event-card__link">Больше событий в календаре</a><div class="tm-event-card__categories"><!--[--><div class="event-category__label event-category__label_type-marketing"><span>Маркетинг</span></div><div class="event-category__label event-category__label_type-other"><span>Другое</span></div><!--]--></div></div></div><!--]--><!----></section><!--]--></div><div class="swiper-slide"><!--[--><section class="tm-block tm-block tm-block_spacing-none" id="606" tabindex="-1"><!----><!--[--><div class="tm-event-card tm-event-card_is-widget tm-event-card_responsive"><a href="/ru/events/606/" class=""><img alt class="tm-event-card__image" data-src="https://habrastorage.org/getpro/habr/upload_files/b99/62a/b24/b9962ab2439c6edc80f96d7f0a847c72.png" loading="lazy" src="https://habrastorage.org/r/w390/getpro/habr/upload_files/b99/62a/b24/b9962ab2439c6edc80f96d7f0a847c72.png" srcset="https://habrastorage.org/r/w390/getpro/habr/upload_files/b99/62a/b24/b9962ab2439c6edc80f96d7f0a847c72.png, https://habrastorage.org/getpro/habr/upload_files/b99/62a/b24/b9962ab2439c6edc80f96d7f0a847c72.png 2x"></a><!----><div class="tm-event-card__info"><div class="tm-event-card__date"><!----><div class="tm-event-card__day"><span>31  марта  </span></div></div><a href="/ru/events/606/" class="tm-event-card__title-link"><span>Серия вебинаров «DevOps Middle: AvitoTech vs ecom.tech»</span></a><div class="tm-event-card__places"><div class="tm-event-card__places-list"><!--[--><span class="tm-event-card__places-item"><span>Онлайн</span><!----></span><!--]--></div></div></div><div class="tm-event-card__footer tm-event-card__footer_widget"><a href="/ru/events/#606" class="tm-event-card__link">Больше событий в календаре</a><div class="tm-event-card__categories"><!--[--><div class="event-category__label event-category__label_type-development"><span>Разработка</span></div><div class="event-category__label event-category__label_type-admin"><span>Администрирование</span></div><!--]--></div></div></div><!--]--><!----></section><!--]--></div><div class="swiper-slide"><!--[--><section class="tm-block tm-block tm-block_spacing-none" id="618" tabindex="-1"><!----><!--[--><div class="tm-event-card tm-event-card_is-widget tm-event-card_responsive"><a href="/ru/events/618/" class=""><img alt class="tm-event-card__image" data-src="https://habrastorage.org/getpro/habr/upload_files/f76/0f9/a82/f760f9a827b851a5eeca4802c643a91d.png" loading="lazy" src="https://habrastorage.org/r/w390/getpro/habr/upload_files/f76/0f9/a82/f760f9a827b851a5eeca4802c643a91d.png" srcset="https://habrastorage.org/r/w390/getpro/habr/upload_files/f76/0f9/a82/f760f9a827b851a5eeca4802c643a91d.png, https://habrastorage.org/getpro/habr/upload_files/f76/0f9/a82/f760f9a827b851a5eeca4802c643a91d.png 2x"></a><!----><div class="tm-event-card__info"><div class="tm-event-card__date"><!----><div class="tm-event-card__day"><span>3  апреля  </span></div></div><a href="/ru/events/618/" class="tm-event-card__title-link"><span>Реалити для разработчиков: узнайте, как строится новое публичное облако MWS</span></a><div class="tm-event-card__places"><div class="tm-event-card__places-list"><!--[--><span class="tm-event-card__places-item"><span>Онлайн</span><!----></span><!--]--></div></div></div><div class="tm-event-card__footer tm-event-card__footer_widget"><a href="/ru/events/#618" class="tm-event-card__link">Больше событий в календаре</a><div class="tm-event-card__categories"><!--[--><div class="event-category__label event-category__label_type-development"><span>Разработка</span></div><!--]--></div></div></div><!--]--><!----></section><!--]--></div><div class="swiper-slide"><!--[--><section class="tm-block tm-block tm-block_spacing-none" id="620" tabindex="-1"><!----><!--[--><div class="tm-event-card tm-event-card_is-widget tm-event-card_responsive"><a href="/ru/events/620/" class=""><img alt class="tm-event-card__image" data-src="https://habrastorage.org/getpro/habr/upload_files/eba/c37/879/ebac378793b959ebce42f41713e7b67f.jpg" loading="lazy" src="https://habrastorage.org/r/w390/getpro/habr/upload_files/eba/c37/879/ebac378793b959ebce42f41713e7b67f.jpg" srcset="https://habrastorage.org/r/w390/getpro/habr/upload_files/eba/c37/879/ebac378793b959ebce42f41713e7b67f.jpg, https://habrastorage.org/getpro/habr/upload_files/eba/c37/879/ebac378793b959ebce42f41713e7b67f.jpg 2x"></a><!----><div class="tm-event-card__info"><div class="tm-event-card__date"><!----><div class="tm-event-card__day"><span>3  апреля  </span></div></div><a href="/ru/events/620/" class="tm-event-card__title-link"><span>Открытая встреча «System Analysis Meetup SberHealth»</span></a><div class="tm-event-card__places"><div class="tm-event-card__places-list"><!--[--><span class="tm-event-card__places-item"><span>Москва</span><span class="tm-event-card__places-separator"> • </span></span><span class="tm-event-card__places-item"><span>Онлайн</span><!----></span><!--]--></div></div></div><div class="tm-event-card__footer tm-event-card__footer_widget"><a href="/ru/events/#620" class="tm-event-card__link">Больше событий в календаре</a><div class="tm-event-card__categories"><!--[--><div class="event-category__label event-category__label_type-analytics"><span>Аналитика</span></div><!--]--></div></div></div><!--]--><!----></section><!--]--></div><div class="swiper-slide"><!--[--><section class="tm-block tm-block tm-block_spacing-none" id="590" tabindex="-1"><!----><!--[--><div class="tm-event-card tm-event-card_is-widget tm-event-card_responsive"><a href="/ru/events/590/" class=""><img alt class="tm-event-card__image" data-src="https://habrastorage.org/getpro/habr/upload_files/31b/e68/295/31be6829578e7934fbc944396eb330b1.png" loading="lazy" src="https://habrastorage.org/r/w390/getpro/habr/upload_files/31b/e68/295/31be6829578e7934fbc944396eb330b1.png" srcset="https://habrastorage.org/r/w390/getpro/habr/upload_files/31b/e68/295/31be6829578e7934fbc944396eb330b1.png, https://habrastorage.org/getpro/habr/upload_files/31b/e68/295/31be6829578e7934fbc944396eb330b1.png 2x"></a><!----><div class="tm-event-card__info"><div class="tm-event-card__date"><!----><div class="tm-event-card__day"><span>10  апреля  </span></div></div><a href="/ru/events/590/" class="tm-event-card__title-link"><span>«GoCloud 2025» — масштабная IT-конференция про облака и AI</span></a><div class="tm-event-card__places"><div class="tm-event-card__places-list"><!--[--><span class="tm-event-card__places-item"><span>Москва</span><span class="tm-event-card__places-separator"> • </span></span><span class="tm-event-card__places-item"><span>Онлайн</span><!----></span><!--]--></div></div></div><div class="tm-event-card__footer tm-event-card__footer_widget"><a href="/ru/events/#590" class="tm-event-card__link">Больше событий в календаре</a><div class="tm-event-card__categories"><!--[--><div class="event-category__label event-category__label_type-development"><span>Разработка</span></div><div class="event-category__label event-category__label_type-admin"><span>Администрирование</span></div><div class="event-category__label event-category__label_type-management"><span>Менеджмент</span></div><!--]--></div></div></div><!--]--><!----></section><!--]--></div><div class="swiper-slide"><!--[--><section class="tm-block tm-block tm-block_spacing-none" id="516" tabindex="-1"><!----><!--[--><div class="tm-event-card tm-event-card_is-widget tm-event-card_responsive"><a href="/ru/events/516/" class=""><img alt class="tm-event-card__image" data-src="https://habrastorage.org/getpro/habr/upload_files/0e9/3a8/3ec/0e93a83ecea09f806d1df907ddb036a4.jpg" loading="lazy" src="https://habrastorage.org/r/w390/getpro/habr/upload_files/0e9/3a8/3ec/0e93a83ecea09f806d1df907ddb036a4.jpg" srcset="https://habrastorage.org/r/w390/getpro/habr/upload_files/0e9/3a8/3ec/0e93a83ecea09f806d1df907ddb036a4.jpg, https://habrastorage.org/getpro/habr/upload_files/0e9/3a8/3ec/0e93a83ecea09f806d1df907ddb036a4.jpg 2x"></a><!----><div class="tm-event-card__info"><div class="tm-event-card__date"><!----><div class="tm-event-card__day"><span>25 – 26  апреля  </span></div></div><a href="/ru/events/516/" class="tm-event-card__title-link"><span>IT-конференция Merge Tatarstan 2025</span></a><div class="tm-event-card__places"><div class="tm-event-card__places-list"><!--[--><span class="tm-event-card__places-item"><span>Казань</span><!----></span><!--]--></div></div></div><div class="tm-event-card__footer tm-event-card__footer_widget"><a href="/ru/events/#516" class="tm-event-card__link">Больше событий в календаре</a><div class="tm-event-card__categories"><!--[--><div class="event-category__label event-category__label_type-development"><span>Разработка</span></div><div class="event-category__label event-category__label_type-marketing"><span>Маркетинг</span></div><div class="event-category__label event-category__label_type-other"><span>Другое</span></div><!--]--></div></div></div><!--]--><!----></section><!--]--></div><div class="swiper-slide"><!--[--><section class="tm-block tm-block tm-block_spacing-none" id="610" tabindex="-1"><!----><!--[--><div class="tm-event-card tm-event-card_is-widget tm-event-card_responsive"><a href="/ru/events/610/" class=""><img alt class="tm-event-card__image" data-src="https://habrastorage.org/getpro/habr/upload_files/652/12d/998/65212d998fb4939d9787bd9c726d2acb.png" loading="lazy" src="https://habrastorage.org/r/w390/getpro/habr/upload_files/652/12d/998/65212d998fb4939d9787bd9c726d2acb.png" srcset="https://habrastorage.org/r/w390/getpro/habr/upload_files/652/12d/998/65212d998fb4939d9787bd9c726d2acb.png, https://habrastorage.org/getpro/habr/upload_files/652/12d/998/65212d998fb4939d9787bd9c726d2acb.png 2x"></a><!----><div class="tm-event-card__info"><div class="tm-event-card__date"><!----><div class="tm-event-card__day"><span>20 – 22  июня  </span></div></div><a href="/ru/events/610/" class="tm-event-card__title-link"><span>Летняя айти-тусовка Summer Merge</span></a><div class="tm-event-card__places"><div class="tm-event-card__places-list"><!--[--><span class="tm-event-card__places-item"><span>Ульяновская область</span><!----></span><!--]--></div></div></div><div class="tm-event-card__footer tm-event-card__footer_widget"><a href="/ru/events/#610" class="tm-event-card__link">Больше событий в календаре</a><div class="tm-event-card__categories"><!--[--><div class="event-category__label event-category__label_type-development"><span>Разработка</span></div><div class="event-category__label event-category__label_type-other"><span>Другое</span></div><!--]--></div></div></div><!--]--><!----></section><!--]--></div><!--]--><!--]--></div><!----><!--[--><button class="swiper-button-prev"><span class="tm-svg-icon__wrapper swiper-button-icon"><svg class="tm-svg-img tm-svg-icon" height="24" width="24"><title>Влево</title><use xlink:href="/img/megazord-v28.371b7fa3..svg#arrow-back"></use></svg></span></button><button class="swiper-button-next"><span class="tm-svg-icon__wrapper swiper-button-icon"><svg class="tm-svg-img tm-svg-icon" height="24" width="24"><title>Вправо</title><use xlink:href="/img/megazord-v28.371b7fa3..svg#arrow-back"></use></svg></span></button><!--]--></div><!--]--></div><!--]--><!----></section><!--]--><!--]--></div><!--]--><!--]--></div></div><!--]--><!--]--></div></div><div class="tm-page__sidebar"><!--[--><!----><!--]--></div></div><!----><!--]--></div></div></main><!----></div><!----><div class="tm-footer"><div class="tm-page-width"><!--[--><div class="tm-footer__container"><div class="tm-footer__title"><a class="tm-svg-icon__wrapper tm-footer__title-link" href="/ru/"><svg class="tm-svg-img tm-svg-icon" height="16" width="16"><title>Хабр</title><use xlink:href="/img/habr-logo-ru.svg#logo"></use></svg></a></div><div class="tm-footer__social"><!--[--><a class="tm-svg-icon__wrapper tm-social-icons__icon" href="https://www.facebook.com/habrahabr.ru" rel="nofollow noopener noreferrer" target="_blank"><svg class="tm-svg-img tm-svg-icon" height="36" width="36"><title>Facebook</title><use xlink:href="/img/new-social-icons-sprite.svg#social-logo-facebook"></use></svg></a><a class="tm-svg-icon__wrapper tm-social-icons__icon" href="https://twitter.com/habr_com" rel="nofollow noopener noreferrer" target="_blank"><svg class="tm-svg-img tm-svg-icon" height="36" width="36"><title>Twitter</title><use xlink:href="/img/new-social-icons-sprite.svg#social-logo-twitter"></use></svg></a><a class="tm-svg-icon__wrapper tm-social-icons__icon" href="https://vk.com/habr" rel="nofollow noopener noreferrer" target="_blank"><svg class="tm-svg-img tm-svg-icon" height="36" width="36"><title>VK</title><use xlink:href="/img/new-social-icons-sprite.svg#social-logo-vk"></use></svg></a><a class="tm-svg-icon__wrapper tm-social-icons__icon" href="https://telegram.me/habr_com" rel="nofollow noopener noreferrer" target="_blank"><svg class="tm-svg-img tm-svg-icon" height="36" width="36"><title>Telegram</title><use xlink:href="/img/new-social-icons-sprite.svg#social-logo-telegram"></use></svg></a><a class="tm-svg-icon__wrapper tm-social-icons__icon" href="https://www.youtube.com/channel/UCd_sTwKqVrweTt4oAKY5y4w" rel="nofollow noopener noreferrer" target="_blank"><svg class="tm-svg-img tm-svg-icon" height="36" width="36"><title>Youtube</title><use xlink:href="/img/new-social-icons-sprite.svg#social-logo-youtube"></use></svg></a><a class="tm-svg-icon__wrapper tm-social-icons__icon" href="https://dzen.ru/habr" rel="nofollow noopener noreferrer" target="_blank"><svg class="tm-svg-img tm-svg-icon" height="36" width="36"><title>Яндекс Дзен</title><use xlink:href="/img/new-social-icons-sprite.svg#social-logo-dzen"></use></svg></a><!--]--></div><!--teleport start--><!--teleport end--><button class="tm-footer__link"><svg class="tm-svg-img tm-footer__icon" height="16" width="16"><title>Язык</title><use xlink:href="/img/megazord-v28.371b7fa3..svg#lang"></use></svg> Настройка языка</button><a href="/ru/feedback/" class="tm-footer__link">Техническая поддержка</a><div class="tm-footer-copyright"><span class="tm-copyright"><span class="tm-copyright__years">© 2006–2025, </span><span class="tm-copyright__name"><a class="tm-copyright__link" href="https://company.habr.com/" rel="noopener" target="_blank">Habr</a></span></span></div></div><!--]--></div></div><!----><!--]--></div><!----></div><script>window.__INITIAL_STATE__={"adblock":{"hasAcceptableAdsFilter":false,"hasAdblock":false},"articlesList":{"articlesList":{"721084":{"id":"721084","timePublished":"2023-03-20T08:54:02+00:00","isCorporative":false,"lang":"ru","titleHtml":"Вопросы и ответы для собеседования по Kotlin. Часть 1","leadData":{"textHtml":"\u003Cp\u003EЦикл статей с вопросами по \u003Cstrong\u003EKotlin\u003C\u002Fstrong\u003E, которые могут задать на собеседованиях. \u003C\u002Fp\u003E\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fhabr.com\u002Fru\u002Fpost\u002F721084\u002F\" rel=\"noopener noreferrer nofollow\"\u003EВопросы и ответы для собеседования по Kotlin. Часть 1\u003C\u002Fa\u003E — вы находитесь здесь\u003Cbr\u003E\u003Ca href=\"https:\u002F\u002Fhabr.com\u002Fru\u002Fpost\u002F722686\u002F\" rel=\"noopener noreferrer nofollow\"\u003EВопросы и ответы для собеседования по Kotlin. Часть 2\u003C\u002Fa\u003E&nbsp;\u003Cbr\u003E\u003Ca href=\"https:\u002F\u002Fhabr.com\u002Fru\u002Farticles\u002F728742\u002F\" rel=\"noopener noreferrer nofollow\"\u003EВопросы и ответы для собеседования по Kotlin. Часть 3\u003C\u002Fa\u003E \u003Cbr\u003E\u003Ca href=\"https:\u002F\u002Fhabr.com\u002Fru\u002Farticles\u002F736392\u002F\" rel=\"noopener noreferrer nofollow\"\u003EВопросы и ответы для собеседования по Kotlin. Часть 4\u003C\u002Fa\u003E&nbsp;\u003C\u002Fp\u003E","imageUrl":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fc73\u002F420\u002F1d9\u002Fc734201d91a3a6b141891f97efd6e3cb.png","buttonTextHtml":"Читать далее","image":{"url":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fc73\u002F420\u002F1d9\u002Fc734201d91a3a6b141891f97efd6e3cb.png","fit":"cover","positionY":0,"positionX":0}},"editorVersion":"2.0","postType":"article","postLabels":[],"author":{"id":"3223285","alias":"dmt_ovs","fullname":"Дмитрий","avatarUrl":"\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Favatars\u002F84b\u002Fafb\u002F1c1\u002F84bafb1c17208f6b124be4429e2a8104.png","speciality":"(-_-)","scoreStats":{"score":24,"votesCount":32},"rating":0,"relatedData":null,"contacts":[],"authorContacts":[],"paymentDetails":{"paymentYandexMoney":null,"paymentPayPalMe":null,"paymentWebmoney":null},"donationsMethod":null,"isInBlacklist":null,"careerProfile":null},"statistics":{"commentsCount":13,"favoritesCount":239,"readingCount":103973,"score":2,"votesCount":2,"votesCountPlus":2,"votesCountMinus":0},"hubs":[{"id":"359","alias":"programming","type":"collective","title":"Программирование","titleHtml":"Программирование","isProfiled":true,"relatedData":null},{"id":"375","alias":"java","type":"collective","title":"Java","titleHtml":"Java","isProfiled":true,"relatedData":null},{"id":"17107","alias":"android_dev","type":"collective","title":"Разработка под Android","titleHtml":"Разработка под Android","isProfiled":true,"relatedData":null},{"id":"19441","alias":"kotlin","type":"collective","title":"Kotlin","titleHtml":"Kotlin","isProfiled":true,"relatedData":null},{"id":"20696","alias":"study","type":"collective","title":"Учебный процесс в IT","titleHtml":"Учебный процесс в IT","isProfiled":false,"relatedData":null}],"flows":[{"id":"1","alias":"develop","title":"Разработка","titleHtml":"Разработка"},{"id":"3","alias":"management","title":"Менеджмент","titleHtml":"Менеджмент"}],"relatedData":{"vote":null,"unreadCommentsCount":0,"bookmarked":false,"canComment":false,"canEdit":false,"canViewVotes":false,"votePlus":{"canVote":false,"isChargeEnough":false,"isKarmaEnough":false,"isVotingOver":true,"isPublicationLimitEnough":false},"voteMinus":{"canVote":false,"isChargeEnough":false,"isKarmaEnough":false,"isVotingOver":true,"isPublicationLimitEnough":false},"canModerateComments":false,"trackerSubscribed":false,"emailSubscribed":false},"textHtml":"\u003Cdiv xmlns=\"http:\u002F\u002Fwww.w3.org\u002F1999\u002Fxhtml\"\u003E\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fhabr.com\u002Fru\u002Fpost\u002F721084\u002F\" rel=\"noopener noreferrer nofollow\"\u003EВопросы и ответы для собеседования по Kotlin. Часть 1\u003C\u002Fa\u003E — вы находитесь здесь\u003Cbr\u002F\u003E\u003Ca href=\"https:\u002F\u002Fhabr.com\u002Fru\u002Fpost\u002F722686\u002F\" rel=\"noopener noreferrer nofollow\"\u003EВопросы и ответы для собеседования по Kotlin. Часть 2\u003C\u002Fa\u003E \u003Cbr\u002F\u003E\u003Ca href=\"https:\u002F\u002Fhabr.com\u002Fru\u002Farticles\u002F728742\u002F\" rel=\"noopener noreferrer nofollow\"\u003EВопросы и ответы для собеседования по Kotlin. Часть 3\u003C\u002Fa\u003E \u003Cbr\u002F\u003E\u003Ca href=\"https:\u002F\u002Fhabr.com\u002Fru\u002Farticles\u002F736392\u002F\" rel=\"noopener noreferrer nofollow\"\u003EВопросы и ответы для собеседования по Kotlin. Часть 4\u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003Ca class=\"anchor\" name=\"%D0%A1%D0%BF%D0%B8%D1%81%D0%BE%D0%BA%20%D1%82%D0%B5%D0%BC%20%D0%B8%20%D0%B2%D0%BE%D0%BF%D1%80%D0%BE%D1%81%D0%BE%D0%B2\" id=\"Список тем и вопросов\"\u003E\u003C\u002Fa\u003E\u003Ch2\u003EСписок тем и вопросов:\u003C\u002Fh2\u003E\u003Ch4\u003E1. Kotlin и Java\u003C\u002Fh4\u003E\u003Cul\u003E\u003Cli\u003E\u003Cp\u003E\u003Ca href=\"#%D0%9F%D1%80%D0%B5%D0%B8%D0%BC%D1%83%D1%89%D0%B5%D1%81%D1%82%D0%B2%D0%B0%20%D1%8F%D0%B7%D1%8B%D0%BA%D0%B0%20Kotlin%20%D0%BF%D0%B5%D1%80%D0%B5%D0%B4%20Java\" rel=\"noopener noreferrer nofollow\"\u003EПреимущества языка Kotlin перед Java\u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003E\u003Ca href=\"#%D0%A0%D0%B0%D0%B7%D0%BD%D0%B8%D1%86%D0%B0%20%D0%BC%D0%B5%D0%B6%D0%B4%D1%83%20Exception%20%D0%B2%20Java%20%D0%B8%20Kotlin\" rel=\"noopener noreferrer nofollow\"\u003EРазница между Exception в Java и Kotlin\u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003E\u003Ca href=\"#%D0%9A%D0%B0%D0%BA%20%D0%BF%D0%B5%D1%80%D0%B5%D0%BD%D0%B5%D1%81%D1%82%D0%B8%20%D1%81%D1%82%D0%B0%D1%82%D0%B8%D1%87%D0%BD%D1%8B%D0%B5%20%D0%BC%D0%B5%D1%82%D0%BE%D0%B4%D1%8B%20%D0%B8%D0%B7%20Java%20%D0%B2%20Kotlin?\" rel=\"noopener noreferrer nofollow\"\u003EКак перенести статичные методы из Java в Kotlin?\u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003E\u003Ca href=\"#%D0%92%20%D0%BA%D0%B0%D0%BA%D0%BE%D0%B9%20%D0%BC%D0%BE%D0%B4%D0%B8%D1%84%D0%B8%D0%BA%D0%B0%D1%82%D0%BE%D1%80%20%D0%BF%D1%80%D0%B5%D0%BE%D0%B1%D1%80%D0%B0%D0%B7%D1%83%D0%B5%D1%82%D1%81%D1%8F%20internal%20%D0%B2%20Java?\" rel=\"noopener noreferrer nofollow\"\u003EВ какой модификатор преобразуется internal в Java?\u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003E\u003Ca href=\"#%D0%9E%D1%82%D0%BB%D0%B8%D1%87%D0%B8%D1%8F%20%D0%B2%20%D0%BF%D1%80%D0%BE%D0%B2%D0%B5%D1%80%D0%BA%D0%B5%20%D0%BD%D0%B0%20%D1%80%D0%B0%D0%B2%D0%B5%D0%BD%D1%81%D1%82%D0%B2%D0%BE%20==%20%D0%B8%20equals()\" rel=\"noopener noreferrer nofollow\"\u003EОтличия в проверке на равенство == и equals()\u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003C\u002Ful\u003E\u003Ch4\u003E2. Анонимные классы и объекты, object и companion object\u003C\u002Fh4\u003E\u003Cul\u003E\u003Cli\u003E\u003Cp\u003E\u003Ca href=\"#%D0%9A%D1%80%D0%B0%D1%82%D0%BA%D0%BE%20%D0%BF%D1%80%D0%BE%20%D0%B0%D0%BD%D0%BE%D0%BD%D0%B8%D0%BC%D0%BD%D1%8B%D0%B5%20%D0%BA%D0%BB%D0%B0%D1%81%D1%81%D1%8B%20%D0%B8%20%D0%BE%D0%B1%D1%8A%D0%B5%D0%BA%D1%82%D1%8B,%20object%20%D0%B8%20companion%20object\" rel=\"noopener noreferrer nofollow\"\u003E\u003Cu\u003EКратко про анонимные классы и объекты, object и companion object\u003C\u002Fu\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003E\u003Ca href=\"#%D0%9E%D0%B1%D1%8A%D1%8F%D0%B2%D0%BB%D0%B5%D0%BD%D0%B8%D0%B5%20%D0%BE%D0%B1%D1%8A%D0%B5%D0%BA%D1%82%D0%B0%20(object%20declaration),%20object%20%D0%BA%D0%B0%D0%BA%20Singleton\" rel=\"noopener noreferrer nofollow\"\u003EОбъявление объекта (object declaration), object как Singleton\u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003E\u003Ca href=\"#%D0%A1ompanion%20object%20(%D1%82%D0%B0%D0%BA%D0%B6%D0%B5%20Singleton)\" rel=\"noopener noreferrer nofollow\"\u003EСompanion object (также Singleton)\u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003E\u003Ca href=\"#%D0%9E%D0%B1%D1%8A%D0%B5%D0%BA%D1%82-%D0%B2%D1%8B%D1%80%D0%B0%D0%B6%D0%B5%D0%BD%D0%B8%D0%B5%20(%D0%B0%D0%BD%D0%BE%D0%BD%D0%B8%D0%BC%D0%BD%D1%8B%D0%B9%20%D0%BE%D0%B1%D1%8A%D0%B5%D0%BA%D1%82\u002Fobject%20expression)\" rel=\"noopener noreferrer nofollow\"\u003EОбъект-выражение (анонимный объект\u002Fobject expression)\u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003E\u003Ca href=\"#%D0%A0%D0%B0%D0%B7%D0%BD%D0%B8%D1%86%D0%B0%20%D0%BC%D0%B5%D0%B6%D0%B4%D1%83%20%D0%B0%D0%BD%D0%BE%D0%BD%D0%B8%D0%BC%D0%BD%D1%8B%D0%BC%20%D0%B8%20%D0%B4%D0%B5%D0%BA%D0%BB%D0%B0%D1%80%D0%B8%D1%80%D1%83%D0%B5%D0%BC%D1%8B%D0%BC%20(%D0%BE%D0%B1%D1%8A%D1%8F%D0%B2%D0%BB%D1%8F%D0%B5%D0%BC%D1%8B%D0%BC)%20%D0%BE%D0%B1%D1%8A%D0%B5%D0%BA%D1%82%D0%BE%D0%BC\" rel=\"noopener noreferrer nofollow\"\u003EРазница между анонимным и декларируемым (объявляемым) объектом\u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003E\u003Ca href=\"#%D0%90%D0%BD%D0%BD%D0%BE%D1%82%D0%B0%D1%86%D0%B8%D1%8F%20@JvmStatic\" rel=\"noopener noreferrer nofollow\"\u003EАннотация @JvmStatic\u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003C\u002Ful\u003E\u003Ch4\u003E3. Null safety\u003C\u002Fh4\u003E\u003Cul\u003E\u003Cli\u003E\u003Cp\u003E\u003Ca href=\"#%D0%A7%D1%82%D0%BE%20%D1%82%D0%B0%D0%BA%D0%BE%D0%B5%20Null%20safety,%20nullable%20%D0%B8%20non-nullable%20%D1%82%D0%B8%D0%BF%D1%8B?\" rel=\"noopener noreferrer nofollow\"\u003EЧто такое Null safety, nullable и non-nullable типы?\u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003E\u003Ca href=\"#%D0%A1%D0%BF%D0%BE%D1%81%D0%BE%D0%B1%D1%8B%20%D0%BF%D1%80%D0%BE%D0%B2%D0%B5%D1%80%D0%BA%D0%B8%20%D0%B7%D0%BD%D0%B0%D1%87%D0%B5%D0%BD%D0%B8%D1%8F%20%D0%BD%D0%B0%20null%20(if-else,%20%D0%BE%D0%BF%D0%B5%D1%80%D0%B0%D1%82%D0%BE%D1%80%D1%8B%20&quot;?.&quot;,%20&quot;!!.&quot;,%20&quot;?:&quot;)\" rel=\"noopener noreferrer nofollow\"\u003EСпособы проверки значения на null (if-else, операторы \"?.\", \"!!.\", \"?:\")\u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003C\u002Ful\u003E\u003Ch4\u003E4. Any\u003C\u002Fh4\u003E\u003Cul\u003E\u003Cli\u003E\u003Cp\u003E\u003Ca href=\"#%D0%9E%D1%82%20%D0%BA%D0%B0%D0%BA%D0%BE%D0%B3%D0%BE%20%D0%BA%D0%BB%D0%B0%D1%81%D1%81%D0%B0%20%D1%83%D0%BD%D0%B0%D1%81%D0%BB%D0%B5%D0%B4%D0%BE%D0%B2%D0%B0%D0%BD%D1%8B%20%D0%B2%D1%81%D0%B5%20%D0%BE%D1%81%D1%82%D0%B0%D0%BB%D1%8C%D0%BD%D1%8B%D0%B5%20%D0%BA%D0%BB%D0%B0%D1%81%D1%81%D1%8B%20%D0%B2%20Kotlin?\" rel=\"noopener noreferrer nofollow\"\u003EОт какого класса унаследованы все остальные классы в Kotlin?\u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003E\u003Ca href=\"#%D0%A7%D0%B5%D0%BC%20Any%20%D0%B2%20Kotlin%20%D0%BE%D1%82%D0%BB%D0%B8%D1%87%D0%B0%D0%B5%D1%82%D1%81%D1%8F%20%D0%BE%D1%82%20Object%20%D0%B2%20Java?\" rel=\"noopener noreferrer nofollow\"\u003EЧем Any в Kotlin отличается от Object в Java?\u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003E\u003Ca href=\"#%D0%9A%D0%B0%D0%BA%D0%BE%D0%B9%20%D1%82%D0%B8%D0%BF%20%D0%BD%D0%B0%D1%85%D0%BE%D0%B4%D0%B8%D1%82%D1%81%D1%8F%20%D0%BD%D0%B0%20%D0%B2%D0%B5%D1%80%D1%88%D0%B8%D0%BD%D0%B5%20%D0%B8%D0%B5%D1%80%D0%B0%D1%80%D1%85%D0%B8%D0%B8%20%D1%82%D0%B8%D0%BF%D0%BE%D0%B2%20%D0%B2%20Kotlin?\" rel=\"noopener noreferrer nofollow\"\u003EКакой тип находится на вершине иерархии типов в Kotlin?\u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003C\u002Ful\u003E\u003Ch4\u003E5. Unit\u003C\u002Fh4\u003E\u003Cul\u003E\u003Cli\u003E\u003Cp\u003E\u003Ca href=\"#%D0%9A%D1%80%D0%B0%D1%82%D0%BA%D0%BE%20%D0%BE%20Unit\" rel=\"noopener noreferrer nofollow\"\u003E\u003Cu\u003EКратко о Unit\u003C\u002Fu\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003E\u003Ca href=\"#%D0%A1%D0%BA%D0%BE%D0%BB%D1%8C%D0%BA%D0%BE%20%D1%81%D1%83%D1%89%D0%B5%D1%81%D1%82%D0%B2%D1%83%D0%B5%D1%82%20instance%20Unit%20(1)?\" rel=\"noopener noreferrer nofollow\"\u003EСколько существует instance Unit (1)?\u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003C\u002Ful\u003E\u003Ch4\u003E6. Nothing\u003C\u002Fh4\u003E\u003Cul\u003E\u003Cli\u003E\u003Cp\u003E\u003Ca href=\"#%D0%9A%D1%80%D0%B0%D1%82%D0%BA%D0%BE%20%D0%BE%20Nothing\" rel=\"noopener noreferrer nofollow\"\u003EКратко о Nothing\u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003E\u003Ca href=\"#%D0%9D%D0%B0%D0%B7%D0%BE%D0%B2%D0%B8%D1%82%D0%B5%20%D0%BF%D0%BE%D0%B4%D1%82%D0%B8%D0%BF%20%D0%B2%D1%81%D0%B5%D1%85%20%D1%82%D0%B8%D0%BF%D0%BE%D0%B2%20%D0%B2%20Kotlin\" rel=\"noopener noreferrer nofollow\"\u003EНазовите подтип всех типов в Kotlin\u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003E\u003Ca href=\"#%D0%A1%D0%BA%D0%BE%D0%BB%D1%8C%D0%BA%D0%BE%20%D1%81%D1%83%D1%89%D0%B5%D1%81%D1%82%D0%B2%D1%83%D0%B5%D1%82%20instance%20Nothing%20(0)?\" rel=\"noopener noreferrer nofollow\"\u003EСколько существует instance Nothing (0)?\u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003E\u003Ca href=\"#%D0%95%D1%81%D1%82%D1%8C%20%D0%BB%D0%B8%20%D0%B0%D0%BD%D0%B0%D0%BB%D0%BE%D0%B3%20Nothing%20%D0%B2%20Java%20(%D0%BD%D0%B5%D1%82)?\" rel=\"noopener noreferrer nofollow\"\u003EЕсть ли аналог Nothing в Java (нет)?\u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003C\u002Ful\u003E\u003Cfigure class=\"full-width \"\u003E\u003Cimg src=\"https:\u002F\u002Fhabrastorage.org\u002Fr\u002Fw1560\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F949\u002Fbdc\u002F1e2\u002F949bdc1e2b5f2acbe17488bcafcfae9e.png\" width=\"1587\" height=\"753\" data-src=\"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F949\u002Fbdc\u002F1e2\u002F949bdc1e2b5f2acbe17488bcafcfae9e.png\"\u002F\u003E\u003C\u002Ffigure\u003E\u003Ca class=\"anchor\" name=\"%D0%9F%D1%80%D0%B5%D0%B8%D0%BC%D1%83%D1%89%D0%B5%D1%81%D1%82%D0%B2%D0%B0%20%D1%8F%D0%B7%D1%8B%D0%BA%D0%B0%20Kotlin%20%D0%BF%D0%B5%D1%80%D0%B5%D0%B4%20Java\" id=\"Преимущества языка Kotlin перед Java\"\u003E\u003C\u002Fa\u003E\u003Ch2\u003EПреимущества языка Kotlin перед Java\u003C\u002Fh2\u003E\u003Cdetails class=\"spoiler\"\u003E\u003Csummary\u003EКод на Kotlin компактнее на 30-40%\u003C\u002Fsummary\u003E\u003Cdiv class=\"spoiler__content\"\u003E\u003Ch3\u003EМеньше кода = меньше ошибок, выше скорость разработки.\u003C\u002Fh3\u003E\u003Cp\u003E\u003C\u002Fp\u003E\u003C\u002Fdiv\u003E\u003C\u002Fdetails\u003E\u003Cdetails class=\"spoiler\"\u003E\u003Csummary\u003EБезопасная работа с обнуляемыми переменными (Null Safety)\u003C\u002Fsummary\u003E\u003Cdiv class=\"spoiler__content\"\u003E\u003Ch3\u003EВ отличие от Java, в Kotlin по умолчанию все типы являются non-nullable, то есть не могут принимать значение null. Присвоение или возврат null приведет к ошибке компиляции. Чтобы присвоить переменной значение null, в Kotlin необходимо явно пометить эту переменную как nullable (добавив после типа знак вопроса). В Java же при использовании ссылки на объект с указанным значением null, появляется исключение в виде «NullPointerException!».\u003C\u002Fh3\u003E\u003Cp\u003E\u003C\u002Fp\u003E\u003C\u002Fdiv\u003E\u003C\u002Fdetails\u003E\u003Cdetails class=\"spoiler\"\u003E\u003Csummary\u003EФункции-расширения (Extensions)\u003C\u002Fsummary\u003E\u003Cdiv class=\"spoiler__content\"\u003E\u003Ch3\u003EKotlin позволяет расширять класс путём добавления нового функционала без необходимости наследования от такого класса. Это реализовано с помощью специальных выражений, называемых расширения. Например, вы можете написать новые функции для класса из сторонней библиотеки, которую вы не можете изменить. Такие функции можно вызывать обычным способом, как если бы они были методами исходного класса. Этот механизм называется функцией расширения.\u003C\u002Fh3\u003E\u003Cp\u003E\u003C\u002Fp\u003E\u003C\u002Fdiv\u003E\u003C\u002Fdetails\u003E\u003Cdetails class=\"spoiler\"\u003E\u003Csummary\u003EКлассы данных (data classes)\u003C\u002Fsummary\u003E\u003Cdiv class=\"spoiler__content\"\u003E\u003Ch3\u003EРазработчику на Java приходится писать много стандартного, но часто встречающегося кода (т.н. шаблонный код или boilerplate). В Kotlin же есть возможность создания специальных классов для определения полей для хранения данных, конструктора, функций сеттеров и геттеров для каждого поля, и функций Hashcode(), toString() и equals(). Для этого достаточно добавить data в определение класса, затем компилятор сделает все сам.\u003C\u002Fh3\u003E\u003Cp\u003E\u003C\u002Fp\u003E\u003C\u002Fdiv\u003E\u003C\u002Fdetails\u003E\u003Cdetails class=\"spoiler\"\u003E\u003Csummary\u003EСинглтоны на уровне языка (Object)\u003C\u002Fsummary\u003E\u003Cdiv class=\"spoiler__content\"\u003E\u003Ch3\u003EВ Java все должно объявляться внутри класса. Но в Kotlin все иначе. Компоненты могут объявляться за пределами класса, и это автоматически делает их статическими. Поэтому нам не требуется ключевое слово static. В Java статические члены обрабатываются не так, как члены-объекты. Это означает, что для статических членов нам недоступны такие вещи, как реализация интерфейса, помещение экземпляра в ассоциативный список (map) или передача его в качестве параметра методу, который принимает объект. В Kotlin static не является ключевым словом и вместо статических членов используются объекты-компаньоны, позволяющие преодолеть вышеуказанные ограничения. В этом и заключается преимущество. Даже если члены объектов-компаньонов выглядят как статические члены в других языках, во время выполнения они все равно остаются членами экземпляров реальных объектов и могут, например, реализовывать интерфейсы.\u003C\u002Fh3\u003E\u003Cp\u003E\u003C\u002Fp\u003E\u003C\u002Fdiv\u003E\u003C\u002Fdetails\u003E\u003Cdetails class=\"spoiler\"\u003E\u003Csummary\u003EКорутины \u003C\u002Fsummary\u003E\u003Cdiv class=\"spoiler__content\"\u003E\u003Ch3\u003EKotlin предоставляет возможность создавать дополнительные потоки, однако в нем также существуют т.н. корутины (сопрограммы), которые позволяют использовать меньше памяти в сравнении с обычным потоком, т.к. реализованы они без стека. Корутины же в свою очередь способны выполнять интенсивные и длительные задачи методом приостановления выполнения без блокировки потока и его последующего восстановления. Что в дальнейшем позволяет сгенерировать асинхронный код без блокирования, который при его выполнении не отличить от синхронного. К тому же, они генерируют эффектные доп. стили например async или await.\u003C\u002Fh3\u003E\u003Cp\u003E\u003C\u002Fp\u003E\u003C\u002Fdiv\u003E\u003C\u002Fdetails\u003E\u003Cp\u003E\u003Cstrong\u003EДополнительно:\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fkotlinlang.ru\u002Fdocs\u002Ftypecasts.html\" rel=\"noopener noreferrer nofollow\"\u003EУмные приведения\u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fkotlinlang.ru\u002Fdocs\u002Fbasic-types.html#strings\" rel=\"noopener noreferrer nofollow\"\u003EСтроковые шаблоны\u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fkotlinlang.ru\u002Fdocs\u002Fdelegation.html\" rel=\"noopener noreferrer nofollow\"\u003EДелегирование на уровне языка\u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fkotlinlang.ru\u002Fdocs\u002Fbasic-types.html\" rel=\"noopener noreferrer nofollow\"\u003EВыведение типа для переменных и свойств\u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fkotlinlang.ru\u002Fdocs\u002Fgenerics.html\" rel=\"noopener noreferrer nofollow\"\u003EБолее гибкая работа с generics\u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003Ca class=\"anchor\" name=\"%D0%A0%D0%B0%D0%B7%D0%BD%D0%B8%D1%86%D0%B0%20%D0%BC%D0%B5%D0%B6%D0%B4%D1%83%20Exception%20%D0%B2%20Java%20%D0%B8%20Kotlin\" id=\"Разница между Exception в Java и Kotlin\"\u003E\u003C\u002Fa\u003E\u003Cp\u003E\u003Ca href=\"#%D0%A1%D0%BF%D0%B8%D1%81%D0%BE%D0%BA%20%D1%82%D0%B5%D0%BC%20%D0%B8%20%D0%B2%D0%BE%D0%BF%D1%80%D0%BE%D1%81%D0%BE%D0%B2\" rel=\"noopener noreferrer nofollow\"\u003E—————— ↑↑↑ к списку вопросов ↑↑↑ ——————\u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003Ch2\u003EРазница между Exception в Java и Kotlin\u003C\u002Fh2\u003E\u003Cp\u003EОдним из ключевых отличий между Java и Kotlin является подход к исключениям. В Java есть два типа исключений: \u003Cstrong\u003Echecked\u003C\u002Fstrong\u003E и \u003Cstrong\u003Eunchecked\u003C\u002Fstrong\u003E. \u003C\u002Fp\u003E\u003Cp\u003E\u003Cstrong\u003EChecked\u003C\u002Fstrong\u003E исключения это те, которые должны быть обработаны в коде, иначе компилятор не позволит коду скомпилироваться. \u003Cstrong\u003EUnchecked\u003C\u002Fstrong\u003E исключения не требуют обработки в коде.  \u003C\u002Fp\u003E\u003Cp\u003EС точки зрения исключений компилятор Kotlin отличается тем, что не различает \u003Cstrong\u003Echecked\u003C\u002Fstrong\u003E и \u003Cstrong\u003Eunchecked\u003C\u002Fstrong\u003E исключения. Все исключения — \u003Cstrong\u003Eтолько unchecked\u003C\u002Fstrong\u003E, поэтому нет необходимости отлавливать или объявлять какие-либо исключения (вы самостоятельно принимаете решение, стоит ли их отлавливать и обрабатывать).\u003C\u002Fp\u003E\u003Cp\u003EТакой подход был выбран разработчиками Kotlin, чтобы упростить и ускорить процесс разработки, сократив количество бойлерплейта и улучшив читаемость кода. Однако, это может привести к тому, что некоторые ошибки могут быть упущены при компиляции и проявиться только во время выполнения программы.\u003C\u002Fp\u003E\u003Cp\u003EНекоторые разработчики считают, что отказ от checked исключений является недостатком Kotlin, поскольку это может привести к ошибкам, которые могут быть предотвращены на этапе компиляции в Java. Однако, другие разработчики утверждают, что этот подход снижает количество шаблонного кода и упрощает написание программ.\u003C\u002Fp\u003E\u003Cp\u003E\u003Cstrong\u003EПодробнее:\u003C\u002Fstrong\u003E \u003Ca href=\"https:\u002F\u002Fcode.tutsplus.com\u002Fru\u002Ftutorials\u002Fkotlin-from-scratch-exception-handling--cms-29820\" rel=\"noopener noreferrer nofollow\"\u003Ecode.tutsplus.com\u003C\u002Fa\u003E, \u003Ca href=\"https:\u002F\u002Fhabr.com\u002Fru\u002Fcompany\u002Fmaxilect\u002Fblog\u002F447380\u002F\" rel=\"noopener noreferrer nofollow\"\u003Ehabr.com\u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003Ca class=\"anchor\" name=\"%D0%9A%D0%B0%D0%BA%20%D0%BF%D0%B5%D1%80%D0%B5%D0%BD%D0%B5%D1%81%D1%82%D0%B8%20%D1%81%D1%82%D0%B0%D1%82%D0%B8%D1%87%D0%BD%D1%8B%D0%B5%20%D0%BC%D0%B5%D1%82%D0%BE%D0%B4%D1%8B%20%D0%B8%D0%B7%20Java%20%D0%B2%20Kotlin?\" id=\"Как перенести статичные методы из Java в Kotlin?\"\u003E\u003C\u002Fa\u003E\u003Cp\u003E\u003Ca href=\"#%D0%A1%D0%BF%D0%B8%D1%81%D0%BE%D0%BA%20%D1%82%D0%B5%D0%BC%20%D0%B8%20%D0%B2%D0%BE%D0%BF%D1%80%D0%BE%D1%81%D0%BE%D0%B2\" rel=\"noopener noreferrer nofollow\"\u003E—————— ↑↑↑ к списку вопросов ↑↑↑ ——————\u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003Ch2\u003EКак перенести статичные методы из Java в Kotlin?\u003C\u002Fh2\u003E\u003Cp\u003EВ Kotlin нет статических методов, для этих целей обычно служит \u003Ccode\u003Ecompanion object\u003C\u002Fcode\u003E.\u003Cbr\u002F\u003EДля того чтобы метод из Java был представлен как статический используется аннотация \u003Ccode\u003E@JvmStatic\u003C\u002Fcode\u003E. Эта аннотация говорит компилятору Kotlin создать статический метод в  байт-коде, что позволяет использовать методы так же, как в Java.  \u003C\u002Fp\u003E\u003Cp\u003E Например, если у нас есть статический метод в Java:  \u003C\u002Fp\u003E\u003Cpre\u003E\u003Ccode class=\"java\"\u003Epublic class MyClass {\n    public static int sum(int a, int b) {\n        return a + b;\n    }\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EМы можем использовать этот метод в Kotlin, добавив аннотацию \u003Ccode\u003E@JvmStatic\u003C\u002Fcode\u003E:\u003C\u002Fp\u003E\u003Cpre\u003E\u003Ccode class=\"kotlin\"\u003Eobject MyClass {\n    @JvmStatic\n    fun sum(a: Int, b: Int): Int {\n        return a + b\n    }\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003E\u003Ca href=\"#%D0%A1%D0%BF%D0%B8%D1%81%D0%BE%D0%BA%20%D1%82%D0%B5%D0%BC%20%D0%B8%20%D0%B2%D0%BE%D0%BF%D1%80%D0%BE%D1%81%D0%BE%D0%B2\" rel=\"noopener noreferrer nofollow\"\u003E \u003C\u002Fa\u003E\u003Cstrong\u003EПодробнее:\u003C\u002Fstrong\u003E \u003Ca href=\"https:\u002F\u002Fkotlinlang.ru\u002Fdocs\u002Freference\u002Fjava-to-kotlin-interop.html\" rel=\"noopener noreferrer nofollow\"\u003Ekotlinlang.ru\u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003Ca class=\"anchor\" name=\"%D0%92%20%D0%BA%D0%B0%D0%BA%D0%BE%D0%B9%20%D0%BC%D0%BE%D0%B4%D0%B8%D1%84%D0%B8%D0%BA%D0%B0%D1%82%D0%BE%D1%80%20%D0%BF%D1%80%D0%B5%D0%BE%D0%B1%D1%80%D0%B0%D0%B7%D1%83%D0%B5%D1%82%D1%81%D1%8F%20internal%20%D0%B2%20Java?\" id=\"В какой модификатор преобразуется internal в Java?\"\u003E\u003C\u002Fa\u003E\u003Cp\u003E\u003Ca href=\"#%D0%A1%D0%BF%D0%B8%D1%81%D0%BE%D0%BA%20%D1%82%D0%B5%D0%BC%20%D0%B8%20%D0%B2%D0%BE%D0%BF%D1%80%D0%BE%D1%81%D0%BE%D0%B2\" rel=\"noopener noreferrer nofollow\"\u003E—————— ↑↑↑ к списку вопросов ↑↑↑ ——————\u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003Ch2\u003EВ какой модификатор преобразуется internal в Java?\u003C\u002Fh2\u003E\u003Cp\u003EВ Java нет эквивалента модификатору доступа \u003Ccode\u003Einternal\u003C\u002Fcode\u003E из Kotlin. При компиляции Kotlin-кода в Java-байткод, модификатор доступа \u003Ccode\u003Einternal\u003C\u002Fcode\u003E преобразуется в модификатор \u003Ccode\u003Epublic\u003C\u002Fcode\u003E в Java. \u003C\u002Fp\u003E\u003Cp\u003EТаким образом, все члены класса, отмеченные как \u003Ccode\u003Einternal\u003C\u002Fcode\u003E, будут видны из любого места в том же пакете, а также из любого другого модуля, которому был разрешен доступ к этому модулю. Члены \u003Ccode\u003Einternal\u003C\u002Fcode\u003E классов проходят через искажение имен, чтобы усложнить случайное использование их из Java и позволить перегрузку для членов с одинаковыми сигнатурами, которые не видят друг друга в соответствии с правилами Kotlin.\u003C\u002Fp\u003E\u003Cp\u003E\u003Cstrong\u003EПодробнее:\u003C\u002Fstrong\u003E \u003Ca href=\"https:\u002F\u002F4comprehension.com\u002Fkotlins-internal-visibility-modifier-and-java-interoperability\u002F\" rel=\"noopener noreferrer nofollow\"\u003E4comprehension.com\u003C\u002Fa\u003E, \u003Ca href=\"https:\u002F\u002Fkotlinlang.ru\u002Fdocs\u002Freference\u002Fjava-to-kotlin-interop.html\" rel=\"noopener noreferrer nofollow\"\u003Ekotlinlang.ru\u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003Ca class=\"anchor\" name=\"%D0%9E%D1%82%D0%BB%D0%B8%D1%87%D0%B8%D1%8F%20%D0%B2%20%D0%BF%D1%80%D0%BE%D0%B2%D0%B5%D1%80%D0%BA%D0%B5%20%D0%BD%D0%B0%20%D1%80%D0%B0%D0%B2%D0%B5%D0%BD%D1%81%D1%82%D0%B2%D0%BE%20==%20%D0%B8%20equals()\" id=\"Отличия в проверке на равенство == и equals()\"\u003E\u003C\u002Fa\u003E\u003Cp\u003E \u003Ca href=\"#%D0%A1%D0%BF%D0%B8%D1%81%D0%BE%D0%BA%20%D1%82%D0%B5%D0%BC%20%D0%B8%20%D0%B2%D0%BE%D0%BF%D1%80%D0%BE%D1%81%D0%BE%D0%B2\" rel=\"noopener noreferrer nofollow\"\u003E—————— ↑↑↑ к списку вопросов ↑↑↑ ——————\u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003Ch2\u003EОтличия в проверке на равенство == и equals()\u003C\u002Fh2\u003E\u003Ch4\u003E1. Проверка на равенство в Java\u003C\u002Fh4\u003E\u003Cp\u003E\u003Cstrong\u003EСтруктурное равенство\u003C\u002Fstrong\u003E \u003Cstrong\u003E(значение)\u003C\u002Fstrong\u003E — метод \u003Ccode\u003Eequals().\u003Cbr\u002F\u003E\u003C\u002Fcode\u003E\u003Cstrong\u003EСсылочное равенство\u003C\u002Fstrong\u003E — оператор \u003Ccode\u003E==\u003C\u002Fcode\u003E:\u003Cbr\u002F\u003E— примитивные типы данных: сравнивает значения переменных\u003Cbr\u002F\u003E— ссылочные типы данных (объекты, массивы): сравнивает ссылки\u003C\u002Fp\u003E\u003Ch4\u003E2. Проверка на равенство в  Kotlin\u003C\u002Fh4\u003E\u003Cp\u003E\u003Cstrong\u003EСтруктурное равенство\u003C\u002Fstrong\u003E \u003Cstrong\u003E(значение)\u003C\u002Fstrong\u003E — оператор \u003Ccode\u003E==\u003C\u002Fcode\u003E (проверка через \u003Ccode\u003Eequals()\u003C\u002Fcode\u003E)\u003Cbr\u002F\u003E\u003Cstrong\u003EСсылочное равенство\u003C\u002Fstrong\u003E — оператор \u003Ccode\u003E===\u003C\u002Fcode\u003E:\u003Cbr\u002F\u003E— примитивные типы данных: сравнивает значения переменных\u003Cbr\u002F\u003E— ссылочные типы данных (объекты, массивы): сравнивает ссылки\u003C\u002Fp\u003E\u003Ch4\u003E3. Разница == с Java\u003C\u002Fh4\u003E\u003Cp\u003E\u003Cstrong\u003EСтруктурное равенство\u003C\u002Fstrong\u003E \u003Cstrong\u003E(значение) \u003C\u002Fstrong\u003E— оператор \u003Ccode\u003E==\u003C\u002Fcode\u003E в Kotlin это \u003Ccode\u003Eequals()\u003C\u002Fcode\u003E в Java, т.е. в Kotlin строки можно всегда сравнивать через \u003Ccode\u003E==\u003C\u002Fcode\u003E.\u003Cbr\u002F\u003E\u003Cstrong\u003EСсылочное равенство \u003C\u002Fstrong\u003E— оператор \u003Ccode\u003E===\u003C\u002Fcode\u003E в Kotlin это \u003Ccode\u003E==\u003C\u002Fcode\u003E в Java.\u003C\u002Fp\u003E\u003Cp\u003E\u003Cstrong\u003EПодробнее:\u003C\u002Fstrong\u003E \u003Ca href=\"https:\u002F\u002Fkotlinlang.ru\u002Fdocs\u002Freference\u002Fequality.html\" rel=\"noopener noreferrer nofollow\"\u003Ekotlinlang.ru\u003C\u002Fa\u003E, \u003Ca href=\"https:\u002F\u002Ftranslated.turbopages.org\u002Fproxy_u\u002Fen-ru.ru.0519f9eb-63f2e6e6-7f84a483-74722d776562\u002Fhttps\u002Fwww.baeldung.com\u002Fkotlin\u002Fequality-operators\" rel=\"noopener noreferrer nofollow\"\u003Ebaeldung.com\u003C\u002Fa\u003E, \u003Ca href=\"https:\u002F\u002Fhabr.com\u002Fru\u002Fcompany\u002Fotus\u002Fblog\u002F532270\u002F\" rel=\"noopener noreferrer nofollow\"\u003Ehabr.com\u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003Ca class=\"anchor\" name=\"%D0%9A%D1%80%D0%B0%D1%82%D0%BA%D0%BE%20%D0%BF%D1%80%D0%BE%20%D0%B0%D0%BD%D0%BE%D0%BD%D0%B8%D0%BC%D0%BD%D1%8B%D0%B5%20%D0%BA%D0%BB%D0%B0%D1%81%D1%81%D1%8B%20%D0%B8%20%D0%BE%D0%B1%D1%8A%D0%B5%D0%BA%D1%82%D1%8B,%20object%20%D0%B8%20companion%20object\" id=\"Кратко про анонимные классы и объекты, object и companion object\"\u003E\u003C\u002Fa\u003E\u003Cp\u003E\u003Ca href=\"#%D0%A1%D0%BF%D0%B8%D1%81%D0%BE%D0%BA%20%D1%82%D0%B5%D0%BC%20%D0%B8%20%D0%B2%D0%BE%D0%BF%D1%80%D0%BE%D1%81%D0%BE%D0%B2\" rel=\"noopener noreferrer nofollow\"\u003E—————— ↑↑↑ к списку вопросов ↑↑↑ ——————\u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003Ch2\u003EКратко про анонимные классы и объекты, object и companion object\u003C\u002Fh2\u003E\u003Cp\u003E\u003Cstrong\u003EАнонимный класс\u003C\u002Fstrong\u003E — это класс, которые явно \u003Cstrong\u003Eне объявлен\u003C\u002Fstrong\u003E с помощью \u003Ccode\u003Eclass\u003C\u002Fcode\u003E, наследуется от заданного класса или реализует заданный интерфейс. \u003C\u002Fp\u003E\u003Cp\u003EАнонимный класс \u003Cstrong\u003Eне всегда является синглтоном\u003C\u002Fstrong\u003E. Анонимный класс создается каждый раз при вызове соответствующего конструктора и используется только в контексте, где был создан. При этом каждый экземпляр анонимного класса имеет свое уникальное состояние и может отличаться от других экземпляров того же анонимного класса. В Kotlin анонимный класс создается следующим образом:\u003C\u002Fp\u003E\u003Cpre\u003E\u003Ccode class=\"kotlin\"\u003Eval obj = object : SuperClassOrInterface() {\n    \u002F\u002F implementation here\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EОбъекты анонимных классов полезны для одноразового использования.\u003C\u002Fp\u003E\u003Cp\u003EЭкземпляры анонимных классов называют \u003Cstrong\u003Eанонимными объектами\u003C\u002Fstrong\u003E, потому что они \u003Cstrong\u003Eобъявляются выражением, а не именем\u003C\u002Fstrong\u003E. Анонимный объект начинается с ключевого слова \u003Ccode\u003Eobject\u003C\u002Fcode\u003E.\u003C\u002Fp\u003E\u003Cul\u003E\u003Cli\u003E\u003Cp\u003Eможно задавать свойства, функции, блоки инициализации;\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003Eможно наследоваться от других классов и реализовывать интерфейсы;\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003E\u003Cstrong\u003Eнельзя\u003C\u002Fstrong\u003E создавать конструкторы (как основные, так и вторичные).\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003C\u002Ful\u003E\u003Cp\u003EКлючевое слово \u003Ccode\u003Eobject\u003C\u002Fcode\u003E позволяет одновременно объявить класс и создать его экземпляр (т.е. объект). При этом применять его можно по-разному:\u003C\u002Fp\u003E\u003Cul\u003E\u003Cli\u003E\u003Cp\u003E\u003Ccode\u003Eobject Name\u003C\u002Fcode\u003E — это \u003Cstrong\u003Eобъявление объекта\u003C\u002Fstrong\u003E (оbject declaration), реализация паттерна \u003Cstrong\u003ESingleton;\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003E\u003Ccode\u003Ecompanion object\u003C\u002Fcode\u003E — это объект-компаньон внутри класса (\u003Cstrong\u003Eтакже Singleton\u003C\u002Fstrong\u003E);\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003E\u003Ccode\u003Eobject\u003C\u002Fcode\u003E — это объект-выражение (анонимный объект\u002Fobject expression), \u003Cstrong\u003Eне Singleton\u003C\u002Fstrong\u003E.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003C\u002Ful\u003E\u003Ca class=\"anchor\" name=\"%D0%9E%D0%B1%D1%8A%D1%8F%D0%B2%D0%BB%D0%B5%D0%BD%D0%B8%D0%B5%20%D0%BE%D0%B1%D1%8A%D0%B5%D0%BA%D1%82%D0%B0%20(object%20declaration),%20object%20%D0%BA%D0%B0%D0%BA%20Singleton\" id=\"Объявление объекта (object declaration), object как Singleton\"\u003E\u003C\u002Fa\u003E\u003Cp\u003E\u003Ca href=\"#%D0%A1%D0%BF%D0%B8%D1%81%D0%BE%D0%BA%20%D1%82%D0%B5%D0%BC%20%D0%B8%20%D0%B2%D0%BE%D0%BF%D1%80%D0%BE%D1%81%D0%BE%D0%B2\" rel=\"noopener noreferrer nofollow\"\u003E—————— ↑↑↑ к списку вопросов ↑↑↑ ——————\u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003Ch2\u003EОбъявление объекта (object declaration), object как Singleton \u003C\u002Fh2\u003E\u003Cp\u003EОбъявляется объект при помощи ключевого слова \u003Ccode\u003Eobject\u003C\u002Fcode\u003E, после которого следует \u003Ccode\u003Eимя объекта\u003C\u002Fcode\u003E.\u003C\u002Fp\u003E\u003Cp\u003EФайл, содержащий только \u003Ccode\u003Eobject\u003C\u002Fcode\u003E представляет из себя \u003Cstrong\u003ESingleton\u003C\u002Fstrong\u003E, т.е. будет создан \u003Cstrong\u003Eтолько один экземпляр\u003C\u002Fstrong\u003E этого класса. Пример:\u003C\u002Fp\u003E\u003Cpre\u003E\u003Ccode class=\"kotlin\"\u003Eobject One {\n\tval cats = arrayListOf&lt;Cat&gt;()\n\t\n\tfun callCat() {\n\t\tfor (cat in cats) {\n\t\t\t...\n\t\t}\n\t}\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EМожно обращаться к методам и свойствам класса через имя объекта:\u003C\u002Fp\u003E\u003Cpre\u003E\u003Ccode class=\"kotlin\"\u003EOne.cats.add(Cat(...))\nOne.callCat()\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EИнициализация объявления объекта потокобезопасна и выполняется при первом доступе (лениво).\u003C\u002Fp\u003E\u003Ca class=\"anchor\" name=\"%D0%A1ompanion%20object%20(%D1%82%D0%B0%D0%BA%D0%B6%D0%B5%20Singleton)\" id=\"Сompanion object (также Singleton)\"\u003E\u003C\u002Fa\u003E\u003Cp\u003E\u003Ca href=\"#%D0%A1%D0%BF%D0%B8%D1%81%D0%BE%D0%BA%20%D1%82%D0%B5%D0%BC%20%D0%B8%20%D0%B2%D0%BE%D0%BF%D1%80%D0%BE%D1%81%D0%BE%D0%B2\" rel=\"noopener noreferrer nofollow\"\u003E—————— ↑↑↑ к списку вопросов ↑↑↑ ——————\u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003Ch2\u003EСompanion object (также Singleton)\u003C\u002Fh2\u003E\u003Cp\u003EОбъекты можно объявлять внутри класса, при этом нет каких-либо ограничений по их количеству. Но \u003Cstrong\u003Eтолько один объект\u003C\u002Fstrong\u003E можно пометить ключевым словом \u003Ccode\u003Ecompanion object\u003C\u002Fcode\u003E в рамках одного класса.\u003C\u002Fp\u003E\u003Cp\u003EСинглтон-свойство \u003Ccode\u003Ecompanion object\u003C\u002Fcode\u003E достигается за счет того, что он создается внутри класса в качестве статического поля. Он будет инициализирован при первом обращении к нему или при создании первого экземпляра класса, в котором он объявлен.\u003C\u002Fp\u003E\u003Cp\u003EВажно отметить, что \u003Ccode\u003Ecompanion object\u003C\u002Fcode\u003E \u003Cstrong\u003Eбудет инициализирован первым\u003C\u002Fstrong\u003E, а затем уже будет создан экземпляр класса:\u003C\u002Fp\u003E\u003Cpre\u003E\u003Ccode class=\"kotlin\"\u003Eclass MyClass {\n  init {\n    \u002F\u002F Выполняется всегда после инициализации companion object\n  }\n\n  companion object {\n    init {\n      \u002F\u002F Выполняется всегда перед блоком init содержащего класса\n    }\n  }\n}\n\nval myClass = MyClass()\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003E\u003Cstrong\u003EТакому объекту можно не указывать свое имя\u003C\u002Fstrong\u003E, и обращаться к методам и свойствам объекта через имя содержащего его класса \u003Cstrong\u003Eбез явного указания имени объекта\u003C\u002Fstrong\u003E.\u003C\u002Fp\u003E\u003Cpre\u003E\u003Ccode class=\"kotlin\"\u003Eclass SomeClass {\n\n  companion object {\n    fun create()\n  }\n}\n\nval someClass = SomeClass.create()\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EКомпилируется в \u003Ccode\u003Epublic static final class\u003C\u002Fcode\u003E на Java. Работает подобно ключевому слову \u003Ccode\u003Estatic\u003C\u002Fcode\u003E в Java.\u003C\u002Fp\u003E\u003Ca class=\"anchor\" name=\"%D0%9E%D0%B1%D1%8A%D0%B5%D0%BA%D1%82-%D0%B2%D1%8B%D1%80%D0%B0%D0%B6%D0%B5%D0%BD%D0%B8%D0%B5%20(%D0%B0%D0%BD%D0%BE%D0%BD%D0%B8%D0%BC%D0%BD%D1%8B%D0%B9%20%D0%BE%D0%B1%D1%8A%D0%B5%D0%BA%D1%82\u002Fobject%20expression)\" id=\"Объект-выражение (анонимный объект\u002Fobject expression)\"\u003E\u003C\u002Fa\u003E\u003Cp\u003E\u003Ca href=\"#%D0%A1%D0%BF%D0%B8%D1%81%D0%BE%D0%BA%20%D1%82%D0%B5%D0%BC%20%D0%B8%20%D0%B2%D0%BE%D0%BF%D1%80%D0%BE%D1%81%D0%BE%D0%B2\" rel=\"noopener noreferrer nofollow\"\u003E—————— ↑↑↑ к списку вопросов ↑↑↑ ——————\u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003Ch2\u003EОбъект-выражение (анонимный объект\u002Fobject expression)\u003C\u002Fh2\u003E\u003Cp\u003EОбъект-выражение — это выражение, которое \"на ходу\" создает анонимный объект.\u003C\u002Fp\u003E\u003Cp\u003E\u003Cstrong\u003EДля объекта-выражения не указывается имя!\u003C\u002Fstrong\u003E\u003Cbr\u002F\u003EЕсли же объекту всё-таки требуется имя, то его можно сохранить в переменной:\u003C\u002Fp\u003E\u003Cpre\u003E\u003Ccode class=\"kotlin\"\u003Eval tom = object {\n        val name = \"Tom\"\n        var age = 37\n        fun sayHello() {\n            println(\"Hi, my name is $name\")\n        }\n    }\n    println(\"Name: ${tom.name}  Age: ${tom.age}\")\n    tom.sayHello()\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003E\u003Cstrong\u003EАнонимные объекты не являются синглтонами!\u003C\u002Fstrong\u003E\u003Cbr\u002F\u003EКаждый раз при выполнении объекта-выражения создаётся новый объект.\u003C\u002Fp\u003E\u003Cp\u003EАнонимный объект является заменой анонимным внутренним классам в Java.\u003C\u002Fp\u003E\u003Ca class=\"anchor\" name=\"%D0%A0%D0%B0%D0%B7%D0%BD%D0%B8%D1%86%D0%B0%20%D0%BC%D0%B5%D0%B6%D0%B4%D1%83%20%D0%B0%D0%BD%D0%BE%D0%BD%D0%B8%D0%BC%D0%BD%D1%8B%D0%BC%20%D0%B8%20%D0%B4%D0%B5%D0%BA%D0%BB%D0%B0%D1%80%D0%B8%D1%80%D1%83%D0%B5%D0%BC%D1%8B%D0%BC%20(%D0%BE%D0%B1%D1%8A%D1%8F%D0%B2%D0%BB%D1%8F%D0%B5%D0%BC%D1%8B%D0%BC)%20%D0%BE%D0%B1%D1%8A%D0%B5%D0%BA%D1%82%D0%BE%D0%BC\" id=\"Разница между анонимным и декларируемым (объявляемым) объектом\"\u003E\u003C\u002Fa\u003E\u003Cp\u003E\u003Ca href=\"#%D0%A1%D0%BF%D0%B8%D1%81%D0%BE%D0%BA%20%D1%82%D0%B5%D0%BC%20%D0%B8%20%D0%B2%D0%BE%D0%BF%D1%80%D0%BE%D1%81%D0%BE%D0%B2\" rel=\"noopener noreferrer nofollow\"\u003E—————— ↑↑↑ к списку вопросов ↑↑↑ ——————\u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003Ch2\u003EРазница между анонимным и декларируемым (объявляемым) объектом\u003C\u002Fh2\u003E\u003Cul\u003E\u003Cli\u003E\u003Cp\u003Eанонимный объект (\u003Ccode\u003Eobject\u003C\u002Fcode\u003E) инициализируется непосредственно при использовании;\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003Eдекларированный (объявляемый) объект (\u003Ccode\u003Eobject Name\u003C\u002Fcode\u003E) инициализируется лениво, в момент первого к нему доступа;\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003Eвспомогательный объект (\u003Ccode\u003Ecompanion object\u003C\u002Fcode\u003E) инициализируется в момент, когда класс, к которому он относится, загружен и семантически совпадает со статическим инициализатором Java.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003C\u002Ful\u003E\u003Ca class=\"anchor\" name=\"%D0%90%D0%BD%D0%BD%D0%BE%D1%82%D0%B0%D1%86%D0%B8%D1%8F%20@JvmStatic\" id=\"Аннотация @JvmStatic\"\u003E\u003C\u002Fa\u003E\u003Cp\u003E\u003Ca href=\"#%D0%A1%D0%BF%D0%B8%D1%81%D0%BE%D0%BA%20%D1%82%D0%B5%D0%BC%20%D0%B8%20%D0%B2%D0%BE%D0%BF%D1%80%D0%BE%D1%81%D0%BE%D0%B2\" rel=\"noopener noreferrer nofollow\"\u003E—————— ↑↑↑ к списку вопросов ↑↑↑ ——————\u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003Ch2\u003EАннотация @JvmStatic\u003C\u002Fh2\u003E\u003Cp\u003EС помощью аннотации \u003Ccode\u003E@JvmStatic\u003C\u002Fcode\u003E есть возможность объявить методы по настоящему статическими, ее можно добавить как к методам \u003Ccode\u003Eobject\u003C\u002Fcode\u003E, так и к методам \u003Ccode\u003Ecompanion object\u003C\u002Fcode\u003E.\u003C\u002Fp\u003E\u003Cpre\u003E\u003Ccode class=\"kotlin\"\u003Eobject ObjectWithStatic {\n    @JvmStatic\n    fun staticFun(): Int {\n        return 5\n    }\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EВ этом случае метод \u003Ccode\u003EstaticFun\u003C\u002Fcode\u003E будет действительно объявлен статическим:\u003C\u002Fp\u003E\u003Cpre\u003E\u003Ccode class=\"kotlin\"\u003Epublic final class ObjectWithStatic {\n   public static final ObjectWithStatic INSTANCE;\n \n   @JvmStatic\n   public static final int staticFun() {\n      return 5;\n   }\n \n   private ObjectWithStatic() {\n      INSTANCE = (ObjectWithStatic)this;\n   }\n \n   static {\n      new ObjectWithStatic();\n   }\n}\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Ca class=\"anchor\" name=\"%D0%A7%D1%82%D0%BE%20%D1%82%D0%B0%D0%BA%D0%BE%D0%B5%20Null%20safety,%20nullable%20%D0%B8%20non-nullable%20%D1%82%D0%B8%D0%BF%D1%8B?\" id=\"Что такое Null safety, nullable и non-nullable типы?\"\u003E\u003C\u002Fa\u003E\u003Cp\u003E\u003Ca href=\"#%D0%A1%D0%BF%D0%B8%D1%81%D0%BE%D0%BA%20%D1%82%D0%B5%D0%BC%20%D0%B8%20%D0%B2%D0%BE%D0%BF%D1%80%D0%BE%D1%81%D0%BE%D0%B2\" rel=\"noopener noreferrer nofollow\"\u003E—————— ↑↑↑ к списку вопросов ↑↑↑ ——————\u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003Ch2\u003EЧто такое Null safety, nullable и non-nullable типы?\u003C\u002Fh2\u003E\u003Cp\u003E\u003Cstrong\u003ENull safety\u003C\u002Fstrong\u003E — это концепция безопасности, которая предотвращает некоторые из наиболее распространенных ошибок в программировании, связанных с использованием \u003Cstrong\u003Enull\u003C\u002Fstrong\u003E-значений. В Kotlin эта концепция реализуется за счет строгой типизации и системы \u003Cstrong\u003ENullable\u002FNon-nullable\u003C\u002Fstrong\u003E типов данных.\u003C\u002Fp\u003E\u003Cp\u003E\u003Cstrong\u003ENullable\u003C\u002Fstrong\u003E типы — это типы, которые могут содержать значение \u003Ccode\u003Enull\u003C\u002Fcode\u003E. \u003Cstrong\u003ENon-nullable\u003C\u002Fstrong\u003E типы — это типы, которые не могут содержать значение \u003Ccode\u003Enull\u003C\u002Fcode\u003E и всегда должны иметь некоторое значение.\u003C\u002Fp\u003E\u003Cp\u003EВ Kotlin переменные по умолчанию являются \u003Cstrong\u003Enon-nullable\u003C\u002Fstrong\u003E — это означает, что они не могут принимать значение \u003Ccode\u003Enull\u003C\u002Fcode\u003E. Если переменная может принимать значение \u003Ccode\u003Enull\u003C\u002Fcode\u003E, то ее нужно объявить с использованием знака вопроса (\u003Cstrong\u003E?\u003C\u002Fstrong\u003E). При использовании \u003Cstrong\u003ENullable\u003C\u002Fstrong\u003E переменной в коде Kotlin не допустит обращение к ней без предварительной проверки на \u003Cstrong\u003Enull\u003C\u002Fstrong\u003E-значение.\u003C\u002Fp\u003E\u003Cp\u003EТакже Kotlin предоставляет множество функций для безопасной работы с \u003Cstrong\u003Enullable\u003C\u002Fstrong\u003E-значениями, таких как операторы \u003Cstrong\u003Eelvis\u003C\u002Fstrong\u003E \u003Ccode\u003E?:\u003C\u002Fcode\u003E, \u003Cstrong\u003Eбезопасный вызов\u003C\u002Fstrong\u003E \u003Ccode\u003E?.\u003C\u002Fcode\u003E и другие.\u003C\u002Fp\u003E\u003Cp\u003EВ целом, концепция \u003Cstrong\u003ENull safety\u003C\u002Fstrong\u003E помогает разработчикам избежать ошибок связанных с \u003Cstrong\u003Enull\u003C\u002Fstrong\u003E-значениями, уменьшает количество ошибок в работе приложения и упрощает разработку и поддержку кода.\u003C\u002Fp\u003E\u003Ca class=\"anchor\" name=\"%D0%A1%D0%BF%D0%BE%D1%81%D0%BE%D0%B1%D1%8B%20%D0%BF%D1%80%D0%BE%D0%B2%D0%B5%D1%80%D0%BA%D0%B8%20%D0%B7%D0%BD%D0%B0%D1%87%D0%B5%D0%BD%D0%B8%D1%8F%20%D0%BD%D0%B0%20null%20(if-else,%20%D0%BE%D0%BF%D0%B5%D1%80%D0%B0%D1%82%D0%BE%D1%80%D1%8B%20&quot;?.&quot;,%20&quot;!!.&quot;,%20&quot;?:&quot;)\" id=\"Способы проверки значения на null (if-else, операторы &quot;?.&quot;, &quot;!!.&quot;, &quot;?:&quot;)\"\u003E\u003C\u002Fa\u003E\u003Cp\u003E\u003Ca href=\"#%D0%A1%D0%BF%D0%B8%D1%81%D0%BE%D0%BA%20%D1%82%D0%B5%D0%BC%20%D0%B8%20%D0%B2%D0%BE%D0%BF%D1%80%D0%BE%D1%81%D0%BE%D0%B2\" rel=\"noopener noreferrer nofollow\"\u003E—————— ↑↑↑ к списку вопросов ↑↑↑ ——————\u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003Ch2\u003EСпособы проверки значения на null (if-else, операторы \"?.\", \"!!.\", \"?:\")\u003C\u002Fh2\u003E\u003Cp\u003EKotlin разграничивает типы с поддержкой и без поддержки \u003Cstrong\u003Enull-\u003C\u002Fstrong\u003Eзначений. Это означает, что при объявлении переменной, которая может хранить \u003Cstrong\u003Enull\u003C\u002Fstrong\u003E, нужно явно объявить ее как \u003Cstrong\u003Enullable\u003C\u002Fstrong\u003E при помощи символа \u003Ccode\u003E?\u003C\u002Fcode\u003E.\u003C\u002Fp\u003E\u003Cpre\u003E\u003Ccode class=\"kotlin\"\u003Eval languageName: String? = null\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EОбъявляя \u003Cstrong\u003Enullable\u003C\u002Fstrong\u003E переменную вы берёте на себя ответственность по проверке её значения. Иначе компилятор будет запрещать вызов функций для таких значений, ведь это может привести к \u003Cstrong\u003ENullPointerException\u003C\u002Fstrong\u003E.\u003C\u002Fp\u003E\u003Cp\u003EРассмотрим все доступные способы проверки значения на \u003Cstrong\u003Enull\u003C\u002Fstrong\u003E.\u003C\u002Fp\u003E\u003Ch4\u003E1. Проверка с помощью if-else\u003C\u002Fh4\u003E\u003Cp\u003EПожалуй, это самый простой способ проверки значения на \u003Cstrong\u003Enull\u003C\u002Fstrong\u003E и скорее всего будет многим знаком.\u003C\u002Fp\u003E\u003Cpre\u003E\u003Ccode class=\"kotlin\"\u003Eif(languageName != null) {\n    print(\"Name is : $languageName\")\n} else {\n    print(\"Please enter a valid name\")\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EИспользование оператора безопасного вызова будет предпочтительнее, так как он позволяет решить проблему меньшим количеством кода. Однако, если со значением переменной производятся какие-то сложные вычисления и перед началом вычислений нужно проверить равно ли оно \u003Cstrong\u003Enull\u003C\u002Fstrong\u003E, то \u003Cstrong\u003Eif-else\u003C\u002Fstrong\u003E вполне подойдёт.\u003C\u002Fp\u003E\u003Ch4\u003E2. Оператор безопасного вызова \"?.\"\u003C\u002Fh4\u003E\u003Cp\u003EОператор безопасного вызова позволяет сказать компилятору, что значением данной переменной может быть \u003Cstrong\u003Enull\u003C\u002Fstrong\u003E и его стоит проверить перед дальнейшим использованием.\u003C\u002Fp\u003E\u003Cpre\u003E\u003Ccode class=\"kotlin\"\u003ElanguageName?.length\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EТо есть, если значение переменной \u003Ccode\u003ElanguageName\u003C\u002Fcode\u003E равно \u003Cstrong\u003Enull\u003C\u002Fstrong\u003E, то компилятор не будет пытаться определить длину слова, а просто вернёт \u003Cstrong\u003Enull\u003C\u002Fstrong\u003E.\u003C\u002Fp\u003E\u003Cp\u003EЕсли вы хотите вызвать функцию или каким-то другим способом обработать значение, отличное от \u003Cstrong\u003Enull\u003C\u002Fstrong\u003E, то совместно с оператором безопасного вызова используйте функцию \u003Cstrong\u003Elet\u003C\u002Fstrong\u003E. Всё, что будет указано в функции \u003Cstrong\u003Elet\u003C\u002Fstrong\u003E выполнится только в том случае, если значение переменной отлично от \u003Cstrong\u003Enull\u003C\u002Fstrong\u003E.\u003C\u002Fp\u003E\u003Cpre\u003E\u003Ccode class=\"kotlin\"\u003ElanguageName?.let { println(it) }\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Ch4\u003E3. Оператор \"!!\"\u003C\u002Fh4\u003E\u003Cp\u003EДва восклицательных знака, стоящих после \u003Cstrong\u003Enullable\u003C\u002Fstrong\u003E-значения, преобразуют его к типу без поддержки \u003Cstrong\u003Enull\u003C\u002Fstrong\u003E. При этом перед преобразованием никак не проверяется, что значение действительно не содержит \u003Cstrong\u003Enull\u003C\u002Fstrong\u003E. Поэтому, если в процессе выполнения программы окажется, что значение, которое пытается преобразовать оператор \u003Ccode\u003E!!\u003C\u002Fcode\u003E, все-таки \u003Cstrong\u003Enull\u003C\u002Fstrong\u003E, то останется только один выход — выбросить исключение \u003Cstrong\u003ENullPointerException\u003C\u002Fstrong\u003E. Если оно не обрабатывается кодом, программа аварийно завершится. Несмотря на удобство этого оператора, его следует использовать только там, где вы уверены, что \u003Cstrong\u003Enull\u003C\u002Fstrong\u003E быть не может.\u003C\u002Fp\u003E\u003Cp\u003EДанный оператор понравится любителям \u003Cstrong\u003ENullPointerException\u003C\u002Fstrong\u003E. Он как бы говорит компилятору, что если значение переменной — \u003Cstrong\u003Enull\u003C\u002Fstrong\u003E, то \u003Cstrong\u003EТРЕБУЮ\u003C\u002Fstrong\u003E выбросить \u003Cstrong\u003ENullPointerException\u003C\u002Fstrong\u003E.\u003C\u002Fp\u003E\u003Cpre\u003E\u003Ccode class=\"kotlin\"\u003Eval languageName: String? = null\nval size = languageName!!.length\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EИспользование данного оператора \u003Cstrong\u003Eкрайне не рекомендуется\u003C\u002Fstrong\u003E, потому что (очевидно) это один из немногих способов словить \u003Cstrong\u003ENPE\u003C\u002Fstrong\u003E. При его использовании вы должны быть уверены, что значение переменной ни при каких обстоятельствах не может быть \u003Cstrong\u003Enull\u003C\u002Fstrong\u003E. В противном случае лучше использовать оператор безопасного вызова.\u003C\u002Fp\u003E\u003Ch4\u003E4. Элвис оператор или оператор объединения по null \"?:\"\u003C\u002Fh4\u003E\u003Cp\u003EОператор элвис подобен проверке на \u003Cstrong\u003Enull\u003C\u002Fstrong\u003E в варианте \u003Cstrong\u003Eif-else\u003C\u002Fstrong\u003E. Элвис используется для замены \u003Cstrong\u003Enull\u003C\u002Fstrong\u003E каким-либо значением, принадлежащим обычно зауженному типу. В результате выражение с элвисом \u003Cstrong\u003Eпозволяет не увеличивать в программе количество nullable-переменных\u003C\u002Fstrong\u003E.\u003C\u002Fp\u003E\u003Cp\u003EОператор указывается между двумя значениями. Если значение слева от оператора равно \u003Cstrong\u003Enull\u003C\u002Fstrong\u003E, то применяется значение справа.\u003C\u002Fp\u003E\u003Cpre\u003E\u003Ccode class=\"kotlin\"\u003Eval size: Int = languageName.length ?: 0\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EЕсли значение \u003Ccode\u003ElanguageName\u003C\u002Fcode\u003E не равно \u003Cstrong\u003Enull\u003C\u002Fstrong\u003E, его длина будет присвоена переменной \u003Ccode\u003Esize\u003C\u002Fcode\u003E.\u003C\u002Fp\u003E\u003Cp\u003EЕсли \u003Ccode\u003ElanguageName\u003C\u002Fcode\u003E равно \u003Cstrong\u003Enull\u003C\u002Fstrong\u003E, тогда будет присвоено значение \u003Cstrong\u003E0\u003C\u002Fstrong\u003E.\u003C\u002Fp\u003E\u003Cp\u003EНо в любом случае переменной \u003Ccode\u003Esize\u003C\u002Fcode\u003E будет присвоено значение типа \u003Cstrong\u003EInt\u003C\u002Fstrong\u003E, а не \u003Cstrong\u003EInt?\u003C\u002Fstrong\u003E, то есть \u003Cstrong\u003Enon-null\u003C\u002Fstrong\u003E тип.\u003C\u002Fp\u003E\u003Cp\u003EИспользование данного оператора с функцией \u003Cstrong\u003Elet\u003C\u002Fstrong\u003E может полностью заменить проверку с помощью оператора \u003Cstrong\u003Eif-else\u003C\u002Fstrong\u003E.\u003C\u002Fp\u003E\u003Cpre\u003E\u003Ccode class=\"kotlin\"\u003E\u002F\u002F с использованием if-else\nif(languageName != null) {\n    print(\"Name is : $languageName\")\n} else {\n    print(\"Please enter a valid name\")\n}\n\n\u002F\u002F Элвис оператор и функция let\nlanguageName?.let {\n  print(\"Name is : $languageName\")\n} ?: print(\"Please enter a valid name\")\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003E\u003Cstrong\u003EПодробнее:\u003C\u002Fstrong\u003E \u003Ca href=\"https:\u002F\u002Fbimlibik.github.io\u002Fposts\u002Fkotlin-null-safety\u002F\" rel=\"noopener noreferrer nofollow\"\u003Ebimlibik.github.io\u003C\u002Fa\u003E, \u003Ca href=\"https:\u002F\u002Fkotlinlang.ru\u002Fdocs\u002Freference\u002Fnull-safety.html\" rel=\"noopener noreferrer nofollow\"\u003Ekotlinlang.ru\u003C\u002Fa\u003E, \u003Ca href=\"https:\u002F\u002Fyounglinux.info\u002Fkotlin\u002Fnull-operators\" rel=\"noopener noreferrer nofollow\"\u003Eyounglinux.info\u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003Ca class=\"anchor\" name=\"%D0%9E%D1%82%20%D0%BA%D0%B0%D0%BA%D0%BE%D0%B3%D0%BE%20%D0%BA%D0%BB%D0%B0%D1%81%D1%81%D0%B0%20%D1%83%D0%BD%D0%B0%D1%81%D0%BB%D0%B5%D0%B4%D0%BE%D0%B2%D0%B0%D0%BD%D1%8B%20%D0%B2%D1%81%D0%B5%20%D0%BE%D1%81%D1%82%D0%B0%D0%BB%D1%8C%D0%BD%D1%8B%D0%B5%20%D0%BA%D0%BB%D0%B0%D1%81%D1%81%D1%8B%20%D0%B2%20Kotlin?\" id=\"От какого класса унаследованы все остальные классы в Kotlin?\"\u003E\u003C\u002Fa\u003E\u003Cp\u003E\u003Ca href=\"#%D0%A1%D0%BF%D0%B8%D1%81%D0%BE%D0%BA%20%D1%82%D0%B5%D0%BC%20%D0%B8%20%D0%B2%D0%BE%D0%BF%D1%80%D0%BE%D1%81%D0%BE%D0%B2\" rel=\"noopener noreferrer nofollow\"\u003E—————— ↑↑↑ к списку вопросов ↑↑↑ ——————\u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003Ch2\u003EОт какого класса унаследованы все остальные классы в Kotlin?\u003C\u002Fh2\u003E\u003Cp\u003EКласс \u003Ccode\u003EAny\u003C\u002Fcode\u003E находится на вершине иерархии — все классы в Kotlin являются наследниками \u003Ccode\u003EAny\u003C\u002Fcode\u003E. Это стандартный родительский класс для всех классов, которые явно не унаследованы от другого класса. Именно в нем определены \u003Ccode\u003Eequals\u003C\u002Fcode\u003E, \u003Ccode\u003EhashCode\u003C\u002Fcode\u003E и \u003Ccode\u003EtoString\u003C\u002Fcode\u003E. Класс \u003Ccode\u003EAny\u003C\u002Fcode\u003E по назначению похож на \u003Ccode\u003EObject\u003C\u002Fcode\u003E в Java.\u003C\u002Fp\u003E\u003Cpre\u003E\u003Ccode class=\"kotlin\"\u003Epublic open class Any {\n   public open operator fun equals(other: Any?): Boolean\n   public open fun hashCode(): Int\n   public open fun toString(): String\n}  \n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003E\u003Cstrong\u003EПодробнее:\u003C\u002Fstrong\u003E \u003Ca href=\"https:\u002F\u002Fgb.ru\u002Fposts\u002Frazbiraemsya-v-tipah-kotlin-unit-nothing-any-i-null\" rel=\"noopener noreferrer nofollow\"\u003Egb.ru\u003C\u002Fa\u003E, \u003Ca href=\"https:\u002F\u002Fkotlins.org\u002Fany-unit-and-nothing-types\" rel=\"noopener noreferrer nofollow\"\u003Ekotlins.org\u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003Ca class=\"anchor\" name=\"%D0%A7%D0%B5%D0%BC%20Any%20%D0%B2%20Kotlin%20%D0%BE%D1%82%D0%BB%D0%B8%D1%87%D0%B0%D0%B5%D1%82%D1%81%D1%8F%20%D0%BE%D1%82%20Object%20%D0%B2%20Java?\" id=\"Чем Any в Kotlin отличается от Object в Java?\"\u003E\u003C\u002Fa\u003E\u003Cp\u003E\u003Ca href=\"#%D0%A1%D0%BF%D0%B8%D1%81%D0%BE%D0%BA%20%D1%82%D0%B5%D0%BC%20%D0%B8%20%D0%B2%D0%BE%D0%BF%D1%80%D0%BE%D1%81%D0%BE%D0%B2\" rel=\"noopener noreferrer nofollow\"\u003E—————— ↑↑↑ к списку вопросов ↑↑↑ ——————\u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003Ch2\u003EЧем Any в Kotlin отличается от Object в Java?\u003C\u002Fh2\u003E\u003Cp\u003E\u003Ccode\u003EAny\u003C\u002Fcode\u003E не является полным аналогом \u003Ccode\u003Ejava.lang.Object\u003C\u002Fcode\u003E.\u003C\u002Fp\u003E\u003Cp\u003EВ \u003Ccode\u003EObject\u003C\u002Fcode\u003E \u003Cstrong\u003E11 методов\u003C\u002Fstrong\u003E в классе, в \u003Ccode\u003EAny\u003C\u002Fcode\u003E только \u003Cstrong\u003E3 метода\u003C\u002Fstrong\u003E: \u003Ccode\u003Eequals()\u003C\u002Fcode\u003E, \u003Ccode\u003EhashCode()\u003C\u002Fcode\u003E и \u003Ccode\u003EtoString()\u003C\u002Fcode\u003E. При импорте типов Java в Kotlin все ссылки типа \u003Ccode\u003Ejava.lang.Object\u003C\u002Fcode\u003E преобразуются в \u003Ccode\u003EAny\u003C\u002Fcode\u003E. Поскольку \u003Ccode\u003EAny\u003C\u002Fcode\u003E не зависит от платформы, он объявляет только \u003Ccode\u003EtoString()\u003C\u002Fcode\u003E, \u003Ccode\u003EhashCode()\u003C\u002Fcode\u003E и \u003Ccode\u003Eequals()\u003C\u002Fcode\u003E в качестве своих членов, поэтому, чтобы сделать другие члены \u003Ccode\u003Ejava.lang.Object\u003C\u002Fcode\u003E доступными, Kotlin использует \u003Cstrong\u003Eфункции расширения\u003C\u002Fstrong\u003E.\u003C\u002Fp\u003E\u003Cp\u003EНесмотря на то, что классы \u003Ccode\u003EObject\u003C\u002Fcode\u003E и \u003Ccode\u003EAny\u003C\u002Fcode\u003E имеют сходства (корневые классы иерархии классов), они также имеют и отличия, связанные с языковыми особенностями Kotlin и Java:\u003C\u002Fp\u003E\u003Col\u003E\u003Cli\u003E\u003Cp\u003EКласс \u003Ccode\u003EAny\u003C\u002Fcode\u003E в Kotlin является не только базовым классом для пользовательских классов, но также и \u003Cstrong\u003Eсупертипом для всех не-nullable типов данных, включая примитивные\u003C\u002Fstrong\u003E. В то время как в Java, класс \u003Ccode\u003EObject\u003C\u002Fcode\u003E является базовым классом \u003Cstrong\u003Eтолько для пользовательских классов\u003C\u002Fstrong\u003E.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003EКласс \u003Ccode\u003EAny\u003C\u002Fcode\u003E в Kotlin также имеет \u003Cstrong\u003Enullable\u003C\u002Fstrong\u003E версию \u003Ccode\u003EAny?\u003C\u002Fcode\u003E, которая является супертипом для всех \u003Cstrong\u003Enullable\u003C\u002Fstrong\u003E типов данных в Kotlin. В то время как в Java, класс \u003Ccode\u003EObject\u003C\u002Fcode\u003E \u003Cstrong\u003Eне имеет nullable версии\u003C\u002Fstrong\u003E.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003C\u002Fol\u003E\u003Ca class=\"anchor\" name=\"%D0%9A%D0%B0%D0%BA%D0%BE%D0%B9%20%D1%82%D0%B8%D0%BF%20%D0%BD%D0%B0%D1%85%D0%BE%D0%B4%D0%B8%D1%82%D1%81%D1%8F%20%D0%BD%D0%B0%20%D0%B2%D0%B5%D1%80%D1%88%D0%B8%D0%BD%D0%B5%20%D0%B8%D0%B5%D1%80%D0%B0%D1%80%D1%85%D0%B8%D0%B8%20%D1%82%D0%B8%D0%BF%D0%BE%D0%B2%20%D0%B2%20Kotlin?\" id=\"Какой тип находится на вершине иерархии типов в Kotlin?\"\u003E\u003C\u002Fa\u003E\u003Cp\u003E\u003Ca href=\"#%D0%A1%D0%BF%D0%B8%D1%81%D0%BE%D0%BA%20%D1%82%D0%B5%D0%BC%20%D0%B8%20%D0%B2%D0%BE%D0%BF%D1%80%D0%BE%D1%81%D0%BE%D0%B2\" rel=\"noopener noreferrer nofollow\"\u003E—————— ↑↑↑ к списку вопросов ↑↑↑ ——————\u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003Ch2\u003EКакой тип находится на вершине иерархии типов в Kotlin?\u003C\u002Fh2\u003E\u003Cp\u003EАналогично \u003Ccode\u003EObject\u003C\u002Fcode\u003E в Java, к чему можно привести любой тип в Kotlin? \u003Cbr\u002F\u003EПравильным ответом будет \u003Ccode\u003EAny?\u003C\u002Fcode\u003E.\u003C\u002Fp\u003E\u003Cp\u003EСам по себе класс \u003Ccode\u003EAny\u003C\u002Fcode\u003E это почти аналог \u003Ccode\u003EObject\u003C\u002Fcode\u003E, однако, благодаря поддержке \u003Cstrong\u003Enullable\u003C\u002Fstrong\u003E и \u003Cstrong\u003Eне-nullable\u003C\u002Fstrong\u003E типов в Kotlin мы получили \u003Ccode\u003EAny?\u003C\u002Fcode\u003E. Фактически, \u003Ccode\u003EAny?\u003C\u002Fcode\u003E соответствует \u003Cstrong\u003Eлюбому типу и \u003C\u002Fstrong\u003E\u003Ccode\u003Enull\u003C\u002Fcode\u003E, а \u003Ccode\u003EAny\u003C\u002Fcode\u003E \u003Cstrong\u003Eтолько любому типу\u003C\u002Fstrong\u003E.\u003C\u002Fp\u003E\u003Cp\u003EЕсли по порядку:\u003C\u002Fp\u003E\u003Col\u003E\u003Cli\u003E\u003Cp\u003E\u003Ccode\u003EAny\u003C\u002Fcode\u003E является корнем иерархии \u003Cstrong\u003Eне-nullable\u003C\u002Fstrong\u003E типов.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003E\u003Ccode\u003EAny?\u003C\u002Fcode\u003E является корнем иерархии \u003Cstrong\u003Enullable\u003C\u002Fstrong\u003E типов.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003EТак как \u003Ccode\u003EAny?\u003C\u002Fcode\u003E является супертипом \u003Ccode\u003EAny\u003C\u002Fcode\u003E, то \u003Ccode\u003EAny?\u003C\u002Fcode\u003E \u003Cstrong\u003Eнаходится в самом верху иерархии типов в Kotlin\u003C\u002Fstrong\u003E.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003C\u002Fol\u003E\u003Cp\u003EКартинка для понимания:\u003C\u002Fp\u003E\u003Cfigure class=\"full-width \"\u003E\u003Cimg src=\"https:\u002F\u002Fhabrastorage.org\u002Fr\u002Fw1560\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F78c\u002Fdde\u002Fa3c\u002F78cddea3ca15b60997861e9e2332906e.png\" width=\"2310\" height=\"1146\" data-src=\"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F78c\u002Fdde\u002Fa3c\u002F78cddea3ca15b60997861e9e2332906e.png\"\u002F\u003E\u003C\u002Ffigure\u003E\u003Ca class=\"anchor\" name=\"%D0%9A%D1%80%D0%B0%D1%82%D0%BA%D0%BE%20%D0%BE%20Unit\" id=\"Кратко о Unit\"\u003E\u003C\u002Fa\u003E\u003Cp\u003E\u003Ca href=\"#%D0%A1%D0%BF%D0%B8%D1%81%D0%BE%D0%BA%20%D1%82%D0%B5%D0%BC%20%D0%B8%20%D0%B2%D0%BE%D0%BF%D1%80%D0%BE%D1%81%D0%BE%D0%B2\" rel=\"noopener noreferrer nofollow\"\u003E—————— ↑↑↑ к списку вопросов ↑↑↑ ——————\u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003Ch2\u003EКратко о Unit\u003C\u002Fh2\u003E\u003Cp\u003EТип \u003Ccode\u003EUnit\u003C\u002Fcode\u003E в Kotlin выполняет ту же функцию, что и \u003Ccode\u003Evoid\u003C\u002Fcode\u003E в Java.\u003C\u002Fp\u003E\u003Cp\u003EВозвращаемый тип можно не указывать, если функция ничего не возвращает. По умолчанию там будет \u003Ccode\u003EUnit\u003C\u002Fcode\u003E:\u003C\u002Fp\u003E\u003Cpre\u003E\u003Ccode class=\"kotlin\"\u003Efun knockKnock() {\n   println(\"Who’s there?\")\n}\n\n\u002F\u002F то же самое, но с указанным типом Unit\nfun knockKnock(): Unit = println(\"Who’s there?\")\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003E\u003Cstrong\u003EПодробнее:\u003C\u002Fstrong\u003E \u003Ca href=\"https:\u002F\u002Fgb.ru\u002Fposts\u002Frazbiraemsya-v-tipah-kotlin-unit-nothing-any-i-null\" rel=\"noopener noreferrer nofollow\"\u003Egb.ru\u003C\u002Fa\u003E, \u003Ca href=\"https:\u002F\u002Fkotlins.org\u002Fany-unit-and-nothing-types\" rel=\"noopener noreferrer nofollow\"\u003Ekotlins.org\u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003Ca class=\"anchor\" name=\"%D0%A1%D0%BA%D0%BE%D0%BB%D1%8C%D0%BA%D0%BE%20%D1%81%D1%83%D1%89%D0%B5%D1%81%D1%82%D0%B2%D1%83%D0%B5%D1%82%20instance%20Unit%20(1)?\" id=\"Сколько существует instance Unit (1)?\"\u003E\u003C\u002Fa\u003E\u003Cp\u003E\u003Ca href=\"#%D0%A1%D0%BF%D0%B8%D1%81%D0%BE%D0%BA%20%D1%82%D0%B5%D0%BC%20%D0%B8%20%D0%B2%D0%BE%D0%BF%D1%80%D0%BE%D1%81%D0%BE%D0%B2\" rel=\"noopener noreferrer nofollow\"\u003E—————— ↑↑↑ к списку вопросов ↑↑↑ ——————\u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003Ch2\u003EСколько существует instance Unit (1)?\u003C\u002Fh2\u003E\u003Cp\u003EВ стандартной библиотеке Kotlin \u003Ccode\u003EUnit\u003C\u002Fcode\u003E определён как объект, наследуемый от \u003Ccode\u003EAny\u003C\u002Fcode\u003E и содержащий единственный метод, переопределяющий \u003Ccode\u003EtoString()\u003C\u002Fcode\u003E:\u003C\u002Fp\u003E\u003Cpre\u003E\u003Ccode class=\"kotlin\"\u003Epublic object Unit {\n   override fun toString() = \"kotlin.Unit\"\n}\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003E\u003Ccode\u003EUnit\u003C\u002Fcode\u003E \u003Cstrong\u003Eявляется синглтоном\u003C\u002Fstrong\u003E (ключевое слово \u003Ccode\u003Eobject\u003C\u002Fcode\u003E). \u003Ccode\u003EUnit\u003C\u002Fcode\u003E ничего не возвращает, а метод \u003Ccode\u003EtoString\u003C\u002Fcode\u003E всегда будет возвращать \u003Ccode\u003E“kotlin.Unit”\u003C\u002Fcode\u003E. При компиляции в java-код \u003Ccode\u003EUnit\u003C\u002Fcode\u003E всегда будет превращаться в \u003Ccode\u003Evoid\u003C\u002Fcode\u003E.\u003C\u002Fp\u003E\u003Ca class=\"anchor\" name=\"%D0%9A%D1%80%D0%B0%D1%82%D0%BA%D0%BE%20%D0%BE%20Nothing\" id=\"Кратко о Nothing\"\u003E\u003C\u002Fa\u003E\u003Cp\u003E\u003Ca href=\"#%D0%A1%D0%BF%D0%B8%D1%81%D0%BE%D0%BA%20%D1%82%D0%B5%D0%BC%20%D0%B8%20%D0%B2%D0%BE%D0%BF%D1%80%D0%BE%D1%81%D0%BE%D0%B2\" rel=\"noopener noreferrer nofollow\"\u003E—————— ↑↑↑ к списку вопросов ↑↑↑ ——————\u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003Ch2\u003EКратко о Nothing\u003C\u002Fh2\u003E\u003Cp\u003E\u003Ccode\u003ENothing\u003C\u002Fcode\u003E является типом, который полезен при объявлении функции, которая \u003Cstrong\u003Eничего не возвращает и не завершается\u003C\u002Fstrong\u003E.\u003C\u002Fp\u003E\u003Cp\u003EПримеры:\u003C\u002Fp\u003E\u003Cul\u003E\u003Cli\u003E\u003Cp\u003Eфункция, которая выбрасывает \u003Ccode\u003Eexception\u003C\u002Fcode\u003E или в которой запущен бесконечный цикл;\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003Eфункция \u003Ccode\u003ETODO()\u003C\u002Fcode\u003E — \u003Ccode\u003Epublic inline fun TODO(): Nothing = throw NotImplementedError()\u003C\u002Fcode\u003E;\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003Eв тестах есть функция с именем \u003Ccode\u003Efail\u003C\u002Fcode\u003E, которая выдает исключение с определенным сообщением:\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003C\u002Ful\u003E\u003Cpre\u003E\u003Ccode class=\"kotlin\"\u003Efun fail(message: String): Nothing {\n    throw IllegalStateException(message)\n}\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003E\u003Cstrong\u003EПодробнее:\u003C\u002Fstrong\u003E \u003Ca href=\"https:\u002F\u002Fgb.ru\u002Fposts\u002Frazbiraemsya-v-tipah-kotlin-unit-nothing-any-i-null\" rel=\"noopener noreferrer nofollow\"\u003Egb.ru\u003C\u002Fa\u003E, \u003Ca href=\"https:\u002F\u002Fkotlins.org\u002Fany-unit-and-nothing-types\" rel=\"noopener noreferrer nofollow\"\u003Ekotlins.org\u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003Ca class=\"anchor\" name=\"%D0%9D%D0%B0%D0%B7%D0%BE%D0%B2%D0%B8%D1%82%D0%B5%20%D0%BF%D0%BE%D0%B4%D1%82%D0%B8%D0%BF%20%D0%B2%D1%81%D0%B5%D1%85%20%D1%82%D0%B8%D0%BF%D0%BE%D0%B2%20%D0%B2%20Kotlin\" id=\"Назовите подтип всех типов в Kotlin\"\u003E\u003C\u002Fa\u003E\u003Cp\u003E\u003Ca href=\"#%D0%A1%D0%BF%D0%B8%D1%81%D0%BE%D0%BA%20%D1%82%D0%B5%D0%BC%20%D0%B8%20%D0%B2%D0%BE%D0%BF%D1%80%D0%BE%D1%81%D0%BE%D0%B2\" rel=\"noopener noreferrer nofollow\"\u003E—————— ↑↑↑ к списку вопросов ↑↑↑ ——————\u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003Ch2\u003EНазовите подтип всех типов в Kotlin\u003C\u002Fh2\u003E\u003Cp\u003E\u003Ccode\u003ENothing\u003C\u002Fcode\u003E в Kotlin — это т.н. \u003Cstrong\u003Ebottom type\u003C\u002Fstrong\u003E, то есть он является подтипом любого другого типа. Наличие \u003Ccode\u003ENothing\u003C\u002Fcode\u003E в системе типов позволяет типизировано выражать то, что без него принципиально невозможно.\u003C\u002Fp\u003E\u003Cp\u003E\u003Cstrong\u003EBottom type\u003C\u002Fstrong\u003E — это тип, который не имеет значений и предназначен для обозначения невыполнимых ситуаций в программе.\u003C\u002Fp\u003E\u003Ca class=\"anchor\" name=\"%D0%A1%D0%BA%D0%BE%D0%BB%D1%8C%D0%BA%D0%BE%20%D1%81%D1%83%D1%89%D0%B5%D1%81%D1%82%D0%B2%D1%83%D0%B5%D1%82%20instance%20Nothing%20(0)?\" id=\"Сколько существует instance Nothing (0)?\"\u003E\u003C\u002Fa\u003E\u003Cp\u003E\u003Ca href=\"#%D0%A1%D0%BF%D0%B8%D1%81%D0%BE%D0%BA%20%D1%82%D0%B5%D0%BC%20%D0%B8%20%D0%B2%D0%BE%D0%BF%D1%80%D0%BE%D1%81%D0%BE%D0%B2\" rel=\"noopener noreferrer nofollow\"\u003E—————— ↑↑↑ к списку вопросов ↑↑↑ ——————\u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003Ch2\u003EСколько существует instance Nothing (0)?\u003C\u002Fh2\u003E\u003Cp\u003E\u003Ccode\u003ENothing\u003C\u002Fcode\u003E — класс, который является наследником любого класса в Kotlin, даже класса с модификатором \u003Ccode\u003Efinal\u003C\u002Fcode\u003E. При этом \u003Ccode\u003ENothing\u003C\u002Fcode\u003E \u003Cstrong\u003Eнельзя создать\u003C\u002Fstrong\u003E — у него \u003Cstrong\u003Eприватный конструктор\u003C\u002Fstrong\u003E. В коде он объявлен так:\u003C\u002Fp\u003E\u003Cpre\u003E\u003Ccode class=\"kotlin\"\u003Epublic class Nothing private constructor()\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Ca class=\"anchor\" name=\"%D0%95%D1%81%D1%82%D1%8C%20%D0%BB%D0%B8%20%D0%B0%D0%BD%D0%B0%D0%BB%D0%BE%D0%B3%20Nothing%20%D0%B2%20Java%20(%D0%BD%D0%B5%D1%82)?\" id=\"Есть ли аналог Nothing в Java (нет)?\"\u003E\u003C\u002Fa\u003E\u003Cp\u003E\u003Ca href=\"#%D0%A1%D0%BF%D0%B8%D1%81%D0%BE%D0%BA%20%D1%82%D0%B5%D0%BC%20%D0%B8%20%D0%B2%D0%BE%D0%BF%D1%80%D0%BE%D1%81%D0%BE%D0%B2\" rel=\"noopener noreferrer nofollow\"\u003E—————— ↑↑↑ к списку вопросов ↑↑↑ ——————\u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003Ch2\u003EЕсть ли аналог Nothing в Java (нет)?\u003C\u002Fh2\u003E\u003Cp\u003EТип \u003Ccode\u003ENothing\u003C\u002Fcode\u003E является особенным, поскольку \u003Cstrong\u003Eв Java ему нет аналогов\u003C\u002Fstrong\u003E.\u003C\u002Fp\u003E\u003Cp\u003EДействительно, каждый ссылочный тип Java, включая \u003Ccode\u003Ejava.lang.Void\u003C\u002Fcode\u003E, принимает в качестве значения \u003Ccode\u003Enull\u003C\u002Fcode\u003E, а \u003Ccode\u003ENothing\u003C\u002Fcode\u003E не принимает даже этого. Таким образом, этот тип не может быть точно представлен в мире Java. Вот почему Kotlin генерирует необработанный тип, в котором используется аргумент типа \u003Ccode\u003ENothing\u003C\u002Fcode\u003E:\u003C\u002Fp\u003E\u003Cpre\u003E\u003Ccode class=\"kotlin\"\u003Efun emptyList(): List&lt;Nothing&gt; = listOf()\n\u002F\u002F is translated to\n\u002F\u002F List emptyList() { ... }\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003E\u003Ca href=\"#%D0%A1%D0%BF%D0%B8%D1%81%D0%BE%D0%BA%20%D1%82%D0%B5%D0%BC%20%D0%B8%20%D0%B2%D0%BE%D0%BF%D1%80%D0%BE%D1%81%D0%BE%D0%B2\" rel=\"noopener noreferrer nofollow\"\u003E—————— ↑↑↑ к списку вопросов ↑↑↑ ——————\u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003Ch3\u003EБОНУС:\u003C\u002Fh3\u003E\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fkotlinlang.ru\u002Fdocs\u002Fkeyword-reference.html\" rel=\"noopener noreferrer nofollow\"\u003E1. Ключевые слова и операторы Kotlin: kotlinlang.ru\u003C\u002Fa\u003E\u003Cbr\u002F\u003E\u003Ca href=\"https:\u002F\u002Fhr-vector.com\u002Fkotlin\" rel=\"noopener noreferrer nofollow\"\u003E2. Темы по Kotlin: hr-vector.com\u003C\u002Fa\u003E\u003Cbr\u002F\u003E\u003Ca href=\"https:\u002F\u002Fdevhints.io\u002Fkotlin\" rel=\"noopener noreferrer nofollow\"\u003E3. Шпаргалка по Kotlin: devhints.io\u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fhabr.com\u002Fru\u002Fpost\u002F721084\u002F\" rel=\"noopener noreferrer nofollow\"\u003EВопросы и ответы для собеседования по Kotlin. Часть 1\u003C\u002Fa\u003E — вы находитесь здесь\u003Cbr\u002F\u003E\u003Ca href=\"https:\u002F\u002Fhabr.com\u002Fru\u002Fpost\u002F722686\u002F\" rel=\"noopener noreferrer nofollow\"\u003EВопросы и ответы для собеседования по Kotlin. Часть 2\u003C\u002Fa\u003E \u003Cbr\u002F\u003E\u003Ca href=\"https:\u002F\u002Fhabr.com\u002Fru\u002Farticles\u002F728742\u002F\" rel=\"noopener noreferrer nofollow\"\u003EВопросы и ответы для собеседования по Kotlin. Часть 3\u003C\u002Fa\u003E \u003Cbr\u002F\u003E\u003Ca href=\"https:\u002F\u002Fhabr.com\u002Fru\u002Farticles\u002F736392\u002F\" rel=\"noopener noreferrer nofollow\"\u003EВопросы и ответы для собеседования по Kotlin. Часть 4\u003C\u002Fa\u003E \u003C\u002Fp\u003E\u003C\u002Fdiv\u003E","tags":[{"titleHtml":"kotlin"},{"titleHtml":"java"},{"titleHtml":"собеседование вопросы"},{"titleHtml":"подготовка к собеседованию"},{"titleHtml":"вопросы для собеседования"},{"titleHtml":"faq"},{"titleHtml":"собеседования в it"},{"titleHtml":"вопросы-ответы"},{"titleHtml":"котлин"},{"titleHtml":"jvm"}],"metadata":{"stylesUrls":[],"scriptUrls":[],"shareImageUrl":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fc73\u002F420\u002F1d9\u002Fc734201d91a3a6b141891f97efd6e3cb.png","shareImageWidth":1200,"shareImageHeight":630,"vkShareImageUrl":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fc73\u002F420\u002F1d9\u002Fc734201d91a3a6b141891f97efd6e3cb.png","schemaJsonLd":"{\"@context\":\"http:\\\u002F\\\u002Fschema.org\",\"@type\":\"Article\",\"mainEntityOfPage\":{\"@type\":\"WebPage\",\"@id\":\"https:\\\u002F\\\u002Fhabr.com\\\u002Fru\\\u002Farticles\\\u002F721084\\\u002F\"},\"headline\":\"Вопросы и ответы для собеседования по Kotlin. Часть 1\",\"datePublished\":\"2023-03-20T11:54:02+03:00\",\"dateModified\":\"2024-01-25T12:37:23+03:00\",\"author\":{\"@type\":\"Person\",\"name\":\"Дмитрий\"},\"publisher\":{\"@type\":\"Organization\",\"name\":\"Habr\",\"logo\":{\"@type\":\"ImageObject\",\"url\":\"https:\\\u002F\\\u002Fhabrastorage.org\\\u002Fwebt\\\u002Fa_\\\u002Flk\\\u002F9m\\\u002Fa_lk9mjkccjox-zccjrpfolmkmq.png\"}},\"description\":\"Вопросы и ответы для собеседования по Kotlin. Часть 1 &mdash; вы находитесь здесьВопросы и ответы для собеседования по Kotlin. Часть 2&nbsp;Вопросы и ответы для собеседован...\",\"url\":\"https:\\\u002F\\\u002Fhabr.com\\\u002Fru\\\u002Farticles\\\u002F721084\\\u002F#post-content-body\",\"about\":[\"h_programming\",\"h_java\",\"h_android_dev\",\"h_kotlin\",\"h_study\",\"f_develop\",\"f_management\"],\"image\":[\"https:\\\u002F\\\u002Fhabr.com\\\u002Fshare\\\u002Fpublication\\\u002F721084\\\u002F03b1c78eb0eab8ad091b1f21b7c203ac\\\u002F\",\"https:\\\u002F\\\u002Fhabrastorage.org\\\u002Fgetpro\\\u002Fhabr\\\u002Fupload_files\\\u002F949\\\u002Fbdc\\\u002F1e2\\\u002F949bdc1e2b5f2acbe17488bcafcfae9e.png\",\"https:\\\u002F\\\u002Fhabrastorage.org\\\u002Fgetpro\\\u002Fhabr\\\u002Fupload_files\\\u002F78c\\\u002Fdde\\\u002Fa3c\\\u002F78cddea3ca15b60997861e9e2332906e.png\"]}","metaDescription":"Вопросы и ответы для собеседования по Kotlin. Часть 1 — вы находитесь здесь Вопросы и ответы для собеседования по Kotlin. Часть 2 &nbsp; Вопросы и ответы для собеседования по Kotlin. Часть 3 Вопросы и...","mainImageUrl":null,"amp":true,"customTrackerLinks":[]},"polls":[],"commentsEnabled":{"status":true,"reason":null},"rulesRemindEnabled":false,"votesEnabled":true,"status":"published","plannedPublishTime":null,"checked":null,"hasPinnedComments":false,"format":"faq","banner":null,"multiwidget":null,"multiwidgetUuid":null,"readingTime":14,"complexity":"medium","isEditorial":false}},"articlesIds":{},"isLoading":false,"pagesCount":{},"route":{},"reasonsList":null,"postReasonsList":null,"view":"list","lastVisitedRoute":{},"ssrCommentsArticleIds":[""],"viewedPosts":[],"myFeedFilter":{"complexity":"all","score":"all","types":["articles","posts","news"]},"myFeedIsApplyFilters":false,"myFeedIsForce":false,"karma":{"userReasonsList":null}},"authorContribution":{"authors":{}},"betaTest":{"currentAnnouncement":null,"announcements":{},"announcementCards":null,"announcementComments":{},"announcementCommentThreads":{},"announcementCommentingStatuses":{},"archivedList":[]},"authorStatistics":{"articleRefs":{},"articleIds":{},"pagesCount":{},"route":{},"viewsCount":[],"maxStatsCount":{}},"career":{"seoLandings":[{"title":"Java разработчик","vacanciesCount":211,"itemUrl":"https:\u002F\u002Fcareer.habr.com\u002Fvacancies\u002Fjava_developer","itemHubs":["java","javame_dev","gradle"]},{"title":"Android разработчик ","vacanciesCount":10,"itemUrl":"https:\u002F\u002Fcareer.habr.com\u002Fvacancies\u002Fandroid_developer","itemHubs":["android_dev","mobile_dev","flutter"]}],"hubs":"programming,java,android_dev,kotlin,study"},"comments":{"articleComments":{},"articlePinnedComments":{},"searchCommentsResults":null,"pagesCount":null,"commentAccess":{},"scrollParents":{},"pageArticleComments":{"lastViewedComment":0,"postId":null,"lastCommentTimestamp":"","moderated":[],"moderatedIds":[],"commentRoute":"","idempotenceKey":""}},"companies":{"companyRefs":{},"companyIds":{},"companyTopIds":{},"pagesCount":{},"companyProfiles":{},"companiesCategories":[],"companiesCategoriesTotalCount":0,"companiesWidgets":{},"companiesWorkers":{},"companiesFans":{},"multiwidgets":{},"route":{},"isLoading":false,"companyWorkersLoading":false,"companyFansLoading":false,"multiwidgetLoading":false,"vacancies":{},"companiesGalleries":{},"companiesBanners":{},"companiesLandingVacancies":{},"companiesTechnologies":{},"workplaceInfo":null},"companyAdmin":{"companyInfo":null,"companyInfoLoading":false,"faqArticles":null,"brandingPreviewImageUrl":null,"jivoStatus":0,"adminNotifications":null,"availableInvitesCount":{}},"companyAdd":{"currentStep":"","stepsData":{},"uncompletedSteps":[],"isStepLoading":true,"isStepCommitting":false,"isInitialized":false,"agreementContent":""},"companiesContribution":{"hubs":{},"flows":{},"companyRefs":{}},"companyHubsContribution":{"contributionRefs":{"hubRefs":{},"hubIds":{}}},"conversation":{"messages":[],"respondent":null,"isLoadMore":false},"conversations":{"conversations":[],"pagesCount":0},"docs":{"menu":{},"articles":{},"mainMenu":[],"loading":{"main":false,"dropdown":false,"article":false}},"feature":{"isProbablyVisible":true},"fixedBanner":{"isArticleStickyPanelVisible":false,"isArticleStickyPanelAtTheBottom":false,"isFixedBannerVisible":false,"isStickyPanelIconsHidden":false},"flows":{"flows":[{"id":"1","alias":"develop","title":"Разработка","titleHtml":"Разработка","route":{"name":"FLOW_PAGE","params":{"flowName":"develop"}}},{"id":"6","alias":"admin","title":"Администрирование","titleHtml":"Администрирование","route":{"name":"FLOW_PAGE","params":{"flowName":"admin"}}},{"id":"2","alias":"design","title":"Дизайн","titleHtml":"Дизайн","route":{"name":"FLOW_PAGE","params":{"flowName":"design"}}},{"id":"3","alias":"management","title":"Менеджмент","titleHtml":"Менеджмент","route":{"name":"FLOW_PAGE","params":{"flowName":"management"}}},{"id":"4","alias":"marketing","title":"Маркетинг","titleHtml":"Маркетинг","route":{"name":"FLOW_PAGE","params":{"flowName":"marketing"}}},{"id":"7","alias":"popsci","title":"Научпоп","titleHtml":"Научпоп","route":{"name":"FLOW_PAGE","params":{"flowName":"popsci"}}}],"updates":{}},"global":{"isPwa":false,"device":"mobile","isHabrCom":true,"requestId":"80be0ae8d892b73aad9ed31c730645c6"},"hubs":{"hubRefs":{},"hubIds":{},"pagesCount":{},"isLoading":false,"route":{}},"hubsBlock":{"hubRefs":{},"hubIds":{}},"i18n":{"fl":"ru","hl":"ru"},"info":{"welcomePage":{},"isLoading":true},"location":{"urlStruct":{"protocol":null,"slashes":null,"auth":null,"host":null,"port":null,"hostname":null,"hash":null,"query":{},"pathname":"\u002Fru\u002Farticles\u002F721084\u002F","path":"\u002Fru\u002Farticles\u002F721084\u002F","href":"\u002Fru\u002Farticles\u002F721084\u002F"}},"me":{"user":null,"uuid":null,"ppgDemanded":false,"karmaResetInfo":{"canReincarnate":null,"wasReincarnated":null,"currentScore":null},"notes":null,"userUpdates":{"feeds":{"newPostsCount":null,"newThreadsCount":null,"newNewsCount":null,"newCount":null},"conversationUnreadCount":0}},"mostReadingList":{"mostReadingListIds":[],"mostReadingListRefs":null,"promoPost":null},"onboarding":{"currentStep":null,"stepsData":{},"stepsErrors":{},"completedSteps":[],"isStepCommitting":false,"isCommitDisabled":true},"ppa":{"articles":{},"card":null,"transactions":null,"totalTransactions":null,"isAccessible":null},"projectsBlocks":{"activeBlocks":{"salary":"project-block-article"}},"promoData":{"isLoading":false,"hasLoaded":false,"featurer":null,"megaposts":null,"promoLinks":null,"promoPosts":null,"sticker":null},"publicationStatistics":{"statsInfo":{},"statsFunnels":{},"statsGraph":{},"defaultSuggest":{},"suggest":{},"timeTracker":{},"isTrackingActivity":false,"isUserActive":true,"otherPublicationStats":{}},"pullRefresh":{"shouldRefresh":false},"sandbox":{"articleIds":[],"articleRefs":{},"pagesCount":null,"route":{},"lastVisitedRoute":{},"isLoading":false},"search":{"searchQueryError":null},"settingsOther":{"inputs":{"uiLang":{"errors":[],"ref":null,"value":""},"articlesLangEnglish":{"errors":[],"ref":null,"value":false},"articlesLangRussian":{"errors":[],"ref":null,"value":false},"agreement":{"errors":[],"ref":null,"value":false},"email":{"errors":[],"ref":null,"value":true},"digest":{"errors":[],"ref":null,"value":true}}},"similarList":{"similarListIds":[],"similarListRefs":null},"ssr":{"error":null,"isDataLoaded":true,"isDataLoading":false,"isHydrationFailed":false,"isServer":false},"stories":{"stories":[{"id":"story-998","author":{"logo":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F91a\u002F166\u002F49f\u002F91a16649f9ef89302a5a56cfa22a451d.png","title":"Яндекс Практикум","link":"https:\u002F\u002Fu.habr.com\u002Fstories_up"},"title":"Как расти на работе?","lang":"ru","startTime":"2025-03-18T18:45:00+03:00","finishTime":"2025-03-31T19:00:00+03:00","slides":[{"id":"story-998_1","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fbf4\u002F911\u002F7e6\u002Fbf49117e637ff2099b3944f8803cd7a3.png","button":null},{"id":"story-998_2","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F3e3\u002Fc84\u002Fe83\u002F3e3c84e8330ea1ddf72e9d310457ed2f.png","button":{"title":"Расти в карьере","link":"https:\u002F\u002Fu.habr.com\u002Fstories_up","colorType":"light"}},{"id":"story-998_3","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F84b\u002F533\u002F3c3\u002F84b5333c3e77e8dac62a8b50d042acb9.png","button":{"title":"Расти в карьере","link":"https:\u002F\u002Fu.habr.com\u002Fstories_up","colorType":"light"}},{"id":"story-998_4","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F257\u002Feb0\u002F2be\u002F257eb02bea1777e13f3e647cae6e06cd.png","button":{"title":"Расти в карьере","link":"https:\u002F\u002Fu.habr.com\u002Fstories_up","colorType":"light"}},{"id":"story-998_5","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F858\u002F086\u002F0ed\u002F8580860ed3497c043c04f9a42054d74f.png","button":{"title":"Расти в карьере","link":"https:\u002F\u002Fu.habr.com\u002Fstories_up","colorType":"light"}},{"id":"story-998_6","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fcdf\u002F32f\u002F387\u002Fcdf32f38777f046c063b5182f4125e14.png","button":{"title":"Расти в карьере","link":"https:\u002F\u002Fu.habr.com\u002Fstories_up","colorType":"light"}},{"id":"story-998_7","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fd48\u002Ff2d\u002F0e2\u002Fd48f2d0e2ecd7d746d738191bb913d8f.png","button":{"title":"Расти в карьере","link":"https:\u002F\u002Fu.habr.com\u002Fstories_up","colorType":"light"}},{"id":"story-998_8","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fb38\u002Ffd7\u002Fee0\u002Fb38fd7ee04848bf3b058be7403438bd1.png","button":{"title":"Расти в карьере","link":"https:\u002F\u002Fu.habr.com\u002Fstories_up","colorType":"light"}},{"id":"story-998_9","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F79e\u002Feaa\u002F9d8\u002F79eeaa9d8af5a288ad42bd9d63b5793a.png","button":{"title":"Расти в карьере","link":"https:\u002F\u002Fu.habr.com\u002Fstories_up","colorType":"light"}},{"id":"story-998_10","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fcdc\u002F17e\u002F385\u002Fcdc17e38582dc67838b9abfb200d982e.png","button":{"title":"Расти в карьере","link":"https:\u002F\u002Fu.habr.com\u002Fstories_up","colorType":"light"}}]},{"id":"story-996","author":{"logo":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fe63\u002F36d\u002Fa24\u002Fe6336da24460ab6b9fbc347d03eb263a.png","title":"Хабр","link":null},"title":"Здоровье айтишника","lang":"ru","startTime":"2025-03-17T10:22:00+03:00","finishTime":"2025-04-13T10:22:00+03:00","slides":[{"id":"story-996_1","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fb7c\u002F6de\u002F8ea\u002Fb7c6de8ea6789dbc30f071716172b6dd.jpg","button":null},{"id":"story-996_2","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F2e7\u002F88a\u002F0fe\u002F2e788a0fe61729ca8b23eb59069c844f.jpg","button":{"title":"Личный опыт","link":"https:\u002F\u002Fu.habr.com\u002Fzd-1","colorType":"light"}},{"id":"story-996_3","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fb93\u002F6f4\u002F256\u002Fb936f425653b84fa60ab00d09f78c543.jpg","button":{"title":"Как это было","link":"https:\u002F\u002Fu.habr.com\u002Fzd-2","colorType":"light"}},{"id":"story-996_4","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fc10\u002Fd14\u002Ff5a\u002Fc10d14f5a4859fe10baecbcc2bcb8828.jpg","button":{"title":"Шея в фокусе","link":"https:\u002F\u002Fu.habr.com\u002Fzd-3","colorType":"dark"}},{"id":"story-996_5","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F535\u002Fe1b\u002F77a\u002F535e1b77a9eb896262ad73321f2ad99f.jpg","button":{"title":"Фотоинструкция","link":"https:\u002F\u002Fu.habr.com\u002Fzd-4","colorType":"light"}},{"id":"story-996_6","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F569\u002Fc39\u002F49f\u002F569c3949f5b330ea85d4a1864f481c3d.jpg","button":{"title":"Сидите (не)правильно","link":"https:\u002F\u002Fu.habr.com\u002Fzd-5","colorType":"dark"}},{"id":"story-996_7","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F1f2\u002F1de\u002Fdbf\u002F1f21dedbf2902bc4061a75b839b63595.jpg","button":{"title":"Журнал изменений","link":"https:\u002F\u002Fu.habr.com\u002Fzd-6","colorType":"dark"}},{"id":"story-996_8","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F95a\u002F164\u002F21b\u002F95a16421badc3a9f1135309ab0c42c41.jpg","button":{"title":"Альтернатива","link":"https:\u002F\u002Fu.habr.com\u002Fzd-7","colorType":"light"}},{"id":"story-996_9","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F624\u002F027\u002F54d\u002F62402754d311798af44bcfe7f9abfedc.jpg","button":{"title":"Хроника поисков","link":"https:\u002F\u002Fu.habr.com\u002Fzd-8","colorType":"dark"}}]},{"id":"story-992","author":{"logo":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F3fe\u002F2fc\u002Fb05\u002F3fe2fcb05df852d7e1e00d44e54e39ae.png","title":"Сезоны Хабра","link":"https:\u002F\u002Fu.habr.com\u002Ffnstories"},"title":"Угадайте будущее в новом сезоне","lang":"ru","startTime":"2025-03-12T19:15:00+03:00","finishTime":"2025-03-31T23:56:00+03:00","slides":[{"id":"story-992_1","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fc56\u002Faf5\u002Fc43\u002Fc56af5c4377f7f7b94f7b6ad20fc92c3.png","button":{"title":"А что за сезон?","link":"https:\u002F\u002Fu.habr.com\u002Ffnstories","colorType":"light"}},{"id":"story-992_2","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F8fa\u002Fde7\u002F65d\u002F8fade765d99207f31c597283ae6ce912.png","button":{"title":"Какие темы нужны","link":"https:\u002F\u002Fu.habr.com\u002Ffnstories","colorType":"dark"}},{"id":"story-992_3","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F23e\u002F7b9\u002Fb24\u002F23e7b9b24cb056d1a42e8d31ccea16ce.png","button":{"title":"Сезон будущего ИИ","link":"https:\u002F\u002Fu.habr.com\u002Ffnstories","colorType":"dark"}},{"id":"story-992_4","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F27b\u002Fbfc\u002Fa18\u002F27bbfca18e656ee0122b5cb8eb2cb502.png","button":{"title":"Все правила сезона","link":"https:\u002F\u002Fu.habr.com\u002Ffnstories","colorType":"dark"}},{"id":"story-992_5","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F1e0\u002F6c6\u002Ff33\u002F1e06c6f33e703bbd2b2ae3baee3376fd.png","button":{"title":"Как участвовать","link":"https:\u002F\u002Fu.habr.com\u002Ffnstories","colorType":"dark"}}]},{"id":"story-990","author":{"logo":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F282\u002Fe80\u002Fbf1\u002F282e80bf1b73484126ed53c6f3e42692.png","title":"Aeza","link":"https:\u002F\u002Fu.habr.com\u002FI72qi"},"title":"С праздником весны!","lang":"ru","startTime":"2025-03-09T10:15:00+03:00","finishTime":"2025-03-30T23:59:00+03:00","slides":[{"id":"story-990_1","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F064\u002F9dd\u002Ff59\u002F0649ddf5949cae6c9342fb62034a36ac.png","button":null},{"id":"story-990_2","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F05f\u002F96b\u002F25e\u002F05f96b25e910c32256ee0b1916f21380.png","button":{"title":"Семейная история","link":"https:\u002F\u002Fu.habr.com\u002Fey2bY","colorType":"light"}},{"id":"story-990_3","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fcd1\u002Ff5d\u002F921\u002Fcd1f5d921bb9489ac11727272660bdb6.png","button":{"title":"Движущиеся картинки","link":"https:\u002F\u002Fu.habr.com\u002FWLKXU","colorType":"light"}},{"id":"story-990_4","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fb55\u002Fd45\u002Fec5\u002Fb55d45ec50e53275c60d16ea886a0672.png","button":{"title":"Личный опыт","link":"https:\u002F\u002Fu.habr.com\u002FSxrki","colorType":"light"}},{"id":"story-990_5","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Ffa7\u002F1ce\u002Ffca\u002Ffa71cefca5ed0a3fe8b50bd703b3605f.png","button":{"title":"Алгоритм","link":"https:\u002F\u002Fu.habr.com\u002Ftbz2p","colorType":"light"}},{"id":"story-990_6","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F435\u002F89d\u002Ff90\u002F43589df9018846cc6a8eed986226b252.png","button":{"title":"Выбрать сценарий","link":"https:\u002F\u002Fu.habr.com\u002F0RCPk","colorType":"light"}},{"id":"story-990_7","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F514\u002F5f8\u002F619\u002F5145f86194ad48dad48a846b42af0f93.png","button":{"title":"Jiraзамещение","link":"https:\u002F\u002Fu.habr.com\u002FEwhYq","colorType":"light"}},{"id":"story-990_8","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F439\u002Fa83\u002Fae7\u002F439a83ae78f7ef711e3b9bbed1ec26c5.png","button":{"title":"8 вещей","link":"https:\u002F\u002Fu.habr.com\u002FVTv2r","colorType":"light"}},{"id":"story-990_9","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F02d\u002F783\u002F2f7\u002F02d7832f7b1c95d88bff9f34209e204a.png","button":{"title":"Интерфейсы","link":"https:\u002F\u002Fu.habr.com\u002FUFOMZ","colorType":"light"}},{"id":"story-990_10","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F0cb\u002Ff7f\u002F0d9\u002F0cbf7f0d905d486ce4ff82bc939b21d5.png","button":{"title":"Стикеры ваши","link":"https:\u002F\u002Fu.habr.com\u002FoA1K7","colorType":"light"}}]},{"id":"story-984","author":{"logo":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F648\u002F61b\u002F9ae\u002F64861b9aecb7c474cd94063f98045541.png","title":"Хабр","link":null},"title":"Всегда котов!","lang":"ru","startTime":"2025-03-01T00:01:09+03:00","finishTime":"2025-03-23T16:21:00+03:00","slides":[{"id":"story-984_1","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fc06\u002Fc21\u002F93f\u002Fc06c2193ff34362ac2af782cf2571f55.png","button":null},{"id":"story-984_2","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fb68\u002F15f\u002F763\u002Fb6815f7630b9c015b1e67efb5bdf12d4.jpg","button":{"title":"Сделать purrrr","link":"https:\u002F\u002Fu.habr.com\u002Fj4DN1","colorType":"light"}},{"id":"story-984_3","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F550\u002F76e\u002Fd7a\u002F55076ed7a0954e243f944fc2f330623a.png","button":{"title":"Тыгыдык","link":"https:\u002F\u002Fu.habr.com\u002Fya360_kotov","colorType":"dark"}},{"id":"story-984_4","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F2fb\u002F23b\u002F06c\u002F2fb23b06cf294c2050104b2aef589788.jpg","button":{"title":"Исследование","link":"https:\u002F\u002Fu.habr.com\u002FbO3r0","colorType":"light"}},{"id":"story-984_5","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Ff50\u002F50f\u002F0ae\u002Ff5050f0aeea1335c4f0544c1863f8342.jpg","button":{"title":"Детали проекта","link":"https:\u002F\u002Fu.habr.com\u002FQJmhe","colorType":"light"}},{"id":"story-984_6","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F825\u002F3dd\u002F5f5\u002F8253dd5f5c19dd061578f1d09310a45f.jpg","button":{"title":"Эксперименты","link":"https:\u002F\u002Fu.habr.com\u002FVaOdo","colorType":"light"}},{"id":"story-984_7","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F3fb\u002Fc92\u002F0f9\u002F3fbc920f9ea81eca2c1c027ff77fc659.jpg","button":{"title":"Это не мем","link":"https:\u002F\u002Fu.habr.com\u002F0Wb3p","colorType":"light"}},{"id":"story-984_8","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F2b4\u002F794\u002Fc33\u002F2b4794c33844e60aad9468018fd132cd.jpg","button":{"title":"В засаде","link":"https:\u002F\u002Fu.habr.com\u002FnasCD","colorType":"dark"}}]}]},"technotext":{"years":[],"technotextDocForNominees":null,"technotextDocForWinners":null,"technotextInfo":{},"technotextInfoLoading":false,"technotextWinners":{},"technotextWinnersLoading":false},"userHubsContribution":{"contributionRefs":{"hubRefs":{},"hubIds":{}}},"userInvites":{"availableInvites":0,"usedInvitesIds":[],"usedInvitesRefs":{},"usedInvitesPagesCount":0,"unusedInvitesIds":[],"unusedInvitesRefs":{},"unusedInvitesPagesCount":0},"userVotes":{"karmaVotesList":[],"karmaVotesPagesCount":null,"karmaVotesListLoading":false,"commentsVotesList":[],"commentsVotesPagesCount":null,"commentsVotesListLoading":false,"postsVotesList":[],"postsVotesPagesCount":null,"postsVotesListLoading":false,"userVotesList":[],"userVotesPagesCount":null,"userVotesListLoading":false},"users":{"authorRefs":{},"authorIds":{},"pagesCount":{},"authorProfiles":{"dmt_ovs":{"alias":"dmt_ovs","badgets":[{"title":"Захабренный","description":"Пользователь с кармой \u003E0","url":null,"isRemovable":false},{"title":"Бета-тестер","description":"Участвует в тестировании новой функциональности","url":"https:\u002F\u002Fhabr.com\u002Fbeta\u002Fwelcome\u002F","isRemovable":false}],"aboutHtml":"","contacts":[],"invitedBy":{"issuerLogin":null,"timeCreated":"2023-02-24T22:37:10+00:00"},"careerProfile":null,"companies":{"pagesCount":1,"companyIds":["citymobil","lightmap","microsoft"],"companyRefs":{"citymobil":{"id":"5858","alias":"citymobil","titleHtml":"Ситимобил","descriptionHtml":"Творим городскую мобильность","imageUrl":"\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fcompany\u002Fcd3\u002F99d\u002Fb96\u002Fcd399db968a2981be5357e8cc3488bf2.jpg","relatedData":null,"statistics":{"subscribersCount":45049,"rating":0,"invest":null},"commonHubs":[]},"lightmap":{"id":"7774","alias":"lightmap","titleHtml":"Lightmap","descriptionHtml":"Разработчик мобильных игр","imageUrl":"\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fcompany\u002Fb48\u002Ff8d\u002F0e1\u002Fb48f8d0e11c97dd1e1b3c097307e2011.png","relatedData":null,"statistics":{"subscribersCount":36662,"rating":0,"invest":null},"commonHubs":[]},"microsoft":{"id":"68","alias":"microsoft","titleHtml":"Microsoft","descriptionHtml":"Microsoft — мировой лидер в области ПО и ИТ-услуг","imageUrl":"\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fcompany\u002Fe98\u002F5cf\u002F6a0\u002Fe985cf6a01b15006350561f26c70a41f.png","relatedData":null,"statistics":{"subscribersCount":163238,"rating":0,"invest":null},"commonHubs":[]}}}}},"userHubs":{},"userInvitations":{},"authorFollowers":{},"authorFollowed":{},"userSpecialization":{},"karmaStats":[],"statistics":null,"isLoading":false,"authorFollowersLoading":false,"authorFollowedLoading":false,"userHubsLoading":false,"userInvitationsLoading":false,"route":{}},"viewport":{"prevScrollY":{},"scrollY":0,"width":0},"tracker":{"notificationsLoading":false,"notificationsList":[],"notificationsPageCount":0,"pendingMarkNotificationsRead":[],"publicationsLoading":true,"publicationsList":[],"publicationsPageCount":0,"pendingDeletePublications":false,"pendingMarkPublicationsRead":false},"events":{"eventRefs":{},"eventIds":[],"pagesCount":0,"categories":[],"cities":[],"actualEvents":[{"id":"588","titleHtml":"Конкурс «Снежный код» от Хекслета. Три гранта на бесплатное 10-месячное обучение","descriptionHtml":"\u003Cp\u003EУчаствуйте в конкурсе грантов от онлайн-школы программирования Хекслет. Три победителя пройдут 10-месячное обучение с наставником, освоив один из востребованных стеков: Java, Python, JavaScript, PHP или Node.js.\u003C\u002Fp\u003E\u003Cp\u003EЭто шанс без вложений освоить новый стек, систематизировать знания, восполнить пробелы и повысить свою ценность на рынке. Технологии развиваются быстро — обновляйте навыки, чтобы не отставать.\u003C\u002Fp\u003E\u003Cp\u003EПомимо грантов, можно выиграть доступ ко всем курсам Хекслета, полезные подписки, сертификаты и подарки от Хабра и партнеров.\u003C\u002Fp\u003E\u003Cp\u003EВ прошлом году три победителя успешно завершили программу и уже работают в IT.  Инвестируйте время в свое развитие — участвуйте! \u003C\u002Fp\u003E","imageUrl":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Ff79\u002F1fc\u002F79d\u002Ff791fc79d0d9fdda84397ed0c0717764.png","eventUrl":"https:\u002F\u002Fspecial.hexlet.io\u002Fgrant?utm_source=partners&utm_medium=referral&utm_campaign=grant&utm_content=link&utm_term=placement_habr","startDay":"2025-02-17","finishDay":"2025-03-24","isOnline":true,"geo":[],"isArchive":false,"categories":[{"id":"2","titleHtml":"Разработка"}],"tags":["гранты","конкурс","Хекслет","Java","Python","JavaScript","PHP","Node.js"],"metadata":null},{"id":"596","titleHtml":"Офлайн-конференция Хабр х K-team: как удерживать таланты в 2025 году","descriptionHtml":"\u003Cp\u003EМы — Хабр и K-Team — провели масштабное исследование, чтобы разобраться, что на самом деле мотивирует сотрудников оставаться в компании и быть лояльными\u003C\u002Fp\u003E\u003Cp\u003EВместе прошли по тернистому пути к лояльности, опросив&nbsp;3 000+ сотрудников, HR и руководителей из разных отраслей:&nbsp;от ретейла и логистики до IT и промышленности. Мы заботливо собрали самые разные мнения, чтобы понять, что по-настоящему важно для людей, которые остаются в компании надолго и любят свою работу. \u003C\u002Fp\u003E\u003Cp\u003EНаша цель проста — помочь бизнесу не сливать бюджет на бесполезные инициативы, а сотрудникам — получать то, что им действительно нужно. \u003C\u002Fp\u003E\u003Cp\u003EПриглашаем вас на офлайн-презентацию в Москве в марте. Обсудим результаты исследования, ключевые выводы и разберем, как строить эффективные Retention-стратегии в 2025 году.\u003C\u002Fp\u003E\u003Cp\u003EКоличество мест ограничено, заявки проходят модерацию. Если ваша заявка будет одобрена, вы получите письмо с подтверждением и адресом встречи.\u003C\u002Fp\u003E\u003Cp\u003EЕсли прийти не получится — после ивента отправим результаты исследования всем, кто зарегистрируется на лендинге.\u003C\u002Fp\u003E\u003Cp\u003EМентальное здоровье сотрудников — важная часть корпоративной культуры. В «Ясно для бизнеса» изучают, как забота о команде влияет на вовлечённость и эффективность. Они подготовили гайд о работе с молодыми специалистами, а для теста сервиса есть промокод CORP-HABRTLNT-DISC20 на скидку 20% для первых сессий: https:\u002F\u002Fu.habr.com\u002FPQP4b\u003C\u002Fp\u003E\u003Cp\u003E\u003C\u002Fp\u003E","imageUrl":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fb14\u002Fcd3\u002F772\u002Fb14cd3772bc67698c8fbfd846e23824a.png","eventUrl":"https:\u002F\u002Fevent.k-team.ru\u002Fexpectations_vs_reality?utm_source=habr","startDay":"2025-03-20","startTime":"10:00","finishDay":"2025-03-20","finishTime":"17:00","isOnline":false,"geo":["Москва"],"isArchive":false,"categories":[{"id":"16","titleHtml":"Другое"}],"tags":["HR","HRD","Удержание сотрудников"],"metadata":null},{"id":"604","titleHtml":"IX HappyWorkForum | Аутентичность и ментальное здоровье персонала","descriptionHtml":"\u003Cp\u003EБолее 250 HRD, первые лица компаний и владельцы крупного бизнеса обсудят лучшие практики благополучия и управление командой.\u003C\u002Fp\u003E\u003Cp\u003EПочему ментальное здоровье становится KPI бизнеса?\u003C\u002Fp\u003E\u003Cp\u003EГде граница ответственности за выгорание и стресс сотрудников?\u003C\u002Fp\u003E\u003Cp\u003EКак стать работодателем №1?\u003C\u002Fp\u003E\u003Cp\u003EКак управлять уставшими командами?\u003C\u002Fp\u003E\u003Cp\u003EКак справляться с выгоранием руководителей?\u003C\u002Fp\u003E\u003Cp\u003EЧем замотивировать сотрудников, когда деньги уже не работают?&nbsp;&nbsp;\u003C\u002Fp\u003E\u003Cp\u003EКак решать ценностные конфликты?\u003C\u002Fp\u003E\u003Cp\u003EУспешные корпоративные программы: что реально работает?&nbsp;&nbsp;\u003C\u002Fp\u003E\u003Cp\u003EВ программе презентация отчёта по развитию лидерства, батлы, практические кейсы и нетворкинг.\u003C\u002Fp\u003E\u003Cp\u003EСреди спикеров, представители компаний: Т-банк, Сравни.ру, Ростелеком, ТД Ренна, Спортмастер, ТрансТелеком, Оптиком, Норникель, Азбука вкуса, ЕВМ и другие.\u003C\u002Fp\u003E\u003Cp\u003EУчастие для HRD, руководителей и владельцев бизнеса без оплаты. Действует строгая модерация.\u003C\u002Fp\u003E\u003Cp\u003E\u003C\u002Fp\u003E","imageUrl":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F733\u002F9ef\u002F194\u002F7339ef1945f3ee6906daf89db79829d4.png","eventUrl":"https:\u002F\u002Fhappyforum.ru\u002F?utm_source=habr&utm_medium=email&utm_campaign=hwf","startDay":"2025-03-20","startTime":"10:00","finishDay":"2025-03-20","finishTime":"18:00","isOnline":true,"geo":["Москва"],"isArchive":false,"categories":[{"id":"16","titleHtml":"Другое"}],"tags":["HRD","HR"],"metadata":null},{"id":"612","titleHtml":"Вебинар «Мастерская бюджета: как управлять затратами на облачные ресурсы»","descriptionHtml":"\u003Cp\u003EРасскажем, как сэкономить на использовании облачных сервисов через возможности личного кабинета, сервисы с free tier и акции. Покажем, как оптимизировать потребление ресурсов и настроить лимиты бюджетов.\u003C\u002Fp\u003E\u003Cp\u003EПрограмма вебинара:\u003C\u002Fp\u003E\u003Cul\u003E\u003Cli\u003E\u003Cp\u003EАнализ текущей утилизации ресурсов: поиск ресурсов с низкой утилизацией и анализ возможной оптимизации.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003EКалькулятор затрат: демо-настройки параметров для точных прогнозов расходов.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003EАнализ детализированных данных: подходы к аналитике, включая метаданные.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003EОптимизация потребления: использование зарезервированных инстансов и спотовых экземпляров.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003EАнализ бесплатного потребления: как использовать free tier для сокращения затрат.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003EНастройка лимитов бюджетов: автоматизация и уведомления для контроля расходов.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003EИспользование Public API: тегирование ресурсов для лучшей аналитики затрат.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003C\u002Ful\u003E\u003Cp\u003EВебинар будет интересен менеджерам облачных ресурсов и IT-департаментов, DevOps-инженерам и сотрудникам, в чью зону ответственности входит контроль над облачными расходами.\u003C\u002Fp\u003E","imageUrl":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F38f\u002F10d\u002Ff4c\u002F38f10df4c7f9d7c5d4610fe426af0ab4.png","eventUrl":"https:\u002F\u002Fu.habr.com\u002Fcldr_cloudeventwebinar","startDay":"2025-03-20","startTime":"11:00","finishDay":"2025-03-20","isOnline":true,"geo":[],"isArchive":false,"categories":[{"id":"2","titleHtml":"Разработка"},{"id":"4","titleHtml":"Администрирование"}],"tags":["вебинар cloudru","вебинар для айтишников","вебинар про облака"],"metadata":null},{"id":"616","titleHtml":"Бизнес-конференция «Digital Brand Day 2025: Орбита 2025»","descriptionHtml":"\u003Cp\u003E21 марта конференция «Digital Brand Day 2025: Орбита 2025» в восьмой раз соберёт ведущих экспертов цифрового маркетинга и рекламы для обсуждения главных трендов digital-рынка и новых инструментов, которые определят стратегию брендов.\u003C\u002Fp\u003E\u003Cp\u003EВ основе темы Digital Brand Day 2025 лежит фундаментальный вопрос философии: что первично — материя или сознание? А что же первично в цифровой среде — технологии или идеи? Конференция станет эпицентром открытий, где мы вместе проложим путь сквозь бескрайние просторы рекламного космоса и наметим вектор развития цифрового маркетинга.\u003C\u002Fp\u003E\u003Cp\u003EГостей «Digital Brand Day: Орбита 2025» ждёт не только насыщенная программа, но и возможность завести полезные знакомства, увидеть, каким будет диджитал завтра.\u003C\u002Fp\u003E","imageUrl":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F523\u002F7fb\u002F13a\u002F5237fb13ad7fb6fb483c49691aaec836.png","eventUrl":"https:\u002F\u002Fu.habr.com\u002Fcldr_digitalbrandday","startDay":"2025-03-21","startTime":"10:00","isOnline":false,"geo":["Москва"],"isArchive":false,"categories":[{"id":"10","titleHtml":"Маркетинг"},{"id":"16","titleHtml":"Другое"}],"tags":["digital brand day","бизнес-конференция digital brand day","цифровой маркетинг","digital-рынок"],"metadata":null},{"id":"608","titleHtml":"Вебинар «Контент-маркетинг здорового человека: как привлечь внимание аудитории»","descriptionHtml":"\u003Cp\u003E27 марта в 16:00 МСК вместе с агентством Loft PR Studio проведем открытый вебинар о том, как писать про здоровье на Хабре. \u003C\u002Fp\u003E\u003Cp\u003EНа вебинаре разберем, что помогает удерживать внимание и превращает контент в работающий инструмент. Поделимся опытом брендов, которые ведут блоги и регулярно публикуют статьи.\u003C\u002Fp\u003E\u003Cp\u003EБудет интересно тем, кто продвигает товары и услуги для здоровья на аудиторию B2C и B2B. \u003C\u002Fp\u003E\u003Cp\u003E🔗 Участие бесплатное, но нужна предварительная регистрация.\u003C\u002Fp\u003E","imageUrl":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F8fd\u002Fe04\u002Fddd\u002F8fde04ddd9ba3f6bcd515aa6209f96b7.png","eventUrl":"https:\u002F\u002Fhabr.timepad.ru\u002Fevent\u002F3266126\u002F?utm_refcode=b5d44b4f1d5f2c06b5696586408b58e610baafd8","startDay":"2025-03-27","startTime":"16:00","finishDay":"2025-03-27","finishTime":"18:00","isOnline":true,"geo":[],"isArchive":false,"categories":[{"id":"10","titleHtml":"Маркетинг"},{"id":"16","titleHtml":"Другое"}],"tags":["Вебинар","Контент","Хабр"],"metadata":null},{"id":"606","titleHtml":"Серия вебинаров «DevOps Middle: AvitoTech vs ecom.tech»","descriptionHtml":"\u003Cp\u003EУчебный центр Слёрм запустил серию бесплатных вебинаров «Честные вакансии: DevOps Middle».\u003C\u002Fp\u003E\u003Cp\u003EДва раза в неделю Вячеслав Федосеев, TeamLead DevOps в «Честном знаке» и автор телеграм-канала «DevOps Bootcamp с Федосеевым» встречается в прямом эфире с экспертами из бигтеха, чтобы обсудить:\u003C\u002Fp\u003E\u003Col\u003E\u003Cli\u003E\u003Cp\u003EКакие задачи должен решать DevOps middle.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003EКакими основными и дополнительными инструментами и подходами должен владеть DevOps middle.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003EСтоп-факторы на собеседовании.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003EКак выглядит рабочий день DevOps middle.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003EКакие софт-скилы действительно важны.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003C\u002Fol\u003E\u003Cp\u003E31 марта состоится встреча с экспертами AvitoTech, 2 апреля — с ecom.tech. Кому подходите вы, а кто — вам? Разберёмся вместе на вебинарах.\u003C\u002Fp\u003E\u003Cp\u003EПодробности — в telegram-боте.\u003C\u002Fp\u003E\u003Cp\u003E\u003C\u002Fp\u003E","imageUrl":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fb99\u002F62a\u002Fb24\u002Fb9962ab2439c6edc80f96d7f0a847c72.png","eventUrl":"https:\u002F\u002Fu.habr.com\u002Fcldr_slermdevops","startDay":"2025-03-31","startTime":"17:00","isOnline":true,"geo":[],"isArchive":false,"categories":[{"id":"2","titleHtml":"Разработка"},{"id":"4","titleHtml":"Администрирование"}],"tags":["Вебинар Слерм","Вебинар Devops","Честные вакансии","Слерм","Честные вакансии Devops Middle"],"metadata":null},{"id":"618","titleHtml":"Реалити для разработчиков: узнайте, как строится новое публичное облако MWS","descriptionHtml":"\u003Cp\u003EBuilding the Cloud — это реалити-проект для разработчиков о новом облаке МТС Web Services. Каждый эпизод посвящён отдельному building-блоку новой облачной платформы.\u003C\u002Fp\u003E\u003Cp\u003EВ прямом эфире:\u003C\u002Fp\u003E\u003Cul\u003E\u003Cli\u003E\u003Cp\u003EПоказываем архитектуру сервисов облака ещё до релиза.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003EДелимся опытом на реальных кейсах из разработки.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003EОтвечаем на вопросы в прямом эфире.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003C\u002Ful\u003E\u003Cp\u003EВ новом выпуске проекта расскажем, как строим underlay-сеть нового облака.\u003C\u002Fp\u003E\u003Cp\u003EВы узнаете:\u003C\u002Fp\u003E\u003Cul\u003E\u003Cli\u003E\u003Cp\u003EКак мы поменяли подход к построению underlay-сети в новом облаке MWS.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003EКакую архитектуру строим и как реализовали изоляцию management и data plane.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003EКак обеспечиваем отказоустойчивость и производительность на уровне физической инфраструктуры.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003C\u002Ful\u003E\u003Cp\u003EНовый выпуск Building the Cloud будет интересен сетевым инженерам, backend-разработчикам, DevOps- и SRE-инженерам, а также всем, кто интересуется сетевыми или облачными технологиями.\u003C\u002Fp\u003E\u003Cp\u003EРегистрируйтесь по ссылке, подключайтесь к прямому эфиру и задавайте вопросы в чате.\u003C\u002Fp\u003E\u003Cp\u003EЗа самый интересный вопрос подарим фирменный мерч MWS.\u003C\u002Fp\u003E\u003Cp\u003EДо встречи в эфире.\u003C\u002Fp\u003E","imageUrl":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Ff76\u002F0f9\u002Fa82\u002Ff760f9a827b851a5eeca4802c643a91d.png","eventUrl":"https:\u002F\u002Fu.habr.com\u002Fcldr_buildingthecloud4","startDay":"2025-04-03","startTime":"11:00","isOnline":true,"geo":[],"isArchive":false,"categories":[{"id":"2","titleHtml":"Разработка"}],"tags":["реалити-проект для разработчиков","Реалити для разработчиков","облако","облако MWS"],"metadata":null},{"id":"620","titleHtml":"Открытая встреча «System Analysis Meetup SberHealth»","descriptionHtml":"\u003Cp\u003EВ программе:\u003C\u002Fp\u003E\u003Cul\u003E\u003Cli\u003E\u003Cp\u003EГоргоц Мария, старший системный аналитик, расскажет про описание требований для мобильных приложений.&nbsp;\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003EНижник Станислав, ведущий системный аналитик, расскажет про книжный клуб системных аналитиков: «Как мы создали сообщество для обмена знаниями».\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003EВ качестве приглашённого спикера Севостьянова Анастасия, ведущий системный аналитик в Альфа-Банке, расскажет про мидл слой без хаоса: «Как сделать документацию понятной и живой».&nbsp;\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003C\u002Ful\u003E\u003Cp\u003EПосле сессии с докладами проведём профессиональную игру для офлайн-участников «Искусство защиты абсурда».&nbsp;\u003C\u002Fp\u003E\u003Cp\u003EВедущая митапа Пашкова Ольга, руководитель направления методологии и системного анализа в СберЗдоровье.\u003C\u002Fp\u003E","imageUrl":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Feba\u002Fc37\u002F879\u002Febac378793b959ebce42f41713e7b67f.jpg","eventUrl":"https:\u002F\u002Fu.habr.com\u002Fcldr_sbermeetup","startDay":"2025-04-03","startTime":"17:00","finishDay":"2025-04-03","finishTime":"23:00","isOnline":true,"geo":["Москва"],"isArchive":false,"categories":[{"id":"12","titleHtml":"Аналитика"}],"tags":["Семинар аналитика","сбер митап","системная аналитика митап","системная аналитика"],"metadata":null},{"id":"590","titleHtml":"«GoCloud 2025» — масштабная IT-конференция про облака и AI","descriptionHtml":"\u003Cp\u003EПоговорим про глобальные тренды в AI, расскажем про широкий набор сценариев работы в облаке, поделимся последними релизами и нашими планами, чтобы показать, какой простор открывают облачные и AI-технологии для бизнеса и разработчиков.\u003C\u002Fp\u003E\u003Cp\u003EЧто ждёт участников в этом году:\u003C\u002Fp\u003E\u003Cul\u003E\u003Cli\u003E\u003Cp\u003EТри трека: инфраструктура и инструменты, AI и R&amp;D и сценарии работы в облаке.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003E30+ спикеров из Cloud.ru и ведущих российских компаний.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003ELive-демонстрации облачных платформ и нетворкинг с экспертами.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003EНе только доклады: интерактивные зоны, afterparty с музыкальной программой и кастомный мерч.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003C\u002Ful\u003E\u003Cp\u003EКому будет полезно: техническим лидерам, IT-директорам, бизнес-руководителям, разработчикам, DevOps-инженерам, архитекторам, дата-инженерам, AI\u002FML-инженерам, дата-сайентистам, SRE-инженерам, системным администраторам, специалистам по информационной безопасности.\u003C\u002Fp\u003E\u003Cp\u003EАдрес: Москва, Цифровое деловое пространство (ЦДП), ул. Покровка, 47.\u003C\u002Fp\u003E\u003Cp\u003E\u003C\u002Fp\u003E","imageUrl":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F31b\u002Fe68\u002F295\u002F31be6829578e7934fbc944396eb330b1.png","eventUrl":"https:\u002F\u002Fu.habr.com\u002Fcldr_gocloud","startDay":"2025-04-10","startTime":"10:00","finishDay":"2025-04-10","finishTime":"20:00","isOnline":true,"geo":["Москва"],"isArchive":false,"categories":[{"id":"2","titleHtml":"Разработка"},{"id":"4","titleHtml":"Администрирование"},{"id":"8","titleHtml":"Менеджмент"}],"tags":["конференция Cloud.ru","AI","ИИ","айти конференция","облачные хранилища"],"metadata":null},{"id":"516","titleHtml":"IT-конференция Merge Tatarstan 2025","descriptionHtml":"\u003Cp\u003EКрупнейшая региональная IT-конференция России собирает профессионалов со всей страны для нетворкинга, обмена опытом и поиска новых деловых контактов.\u003C\u002Fp\u003E\u003Cp\u003EMerge Tatarstan — это 7 тематических конференций на одной площадке, 2000 участников, более 170 спикеров-практиков, мастер-классы, воркшопы и BoF-сессии.\u003C\u002Fp\u003E\u003Cp\u003EК участию в конференции приглашаются разработчики, QA, тимлиды, Project\u002FProduct-менеджеры, маркетологи, аналитики, UI\u002FUX-дизайнеры, PR-специалисты, HR-менеджеры, владельцы бизнеса и начинающие специалисты.\u003C\u002Fp\u003E\u003Cp\u003E\u003C\u002Fp\u003E","imageUrl":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F0e9\u002F3a8\u002F3ec\u002F0e93a83ecea09f806d1df907ddb036a4.jpg","eventUrl":"https:\u002F\u002Fu.habr.com\u002Fcldr_tatarstan","startDay":"2025-04-25","startTime":"09:00","finishDay":"2025-04-26","finishTime":"19:30","isOnline":false,"geo":["Казань"],"isArchive":false,"categories":[{"id":"2","titleHtml":"Разработка"},{"id":"10","titleHtml":"Маркетинг"},{"id":"16","titleHtml":"Другое"}],"tags":["Разработка","IT","PR","UI\u002FUX","бизнес","маркетинг","аналитика"],"metadata":null},{"id":"610","titleHtml":"Летняя айти-тусовка Summer Merge","descriptionHtml":"\u003Cp\u003EЛетняя айти-тусовка возвращается.\u003C\u002Fp\u003E\u003Cp\u003EВырваться из рутины и сменить обстановку на несколько дней можно вместе с Summer Merge.&nbsp;\u003C\u002Fp\u003E\u003Cp\u003EСосновый лес, чистый воздух, живое общение с экспертами IT, спортивные состязания, мастер-классы, квесты, встречи с друзьями, новые знакомства, afterparty — забудьте про суету города и окунитесь в приятную атмосферу digital detox. В эти летние IT-выходные мы обещаем атмосферу ярких приключений.&nbsp;\u003C\u002Fp\u003E\u003Cp\u003EЖдём вас 20—22 июня в экопарке «Русский берег» на Summer Merge.\u003C\u002Fp\u003E","imageUrl":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F652\u002F12d\u002F998\u002F65212d998fb4939d9787bd9c726d2acb.png","eventUrl":"https:\u002F\u002Fu.habr.com\u002Fcldr_summermerge","startDay":"2025-06-20","finishDay":"2025-06-22","isOnline":false,"geo":["Ульяновская область"],"isArchive":false,"categories":[{"id":"2","titleHtml":"Разработка"},{"id":"16","titleHtml":"Другое"}],"tags":["летняя айти-тусовка","айти-кэмп","летний выезд для айтишников","Summer Merge"],"metadata":null}],"currentEvent":null,"eventsFilter":{"city":"all","timeStarted":null,"timeEnded":null}},"wysiwyg":{"WYSIWYGRulesRefs":null}};(function(){var s;(s=document.currentScript||document.scripts[document.scripts.length-1]).parentNode.removeChild(s);}());</script><script src="https://assets.habr.com/habr-web/js/chunk-vendors.3b11d41f.js" defer></script><script src="https://assets.habr.com/habr-web/js/app.7a97ea6d.js" defer></script></div>
    <div id="overlays"><!----><!--teleport anchor--><!----><!--teleport anchor--><!----><!--teleport anchor--><!----><!--teleport anchor--><!----><!--teleport anchor--><!----><!--teleport anchor--></div>
    
    
    <script async src="https://www.googletagmanager.com/gtag/js?id=G-S28W1WC23F"></script>
    <script>
      window.dataLayer = window.dataLayer || [];
      function gtag(){dataLayer.push(arguments);}
      gtag('js', new Date());
    </script>
  
  <script type="text/javascript" >
    (function(m,e,t,r,i,k,a){m[i]=m[i]||function(){(m[i].a=m[i].a||[]).push(arguments)};
    m[i].l=1*new Date();k=e.createElement(t),a=e.getElementsByTagName(t)[0],k.async=1,k.src=r,a.parentNode.insertBefore(k,a)})
    (window, document, "script", "https://mc.yandex.ru/metrika/tag.js", "ym");

  </script>
    <script type="text/javascript">
      window.addEventListener('load', function () {
        setTimeout(() => {
          const img = new Image();
          img.src = 'https://vk.com/rtrg?p=VK-RTRG-421343-57vKE';
        }, 0);
      });
    </script>
  
    </body>

    </html>
