<!DOCTYPE html>
<html lang="ru">

  <head>
    <title>Миграция конфигурации сборки с Groovy на Kotlin &#x2F; Хабр</title>
<meta property="fb:app_id" content="444736788986613">
<meta property="fb:pages" content="472597926099084">
<meta name="twitter:card" content="summary_large_image">
<meta name="twitter:site" content="@habr_com">
<meta property="og:site_name" content="Хабр">
<link href="https://habr.com/ru/rss/post/765544/?fl=ru" type="application/rss+xml" title rel="alternate" name="rss">
<link href="https://habr.com/ru/companies/ppr/articles/765544/" rel="canonical" data-hid="e3fa780">
<link rel="image_src" href="https://habr.com/share/publication/765544/35deba1efec315d1110f88e04104e5d9/" data-hid="2a79c45">
<link rel="amphtml" href="https://habr.com/ru/amp/publications/765544/">
<meta property="og:title" content="Миграция конфигурации сборки с Groovy на Kotlin">
<meta name="twitter:title" content="Миграция конфигурации сборки с Groovy на Kotlin">
<meta name="aiturec:title" content="Миграция конфигурации сборки с Groovy на Kotlin">
<meta name="description" content="Что такое DSL? DSL (Domain-Specific Language) — это язык программирования, который спроектирован и оптимизирован для решения задач в конкретной области или для определенного класса задач. DSL...">
<meta itemprop="description" content="Что такое DSL? DSL (Domain-Specific Language) — это язык программирования, который спроектирован и оптимизирован для решения задач в конкретной области или для определенного класса задач. DSL...">
<meta property="og:description" content="Что такое DSL? DSL (Domain-Specific Language) — это язык программирования, который спроектирован и оптимизирован для решения задач в конкретной области или для определенного класса задач. DSL...">
<meta name="twitter:description" content="Что такое DSL? DSL (Domain-Specific Language) — это язык программирования, который спроектирован и оптимизирован для решения задач в конкретной области или для определенного класса задач. DSL...">
<meta property="aiturec:description" content="Что такое DSL? DSL (Domain-Specific Language) — это язык программирования, который спроектирован и оптимизирован для решения задач в конкретной области или для определенного класса задач. DSL...">
<meta itemprop="image" content="https://habr.com/share/publication/765544/35deba1efec315d1110f88e04104e5d9/">
<meta property="og:image" content="https://habr.com/share/publication/765544/35deba1efec315d1110f88e04104e5d9/">
<meta property="og:image:width" content="1200">
<meta property="og:image:height" content="630">
<meta property="aiturec:image" content="https://habr.com/share/publication/765544/35deba1efec315d1110f88e04104e5d9/">
<meta name="twitter:image" content="https://habr.com/share/publication/765544/35deba1efec315d1110f88e04104e5d9/">
<meta property="vk:image" content="https://habr.com/share/publication/765544/35deba1efec315d1110f88e04104e5d9/?format=vk">
<meta property="vk:image" content="https://habr.com/share/publication/765544/35deba1efec315d1110f88e04104e5d9/?format=vk?format=vk">
<meta property="aiturec:item_id" content="765544">
<meta property="aiturec:datetime" content="2023-10-05T11:14:54.000Z">
<meta content="https://habr.com/ru/companies/ppr/articles/765544/" property="og:url">
<meta property="og:type" content="article">
<meta property="og:locale" content="ru_RU">
<meta property="og:image:width" content="1200">
<meta property="og:image:height" content="630">
<meta name="keywords" content="kotlin, groovy, android, миграция, dsl, gradle, kts">
<script type="application/ld+json" data-hid="1e0f0a2">{"@context":"http:\/\/schema.org","@type":"Article","mainEntityOfPage":{"@type":"WebPage","@id":"https:\/\/habr.com\/ru\/companies\/ppr\/articles\/765544\/"},"headline":"Миграция конфигурации сборки с Groovy на Kotlin","datePublished":"2023-10-05T14:14:54+03:00","dateModified":"2023-10-05T16:18:19+03:00","author":{"@type":"Person","name":"Программный Продукт"},"publisher":{"@type":"Organization","name":"Habr","logo":{"@type":"ImageObject","url":"https:\/\/habrastorage.org\/webt\/a_\/lk\/9m\/a_lk9mjkccjox-zccjrpfolmkmq.png"}},"description":"Что такое DSL?  DSL (Domain-Specific Language) &mdash; это язык программирования, который спроектирован и оптимизирован для решения задач в конкретной области или для...","url":"https:\/\/habr.com\/ru\/companies\/ppr\/articles\/765544\/#post-content-body","about":["c_ppr","h_groovy_grails","h_android_dev","h_kotlin","f_develop"],"image":["https:\/\/habrastorage.org\/getpro\/habr\/upload_files\/ff5\/b44\/dfd\/ff5b44dfdc2177b939860aed7f0e583b.png"]}</script>
    <meta charset="UTF-8">
    <meta name="viewport"
      content="width=device-width,initial-scale=1.0,viewport-fit=cover,maximum-scale=1,user-scalable=0">
    <meta name="referrer" content="unsafe-url">
    <style>
      /* cyrillic-ext */
      @font-face {
        font-family: 'Fira Sans';
        font-style: normal;
        font-weight: 400;
        font-display: swap;
        src: url(https://fonts.gstatic.com/s/firasans/v17/va9E4kDNxMZdWfMOD5VvmojLazX3dGTP.woff2) format('woff2');
        unicode-range: U+0460-052F, U+1C80-1C88, U+20B4, U+2DE0-2DFF, U+A640-A69F, U+FE2E-FE2F;
      }

      /* cyrillic */
      @font-face {
        font-family: 'Fira Sans';
        font-style: normal;
        font-weight: 400;
        font-display: swap;
        src: url(https://fonts.gstatic.com/s/firasans/v17/va9E4kDNxMZdWfMOD5Vvk4jLazX3dGTP.woff2) format('woff2');
        unicode-range: U+0301, U+0400-045F, U+0490-0491, U+04B0-04B1, U+2116;
      }

      /* latin-ext */
      @font-face {
        font-family: 'Fira Sans';
        font-style: normal;
        font-weight: 400;
        font-display: swap;
        src: url(https://fonts.gstatic.com/s/firasans/v17/va9E4kDNxMZdWfMOD5VvmYjLazX3dGTP.woff2) format('woff2');
        unicode-range: U+0100-02AF, U+0304, U+0308, U+0329, U+1E00-1E9F, U+1EF2-1EFF, U+2020, U+20A0-20AB, U+20AD-20C0, U+2113, U+2C60-2C7F, U+A720-A7FF;
      }

      /* latin */
      @font-face {
        font-family: 'Fira Sans';
        font-style: normal;
        font-weight: 400;
        font-display: swap;
        src: url(https://fonts.gstatic.com/s/firasans/v17/va9E4kDNxMZdWfMOD5Vvl4jLazX3dA.woff2) format('woff2');
        unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+0304, U+0308, U+0329, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;
      }

      /* cyrillic-ext */
      @font-face {
        font-family: 'Fira Sans';
        font-style: normal;
        font-weight: 500;
        font-display: swap;
        src: url(https://fonts.gstatic.com/s/firasans/v17/va9B4kDNxMZdWfMOD5VnZKveSxf6Xl7Gl3LX.woff2) format('woff2');
        unicode-range: U+0460-052F, U+1C80-1C88, U+20B4, U+2DE0-2DFF, U+A640-A69F, U+FE2E-FE2F;
      }

      /* cyrillic */
      @font-face {
        font-family: 'Fira Sans';
        font-style: normal;
        font-weight: 500;
        font-display: swap;
        src: url(https://fonts.gstatic.com/s/firasans/v17/va9B4kDNxMZdWfMOD5VnZKveQhf6Xl7Gl3LX.woff2) format('woff2');
        unicode-range: U+0301, U+0400-045F, U+0490-0491, U+04B0-04B1, U+2116;
      }

      /* latin-ext */
      @font-face {
        font-family: 'Fira Sans';
        font-style: normal;
        font-weight: 500;
        font-display: swap;
        src: url(https://fonts.gstatic.com/s/firasans/v17/va9B4kDNxMZdWfMOD5VnZKveSBf6Xl7Gl3LX.woff2) format('woff2');
        unicode-range: U+0100-02AF, U+0304, U+0308, U+0329, U+1E00-1E9F, U+1EF2-1EFF, U+2020, U+20A0-20AB, U+20AD-20C0, U+2113, U+2C60-2C7F, U+A720-A7FF;
      }

      /* latin */
      @font-face {
        font-family: 'Fira Sans';
        font-style: normal;
        font-weight: 500;
        font-display: swap;
        src: url(https://fonts.gstatic.com/s/firasans/v17/va9B4kDNxMZdWfMOD5VnZKveRhf6Xl7Glw.woff2) format('woff2');
        unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+0304, U+0308, U+0329, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;
      }

      /* cyrillic-ext */
      @font-face {
        font-family: 'Fira Sans';
        font-style: normal;
        font-weight: 700;
        font-display: swap;
        src: url(https://fonts.gstatic.com/s/firasans/v17/va9B4kDNxMZdWfMOD5VnLK3eSxf6Xl7Gl3LX.woff2) format('woff2');
        unicode-range: U+0460-052F, U+1C80-1C88, U+20B4, U+2DE0-2DFF, U+A640-A69F, U+FE2E-FE2F;
      }

      /* cyrillic */
      @font-face {
        font-family: 'Fira Sans';
        font-style: normal;
        font-weight: 700;
        font-display: swap;
        src: url(https://fonts.gstatic.com/s/firasans/v17/va9B4kDNxMZdWfMOD5VnLK3eQhf6Xl7Gl3LX.woff2) format('woff2');
        unicode-range: U+0301, U+0400-045F, U+0490-0491, U+04B0-04B1, U+2116;
      }

      /* latin-ext */
      @font-face {
        font-family: 'Fira Sans';
        font-style: normal;
        font-weight: 700;
        font-display: swap;
        src: url(https://fonts.gstatic.com/s/firasans/v17/va9B4kDNxMZdWfMOD5VnLK3eSBf6Xl7Gl3LX.woff2) format('woff2');
        unicode-range: U+0100-02AF, U+0304, U+0308, U+0329, U+1E00-1E9F, U+1EF2-1EFF, U+2020, U+20A0-20AB, U+20AD-20C0, U+2113, U+2C60-2C7F, U+A720-A7FF;
      }

      /* latin */
      @font-face {
        font-family: 'Fira Sans';
        font-style: normal;
        font-weight: 700;
        font-display: swap;
        src: url(https://fonts.gstatic.com/s/firasans/v17/va9B4kDNxMZdWfMOD5VnLK3eRhf6Xl7Glw.woff2) format('woff2');
        unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+0304, U+0308, U+0329, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;
      }
    </style>
    <link rel="preload" href="https://assets.habr.com/habr-web/css/theme/light-v1.css" as="style" media="(prefers-color-scheme: light)" /><link rel="preload" href="https://assets.habr.com/habr-web/css/theme/dark-v1.css" as="style" media="(prefers-color-scheme: dark)" /><link id="light-colors" rel="stylesheet" href="https://assets.habr.com/habr-web/css/theme/light-v1.css" media="(prefers-color-scheme: light)" /><link id="dark-colors" rel="stylesheet" href="https://assets.habr.com/habr-web/css/theme/dark-v1.css" media="(prefers-color-scheme: dark)" />
    <script>window.i18nFetch = new Promise((res, rej) => {
          const xhr = new XMLHttpRequest();
          xhr.open('GET', '/js/i18n/ru-compiled.35b2fec11bb79a62419ab67779c2dd82.json');
          xhr.responseType = 'json';
          xhr.onload = function(e) {
            if (this.status === 200) {
              res({ru: xhr.response});
            } else {
              rej(e);
            }
          };
          xhr.send();
        });</script>
    <style>
      .grecaptcha-badge {
        visibility: hidden;
      }
    </style>
    <meta name="habr-version" content="2.233.0">
    
    <meta name="apple-mobile-web-app-status-bar-style" content="#303b44">
    <meta name="msapplication-TileColor" content="#629FBC">
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="mobile-web-app-capable" content="yes">
    <link rel="shortcut icon" type="image/png" sizes="16x16" href="https://assets.habr.com/habr-web/img/favicons/favicon-16.png">
    <link rel="shortcut icon" type="image/png" sizes="32x32" href="https://assets.habr.com/habr-web/img/favicons/favicon-32.png">
    <link rel="apple-touch-icon" type="image/png" sizes="76x76" href="https://assets.habr.com/habr-web/img/favicons/apple-touch-icon-76.png">
    <link rel="apple-touch-icon" type="image/png" sizes="120x120" href="https://assets.habr.com/habr-web/img/favicons/apple-touch-icon-120.png">
    <link rel="apple-touch-icon" type="image/png" sizes="152x152" href="https://assets.habr.com/habr-web/img/favicons/apple-touch-icon-152.png">
    <link rel="apple-touch-icon" type="image/png" sizes="180x180" href="https://assets.habr.com/habr-web/img/favicons/apple-touch-icon-180.png">
    <link rel="apple-touch-icon" type="image/png" sizes="256x256" href="https://assets.habr.com/habr-web/img/favicons/apple-touch-icon-256.png">
    <link rel="apple-touch-startup-image"
      media="screen and (device-width: 320px) and (device-height: 568px) and (-webkit-device-pixel-ratio: 2) and (orientation: landscape)"
      href="https://assets.habr.com/habr-web/img/splashes/splash_1136x640.png">
    <link rel="apple-touch-startup-image"
      media="screen and (device-width: 375px) and (device-height: 812px) and (-webkit-device-pixel-ratio: 3) and (orientation: landscape)"
      href="https://assets.habr.com/habr-web/img/splashes/splash_2436x1125.png">
    <link rel="apple-touch-startup-image"
      media="screen and (device-width: 414px) and (device-height: 896px) and (-webkit-device-pixel-ratio: 2) and (orientation: landscape)"
      href="https://assets.habr.com/habr-web/img/splashes/splash_1792x828.png">
    <link rel="apple-touch-startup-image"
      media="screen and (device-width: 414px) and (device-height: 896px) and (-webkit-device-pixel-ratio: 2) and (orientation: portrait)"
      href="https://assets.habr.com/habr-web/img/splashes/splash_828x1792.png">
    <link rel="apple-touch-startup-image"
      media="screen and (device-width: 375px) and (device-height: 667px) and (-webkit-device-pixel-ratio: 2) and (orientation: landscape)"
      href="https://assets.habr.com/habr-web/img/splashes/splash_1334x750.png">
    <link rel="apple-touch-startup-image"
      media="screen and (device-width: 414px) and (device-height: 896px) and (-webkit-device-pixel-ratio: 3) and (orientation: portrait)"
      href="https://assets.habr.com/habr-web/img/splashes/splash_1242x2668.png">
    <link rel="apple-touch-startup-image"
      media="screen and (device-width: 414px) and (device-height: 736px) and (-webkit-device-pixel-ratio: 3) and (orientation: landscape)"
      href="https://assets.habr.com/habr-web/img/splashes/splash_2208x1242.png">
    <link rel="apple-touch-startup-image"
      media="screen and (device-width: 375px) and (device-height: 812px) and (-webkit-device-pixel-ratio: 3) and (orientation: portrait)"
      href="https://assets.habr.com/habr-web/img/splashes/splash_1125x2436.png">
    <link rel="apple-touch-startup-image"
      media="screen and (device-width: 414px) and (device-height: 736px) and (-webkit-device-pixel-ratio: 3) and (orientation: portrait)"
      href="https://assets.habr.com/habr-web/img/splashes/splash_1242x2208.png">
    <link rel="apple-touch-startup-image"
      media="screen and (device-width: 1024px) and (device-height: 1366px) and (-webkit-device-pixel-ratio: 2) and (orientation: landscape)"
      href="https://assets.habr.com/habr-web/img/splashes/splash_2732x2048.png">
    <link rel="apple-touch-startup-image"
      media="screen and (device-width: 414px) and (device-height: 896px) and (-webkit-device-pixel-ratio: 3) and (orientation: landscape)"
      href="https://assets.habr.com/habr-web/img/splashes/splash_2688x1242.png">
    <link rel="apple-touch-startup-image"
      media="screen and (device-width: 834px) and (device-height: 1112px) and (-webkit-device-pixel-ratio: 2) and (orientation: landscape)"
      href="https://assets.habr.com/habr-web/img/splashes/splash_2224x1668.png">
    <link rel="apple-touch-startup-image"
      media="screen and (device-width: 375px) and (device-height: 667px) and (-webkit-device-pixel-ratio: 2) and (orientation: portrait)"
      href="https://assets.habr.com/habr-web/img/splashes/splash_750x1334.png">
    <link rel="apple-touch-startup-image"
      media="screen and (device-width: 1024px) and (device-height: 1366px) and (-webkit-device-pixel-ratio: 2) and (orientation: portrait)"
      href="https://assets.habr.com/habr-web/img/splashes/splash_2048x2732.png">
    <link rel="apple-touch-startup-image"
      media="screen and (device-width: 834px) and (device-height: 1194px) and (-webkit-device-pixel-ratio: 2) and (orientation: landscape)"
      href="https://assets.habr.com/habr-web/img/splashes/splash_2388x1668.png">
    <link rel="apple-touch-startup-image"
      media="screen and (device-width: 834px) and (device-height: 1112px) and (-webkit-device-pixel-ratio: 2) and (orientation: portrait)"
      href="https://assets.habr.com/habr-web/img/splashes/splash_1668x2224.png">
    <link rel="apple-touch-startup-image"
      media="screen and (device-width: 320px) and (device-height: 568px) and (-webkit-device-pixel-ratio: 2) and (orientation: portrait)"
      href="https://assets.habr.com/habr-web/img/splashes/splash_640x1136.png">
    <link rel="apple-touch-startup-image"
      media="screen and (device-width: 834px) and (device-height: 1194px) and (-webkit-device-pixel-ratio: 2) and (orientation: portrait)"
      href="https://assets.habr.com/habr-web/img/splashes/splash_1668x2388.png">
    <link rel="apple-touch-startup-image"
      media="screen and (device-width: 768px) and (device-height: 1024px) and (-webkit-device-pixel-ratio: 2) and (orientation: landscape)"
      href="https://assets.habr.com/habr-web/img/splashes/splash_2048x1536.png">
    <link rel="apple-touch-startup-image"
      media="screen and (device-width: 768px) and (device-height: 1024px) and (-webkit-device-pixel-ratio: 2) and (orientation: portrait)"
      href="https://assets.habr.com/habr-web/img/splashes/splash_1536x2048.png">
    <link rel="mask-icon" color="#77a2b6" href="https://assets.habr.com/habr-web/img/favicons/apple-touch-icon-120.svg">
    <link crossorigin="use-credentials" href="/manifest.webmanifest" rel="manifest">
    <script async src="https://unpkg.com/pwacompat" crossorigin="anonymous"></script>
    <script>window.yaContextCb = window.yaContextCb || []</script>
    <script src="https://yandex.ru/ads/system/context.js" async></script>
  <link rel="preload" href="https://assets.habr.com/habr-web/css/chunk-vendors.04465f7c.css" as="style"><link rel="preload" href="https://assets.habr.com/habr-web/js/chunk-vendors.3b11d41f.js" as="script"><link rel="preload" href="https://assets.habr.com/habr-web/css/app.20959a76.css" as="style"><link rel="preload" href="https://assets.habr.com/habr-web/js/app.7a97ea6d.js" as="script"><link rel="stylesheet" href="https://assets.habr.com/habr-web/css/chunk-vendors.04465f7c.css"><link rel="stylesheet" href="https://assets.habr.com/habr-web/css/app.20959a76.css"></head>
  <body>
    
    <div id="mount"><div id="app" data-async-called="true"><div class="tm-layout__wrapper"><!--[--><!----><div></div><div class="tm-feature tm-feature"><!----></div><header class="tm-header" data-test-id="header"><div class="tm-page-width"><!--[--><div class="tm-header__container"><div class="tm-header__burger-nav" data-test-id="burger-nav"><button class="tm-header__button tm-header__button_burger" type="button"><svg class="tm-svg-img tm-header__icon tm-header__icon-burger" height="16" width="16"><title>Меню</title><use xlink:href="/img/megazord-v28.371b7fa3..svg#header-burger"></use></svg></button></div><span class="tm-header__logo-wrap"><a class="tm-header__logo tm-header__logo_hl-ru tm-header__logo" href="/ru/"><svg class="tm-svg-img tm-header__icon" height="16" width="16"><title>Хабр</title><use xlink:href="/img/habr-logo-ru.svg#logo"></use></svg></a><span style="display:none;" class="tm-header__beta-sign">β</span></span><!----><div class="tm-header-user-menu tm-header_user-menu"><a href="/ru/search/" class="tm-header-user-menu__item tm-header-user-menu__search" data-test-id="search-button"><svg class="tm-svg-img tm-header-user-menu__icon tm-header-user-menu__icon_search" height="24" width="24"><title>Поиск</title><use xlink:href="/img/megazord-v28.371b7fa3..svg#search"></use></svg></a><!----><!----><div class="tm-header-user-menu__item tm-header-user-menu__write"><div><svg class="tm-svg-img tm-header-user-menu__icon tm-header-user-menu__icon_write" height="24" width="24"><title>Написать публикацию</title><use xlink:href="/img/megazord-v28.371b7fa3..svg#write"></use></svg></div><!----></div><!--[--><div class="tm-header-user-menu__item"><button class="tm-header-user-menu__toggle" data-test-id="user-menu-settings"><svg class="tm-svg-img tm-header-user-menu__icon" height="24" width="24"><title>Настройки</title><use xlink:href="/img/megazord-v28.371b7fa3..svg#page-settings"></use></svg></button></div><a href="https://habr.com/kek/v1/auth/habrahabr/?back=/ru/companies/ppr/articles/765544/&amp;hl=ru" rel="nofollow" class="tm-header-user-menu__item"><!--[--><button class="btn btn_solid btn_small tm-header-user-menu__login" type="button"><!--[-->Войти<!--]--></button><!--]--></a><!--]--><!----><!--teleport start--><!--teleport end--><!----></div></div><!--]--></div></header><div class="tm-layout"><div class="tm-page-progress-bar"></div><!----><!----><div class="tm-page-width"><!--[--><!--]--></div><main class="tm-layout__container"><div class="tm-page" hl="ru" companyname="ppr" data-async-called="true" style="--0c809c5a:16px;--a086013e:100%;--7c457026:0;"><div class="tm-page-width"><!--[--><div class="tm-page__header"><!--[--><!--]--></div><div class="tm-page__wrapper"><div class="tm-page__main_has-sidebar tm-page__main"><div class="pull-down"><!----><div class="pull-down__header" style="height:0px;"><div class="pull-down__content" style="bottom:10px;"><svg class="tm-svg-img pull-down__icon pull-down__arrow" height="24" width="24"><title>Обновить</title><use xlink:href="/img/megazord-v28.371b7fa3..svg#pull-arrow"></use></svg></div></div><!--[--><!--[--><div class="tm-article-presenter"><!--[--><!--[--><div class="banner-wrapper narrow" style="--467224fc:100px;--58ff5eba:auto;" data-v-ad758baa><!--[--><div class="placeholder-wrapper placeholder" data-v-ad758baa><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><div class="adfox-banner-placeholder narrow" data-v-12f7bcca><div class="image loads" data-v-12f7bcca></div><div class="lines" data-v-12f7bcca><div class="line loads" data-v-12f7bcca></div><div class="line loads" data-v-12f7bcca></div><div class="line loads" data-v-12f7bcca></div></div></div><!----></div><div id="adfox_169815559787254866" class="tm-adfox-banner" data-v-ad758baa></div><!--]--></div><!----><!----><!--]--><!--]--><div class="tm-article-presenter__body" data-test-id="article-body"><div class="tm-misprint-area"><div class="tm-misprint-area__wrapper"><!--[--><article class="tm-article-presenter__content tm-article-presenter__content_narrow"><!--[--><div class="tm-article-presenter__header"><!--[--><!--]--><div class="tm-article-snippet tm-article-snippet tm-article-presenter__snippet"><!--[--><!--]--><div class="tm-article-snippet__meta-container"><div class="tm-article-snippet__meta"><span class="tm-user-info tm-article-snippet__author"><a href="/ru/users/PPR/" class="tm-user-info__userpic" data-test-id="user-info-pic" title="PPR"><div class="tm-entity-image"><img alt="" class="tm-entity-image__pic" height="32" src="//habrastorage.org/r/w64/getpro/habr/avatars/474/1fb/0f8/4741fb0f8dabdbe1480fbc5ce537d15b.png" width="32"></div></a><span class="tm-user-info__user tm-user-info__user_appearance-default" data-test-id="user-info-description"><a href="/ru/users/PPR/" class="tm-user-info__username">PPR <!----></a><!--[--><span class="tm-article-datetime-published"><time datetime="2023-10-05T11:14:54.000Z" title="2023-10-05, 14:14">5  окт  2023 в 14:14</time></span><!--]--></span></span></div><!----></div><h1 class="tm-title tm-title_h1" lang="ru" data-test-id="articleTitle"><span>Миграция конфигурации сборки с Groovy на Kotlin</span></h1><div class="tm-article-snippet__stats" data-test-id="articleStats"><div class="tm-article-complexity tm-article-complexity_complexity-medium"><span class="tm-svg-icon__wrapper tm-article-complexity__icon"><svg class="tm-svg-img tm-svg-icon" height="24" width="24"><title>Уровень сложности</title><use xlink:href="/img/megazord-v28.371b7fa3..svg#complexity-medium"></use></svg></span><span class="tm-article-complexity__label">Средний</span></div><div class="tm-article-reading-time"><span class="tm-svg-icon__wrapper tm-article-reading-time__icon"><svg class="tm-svg-img tm-svg-icon" height="24" width="24"><title>Время на прочтение</title><use xlink:href="/img/megazord-v28.371b7fa3..svg#clock"></use></svg></span><span class="tm-article-reading-time__label">13 мин</span></div><span class="tm-icon-counter tm-data-icons__item"><svg class="tm-svg-img tm-icon-counter__icon" height="24" width="24"><title>Количество просмотров</title><use xlink:href="/img/megazord-v28.371b7fa3..svg#counter-views"></use></svg><span class="tm-icon-counter__value" title="7888">7.9K</span></span></div><div class="tm-publication-hubs__container" data-test-id="articleHubsList"><div class="tm-publication-hubs"><!--[--><span class="tm-publication-hub__link-container"><a href="/ru/companies/ppr/articles/" class="tm-publication-hub__link"><!--[--><span>Блог компании Программный Продукт</span><!----><!--]--></a></span><span class="tm-publication-hub__link-container"><a href="/ru/hubs/groovy_grails/" class="tm-publication-hub__link"><!--[--><span>Groovy & Grails</span><span class="tm-article-snippet__profiled-hub" title="Профильный хаб">*</span><!--]--></a></span><span class="tm-publication-hub__link-container"><a href="/ru/hubs/android_dev/" class="tm-publication-hub__link"><!--[--><span>Разработка под Android</span><span class="tm-article-snippet__profiled-hub" title="Профильный хаб">*</span><!--]--></a></span><span class="tm-publication-hub__link-container"><a href="/ru/hubs/kotlin/" class="tm-publication-hub__link"><!--[--><span>Kotlin</span><span class="tm-article-snippet__profiled-hub" title="Профильный хаб">*</span><!--]--></a></span><!--]--></div></div><div class="tm-article-labels" data-test-id="articleLabels"><div class="tm-article-labels__container"><div class="tm-publication-label tm-publication-label_variant-tutorial"><span>Туториал</span></div><!--[--><!--]--></div></div><!----><!----></div></div><!--[--><!----><div class="tm-article-body" data-gallery-root lang="ru"><div><!--[--><!--]--></div><div id="post-content-body"><div><div class="article-formatted-body article-formatted-body article-formatted-body_version-2"><div xmlns="http://www.w3.org/1999/xhtml"><h4>Что такое DSL?  </h4><p>DSL (Domain-Specific Language) — это язык программирования, который спроектирован и оптимизирован для решения задач в конкретной области или для определенного класса задач. DSL build.gradle предоставляет разработчикам удобный способ определения настроек проекта и управления ими, используя специфический синтаксис, который Gradle понимает и обрабатывает. Этот DSL позволяет создавать мощные и гибкие сценарии сборки, которые могут быть легко настраиваемы для разных проектов и задач. </p><p>С Android Studio Giraffe Kotlin DSL становится новым стандартом для Gradle-скриптов в разработке Android. Когда вы создаете новые проекты, используя встроенные шаблоны IDE, вам будут предоставлены файлы Kotlin DSL вместо файлов Gradle на основе Groovy.</p><p>Это предстоящее изменение обеспечило возможность  переноса конфигураций Gradle на основе Groovy DSL на Kotlin DSL. Перевод файлов Gradle с Groovy на Kotlin DSL может значительно улучшить рабочий процесс разработки для Android. Особенно если вы уже знакомы с Kotlin. Такой переход на единый знакомый язык не только повышает вашу производительность, но и устраняет необходимость переключаться между двумя языками для выполнения задач разработки и настройки. Надежность и интуитивность Kotlin DSL дает уверенность в создании пользовательских задач Gradle без необходимости прибегать к зачастую нечеткому синтаксису Groovy.</p><p>Статья задумана, как руководство, которое поможет вам на этапе перехода на Kotlin DSL. Материал написан с акцентом на проекты Android, но обсуждаемые моменты могут быть применимы и к другим проектам на основе Gradle, таким как приложение Spring Boot.<br/>В первом разделе мы кратко опишем процесс перехода с Groovy на Kotlin DSL в целом. Далее будут перечислены все этапы миграции, через которые прошла наша команда.</p><h4>Процесс миграции</h4><p>Обычная структура одномодульных проектов Android в большинстве случаев имеет схожую структуру. Конечно, проект может использовать некоторые дополнительные конфигурационные файлы Gradle, но в целом, процесс миграции одинаков.</p><p>То же самое касается многомодульного проекта, где у вас есть отдельный <code>build.gradle</code> для каждого из модулей.</p><figure class="full-width "><img src="https://habrastorage.org/r/w1560/getpro/habr/upload_files/ff5/b44/dfd/ff5b44dfdc2177b939860aed7f0e583b.png" alt="Обычная одномодульная структура Gradle проекта Android  " title="Обычная одномодульная структура Gradle проекта Android  " width="1600" height="788" data-src="https://habrastorage.org/getpro/habr/upload_files/ff5/b44/dfd/ff5b44dfdc2177b939860aed7f0e583b.png"/><div><figcaption>Обычная одномодульная структура Gradle проекта Android  </figcaption></div></figure><p>Исходя из этой структуры, мы можем определить три файла Gradle на основе groovy, которые мы хотим преобразовать в Kotlin DSL:</p><ul><li><p><strong>settings.gradle</strong>: Файл <code>settings.gradle</code> отвечает за настройку и определение структуры модуля в проекте Android. Он расположен в корневом каталоге проекта и играет решающую роль в организации процесса сборки и управлении им.</p></li><li><p><strong>build.gradle на уровне проекта (Project-level)</strong>: Файл <code>build.gradle</code> на уровне проекта также находится в корневом каталоге и отвечает за настройку конфигураций для процесса сборки всего проекта. Он определяет глобальные настройки, репозитории и зависимости, которые применяются ко всем модулям в проекте.</p></li><li><p><strong>build.gradle на уровне модуля (Module-level)</strong>: Внутри каждого отдельного модуля в проекте Android (например, модуля приложения) находится файл <code>build.gradle</code>. Этот файл отвечает за настройку параметров сборки, зависимостей и отвечает за поведение этого конкретного модуля.</p></li></ul><p>Исходя из этой файловой структуры Gradle, структура миграции была следующей: </p><ol><li><p>Перенести файл <code>settings.gradle</code> в файл <code>settings.gradle.kts</code></p></li><li><p>Перенести файл <code>build.gradle</code> на уровне проекта в файл <code>build.gradle.kts</code></p></li><li><p>Перенести файлы <code>build.gradle</code> на уровне модуля в файлы <code>build.gradle.kts.</code></p></li></ol><p>Таким образом, у вас будет меньше всего конфликтов. Кроме того, часто помогает закомментировать разделы на каждом этапе миграции, где Kotlin DSL еще не применен, потому что у вас еще не было успешной сборки. Как только проект будет собран с использованием преобразованного файла, подключится  поддержка IDE, что позволит быстро устранять ошибки, не пытаясь угадать название свойства Groovy в Kotlin DSL.</p><h4>Миграционная энциклопедия</h4><p>Большинство проектных структур очень похожи. Даже при сложных настройках Gradle вы столкнетесь с одинаковыми проблемами в процессе миграции. Ниже приведен список проблем при миграции, на которые мы наткнулись, и способы их решения. В каждом подразделе объясняем, в чем заключается назначение фрагмента Gradle Groovy и как выглядит перенесенный код Kotlin DSL. </p><p>Если вы обнаружите какие-либо недостающие части, которые могут быть актуальны для более широкой аудитории, не стесняйтесь оставлять комментарий, и мы добавим их в статью.</p><h4>Замена одинарных кавычек двойными</h4><p>Для использования Kotlin DSL нужно убедиться, что используются двойные кавычки (") вместо одинарных кавычек (') для наших строк. Поэтому просмотрите файлы и поищите одинарные кавычки. Вы можете ускорить этот процесс, используя функцию поиска IntelliJ (Mac ⌘ + F; Windows Ctrl + F) или непосредственно функцию замены (Mac ⌘ + R; Windows Ctrl + R). </p><pre><code class="java">// build.gradle (Module-level)
implementation 'androidx.core:core-ktx:1.10.1'</code></pre><p>При переходе на Kotlin это будет выглядеть так.</p><pre><code class="kotlin">// build.gradle.kts (Module-level)
implementation("androidx.core:core-ktx:1.10.1")</code></pre><h4>Репозиторий плагинов Gradle</h4><p>Блок repositories используется для определения репозиториев, из которых могут быть взяты зависимости. Для каждого из наших репозиториев мы используем вызовы функций. Однако, объявление репозиториев в Kotlin DSL очень похоже на Groovy. Взгляните на следующее:</p><pre><code class="kotlin">// settings.gradle
pluginManagement {
    repositories {
        google()
        mavenCentral()
        gradlePluginPortal()
    }
}</code></pre><p>Для конвертации в Kotlin практически не требуется никаких модификаций, потому что команды в этом разделе используют тот же синтаксис, что и Groovy.</p><pre><code class="java">// settings.gradle.kts
pluginManagement {
    repositories {
        google()
        mavenCentral()
        gradlePluginPortal()
    }
}</code></pre><h4>Идентификатор плагина Gradle</h4><p>Обычно разработчики объявляют идентификатор плагина Gradle, который они хотят использовать на уровне проекта, и заводят его на уровне модуля в виде такого плагина DSL:</p><pre><code class="kotlin">// build.gradle (Project-level)
plugins {
    id 'com.android.application' version '8.1.1' apply false
    id 'org.jetbrains.kotlin.android' version '1.8.10' apply false
    id 'com.android.library' version '8.1.1' apply false
}
// build.gradle (Module-level)
plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
}</code></pre><p>При переходе на Kotlin это будет выглядеть так:</p><pre><code class="kotlin">// build.gradle.kts (Project-level)
plugins {
    id("com.android.application") version "8.1.1" apply false
    id("org.jetbrains.kotlin.android") version "1.8.10" apply false
}

// build.gradle.kts (Module-level)
plugins {
    id("com.android.application")
    id("org.jetbrains.kotlin.android")
}</code></pre><h4>Плагин Gradle, который все еще использует устаревшее приложение плагина</h4><p>Если у вас есть плагин Gradle, который использует устаревшее приложение плагина, рекомендуется перейти на плагин DSL. Возьмем, к примеру, плагин Google Play Services Gradle, который существует в проекте уже очень давно:</p><pre><code class="kotlin">// build.gradle (Project-level)
buildscript {
    dependencies {
        classpath "com.google.gms:google-services:4.3.15"
    }
}
// build.gradle (Module-level)
apply plugin: "com.google.gms.google-services"</code></pre><p>Вместо этого измените его на Plugin DSL:</p><pre><code class="kotlin">// build.gradle (Project-level)
plugins {
    id 'com.google.gms:google-services' version '4.3.15' apply false
}
// build.gradle (Module-level)
plugins {
    id 'com.google.gms.google-services'
}</code></pre><p>На Kotlin это будет выглядеть так:</p><pre><code class="kotlin">// build.gradle.kts (Project-level)
plugins {
    id("com.google.gms:google-services") version "4.3.15" apply false
}
// build.gradle (Module-level)
plugins {
    id("com.google.gms.google-services")
}</code></pre><h4>Сокращенный идентификатор плагина и функция расширения плагина Kotlin</h4><p>Некоторые плагины gradle могут быть объявлены сокращенно, например, плагин gradle Kotlin:  </p><pre><code class="kotlin">// Namespaced Plugin ID
id("org.jetbrains.kotlin.android")
// Shorthand Plugin ID
id("kotlin-android")</code></pre><div><div class="table"><table><tbody><tr><td><p align="left">Сокращенный</p></td><td><p align="left"><strong>Полностью</strong></p></td></tr><tr><td><p align="left">kotlin</p></td><td><p align="left">org.jetbrains.kotlin.jvm</p></td></tr><tr><td><p align="left">kotlin-android</p></td><td><p align="left">org.jetbrains.kotlin.android</p></td></tr><tr><td><p align="left">kotlin-kapt</p></td><td><p align="left">org.jetbrains.kotlin.kapt</p></td></tr><tr><td><p align="left">kotlin-parcelize</p></td><td><p align="left">org.jetbrains.kotlin.plugin.parcelize</p></td></tr></tbody></table></div></div><p>А для Kotlin DSL также предусмотрена функция расширения для плагина Gradle.</p><pre><code class="kotlin">// build.gradle.kts (Project-level)
plugins {
    kotlin("jvm") version "1.9.10" apply false
    kotlin("android") version "8.1.1" apply false
    kotlin("plugin.parcelize") version "1.9.10" apply false
}

// build.gradle.kts (Module-level)
plugins {
    kotlin("jvm")
    kotlin("android")
    kotlin("plugin.parcelize")
}</code></pre><p>Но функции расширения для Android нет.</p><h4>Миграции extra variables</h4><p>Extra variables (дополнительные переменные) обычно означают пользовательские переменные, которые могут быть определены и использованы в файле <code>build.gradle</code>. Эти переменные позволяют передавать пользовательские параметры или значения в ваш сценарий сборки, что делает сценарии более гибкими и настраиваемыми. Например, вы можете определить такие переменные в начале файла <code>build.gradle</code>:</p><pre><code class="kotlin">// build.gradle (Project-level)
buildscript {
   ext {
       minSdk = 26
       targetSdk = 34
   }
}

// build.gradle (Module-level)
android {
    defaultConfig {
       minSdk rootProject.minSdk
       targetSdk rootProject.targetSdk
    }
}</code></pre><p>На Kotlin это будет выглядеть так:</p><pre><code class="kotlin">// build.gradle.kts (Project-level)
buildscript {
    extra.apply {
        set("minSdk", 26)
        set("targetSdk", 34)
   }
}
// build.gradle.kts (Module-level)
android {
    defaultConfig {
        minSdk = rootProject.extra["minSdk"] as? Int?
        targetSdk = rootProject.extra["targetSdk"] as? Int?
    }
}</code></pre><h3>Репозиторий зависимостей в Gradle</h3><p>Репозиторий зависимостей в Gradle — это место, где Gradle ищет и загружает зависимости (библиотеки и пакеты), которые необходимы для сборки проекта. Gradle поддерживает различные типы репозиториев, такие как локальные репозитории, удаленные репозитории (например, Maven Central), и пользовательские репозитории.</p><pre><code class="kotlin">// settings.gradle
dependencyResolutionManagement {
    repositoriesMode.set(RepositoriesMode.FAIL_ON_PROJECT_REPOS)
    repositories {
        google()
        mavenCentral()
    }
}</code></pre><p>Так что его можно сразу переключить на Kotlin без каких-либо дополнительных усилий:</p><pre><code class="kotlin">// settings.gradle.kts
dependencyResolutionManagement {
    repositoriesMode.set(RepositoriesMode.FAIL_ON_PROJECT_REPOS)
    repositories {
        google()
        mavenCentral()
    }
}</code></pre><h4>Включение модулей Gradle</h4><p>В ваш <code>settings.gradle</code> включаете свой модуль Gradle. Для проекта с одним модулем —    это только модуль приложения. Если вы переносите многомодульный проект, вам следует перенести все включенные в него модули. Для <code>settings.gradle</code> вы можете преобразовать <code>include</code> следующим образом:</p><pre><code class="kotlin">// settings.gradle
include ':app'</code></pre><p>На Kotlin это будет выглядеть так:</p><pre><code class="kotlin">// settings.gradle.kts
include(":app")</code></pre><h4>Назначение и конфигурация Android по умолчанию</h4><p>При настройке параметров в Groovy у нас был синтаксис <code>parameterName</code> <code>value</code>. С помощью Kotlin DSL мы можем просто использовать оператор <code>=</code> между этими двумя значениями, чтобы присвоить значение параметру, если базовый код предоставляет изменяемую переменную. </p><p>Для конфигурации Android и <code>defaultConfig</code> результирующий скрипт можно найти в следующем примере фрагмента миграции:</p><pre><code class="kotlin">// build.gradle (Module-level)
android {
   namespace 'com.my.project'
   compileSdk 34
   defaultConfig {
       applicationId "com.my.project"
       minSdk 24
       targetSdk 34
       versionCode 1
       versionName "1.0"
       testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
       vectorDrawables {
           useSupportLibrary true
       }
   }
   /* ... */
}</code></pre><p>При переходе в Kotlin это выглядит так:</p><pre><code class="kotlin">// build.gradle.kts (Module-level)
android {
   namespace = "com.my.project"
   compileSdk = 34
   defaultConfig {
       applicationId = "com.my.project"
       minSdk = 24
       targetSdk = 34
       versionCode = 1
       versionName = "1.0"
       testInstrumentationRunner = "androidx.test.runner.AndroidJUnitRunner"
       vectorDrawables {
           useSupportLibrary = true
       }
   }
   /* ... */
}</code></pre><h4>Определение типов сборки</h4><p>В Gradle блок <code>buildTypes</code> можно использовать для определения различных конфигураций сборки для проекта Android. Каждый тип сборки представляет собой определенный вариант вашего приложения, такой как <code>debug</code> или <code>release</code>, со своим собственным набором параметров конфигурации.</p><p>Блок <code>buildTypes</code> позволяет настраивать различные аспекты сборок: включение или отключение отладки, включение сокращения кода и ресурсов, указание правил ProGuard, настройку имен выходных файлов и назначение конфигураций подписи.</p><p>Чтобы создать новый тип сборки с помощью Kotlin DSL аналогично созданию вариантов, мы можем использовать <code>create(..)</code>.</p><pre><code class="kotlin">// build.gradle (Module-level)
android {
    buildTypes {
        debug { /* ... */ }
        release { 
   	    minifyEnabled true
      proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
   	    signingConfig signingConfigs.release
            /* ... */ 
        }
        googlePlay { /* ... */ }
        galaxyStore { /* ... */ }
        appGallery { /* ... */ }
    }
}</code></pre><p>При переходе в Kotlin это выглядит так:</p><pre><code class="kotlin">// build.gradle.kts (Module-level)
android {
    buildTypes {
        debug { /* ... */ }
        release {
            isMinifyEnabled = true
 proguardFiles(getDefaultProguardFile("proguard-android-optimize.txt"), "proguard-rules.pro")
            signingConfig = signingConfigs.getByName("release")
		    /* ... */ 
        }
        create("googlePlay") { /* ... */ }
        create("galaxyStore") { /* ... */ }
        create("appGallery") { /* ... */ }
    }
}</code></pre><h4>Добавление product flavors</h4><p>Product flavors — это удобная функция для определения конкретных типов вашего приложения, в котором можно устанавливать различные маршруты для внутреннего сервера или других конфигураций, отличающихся  от вашей производственной сборки.</p><p>Давайте взглянем на пример миграции для определения компонента с именем <code>dev</code>. Обратите внимание, как мы используем функцию <code>.add(..)</code> вместо прямого вызова функции flavorDimensions, поскольку базовым значением является<code>MutableList&lt;String&gt;. </code></p><p>Теперь для создания flavors мы должны использовать синтаксис <code>create("ourFlavorName")</code> вместо прямого объявления имени перед блоком конфигурации. </p><p>Кроме того, чтобы добавить базовый URL, поскольку теперь нам приходится использовать двойные кавычки, нужно экранировать внутренние двойные кавычки нашей строки URL с помощью <code> "\</code>.</p><pre><code class="kotlin">// build.gradle (Module-level)
android {
    flavorDimensions = ['default', 'type', 'store']
    buildTypes {
        dev {
            dimension = 'type'
            applicationId 'dev.com.my.project'
   	    buildConfigField 'String', 'BASE_URL', '"https://api.devserver.com"'
            buildConfigField 'Boolean', 'ANALYTICS_ENABLED', 'true'
            /* ... */
        }
        production { 
            dimension "default"
            /* ... */
        }
    }
}</code></pre><p>Для создания <code>flavors</code> используем  синтаксис <code>create("ourFlavorName")</code> вместо прямого объявления имени перед блоком конфигурации.</p><pre><code class="python">// build.gradle.kts (Module-level)
android {
    flavorDimensions += listOf("default", "type", "store")
    buildTypes {
        create("dev") { 
  	    dimension = "app"
            applictionId = "dev.com.my.project"
            buildConfigField("String", "BASE_URL", "\"https://api.devserver.com\"")
            /* ... */
        }
        create("production") { 
            dimension = "default"
            /* ... */
        }
    }
}</code></pre><h4>Зависимости модулей</h4><p>В нашем проекте существует несколько способов объявления зависимостей:</p><ul><li><p><code>classpath</code>, используется для объявления зависимостей для самого процесса сборки. Он используется в блоке <code>buildscript</code> в файле <code>build.gradle</code> на уровне проекта.</p></li><li><p>Конфигурация<code> implementation </code>отвечает за объявление зависимостей, которые фактически используются и в нашем коде и во время выполнения.</p></li><li><p>Другим распространенным ключевым словом является <code>platform, </code>которое используется при объявлении зависимостей через спецификацию, из Firebase или Jetpack Compose.</p></li><li><p>При использовании процессоров аннотаций, таких как KAPT или KSP, мы также объявляем соответствующие зависимости в коде, используя ключевые слова <code>kapt</code> и <code>ksp.</code></p></li><li><p>При включении файлов из каталога, такого как libs, мы можем использовать ключевое слово  <code>fileTree.</code></p></li></ul><p>Ниже показан фрагмент кода для всех упомянутых ключевых слов:</p><pre><code class="kotlin">// build.gradle (Module-level)
dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation project(":library")
    implementation 'androidx.core:core-ktx:1.10.1'
	implementation platform('androidx.compose:compose-bom:2023.03.00')
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    debugImplementation 'androidx.compose.ui:ui-tooling'
    betaDebugImplementation 'com.github.chuckerteam.chucker:library:4.0.0'
	kapt "androidx.room:room-compiler:2.5.2"
 	ksp "androidx.room:room-compiler:2.5.2"
}</code></pre><p>В этой форме его можно преобразовать в Kotlin:</p><pre><code class="kotlin">// build.gradle.kts (Module-level)
dependencies {
 implementation(fileTree(mapOf("dir" to "libs", "include" to listOf("*.jar"))))
    implementation(project(":library"))
    implementation("androidx.core:core-ktx:1.10.1")
 	implementation(platform("androidx.compose:compose-bom:2023.03.00"))
    testImplementation("junit:junit:4.13.2")
    androidTestImplementation("androidx.test.espresso:espresso-core:3.5.1")
    debugImplementation("androidx.compose.ui:ui-tooling")
    "betaDebugImplementation"("com.github.chuckerteam.chucker:library:4.0.0")
 	kapt("androidx.room:room-compiler:2.5.2")
    ksp("androidx.room:room-compiler:2.5.2")
}</code></pre><h4>Настройки подписи</h4><p>Конфигурация подписи, которая используется для настройки различных значений хранилища ключей для подписи приложений:</p><pre><code class="kotlin">// build.gradle (Module-level)
android {
    signingConfigs {
        release {
		     storeFile file("store_file.jks")
            keyAlias properties['key_alias']
            keyPassword properties['key_password']
            storePassword properties['store_password']
        }
    }
}</code></pre><p>При переходе в Kotlin это выглядит так:</p><pre><code class="kotlin">// build.gradle.kts (Module-level)
android {
    signingConfigs {
        create("release") {
            storeFile = file(properties.getProperty("store_file..jks"))
            storePassword = properties.getProperty("store_password")
            keyAlias = properties.getProperty("key_alias")
            keyPassword = properties.getProperty("key_password")
        }
    }
}</code></pre><h4>Параметры компиляции</h4><p>Параметры компиляции, которые используются для настройки различных значений во время компиляции:</p><pre><code class="kotlin">// build.gradle (Module-level)
android {
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}</code></pre><p>При переходе в Kotlin это выглядит так</p><pre><code class="kotlin">// build.gradle.kts (Module-level)
android {
    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17
    }
}</code></pre><h4>Блок KotlinOptions</h4><p>KotlinOptions — это параметр, используемый в файле настроек сборки Gradle для проектов на языке программирования Kotlin. Он позволяет настраивать параметры компиляции и выполнения кода на Kotlin внутри вашего проекта Android.</p><pre><code class="kotlin">// build.gradle (Module-level)
android {
    kotlinOptions {
        jvmTarget = "17"
    }
}</code></pre><p>Его можно сразу конвертировать в Kotlin, ничего не меняя:</p><pre><code class="kotlin">// build.gradle.kts (Module-level)
android {
    kotlinOptions {
        jvmTarget = "17"
    }
}</code></pre><h4>Features сборки</h4><p>В функции сборки вы можете включить такие функции, как ViewBinding, RenderScript или Compose.</p><pre><code class="kotlin">// build.gradle (Module-level)
android {
    buildFeatures {
        viewBinding true
        dataBinding true
        compose true
    }
}</code></pre><p>При переходе в Kotlin это выглядит так:</p><pre><code class="kotlin">// build.gradle.kts (Module-level)
android {
    buildFeatures {
        viewBinding = true
        dataBinding = true
        compose = true
    }
}</code></pre><h4>Исключение ресурсов из вариантов упаковки</h4><p>В некоторых случаях необходимо исключить определенные ресурсы из окончательного пакета приложений. Для этой цели вы можете использовать <code>packagingOptions</code>, чтобы добавить правила исключения в раздел <code>resources</code>.</p><pre><code class="kotlin">// build.gradle (Module-level)
android {
    packaging {
        resources.excludes += '/META-INF/{AL2.0,LGPL2.1}'
    }
}</code></pre><p>При переходе в Kotlin это выглядит так:</p><pre><code class="kotlin">// build.gradle.kts (Module-level)
android {
    packaging {
        resources {
            excludes += setOf("/META-INF/{AL2.0,LGPL2.1}")
        }
    }
}</code></pre><h4>Настройка параметров тестирования</h4><p>Для адаптации конфигурации наших модульных тестов мы можем использовать блок UnitTests, включенный в блок <code>testOptions</code>. Здесь единственное, что нам нужно изменить—  это включить Android Resources в <code>isIncludeAndroidResources</code>, как вы можете видеть в следующих фрагментах:</p><pre><code class="kotlin">// build.gradle (Module-level)
android {
    testOptions {
        unitTests {
            includeAndroidResources true
            returnDefaultValues true
        }
        animationsDisabled true
    }
}</code></pre><p>При переходе в Kotlin это выглядит так:</p><pre><code class="kotlin">// build.gradle.kts (Module-level)
android {
    testOptions {
        unitTests {
            isIncludeAndroidResources = true
            isReturnDefaultValues = true
        }
        animationsDisabled = true
    }
}</code></pre><h4>Вывод</h4><p>Несмотря на доминирование Groovy в настройке скриптов Gradle и его сходство с Java, с которым должны быть знакомы многие разработчики Android или JVM, очень немногие изучают его полностью. Большую часть времени скрипты Gradle полагаются на фрагменты копирования-вставки из соответствующих документов framework, ответов StackOverflow или других источников, что не всегда может обеспечить наиболее оптимальное решение. Таким образом, переход на Kotlin DSL — это не только практическое изменение, но и шаг к улучшению сопровождаемости и читаемости вашего кода. </p><p>Это руководство основано на собственном процессе миграции и направлено на то, чтобы охватить широкий спектр сценариев, с которыми вы можете столкнуться во время вашего процесса миграции. Если вы знакомы с ситуацией, которая здесь не описана, то не стесняйтесь поделиться ею в комментариях, чтобы мы смогли обновить руководство.</p><p>Благодарим за внимание!</p><p></p></div></div></div><!----><!----></div><!----><!----></div><!--]--><!----><div class="tm-article-presenter__meta" data-test-id="article-meta-links"><div class="tm-separated-list tm-article-presenter__meta-list"><span class="tm-separated-list__title">Теги:</span><ul class="tm-separated-list__list"><!--[--><li class="tm-separated-list__item"><!--[--><a href="/ru/search/?target_type=posts&amp;order=relevance&amp;q=[kotlin]" class="tm-tags-list__link"><span>kotlin</span></a><!--]--></li><li class="tm-separated-list__item"><!--[--><a href="/ru/search/?target_type=posts&amp;order=relevance&amp;q=[groovy]" class="tm-tags-list__link"><span>groovy</span></a><!--]--></li><li class="tm-separated-list__item"><!--[--><a href="/ru/search/?target_type=posts&amp;order=relevance&amp;q=[android]" class="tm-tags-list__link"><span>android</span></a><!--]--></li><li class="tm-separated-list__item"><!--[--><a href="/ru/search/?target_type=posts&amp;order=relevance&amp;q=[%D0%BC%D0%B8%D0%B3%D1%80%D0%B0%D1%86%D0%B8%D1%8F]" class="tm-tags-list__link"><span>миграция</span></a><!--]--></li><li class="tm-separated-list__item"><!--[--><a href="/ru/search/?target_type=posts&amp;order=relevance&amp;q=[dsl]" class="tm-tags-list__link"><span>dsl</span></a><!--]--></li><li class="tm-separated-list__item"><!--[--><a href="/ru/search/?target_type=posts&amp;order=relevance&amp;q=[gradle]" class="tm-tags-list__link"><span>gradle</span></a><!--]--></li><li class="tm-separated-list__item"><!--[--><a href="/ru/search/?target_type=posts&amp;order=relevance&amp;q=[kts]" class="tm-tags-list__link"><span>kts</span></a><!--]--></li><!--]--><!----></ul></div><div class="tm-separated-list tm-article-presenter__meta-list"><span class="tm-separated-list__title">Хабы:</span><ul class="tm-separated-list__list"><!--[--><li class="tm-separated-list__item"><!--[--><a href="/ru/companies/ppr/articles/" class="tm-hubs-list__link"><!--[--><span>Блог компании Программный Продукт</span><!--]--></a><!--]--></li><li class="tm-separated-list__item"><!--[--><a href="/ru/hubs/groovy_grails/" class="tm-hubs-list__link"><!--[--><span>Groovy & Grails</span><!--]--></a><!--]--></li><li class="tm-separated-list__item"><!--[--><a href="/ru/hubs/android_dev/" class="tm-hubs-list__link"><!--[--><span>Разработка под Android</span><!--]--></a><!--]--></li><li class="tm-separated-list__item"><!--[--><a href="/ru/hubs/kotlin/" class="tm-hubs-list__link"><!--[--><span>Kotlin</span><!--]--></a><!--]--></li><!--]--><!----></ul></div></div><!----><!--]--></article><!--]--></div><!----></div><div style="" class="tm-article-sticky-panel" data-test-id="article-sticky-panel"><div class="tm-data-icons tm-data-icons tm-data-icons_space-big tm-article-sticky-panel__icons" data-test-id="article-stats-icons"><div class="tm-article-rating tm-data-icons__item"><div class="tm-votes-meter tm-article-rating__votes-switcher"><svg class="tm-svg-img tm-votes-meter__icon tm-votes-meter__icon tm-votes-meter__icon_appearance-article" height="24" width="24"><title>Всего голосов 7: ↑7 и ↓0</title><use xlink:href="/img/megazord-v28.371b7fa3..svg#counter-rating"></use></svg><span class="tm-votes-meter__value tm-votes-meter__value_positive tm-votes-meter__value_appearance-article tm-votes-meter__value_rating tm-votes-meter__value" data-test-id="votes-meter-value" title="Всего голосов 7: ↑7 и ↓0">+7</span></div><!--teleport start--><!--teleport end--><!----></div><!----><!----><button class="bookmarks-button tm-data-icons__item" title="Добавить в закладки" type="button"><span class="tm-svg-icon__wrapper bookmarks-button__icon"><svg class="tm-svg-img tm-svg-icon" height="24" width="24"><title>Добавить в закладки</title><use xlink:href="/img/megazord-v28.371b7fa3..svg#counter-favorite"></use></svg></span><span class="bookmarks-button__counter" title="Количество пользователей, добавивших публикацию в закладки">43</span></button><div class="tm-sharing tm-data-icons__item" title="Поделиться"><button class="tm-sharing__button" type="button"><svg viewbox="0 0 24 24" xmlns="http://www.w3.org/2000/svg" class="tm-sharing__icon"><path fill="currentColor" d="M13.8 13.8V18l7.2-6.6L13.8 5v3.9C5 8.9 3 18.6 3 18.6c2.5-4.4 6-4.8 10.8-4.8z"></path></svg></button><!--teleport start--><!--teleport end--></div><div class="tm-article-comments-counter-link tm-data-icons__item" title="Читать комментарии"><a href="/ru/companies/ppr/articles/765544/comments/" class="tm-article-comments-counter-link__link" data-test-id="counter-comments"><!--[--><svg class="tm-svg-img tm-article-comments-counter-link__icon" height="24" width="24"><title>Комментарии</title><use xlink:href="/img/megazord-v28.371b7fa3..svg#counter-comments"></use></svg><span class="tm-article-comments-counter-link__value">2</span><!--]--></a><!----></div><!--[--><!--[--><!--[--><!----><!--]--><!--]--><!--]--><!--teleport start--><!--teleport end--><!----></div></div></div><!--[--><!--]--><div class="tm-article-presenter__footer"><!--[--><!--[--><div class="tm-article-blocks"><!----><!--[--><section class="tm-block tm-block tm-block_spacing-bottom"><!----><!--[--><div class="tm-block__body tm-block__body tm-block__body_variant-balanced"><!--[--><div class="tm-article-author" data-test-id="article-author-info" data-async-called="true"><!--[--><!--[--><div class="tm-article-author__company"><div class="tm-article-author__company-card"><div class="tm-company-snippet"><a href="/ru/companies/ppr/profile/" class="tm-company-snippet__logo-link"><div class="tm-entity-image"><img alt="" class="tm-entity-image__pic" height="40" src="//habrastorage.org/getpro/habr/company/16b/fad/c05/16bfadc058a1b8a963fc4557d79f30fe.png" width="40"></div></a><div class="tm-company-snippet__info"><a href="/ru/companies/ppr/profile/" class="tm-company-snippet__title" data-test-id="company-title"><span>Программный Продукт</span></a><div class="tm-company-snippet__description">Создаем решения для государства и бизнеса</div></div></div><div class="tm-article-author__buttons"><!----><!----></div></div><div class="tm-article-author__company-contacts"><!--[--><a class="tm-article-author__contact" href="http://ppr.ru/ru/" rel="noopener" target="_blank">Сайт</a><!--]--></div><div class="tm-article-author__separator"></div></div><!--]--><!--]--><div class="tm-user-card tm-user-card tm-user-card_variant-article tm-article-author__user-card" data-async-called="true"><div class="tm-user-card__info-container"><div class="tm-user-card__header"><div class="tm-user-card__header-data"><a href="/ru/users/PPR/" class="tm-user-card__userpic tm-user-card__userpic_size-40"><div class="tm-entity-image"><img alt="" class="tm-entity-image__pic" src="//habrastorage.org/getpro/habr/avatars/474/1fb/0f8/4741fb0f8dabdbe1480fbc5ce537d15b.png"></div></a><div class="tm-user-card__meta"><div class="tm-counter-container tm-karma tm-karma" title=" 38 голосов "><div class="tm-counter-container__header"><!--[--><div class="karma-display positive" data-v-7635202e>20</div><!----><!--]--></div><div class="tm-counter-container__footer"><!--[--><div class="tm-karma__text">Карма</div><!--teleport start--><!--teleport end--><!--]--></div></div><div class="tm-counter-container" title="Рейтинг пользователя"><div class="tm-counter-container__header"><!--[--><!--[--><!--]--><div class="tm-votes-lever tm-votes-lever tm-votes-lever_appearance-rating"><!----><div class="tm-votes-lever__score tm-votes-lever__score_appearance-rating tm-votes-lever__score"><!--[--><span><span class="tm-votes-lever__score-counter tm-votes-lever__score-counter_rating tm-votes-lever__score-counter" data-test-id="votes-score-counter">22</span></span><!--]--></div><!----></div><!--]--></div><div class="tm-counter-container__footer"><!--[--><span class="tm-rating__text tm-rating__text">Рейтинг</span><!--]--></div></div></div></div></div><div class="tm-user-card__info tm-user-card__info_variant-article tm-user-card__info"><div class="tm-user-card__title tm-user-card__title_variant-article tm-user-card__title"><span class="tm-user-card__name tm-user-card__name_variant-article tm-user-card__name">Программный Продукт</span><a href="/ru/users/PPR/" class="tm-user-card__nickname tm-user-card__nickname tm-user-card__nickname_variant-article"> @PPR</a><!----></div><p class="tm-user-card__short-info tm-user-card__short-info_variant-article tm-user-card__short-info" data-test-id="user-card-speciality">Разработчик ПО</p></div></div><!----><div class="tm-user-card__buttons tm-user-card__buttons_variant-article tm-user-card__buttons"><!----><div class="tm-user-card__button"><div class="tm-button-follow tm-user-card__button-follow"><!----><button class="tm-button-follow__button tm-button-follow__button_big" data-test-id="follow-button" type="button">Подписаться</button></div></div><!----><div class="tm-user-card__button tm-user-card__button_write" data-test-id="user-card-conversations"><svg class="tm-svg-img tm-user-card__button-icon" height="16" width="16"><title>Отправить сообщение</title><use xlink:href="/img/megazord-v28.371b7fa3..svg#mail"></use></svg></div><!----></div><!----></div><div class="tm-article-author__user-contacts" data-test-id="author-contacts"><!----><!----><!--[--><a class="tm-article-author__contact" data-test-id="author-contact-link" href="https://ppr.ru/" rel="noopener" target="_blank">Сайт</a><a class="tm-article-author__contact" data-test-id="author-contact-link" href="https://facebook.com/programmproduct" rel="noopener" target="_blank">Facebook</a><a class="tm-article-author__contact" data-test-id="author-contact-link" href="https://vk.com/programmproduct" rel="noopener" target="_blank">ВКонтакте</a><a class="tm-article-author__contact" data-test-id="author-contact-link" href="https://instagram.com/programmproduct/" rel="noopener" target="_blank">Instagram</a><!--]--></div></div><!--]--></div><!--]--><!----></section><!----><!--[--><div class="banner-wrapper leaderboard tm-company-article__banner" style="--467224fc:200px;--58ff5eba:auto;" data-v-ad758baa><!--[--><div class="placeholder-wrapper placeholder" data-v-ad758baa><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><div class="adfox-banner-placeholder leaderboard" data-v-12f7bcca><div class="image loads" data-v-12f7bcca></div><div class="lines" data-v-12f7bcca><div class="line loads" data-v-12f7bcca></div><div class="line loads" data-v-12f7bcca></div><div class="line loads" data-v-12f7bcca></div></div></div><!----></div><div id="adfox_164725660339535756" class="tm-adfox-banner" data-v-ad758baa></div><!--]--></div><!----><!--]--><!--]--><div class="tm-article-blocks__comments"><div id="publication-comments" class="tm-article-page-comments"><div><!--[--><div class="tm-article-comments-counter-link tm-article-comments-counter-button"><a href="/ru/companies/ppr/articles/765544/comments/" class="tm-article-comments-counter-link__link tm-article-comments-counter-link__link_button-style" data-test-id="counter-comments"><!--[--><svg class="tm-svg-img tm-article-comments-counter-link__icon tm-article-comments-counter-link__icon_contrasted" height="24" width="24"><title>Комментарии</title><use xlink:href="/img/megazord-v28.371b7fa3..svg#counter-comments"></use></svg><span class="tm-article-comments-counter-link__value tm-article-comments-counter-link__value_contrasted"> Комментарии 2 </span><!--]--></a><!----></div><!--]--></div></div></div><!--[--><!--[--><!--]--><section class="tm-block tm-block tm-block_spacing-bottom"><header class="tm-block__header tm-block__header tm-block__header_variant-borderless"><div class="tm-block__header-container"><h2 class="tm-block__title tm-block__title tm-block__title_variant-large">Публикации</h2><!--[--><!--]--></div><!----></header><!--[--><div class="tm-block__body tm-block__body tm-block__body_variant-condensed-slim"><!--[--><!--[--><div class="tm-tabs tm-tabs"><div class=""><!--[--><span class="tm-tabs__tab-item"><button class="tm-tabs__tab-link tm-tabs__tab-link_active tm-tabs__tab-link_slim tm-tabs__tab-link">Лучшие за сутки</button></span><span class="tm-tabs__tab-item"><button class="tm-tabs__tab-link tm-tabs__tab-link_slim tm-tabs__tab-link">Похожие</button></span><!--]--></div><!----></div><div class="similar-and-daily__tab-view"><div class="placeholder-wrapper"><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><div class="tm-placeholder-article-cards"><!--[--><div class="tm-placeholder-article-card"><div class="tm-placeholder__user"><div class="tm-placeholder__user-pic loads"></div><div class="tm-placeholder__user-date loads"></div></div><div class="tm-placeholder-article-card__title"><div class="tm-placeholder__line tm-placeholder-article-card__title-line loads"></div><div class="tm-placeholder__line tm-placeholder-article-card__title-line loads"></div></div><div class="tm-placeholder-article-card__icons tm-placeholder__counters"><!--[--><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div><div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div><div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div><div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div><div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><!--]--></div></div><div class="tm-placeholder-article-card"><div class="tm-placeholder__user"><div class="tm-placeholder__user-pic loads"></div><div class="tm-placeholder__user-date loads"></div></div><div class="tm-placeholder-article-card__title"><div class="tm-placeholder__line tm-placeholder-article-card__title-line loads"></div><div class="tm-placeholder__line tm-placeholder-article-card__title-line loads"></div></div><div class="tm-placeholder-article-card__icons tm-placeholder__counters"><!--[--><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div><div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div><div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div><div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div><div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><!--]--></div></div><div class="tm-placeholder-article-card"><div class="tm-placeholder__user"><div class="tm-placeholder__user-pic loads"></div><div class="tm-placeholder__user-date loads"></div></div><div class="tm-placeholder-article-card__title"><div class="tm-placeholder__line tm-placeholder-article-card__title-line loads"></div><div class="tm-placeholder__line tm-placeholder-article-card__title-line loads"></div></div><div class="tm-placeholder-article-card__icons tm-placeholder__counters"><!--[--><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div><div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div><div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div><div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div><div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><!--]--></div></div><div class="tm-placeholder-article-card"><div class="tm-placeholder__user"><div class="tm-placeholder__user-pic loads"></div><div class="tm-placeholder__user-date loads"></div></div><div class="tm-placeholder-article-card__title"><div class="tm-placeholder__line tm-placeholder-article-card__title-line loads"></div><div class="tm-placeholder__line tm-placeholder-article-card__title-line loads"></div></div><div class="tm-placeholder-article-card__icons tm-placeholder__counters"><!--[--><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div><div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div><div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div><div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div><div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><!--]--></div></div><div class="tm-placeholder-article-card"><div class="tm-placeholder__user"><div class="tm-placeholder__user-pic loads"></div><div class="tm-placeholder__user-date loads"></div></div><div class="tm-placeholder-article-card__title"><div class="tm-placeholder__line tm-placeholder-article-card__title-line loads"></div><div class="tm-placeholder__line tm-placeholder-article-card__title-line loads"></div></div><div class="tm-placeholder-article-card__icons tm-placeholder__counters"><!--[--><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div><div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div><div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div><div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div><div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><!--]--></div></div><!--]--></div><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----></div><!----></div><!--]--><!--]--></div><!--]--><!----></section><!--[--><!--[--><section class="tm-block tm-block tm-block_spacing-around tm-stories-block" data-navigatable tabindex="0" data-async-called="true"><header class="tm-block__header tm-block__header"><div class="tm-block__header-container"><h2 class="tm-block__title tm-block__title">Истории</h2><!--[--><!--]--></div><!----></header><!--[--><div class="tm-block__body tm-block__body tm-block__body_variant-equal"><!--[--><div class="tm-stories-empty"><!--[--><div class="tm-stories-card-empty"><div class="tm-stories-card-empty__image"></div><div class="tm-stories-card-empty__title"><div class="tm-stories-card-empty__title-block"></div><div class="tm-stories-card-empty__title-block"></div><div class="tm-stories-card-empty__title-block"></div></div></div><div class="tm-stories-card-empty"><div class="tm-stories-card-empty__image"></div><div class="tm-stories-card-empty__title"><div class="tm-stories-card-empty__title-block"></div><div class="tm-stories-card-empty__title-block"></div><div class="tm-stories-card-empty__title-block"></div></div></div><div class="tm-stories-card-empty"><div class="tm-stories-card-empty__image"></div><div class="tm-stories-card-empty__title"><div class="tm-stories-card-empty__title-block"></div><div class="tm-stories-card-empty__title-block"></div><div class="tm-stories-card-empty__title-block"></div></div></div><div class="tm-stories-card-empty"><div class="tm-stories-card-empty__image"></div><div class="tm-stories-card-empty__title"><div class="tm-stories-card-empty__title-block"></div><div class="tm-stories-card-empty__title-block"></div><div class="tm-stories-card-empty__title-block"></div></div></div><div class="tm-stories-card-empty"><div class="tm-stories-card-empty__image"></div><div class="tm-stories-card-empty__title"><div class="tm-stories-card-empty__title-block"></div><div class="tm-stories-card-empty__title-block"></div><div class="tm-stories-card-empty__title-block"></div></div></div><div class="tm-stories-card-empty"><div class="tm-stories-card-empty__image"></div><div class="tm-stories-card-empty__title"><div class="tm-stories-card-empty__title-block"></div><div class="tm-stories-card-empty__title-block"></div><div class="tm-stories-card-empty__title-block"></div></div></div><!--]--></div><!----><!--]--></div><!--]--><!----></section><div class="placeholder-wrapper"><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><div class="tm-placeholder-inset tm-placeholder-courses"><div class="tm-placeholder-inset__header"><div class="tm-placeholder__line tm-placeholder__line_inset-header loads"></div></div><div class="tm-placeholder-inset__body"><ul class="tm-placeholder-list"><!--[--><li class="tm-placeholder-list__item tm-placeholder-list__item_inset"><div class="tm-placeholder-list__title-container"><div class="tm-placeholder__company-avatar"></div><div class="tm-placeholder__line tm-placeholder__line_item-title loads"></div></div><div class="tm-project-block-items__properties"><!--[--><span class="tm-project-block-items__property-item"><span class="tm-placeholder__line loads" style="width:100px;"></span></span><span class="tm-project-block-items__property-item"><span class="tm-placeholder__line loads" style="width:100px;"></span></span><span class="tm-project-block-items__property-item"><span class="tm-placeholder__line loads" style="width:100px;"></span></span><!--]--></div></li><li class="tm-placeholder-list__item tm-placeholder-list__item_inset"><div class="tm-placeholder-list__title-container"><div class="tm-placeholder__company-avatar"></div><div class="tm-placeholder__line tm-placeholder__line_item-title loads"></div></div><div class="tm-project-block-items__properties"><!--[--><span class="tm-project-block-items__property-item"><span class="tm-placeholder__line loads" style="width:100px;"></span></span><span class="tm-project-block-items__property-item"><span class="tm-placeholder__line loads" style="width:100px;"></span></span><span class="tm-project-block-items__property-item"><span class="tm-placeholder__line loads" style="width:100px;"></span></span><!--]--></div></li><li class="tm-placeholder-list__item tm-placeholder-list__item_inset"><div class="tm-placeholder-list__title-container"><div class="tm-placeholder__company-avatar"></div><div class="tm-placeholder__line tm-placeholder__line_item-title loads"></div></div><div class="tm-project-block-items__properties"><!--[--><span class="tm-project-block-items__property-item"><span class="tm-placeholder__line loads" style="width:100px;"></span></span><span class="tm-project-block-items__property-item"><span class="tm-placeholder__line loads" style="width:100px;"></span></span><span class="tm-project-block-items__property-item"><span class="tm-placeholder__line loads" style="width:100px;"></span></span><!--]--></div></li><li class="tm-placeholder-list__item tm-placeholder-list__item_inset"><div class="tm-placeholder-list__title-container"><div class="tm-placeholder__company-avatar"></div><div class="tm-placeholder__line tm-placeholder__line_item-title loads"></div></div><div class="tm-project-block-items__properties"><!--[--><span class="tm-project-block-items__property-item"><span class="tm-placeholder__line loads" style="width:100px;"></span></span><span class="tm-project-block-items__property-item"><span class="tm-placeholder__line loads" style="width:100px;"></span></span><span class="tm-project-block-items__property-item"><span class="tm-placeholder__line loads" style="width:100px;"></span></span><!--]--></div></li><li class="tm-placeholder-list__item tm-placeholder-list__item_inset"><div class="tm-placeholder-list__title-container"><div class="tm-placeholder__company-avatar"></div><div class="tm-placeholder__line tm-placeholder__line_item-title loads"></div></div><div class="tm-project-block-items__properties"><!--[--><span class="tm-project-block-items__property-item"><span class="tm-placeholder__line loads" style="width:100px;"></span></span><span class="tm-project-block-items__property-item"><span class="tm-placeholder__line loads" style="width:100px;"></span></span><span class="tm-project-block-items__property-item"><span class="tm-placeholder__line loads" style="width:100px;"></span></span><!--]--></div></li><!--]--></ul></div><div class="tm-placeholder-inset__footer"><div class="tm-placeholder__line tm-placeholder__line_inset-footer loads"></div></div></div><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----></div><!--]--><!--]--><!----><!--[--><div><div class="placeholder-wrapper"><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><div class="tm-placeholder-promo"><div class="tm-placeholder-promo__header"><div class="tm-placeholder__line tm-placeholder__line_promo-title"></div></div><div class="tm-placeholder-promo__body"><div class="tm-placeholder-promo__posts"><div class="tm-placeholder-promo__post"><div class="tm-placeholder-promo__image"></div><div class="tm-placeholder__line tm-placeholder__line_post-title"></div></div><div class="tm-placeholder-promo__post"><div class="tm-placeholder-promo__image"></div><div class="tm-placeholder__line tm-placeholder__line_post-title"></div></div><div class="tm-placeholder-promo__post"><div class="tm-placeholder-promo__image"></div><div class="tm-placeholder__line tm-placeholder__line_post-title"></div></div></div><div class="tm-placeholder-promo__dots"><div class="tm-placeholder-promo__dot"></div><div class="tm-placeholder-promo__dot"></div><div class="tm-placeholder-promo__dot"></div></div></div></div><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----></div></div><!--]--><!--]--></div><!--]--><!--]--></div></div><!--]--><!--]--></div></div><div class="tm-page__sidebar"><!--[--><!----><!--]--></div></div><!----><!--]--></div></div></main><!----></div><!----><div class="tm-footer"><div class="tm-page-width"><!--[--><div class="tm-footer__container"><div class="tm-footer__title"><a class="tm-svg-icon__wrapper tm-footer__title-link" href="/ru/"><svg class="tm-svg-img tm-svg-icon" height="16" width="16"><title>Хабр</title><use xlink:href="/img/habr-logo-ru.svg#logo"></use></svg></a></div><div class="tm-footer__social"><!--[--><a class="tm-svg-icon__wrapper tm-social-icons__icon" href="https://www.facebook.com/habrahabr.ru" rel="nofollow noopener noreferrer" target="_blank"><svg class="tm-svg-img tm-svg-icon" height="36" width="36"><title>Facebook</title><use xlink:href="/img/new-social-icons-sprite.svg#social-logo-facebook"></use></svg></a><a class="tm-svg-icon__wrapper tm-social-icons__icon" href="https://twitter.com/habr_com" rel="nofollow noopener noreferrer" target="_blank"><svg class="tm-svg-img tm-svg-icon" height="36" width="36"><title>Twitter</title><use xlink:href="/img/new-social-icons-sprite.svg#social-logo-twitter"></use></svg></a><a class="tm-svg-icon__wrapper tm-social-icons__icon" href="https://vk.com/habr" rel="nofollow noopener noreferrer" target="_blank"><svg class="tm-svg-img tm-svg-icon" height="36" width="36"><title>VK</title><use xlink:href="/img/new-social-icons-sprite.svg#social-logo-vk"></use></svg></a><a class="tm-svg-icon__wrapper tm-social-icons__icon" href="https://telegram.me/habr_com" rel="nofollow noopener noreferrer" target="_blank"><svg class="tm-svg-img tm-svg-icon" height="36" width="36"><title>Telegram</title><use xlink:href="/img/new-social-icons-sprite.svg#social-logo-telegram"></use></svg></a><a class="tm-svg-icon__wrapper tm-social-icons__icon" href="https://www.youtube.com/channel/UCd_sTwKqVrweTt4oAKY5y4w" rel="nofollow noopener noreferrer" target="_blank"><svg class="tm-svg-img tm-svg-icon" height="36" width="36"><title>Youtube</title><use xlink:href="/img/new-social-icons-sprite.svg#social-logo-youtube"></use></svg></a><a class="tm-svg-icon__wrapper tm-social-icons__icon" href="https://dzen.ru/habr" rel="nofollow noopener noreferrer" target="_blank"><svg class="tm-svg-img tm-svg-icon" height="36" width="36"><title>Яндекс Дзен</title><use xlink:href="/img/new-social-icons-sprite.svg#social-logo-dzen"></use></svg></a><!--]--></div><!--teleport start--><!--teleport end--><button class="tm-footer__link"><svg class="tm-svg-img tm-footer__icon" height="16" width="16"><title>Язык</title><use xlink:href="/img/megazord-v28.371b7fa3..svg#lang"></use></svg> Настройка языка</button><a href="/ru/feedback/" class="tm-footer__link">Техническая поддержка</a><div class="tm-footer-copyright"><span class="tm-copyright"><span class="tm-copyright__years">© 2006–2025, </span><span class="tm-copyright__name"><a class="tm-copyright__link" href="https://company.habr.com/" rel="noopener" target="_blank">Habr</a></span></span></div></div><!--]--></div></div><!----><!--]--></div><!----></div><script>window.__INITIAL_STATE__={"adblock":{"hasAcceptableAdsFilter":false,"hasAdblock":false},"articlesList":{"articlesList":{"765544":{"id":"765544","timePublished":"2023-10-05T11:14:54+00:00","isCorporative":true,"lang":"ru","titleHtml":"Миграция конфигурации сборки с Groovy на Kotlin","leadData":{"textHtml":"\u003Cp\u003EDSL (Domain-Specific Language) — это язык программирования, который спроектирован и оптимизирован для решения задач в конкретной области или для определенного класса задач. DSL build.gradle предоставляет разработчикам удобный способ определения настроек проекта и управления ими, используя специфический синтаксис, который Gradle понимает и обрабатывает. Этот DSL позволяет создавать мощные и гибкие сценарии сборки, которые могут быть легко настраиваемы для разных проектов и задач.\u003C\u002Fp\u003E\u003Cp\u003EС Android Studio Giraffe Kotlin DSL становится новым стандартом для Gradle-скриптов в разработке Android. Когда вы создаете новые проекты, используя встроенные шаблоны IDE, вам будут предоставлены файлы Kotlin DSL вместо файлов Gradle на основе Groovy.\u003C\u002Fp\u003E\u003Cp\u003EЭто предстоящее изменение обеспечило возможность&nbsp; переноса конфигураций Gradle на основе Groovy DSL на Kotlin DSL. Перевод файлов Gradle с Groovy на Kotlin DSL может значительно улучшить рабочий процесс разработки для Android. Особенно, если вы уже знакомы с Kotlin. Такой переход на единый знакомый язык не только повышает вашу производительность, но и устраняет необходимость переключаться между двумя языками для выполнения задач разработки и настройки. Надежность и интуитивность Kotlin DSL дает уверенность в создании пользовательских задач Gradle без необходимости прибегать к зачастую нечеткому синтаксису Groovy.\u003C\u002Fp\u003E\u003Cp\u003EСтатья задумана, как руководство, которое поможет вам на этапе перехода на Kotlin DSL. Материал написан с акцентом на проекты Android, но обсуждаемые моменты могут быть применимы и к другим проектам на основе Gradle, таким как приложение Spring Boot.\u003C\u002Fp\u003E\u003Cp\u003E\u003C\u002Fp\u003E","imageUrl":null,"buttonTextHtml":"Читать далее","image":null},"editorVersion":"2.0","postType":"article","postLabels":[],"author":{"id":"1578911","alias":"PPR","fullname":"Программный Продукт","avatarUrl":"\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Favatars\u002F474\u002F1fb\u002F0f8\u002F4741fb0f8dabdbe1480fbc5ce537d15b.png","speciality":"Разработчик ПО","scoreStats":{"score":20,"votesCount":38},"rating":22,"relatedData":null,"contacts":[{"title":"Сайт","url":"https:\u002F\u002Fppr.ru\u002F","value":"https:\u002F\u002Fppr.ru\u002F","siteTitle":null,"favicon":null},{"title":"Facebook","url":"https:\u002F\u002Ffacebook.com\u002Fprogrammproduct","value":"programmproduct","siteTitle":null,"favicon":null},{"title":"ВКонтакте","url":"https:\u002F\u002Fvk.com\u002Fprogrammproduct","value":"programmproduct","siteTitle":null,"favicon":null},{"title":"Instagram","url":"https:\u002F\u002Finstagram.com\u002Fprogrammproduct\u002F","value":"programmproduct","siteTitle":null,"favicon":null}],"authorContacts":[{"title":"Сайт","url":"https:\u002F\u002Fppr.ru\u002F","value":"https:\u002F\u002Fppr.ru\u002F","siteTitle":null,"favicon":null},{"title":"Facebook","url":"https:\u002F\u002Ffacebook.com\u002Fprogrammproduct","value":"programmproduct","siteTitle":null,"favicon":null},{"title":"ВКонтакте","url":"https:\u002F\u002Fvk.com\u002Fprogrammproduct","value":"programmproduct","siteTitle":null,"favicon":null},{"title":"Instagram","url":"https:\u002F\u002Finstagram.com\u002Fprogrammproduct\u002F","value":"programmproduct","siteTitle":null,"favicon":null}],"paymentDetails":{"paymentYandexMoney":null,"paymentPayPalMe":null,"paymentWebmoney":null},"donationsMethod":null,"isInBlacklist":null,"careerProfile":null},"statistics":{"commentsCount":2,"favoritesCount":43,"readingCount":7888,"score":7,"votesCount":7,"votesCountPlus":7,"votesCountMinus":0},"hubs":[{"id":"21450","alias":"ppr","type":"corporative","title":"Блог компании Программный Продукт","titleHtml":"Блог компании Программный Продукт","isProfiled":false,"relatedData":null},{"id":"5688","alias":"groovy_grails","type":"collective","title":"Groovy & Grails","titleHtml":"Groovy & Grails","isProfiled":true,"relatedData":null},{"id":"17107","alias":"android_dev","type":"collective","title":"Разработка под Android","titleHtml":"Разработка под Android","isProfiled":true,"relatedData":null},{"id":"19441","alias":"kotlin","type":"collective","title":"Kotlin","titleHtml":"Kotlin","isProfiled":true,"relatedData":null}],"flows":[{"id":"1","alias":"develop","title":"Разработка","titleHtml":"Разработка"}],"relatedData":{"vote":null,"unreadCommentsCount":0,"bookmarked":false,"canComment":false,"canEdit":false,"canViewVotes":false,"votePlus":{"canVote":false,"isChargeEnough":false,"isKarmaEnough":false,"isVotingOver":true,"isPublicationLimitEnough":false},"voteMinus":{"canVote":false,"isChargeEnough":false,"isKarmaEnough":false,"isVotingOver":true,"isPublicationLimitEnough":false},"canModerateComments":false,"trackerSubscribed":false,"emailSubscribed":false},"textHtml":"\u003Cdiv xmlns=\"http:\u002F\u002Fwww.w3.org\u002F1999\u002Fxhtml\"\u003E\u003Ch4\u003EЧто такое DSL?  \u003C\u002Fh4\u003E\u003Cp\u003EDSL (Domain-Specific Language) — это язык программирования, который спроектирован и оптимизирован для решения задач в конкретной области или для определенного класса задач. DSL build.gradle предоставляет разработчикам удобный способ определения настроек проекта и управления ими, используя специфический синтаксис, который Gradle понимает и обрабатывает. Этот DSL позволяет создавать мощные и гибкие сценарии сборки, которые могут быть легко настраиваемы для разных проектов и задач. \u003C\u002Fp\u003E\u003Cp\u003EС Android Studio Giraffe Kotlin DSL становится новым стандартом для Gradle-скриптов в разработке Android. Когда вы создаете новые проекты, используя встроенные шаблоны IDE, вам будут предоставлены файлы Kotlin DSL вместо файлов Gradle на основе Groovy.\u003C\u002Fp\u003E\u003Cp\u003EЭто предстоящее изменение обеспечило возможность  переноса конфигураций Gradle на основе Groovy DSL на Kotlin DSL. Перевод файлов Gradle с Groovy на Kotlin DSL может значительно улучшить рабочий процесс разработки для Android. Особенно если вы уже знакомы с Kotlin. Такой переход на единый знакомый язык не только повышает вашу производительность, но и устраняет необходимость переключаться между двумя языками для выполнения задач разработки и настройки. Надежность и интуитивность Kotlin DSL дает уверенность в создании пользовательских задач Gradle без необходимости прибегать к зачастую нечеткому синтаксису Groovy.\u003C\u002Fp\u003E\u003Cp\u003EСтатья задумана, как руководство, которое поможет вам на этапе перехода на Kotlin DSL. Материал написан с акцентом на проекты Android, но обсуждаемые моменты могут быть применимы и к другим проектам на основе Gradle, таким как приложение Spring Boot.\u003Cbr\u002F\u003EВ первом разделе мы кратко опишем процесс перехода с Groovy на Kotlin DSL в целом. Далее будут перечислены все этапы миграции, через которые прошла наша команда.\u003C\u002Fp\u003E\u003Ch4\u003EПроцесс миграции\u003C\u002Fh4\u003E\u003Cp\u003EОбычная структура одномодульных проектов Android в большинстве случаев имеет схожую структуру. Конечно, проект может использовать некоторые дополнительные конфигурационные файлы Gradle, но в целом, процесс миграции одинаков.\u003C\u002Fp\u003E\u003Cp\u003EТо же самое касается многомодульного проекта, где у вас есть отдельный \u003Ccode\u003Ebuild.gradle\u003C\u002Fcode\u003E для каждого из модулей.\u003C\u002Fp\u003E\u003Cfigure class=\"full-width \"\u003E\u003Cimg src=\"https:\u002F\u002Fhabrastorage.org\u002Fr\u002Fw1560\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fff5\u002Fb44\u002Fdfd\u002Fff5b44dfdc2177b939860aed7f0e583b.png\" alt=\"Обычная одномодульная структура Gradle проекта Android  \" title=\"Обычная одномодульная структура Gradle проекта Android  \" width=\"1600\" height=\"788\" data-src=\"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fff5\u002Fb44\u002Fdfd\u002Fff5b44dfdc2177b939860aed7f0e583b.png\"\u002F\u003E\u003Cdiv\u003E\u003Cfigcaption\u003EОбычная одномодульная структура Gradle проекта Android  \u003C\u002Ffigcaption\u003E\u003C\u002Fdiv\u003E\u003C\u002Ffigure\u003E\u003Cp\u003EИсходя из этой структуры, мы можем определить три файла Gradle на основе groovy, которые мы хотим преобразовать в Kotlin DSL:\u003C\u002Fp\u003E\u003Cul\u003E\u003Cli\u003E\u003Cp\u003E\u003Cstrong\u003Esettings.gradle\u003C\u002Fstrong\u003E: Файл \u003Ccode\u003Esettings.gradle\u003C\u002Fcode\u003E отвечает за настройку и определение структуры модуля в проекте Android. Он расположен в корневом каталоге проекта и играет решающую роль в организации процесса сборки и управлении им.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003E\u003Cstrong\u003Ebuild.gradle на уровне проекта (Project-level)\u003C\u002Fstrong\u003E: Файл \u003Ccode\u003Ebuild.gradle\u003C\u002Fcode\u003E на уровне проекта также находится в корневом каталоге и отвечает за настройку конфигураций для процесса сборки всего проекта. Он определяет глобальные настройки, репозитории и зависимости, которые применяются ко всем модулям в проекте.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003E\u003Cstrong\u003Ebuild.gradle на уровне модуля (Module-level)\u003C\u002Fstrong\u003E: Внутри каждого отдельного модуля в проекте Android (например, модуля приложения) находится файл \u003Ccode\u003Ebuild.gradle\u003C\u002Fcode\u003E. Этот файл отвечает за настройку параметров сборки, зависимостей и отвечает за поведение этого конкретного модуля.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003C\u002Ful\u003E\u003Cp\u003EИсходя из этой файловой структуры Gradle, структура миграции была следующей: \u003C\u002Fp\u003E\u003Col\u003E\u003Cli\u003E\u003Cp\u003EПеренести файл \u003Ccode\u003Esettings.gradle\u003C\u002Fcode\u003E в файл \u003Ccode\u003Esettings.gradle.kts\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003EПеренести файл \u003Ccode\u003Ebuild.gradle\u003C\u002Fcode\u003E на уровне проекта в файл \u003Ccode\u003Ebuild.gradle.kts\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003EПеренести файлы \u003Ccode\u003Ebuild.gradle\u003C\u002Fcode\u003E на уровне модуля в файлы \u003Ccode\u003Ebuild.gradle.kts.\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003C\u002Fol\u003E\u003Cp\u003EТаким образом, у вас будет меньше всего конфликтов. Кроме того, часто помогает закомментировать разделы на каждом этапе миграции, где Kotlin DSL еще не применен, потому что у вас еще не было успешной сборки. Как только проект будет собран с использованием преобразованного файла, подключится  поддержка IDE, что позволит быстро устранять ошибки, не пытаясь угадать название свойства Groovy в Kotlin DSL.\u003C\u002Fp\u003E\u003Ch4\u003EМиграционная энциклопедия\u003C\u002Fh4\u003E\u003Cp\u003EБольшинство проектных структур очень похожи. Даже при сложных настройках Gradle вы столкнетесь с одинаковыми проблемами в процессе миграции. Ниже приведен список проблем при миграции, на которые мы наткнулись, и способы их решения. В каждом подразделе объясняем, в чем заключается назначение фрагмента Gradle Groovy и как выглядит перенесенный код Kotlin DSL. \u003C\u002Fp\u003E\u003Cp\u003EЕсли вы обнаружите какие-либо недостающие части, которые могут быть актуальны для более широкой аудитории, не стесняйтесь оставлять комментарий, и мы добавим их в статью.\u003C\u002Fp\u003E\u003Ch4\u003EЗамена одинарных кавычек двойными\u003C\u002Fh4\u003E\u003Cp\u003EДля использования Kotlin DSL нужно убедиться, что используются двойные кавычки (\") вместо одинарных кавычек (') для наших строк. Поэтому просмотрите файлы и поищите одинарные кавычки. Вы можете ускорить этот процесс, используя функцию поиска IntelliJ (Mac ⌘ + F; Windows Ctrl + F) или непосредственно функцию замены (Mac ⌘ + R; Windows Ctrl + R). \u003C\u002Fp\u003E\u003Cpre\u003E\u003Ccode class=\"java\"\u003E\u002F\u002F build.gradle (Module-level)\nimplementation 'androidx.core:core-ktx:1.10.1'\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EПри переходе на Kotlin это будет выглядеть так.\u003C\u002Fp\u003E\u003Cpre\u003E\u003Ccode class=\"kotlin\"\u003E\u002F\u002F build.gradle.kts (Module-level)\nimplementation(\"androidx.core:core-ktx:1.10.1\")\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Ch4\u003EРепозиторий плагинов Gradle\u003C\u002Fh4\u003E\u003Cp\u003EБлок repositories используется для определения репозиториев, из которых могут быть взяты зависимости. Для каждого из наших репозиториев мы используем вызовы функций. Однако, объявление репозиториев в Kotlin DSL очень похоже на Groovy. Взгляните на следующее:\u003C\u002Fp\u003E\u003Cpre\u003E\u003Ccode class=\"kotlin\"\u003E\u002F\u002F settings.gradle\npluginManagement {\n    repositories {\n        google()\n        mavenCentral()\n        gradlePluginPortal()\n    }\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EДля конвертации в Kotlin практически не требуется никаких модификаций, потому что команды в этом разделе используют тот же синтаксис, что и Groovy.\u003C\u002Fp\u003E\u003Cpre\u003E\u003Ccode class=\"java\"\u003E\u002F\u002F settings.gradle.kts\npluginManagement {\n    repositories {\n        google()\n        mavenCentral()\n        gradlePluginPortal()\n    }\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Ch4\u003EИдентификатор плагина Gradle\u003C\u002Fh4\u003E\u003Cp\u003EОбычно разработчики объявляют идентификатор плагина Gradle, который они хотят использовать на уровне проекта, и заводят его на уровне модуля в виде такого плагина DSL:\u003C\u002Fp\u003E\u003Cpre\u003E\u003Ccode class=\"kotlin\"\u003E\u002F\u002F build.gradle (Project-level)\nplugins {\n    id 'com.android.application' version '8.1.1' apply false\n    id 'org.jetbrains.kotlin.android' version '1.8.10' apply false\n    id 'com.android.library' version '8.1.1' apply false\n}\n\u002F\u002F build.gradle (Module-level)\nplugins {\n    id 'com.android.application'\n    id 'org.jetbrains.kotlin.android'\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EПри переходе на Kotlin это будет выглядеть так:\u003C\u002Fp\u003E\u003Cpre\u003E\u003Ccode class=\"kotlin\"\u003E\u002F\u002F build.gradle.kts (Project-level)\nplugins {\n    id(\"com.android.application\") version \"8.1.1\" apply false\n    id(\"org.jetbrains.kotlin.android\") version \"1.8.10\" apply false\n}\n\n\u002F\u002F build.gradle.kts (Module-level)\nplugins {\n    id(\"com.android.application\")\n    id(\"org.jetbrains.kotlin.android\")\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Ch4\u003EПлагин Gradle, который все еще использует устаревшее приложение плагина\u003C\u002Fh4\u003E\u003Cp\u003EЕсли у вас есть плагин Gradle, который использует устаревшее приложение плагина, рекомендуется перейти на плагин DSL. Возьмем, к примеру, плагин Google Play Services Gradle, который существует в проекте уже очень давно:\u003C\u002Fp\u003E\u003Cpre\u003E\u003Ccode class=\"kotlin\"\u003E\u002F\u002F build.gradle (Project-level)\nbuildscript {\n    dependencies {\n        classpath \"com.google.gms:google-services:4.3.15\"\n    }\n}\n\u002F\u002F build.gradle (Module-level)\napply plugin: \"com.google.gms.google-services\"\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EВместо этого измените его на Plugin DSL:\u003C\u002Fp\u003E\u003Cpre\u003E\u003Ccode class=\"kotlin\"\u003E\u002F\u002F build.gradle (Project-level)\nplugins {\n    id 'com.google.gms:google-services' version '4.3.15' apply false\n}\n\u002F\u002F build.gradle (Module-level)\nplugins {\n    id 'com.google.gms.google-services'\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EНа Kotlin это будет выглядеть так:\u003C\u002Fp\u003E\u003Cpre\u003E\u003Ccode class=\"kotlin\"\u003E\u002F\u002F build.gradle.kts (Project-level)\nplugins {\n    id(\"com.google.gms:google-services\") version \"4.3.15\" apply false\n}\n\u002F\u002F build.gradle (Module-level)\nplugins {\n    id(\"com.google.gms.google-services\")\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Ch4\u003EСокращенный идентификатор плагина и функция расширения плагина Kotlin\u003C\u002Fh4\u003E\u003Cp\u003EНекоторые плагины gradle могут быть объявлены сокращенно, например, плагин gradle Kotlin:  \u003C\u002Fp\u003E\u003Cpre\u003E\u003Ccode class=\"kotlin\"\u003E\u002F\u002F Namespaced Plugin ID\nid(\"org.jetbrains.kotlin.android\")\n\u002F\u002F Shorthand Plugin ID\nid(\"kotlin-android\")\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cdiv\u003E\u003Cdiv class=\"table\"\u003E\u003Ctable\u003E\u003Ctbody\u003E\u003Ctr\u003E\u003Ctd\u003E\u003Cp align=\"left\"\u003EСокращенный\u003C\u002Fp\u003E\u003C\u002Ftd\u003E\u003Ctd\u003E\u003Cp align=\"left\"\u003E\u003Cstrong\u003EПолностью\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\u003C\u002Ftd\u003E\u003C\u002Ftr\u003E\u003Ctr\u003E\u003Ctd\u003E\u003Cp align=\"left\"\u003Ekotlin\u003C\u002Fp\u003E\u003C\u002Ftd\u003E\u003Ctd\u003E\u003Cp align=\"left\"\u003Eorg.jetbrains.kotlin.jvm\u003C\u002Fp\u003E\u003C\u002Ftd\u003E\u003C\u002Ftr\u003E\u003Ctr\u003E\u003Ctd\u003E\u003Cp align=\"left\"\u003Ekotlin-android\u003C\u002Fp\u003E\u003C\u002Ftd\u003E\u003Ctd\u003E\u003Cp align=\"left\"\u003Eorg.jetbrains.kotlin.android\u003C\u002Fp\u003E\u003C\u002Ftd\u003E\u003C\u002Ftr\u003E\u003Ctr\u003E\u003Ctd\u003E\u003Cp align=\"left\"\u003Ekotlin-kapt\u003C\u002Fp\u003E\u003C\u002Ftd\u003E\u003Ctd\u003E\u003Cp align=\"left\"\u003Eorg.jetbrains.kotlin.kapt\u003C\u002Fp\u003E\u003C\u002Ftd\u003E\u003C\u002Ftr\u003E\u003Ctr\u003E\u003Ctd\u003E\u003Cp align=\"left\"\u003Ekotlin-parcelize\u003C\u002Fp\u003E\u003C\u002Ftd\u003E\u003Ctd\u003E\u003Cp align=\"left\"\u003Eorg.jetbrains.kotlin.plugin.parcelize\u003C\u002Fp\u003E\u003C\u002Ftd\u003E\u003C\u002Ftr\u003E\u003C\u002Ftbody\u003E\u003C\u002Ftable\u003E\u003C\u002Fdiv\u003E\u003C\u002Fdiv\u003E\u003Cp\u003EА для Kotlin DSL также предусмотрена функция расширения для плагина Gradle.\u003C\u002Fp\u003E\u003Cpre\u003E\u003Ccode class=\"kotlin\"\u003E\u002F\u002F build.gradle.kts (Project-level)\nplugins {\n    kotlin(\"jvm\") version \"1.9.10\" apply false\n    kotlin(\"android\") version \"8.1.1\" apply false\n    kotlin(\"plugin.parcelize\") version \"1.9.10\" apply false\n}\n\n\u002F\u002F build.gradle.kts (Module-level)\nplugins {\n    kotlin(\"jvm\")\n    kotlin(\"android\")\n    kotlin(\"plugin.parcelize\")\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EНо функции расширения для Android нет.\u003C\u002Fp\u003E\u003Ch4\u003EМиграции extra variables\u003C\u002Fh4\u003E\u003Cp\u003EExtra variables (дополнительные переменные) обычно означают пользовательские переменные, которые могут быть определены и использованы в файле \u003Ccode\u003Ebuild.gradle\u003C\u002Fcode\u003E. Эти переменные позволяют передавать пользовательские параметры или значения в ваш сценарий сборки, что делает сценарии более гибкими и настраиваемыми. Например, вы можете определить такие переменные в начале файла \u003Ccode\u003Ebuild.gradle\u003C\u002Fcode\u003E:\u003C\u002Fp\u003E\u003Cpre\u003E\u003Ccode class=\"kotlin\"\u003E\u002F\u002F build.gradle (Project-level)\nbuildscript {\n   ext {\n       minSdk = 26\n       targetSdk = 34\n   }\n}\n\n\u002F\u002F build.gradle (Module-level)\nandroid {\n    defaultConfig {\n       minSdk rootProject.minSdk\n       targetSdk rootProject.targetSdk\n    }\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EНа Kotlin это будет выглядеть так:\u003C\u002Fp\u003E\u003Cpre\u003E\u003Ccode class=\"kotlin\"\u003E\u002F\u002F build.gradle.kts (Project-level)\nbuildscript {\n    extra.apply {\n        set(\"minSdk\", 26)\n        set(\"targetSdk\", 34)\n   }\n}\n\u002F\u002F build.gradle.kts (Module-level)\nandroid {\n    defaultConfig {\n        minSdk = rootProject.extra[\"minSdk\"] as? Int?\n        targetSdk = rootProject.extra[\"targetSdk\"] as? Int?\n    }\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Ch3\u003EРепозиторий зависимостей в Gradle\u003C\u002Fh3\u003E\u003Cp\u003EРепозиторий зависимостей в Gradle — это место, где Gradle ищет и загружает зависимости (библиотеки и пакеты), которые необходимы для сборки проекта. Gradle поддерживает различные типы репозиториев, такие как локальные репозитории, удаленные репозитории (например, Maven Central), и пользовательские репозитории.\u003C\u002Fp\u003E\u003Cpre\u003E\u003Ccode class=\"kotlin\"\u003E\u002F\u002F settings.gradle\ndependencyResolutionManagement {\n    repositoriesMode.set(RepositoriesMode.FAIL_ON_PROJECT_REPOS)\n    repositories {\n        google()\n        mavenCentral()\n    }\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EТак что его можно сразу переключить на Kotlin без каких-либо дополнительных усилий:\u003C\u002Fp\u003E\u003Cpre\u003E\u003Ccode class=\"kotlin\"\u003E\u002F\u002F settings.gradle.kts\ndependencyResolutionManagement {\n    repositoriesMode.set(RepositoriesMode.FAIL_ON_PROJECT_REPOS)\n    repositories {\n        google()\n        mavenCentral()\n    }\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Ch4\u003EВключение модулей Gradle\u003C\u002Fh4\u003E\u003Cp\u003EВ ваш \u003Ccode\u003Esettings.gradle\u003C\u002Fcode\u003E включаете свой модуль Gradle. Для проекта с одним модулем —    это только модуль приложения. Если вы переносите многомодульный проект, вам следует перенести все включенные в него модули. Для \u003Ccode\u003Esettings.gradle\u003C\u002Fcode\u003E вы можете преобразовать \u003Ccode\u003Einclude\u003C\u002Fcode\u003E следующим образом:\u003C\u002Fp\u003E\u003Cpre\u003E\u003Ccode class=\"kotlin\"\u003E\u002F\u002F settings.gradle\ninclude ':app'\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EНа Kotlin это будет выглядеть так:\u003C\u002Fp\u003E\u003Cpre\u003E\u003Ccode class=\"kotlin\"\u003E\u002F\u002F settings.gradle.kts\ninclude(\":app\")\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Ch4\u003EНазначение и конфигурация Android по умолчанию\u003C\u002Fh4\u003E\u003Cp\u003EПри настройке параметров в Groovy у нас был синтаксис \u003Ccode\u003EparameterName\u003C\u002Fcode\u003E \u003Ccode\u003Evalue\u003C\u002Fcode\u003E. С помощью Kotlin DSL мы можем просто использовать оператор \u003Ccode\u003E=\u003C\u002Fcode\u003E между этими двумя значениями, чтобы присвоить значение параметру, если базовый код предоставляет изменяемую переменную. \u003C\u002Fp\u003E\u003Cp\u003EДля конфигурации Android и \u003Ccode\u003EdefaultConfig\u003C\u002Fcode\u003E результирующий скрипт можно найти в следующем примере фрагмента миграции:\u003C\u002Fp\u003E\u003Cpre\u003E\u003Ccode class=\"kotlin\"\u003E\u002F\u002F build.gradle (Module-level)\nandroid {\n   namespace 'com.my.project'\n   compileSdk 34\n   defaultConfig {\n       applicationId \"com.my.project\"\n       minSdk 24\n       targetSdk 34\n       versionCode 1\n       versionName \"1.0\"\n       testInstrumentationRunner \"androidx.test.runner.AndroidJUnitRunner\"\n       vectorDrawables {\n           useSupportLibrary true\n       }\n   }\n   \u002F* ... *\u002F\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EПри переходе в Kotlin это выглядит так:\u003C\u002Fp\u003E\u003Cpre\u003E\u003Ccode class=\"kotlin\"\u003E\u002F\u002F build.gradle.kts (Module-level)\nandroid {\n   namespace = \"com.my.project\"\n   compileSdk = 34\n   defaultConfig {\n       applicationId = \"com.my.project\"\n       minSdk = 24\n       targetSdk = 34\n       versionCode = 1\n       versionName = \"1.0\"\n       testInstrumentationRunner = \"androidx.test.runner.AndroidJUnitRunner\"\n       vectorDrawables {\n           useSupportLibrary = true\n       }\n   }\n   \u002F* ... *\u002F\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Ch4\u003EОпределение типов сборки\u003C\u002Fh4\u003E\u003Cp\u003EВ Gradle блок \u003Ccode\u003EbuildTypes\u003C\u002Fcode\u003E можно использовать для определения различных конфигураций сборки для проекта Android. Каждый тип сборки представляет собой определенный вариант вашего приложения, такой как \u003Ccode\u003Edebug\u003C\u002Fcode\u003E или \u003Ccode\u003Erelease\u003C\u002Fcode\u003E, со своим собственным набором параметров конфигурации.\u003C\u002Fp\u003E\u003Cp\u003EБлок \u003Ccode\u003EbuildTypes\u003C\u002Fcode\u003E позволяет настраивать различные аспекты сборок: включение или отключение отладки, включение сокращения кода и ресурсов, указание правил ProGuard, настройку имен выходных файлов и назначение конфигураций подписи.\u003C\u002Fp\u003E\u003Cp\u003EЧтобы создать новый тип сборки с помощью Kotlin DSL аналогично созданию вариантов, мы можем использовать \u003Ccode\u003Ecreate(..)\u003C\u002Fcode\u003E.\u003C\u002Fp\u003E\u003Cpre\u003E\u003Ccode class=\"kotlin\"\u003E\u002F\u002F build.gradle (Module-level)\nandroid {\n    buildTypes {\n        debug { \u002F* ... *\u002F }\n        release { \n   \t    minifyEnabled true\n      proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'\n   \t    signingConfig signingConfigs.release\n            \u002F* ... *\u002F \n        }\n        googlePlay { \u002F* ... *\u002F }\n        galaxyStore { \u002F* ... *\u002F }\n        appGallery { \u002F* ... *\u002F }\n    }\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EПри переходе в Kotlin это выглядит так:\u003C\u002Fp\u003E\u003Cpre\u003E\u003Ccode class=\"kotlin\"\u003E\u002F\u002F build.gradle.kts (Module-level)\nandroid {\n    buildTypes {\n        debug { \u002F* ... *\u002F }\n        release {\n            isMinifyEnabled = true\n proguardFiles(getDefaultProguardFile(\"proguard-android-optimize.txt\"), \"proguard-rules.pro\")\n            signingConfig = signingConfigs.getByName(\"release\")\n\t\t    \u002F* ... *\u002F \n        }\n        create(\"googlePlay\") { \u002F* ... *\u002F }\n        create(\"galaxyStore\") { \u002F* ... *\u002F }\n        create(\"appGallery\") { \u002F* ... *\u002F }\n    }\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Ch4\u003EДобавление product flavors\u003C\u002Fh4\u003E\u003Cp\u003EProduct flavors — это удобная функция для определения конкретных типов вашего приложения, в котором можно устанавливать различные маршруты для внутреннего сервера или других конфигураций, отличающихся  от вашей производственной сборки.\u003C\u002Fp\u003E\u003Cp\u003EДавайте взглянем на пример миграции для определения компонента с именем \u003Ccode\u003Edev\u003C\u002Fcode\u003E. Обратите внимание, как мы используем функцию \u003Ccode\u003E.add(..)\u003C\u002Fcode\u003E вместо прямого вызова функции flavorDimensions, поскольку базовым значением является\u003Ccode\u003EMutableList&lt;String&gt;. \u003C\u002Fcode\u003E\u003C\u002Fp\u003E\u003Cp\u003EТеперь для создания flavors мы должны использовать синтаксис \u003Ccode\u003Ecreate(\"ourFlavorName\")\u003C\u002Fcode\u003E вместо прямого объявления имени перед блоком конфигурации. \u003C\u002Fp\u003E\u003Cp\u003EКроме того, чтобы добавить базовый URL, поскольку теперь нам приходится использовать двойные кавычки, нужно экранировать внутренние двойные кавычки нашей строки URL с помощью \u003Ccode\u003E \"\\\u003C\u002Fcode\u003E.\u003C\u002Fp\u003E\u003Cpre\u003E\u003Ccode class=\"kotlin\"\u003E\u002F\u002F build.gradle (Module-level)\nandroid {\n    flavorDimensions = ['default', 'type', 'store']\n    buildTypes {\n        dev {\n            dimension = 'type'\n            applicationId 'dev.com.my.project'\n   \t    buildConfigField 'String', 'BASE_URL', '\"https:\u002F\u002Fapi.devserver.com\"'\n            buildConfigField 'Boolean', 'ANALYTICS_ENABLED', 'true'\n            \u002F* ... *\u002F\n        }\n        production { \n            dimension \"default\"\n            \u002F* ... *\u002F\n        }\n    }\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EДля создания \u003Ccode\u003Eflavors\u003C\u002Fcode\u003E используем  синтаксис \u003Ccode\u003Ecreate(\"ourFlavorName\")\u003C\u002Fcode\u003E вместо прямого объявления имени перед блоком конфигурации.\u003C\u002Fp\u003E\u003Cpre\u003E\u003Ccode class=\"python\"\u003E\u002F\u002F build.gradle.kts (Module-level)\nandroid {\n    flavorDimensions += listOf(\"default\", \"type\", \"store\")\n    buildTypes {\n        create(\"dev\") { \n  \t    dimension = \"app\"\n            applictionId = \"dev.com.my.project\"\n            buildConfigField(\"String\", \"BASE_URL\", \"\\\"https:\u002F\u002Fapi.devserver.com\\\"\")\n            \u002F* ... *\u002F\n        }\n        create(\"production\") { \n            dimension = \"default\"\n            \u002F* ... *\u002F\n        }\n    }\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Ch4\u003EЗависимости модулей\u003C\u002Fh4\u003E\u003Cp\u003EВ нашем проекте существует несколько способов объявления зависимостей:\u003C\u002Fp\u003E\u003Cul\u003E\u003Cli\u003E\u003Cp\u003E\u003Ccode\u003Eclasspath\u003C\u002Fcode\u003E, используется для объявления зависимостей для самого процесса сборки. Он используется в блоке \u003Ccode\u003Ebuildscript\u003C\u002Fcode\u003E в файле \u003Ccode\u003Ebuild.gradle\u003C\u002Fcode\u003E на уровне проекта.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003EКонфигурация\u003Ccode\u003E implementation \u003C\u002Fcode\u003Eотвечает за объявление зависимостей, которые фактически используются и в нашем коде и во время выполнения.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003EДругим распространенным ключевым словом является \u003Ccode\u003Eplatform, \u003C\u002Fcode\u003Eкоторое используется при объявлении зависимостей через спецификацию, из Firebase или Jetpack Compose.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003EПри использовании процессоров аннотаций, таких как KAPT или KSP, мы также объявляем соответствующие зависимости в коде, используя ключевые слова \u003Ccode\u003Ekapt\u003C\u002Fcode\u003E и \u003Ccode\u003Eksp.\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003EПри включении файлов из каталога, такого как libs, мы можем использовать ключевое слово  \u003Ccode\u003EfileTree.\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003C\u002Ful\u003E\u003Cp\u003EНиже показан фрагмент кода для всех упомянутых ключевых слов:\u003C\u002Fp\u003E\u003Cpre\u003E\u003Ccode class=\"kotlin\"\u003E\u002F\u002F build.gradle (Module-level)\ndependencies {\n    implementation fileTree(dir: \"libs\", include: [\"*.jar\"])\n    implementation project(\":library\")\n    implementation 'androidx.core:core-ktx:1.10.1'\n\timplementation platform('androidx.compose:compose-bom:2023.03.00')\n    testImplementation 'junit:junit:4.13.2'\n    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'\n    debugImplementation 'androidx.compose.ui:ui-tooling'\n    betaDebugImplementation 'com.github.chuckerteam.chucker:library:4.0.0'\n\tkapt \"androidx.room:room-compiler:2.5.2\"\n \tksp \"androidx.room:room-compiler:2.5.2\"\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EВ этой форме его можно преобразовать в Kotlin:\u003C\u002Fp\u003E\u003Cpre\u003E\u003Ccode class=\"kotlin\"\u003E\u002F\u002F build.gradle.kts (Module-level)\ndependencies {\n implementation(fileTree(mapOf(\"dir\" to \"libs\", \"include\" to listOf(\"*.jar\"))))\n    implementation(project(\":library\"))\n    implementation(\"androidx.core:core-ktx:1.10.1\")\n \timplementation(platform(\"androidx.compose:compose-bom:2023.03.00\"))\n    testImplementation(\"junit:junit:4.13.2\")\n    androidTestImplementation(\"androidx.test.espresso:espresso-core:3.5.1\")\n    debugImplementation(\"androidx.compose.ui:ui-tooling\")\n    \"betaDebugImplementation\"(\"com.github.chuckerteam.chucker:library:4.0.0\")\n \tkapt(\"androidx.room:room-compiler:2.5.2\")\n    ksp(\"androidx.room:room-compiler:2.5.2\")\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Ch4\u003EНастройки подписи\u003C\u002Fh4\u003E\u003Cp\u003EКонфигурация подписи, которая используется для настройки различных значений хранилища ключей для подписи приложений:\u003C\u002Fp\u003E\u003Cpre\u003E\u003Ccode class=\"kotlin\"\u003E\u002F\u002F build.gradle (Module-level)\nandroid {\n    signingConfigs {\n        release {\n\t\t     storeFile file(\"store_file.jks\")\n            keyAlias properties['key_alias']\n            keyPassword properties['key_password']\n            storePassword properties['store_password']\n        }\n    }\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EПри переходе в Kotlin это выглядит так:\u003C\u002Fp\u003E\u003Cpre\u003E\u003Ccode class=\"kotlin\"\u003E\u002F\u002F build.gradle.kts (Module-level)\nandroid {\n    signingConfigs {\n        create(\"release\") {\n            storeFile = file(properties.getProperty(\"store_file..jks\"))\n            storePassword = properties.getProperty(\"store_password\")\n            keyAlias = properties.getProperty(\"key_alias\")\n            keyPassword = properties.getProperty(\"key_password\")\n        }\n    }\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Ch4\u003EПараметры компиляции\u003C\u002Fh4\u003E\u003Cp\u003EПараметры компиляции, которые используются для настройки различных значений во время компиляции:\u003C\u002Fp\u003E\u003Cpre\u003E\u003Ccode class=\"kotlin\"\u003E\u002F\u002F build.gradle (Module-level)\nandroid {\n    compileOptions {\n        sourceCompatibility JavaVersion.VERSION_1_8\n        targetCompatibility JavaVersion.VERSION_1_8\n    }\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EПри переходе в Kotlin это выглядит так\u003C\u002Fp\u003E\u003Cpre\u003E\u003Ccode class=\"kotlin\"\u003E\u002F\u002F build.gradle.kts (Module-level)\nandroid {\n    compileOptions {\n        sourceCompatibility = JavaVersion.VERSION_17\n        targetCompatibility = JavaVersion.VERSION_17\n    }\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Ch4\u003EБлок KotlinOptions\u003C\u002Fh4\u003E\u003Cp\u003EKotlinOptions — это параметр, используемый в файле настроек сборки Gradle для проектов на языке программирования Kotlin. Он позволяет настраивать параметры компиляции и выполнения кода на Kotlin внутри вашего проекта Android.\u003C\u002Fp\u003E\u003Cpre\u003E\u003Ccode class=\"kotlin\"\u003E\u002F\u002F build.gradle (Module-level)\nandroid {\n    kotlinOptions {\n        jvmTarget = \"17\"\n    }\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EЕго можно сразу конвертировать в Kotlin, ничего не меняя:\u003C\u002Fp\u003E\u003Cpre\u003E\u003Ccode class=\"kotlin\"\u003E\u002F\u002F build.gradle.kts (Module-level)\nandroid {\n    kotlinOptions {\n        jvmTarget = \"17\"\n    }\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Ch4\u003EFeatures сборки\u003C\u002Fh4\u003E\u003Cp\u003EВ функции сборки вы можете включить такие функции, как ViewBinding, RenderScript или Compose.\u003C\u002Fp\u003E\u003Cpre\u003E\u003Ccode class=\"kotlin\"\u003E\u002F\u002F build.gradle (Module-level)\nandroid {\n    buildFeatures {\n        viewBinding true\n        dataBinding true\n        compose true\n    }\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EПри переходе в Kotlin это выглядит так:\u003C\u002Fp\u003E\u003Cpre\u003E\u003Ccode class=\"kotlin\"\u003E\u002F\u002F build.gradle.kts (Module-level)\nandroid {\n    buildFeatures {\n        viewBinding = true\n        dataBinding = true\n        compose = true\n    }\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Ch4\u003EИсключение ресурсов из вариантов упаковки\u003C\u002Fh4\u003E\u003Cp\u003EВ некоторых случаях необходимо исключить определенные ресурсы из окончательного пакета приложений. Для этой цели вы можете использовать \u003Ccode\u003EpackagingOptions\u003C\u002Fcode\u003E, чтобы добавить правила исключения в раздел \u003Ccode\u003Eresources\u003C\u002Fcode\u003E.\u003C\u002Fp\u003E\u003Cpre\u003E\u003Ccode class=\"kotlin\"\u003E\u002F\u002F build.gradle (Module-level)\nandroid {\n    packaging {\n        resources.excludes += '\u002FMETA-INF\u002F{AL2.0,LGPL2.1}'\n    }\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EПри переходе в Kotlin это выглядит так:\u003C\u002Fp\u003E\u003Cpre\u003E\u003Ccode class=\"kotlin\"\u003E\u002F\u002F build.gradle.kts (Module-level)\nandroid {\n    packaging {\n        resources {\n            excludes += setOf(\"\u002FMETA-INF\u002F{AL2.0,LGPL2.1}\")\n        }\n    }\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Ch4\u003EНастройка параметров тестирования\u003C\u002Fh4\u003E\u003Cp\u003EДля адаптации конфигурации наших модульных тестов мы можем использовать блок UnitTests, включенный в блок \u003Ccode\u003EtestOptions\u003C\u002Fcode\u003E. Здесь единственное, что нам нужно изменить—  это включить Android Resources в \u003Ccode\u003EisIncludeAndroidResources\u003C\u002Fcode\u003E, как вы можете видеть в следующих фрагментах:\u003C\u002Fp\u003E\u003Cpre\u003E\u003Ccode class=\"kotlin\"\u003E\u002F\u002F build.gradle (Module-level)\nandroid {\n    testOptions {\n        unitTests {\n            includeAndroidResources true\n            returnDefaultValues true\n        }\n        animationsDisabled true\n    }\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EПри переходе в Kotlin это выглядит так:\u003C\u002Fp\u003E\u003Cpre\u003E\u003Ccode class=\"kotlin\"\u003E\u002F\u002F build.gradle.kts (Module-level)\nandroid {\n    testOptions {\n        unitTests {\n            isIncludeAndroidResources = true\n            isReturnDefaultValues = true\n        }\n        animationsDisabled = true\n    }\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Ch4\u003EВывод\u003C\u002Fh4\u003E\u003Cp\u003EНесмотря на доминирование Groovy в настройке скриптов Gradle и его сходство с Java, с которым должны быть знакомы многие разработчики Android или JVM, очень немногие изучают его полностью. Большую часть времени скрипты Gradle полагаются на фрагменты копирования-вставки из соответствующих документов framework, ответов StackOverflow или других источников, что не всегда может обеспечить наиболее оптимальное решение. Таким образом, переход на Kotlin DSL — это не только практическое изменение, но и шаг к улучшению сопровождаемости и читаемости вашего кода. \u003C\u002Fp\u003E\u003Cp\u003EЭто руководство основано на собственном процессе миграции и направлено на то, чтобы охватить широкий спектр сценариев, с которыми вы можете столкнуться во время вашего процесса миграции. Если вы знакомы с ситуацией, которая здесь не описана, то не стесняйтесь поделиться ею в комментариях, чтобы мы смогли обновить руководство.\u003C\u002Fp\u003E\u003Cp\u003EБлагодарим за внимание!\u003C\u002Fp\u003E\u003Cp\u003E\u003C\u002Fp\u003E\u003C\u002Fdiv\u003E","tags":[{"titleHtml":"kotlin"},{"titleHtml":"groovy"},{"titleHtml":"android"},{"titleHtml":"миграция"},{"titleHtml":"dsl"},{"titleHtml":"gradle"},{"titleHtml":"kts"}],"metadata":{"stylesUrls":[],"scriptUrls":[],"shareImageUrl":"https:\u002F\u002Fhabr.com\u002Fshare\u002Fpublication\u002F765544\u002F35deba1efec315d1110f88e04104e5d9\u002F","shareImageWidth":1200,"shareImageHeight":630,"vkShareImageUrl":"https:\u002F\u002Fhabr.com\u002Fshare\u002Fpublication\u002F765544\u002F35deba1efec315d1110f88e04104e5d9\u002F?format=vk","schemaJsonLd":"{\"@context\":\"http:\\\u002F\\\u002Fschema.org\",\"@type\":\"Article\",\"mainEntityOfPage\":{\"@type\":\"WebPage\",\"@id\":\"https:\\\u002F\\\u002Fhabr.com\\\u002Fru\\\u002Fcompanies\\\u002Fppr\\\u002Farticles\\\u002F765544\\\u002F\"},\"headline\":\"Миграция конфигурации сборки с Groovy на Kotlin\",\"datePublished\":\"2023-10-05T14:14:54+03:00\",\"dateModified\":\"2023-10-05T16:18:19+03:00\",\"author\":{\"@type\":\"Person\",\"name\":\"Программный Продукт\"},\"publisher\":{\"@type\":\"Organization\",\"name\":\"Habr\",\"logo\":{\"@type\":\"ImageObject\",\"url\":\"https:\\\u002F\\\u002Fhabrastorage.org\\\u002Fwebt\\\u002Fa_\\\u002Flk\\\u002F9m\\\u002Fa_lk9mjkccjox-zccjrpfolmkmq.png\"}},\"description\":\"Что такое DSL?  DSL (Domain-Specific Language) &mdash; это язык программирования, который спроектирован и оптимизирован для решения задач в конкретной области или для...\",\"url\":\"https:\\\u002F\\\u002Fhabr.com\\\u002Fru\\\u002Fcompanies\\\u002Fppr\\\u002Farticles\\\u002F765544\\\u002F#post-content-body\",\"about\":[\"c_ppr\",\"h_groovy_grails\",\"h_android_dev\",\"h_kotlin\",\"f_develop\"],\"image\":[\"https:\\\u002F\\\u002Fhabrastorage.org\\\u002Fgetpro\\\u002Fhabr\\\u002Fupload_files\\\u002Fff5\\\u002Fb44\\\u002Fdfd\\\u002Fff5b44dfdc2177b939860aed7f0e583b.png\"]}","metaDescription":"Что такое DSL? DSL (Domain-Specific Language) — это язык программирования, который спроектирован и оптимизирован для решения задач в конкретной области или для определенного класса задач. DSL...","mainImageUrl":null,"amp":true,"customTrackerLinks":[]},"polls":[],"commentsEnabled":{"status":true,"reason":null},"rulesRemindEnabled":false,"votesEnabled":true,"status":"published","plannedPublishTime":null,"checked":null,"hasPinnedComments":false,"format":"tutorial","banner":null,"multiwidget":null,"multiwidgetUuid":null,"readingTime":13,"complexity":"medium","isEditorial":false,"allowedFeatures":{"isTestTargetAllow":true}}},"articlesIds":{},"isLoading":false,"pagesCount":{},"route":{},"reasonsList":null,"postReasonsList":null,"view":"list","lastVisitedRoute":{},"ssrCommentsArticleIds":[""],"viewedPosts":[],"myFeedFilter":{"complexity":"all","score":"all","types":["articles","posts","news"]},"myFeedIsApplyFilters":false,"myFeedIsForce":false,"karma":{"userReasonsList":null}},"authorContribution":{"authors":{}},"betaTest":{"currentAnnouncement":null,"announcements":{},"announcementCards":null,"announcementComments":{},"announcementCommentThreads":{},"announcementCommentingStatuses":{},"archivedList":[]},"authorStatistics":{"articleRefs":{},"articleIds":{},"pagesCount":{},"route":{},"viewsCount":[],"maxStatsCount":{}},"career":{"seoLandings":[],"hubs":""},"comments":{"articleComments":{},"articlePinnedComments":{},"searchCommentsResults":null,"pagesCount":null,"commentAccess":{},"scrollParents":{},"pageArticleComments":{"lastViewedComment":0,"postId":null,"lastCommentTimestamp":"","moderated":[],"moderatedIds":[],"commentRoute":"","idempotenceKey":""}},"companies":{"companyRefs":{"ppr":{"alias":"ppr","imageUrl":"\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fcompany\u002F16b\u002Ffad\u002Fc05\u002F16bfadc058a1b8a963fc4557d79f30fe.png","titleHtml":"Программный Продукт","descriptionHtml":"Создаем решения для государства и бизнеса","relatedData":null,"statistics":{"subscribersCount":88,"rating":86.49,"invest":null,"postsCount":31,"threadsCount":0,"newsCount":0,"vacanciesCount":0,"employeesCount":5,"careerRating":null},"foundationDate":{"year":"2002","month":null,"day":null},"location":{"city":{"id":"447159","title":"Москва"},"region":{"id":"1885","title":"Москва и Московская обл."},"country":{"id":"168","title":"Россия"}},"siteUrl":"http:\u002F\u002Fppr.ru\u002Fru\u002F","staffNumber":"501–1 000 человек","registrationDate":"2018-05-03T12:04:19+00:00","representativeUser":null,"contacts":[{"title":"Сайт","url":"http:\u002F\u002Fppr.ru\u002Fru\u002F","siteTitle":"«Программный Продукт» — разработка программного обеспечения и информационных систем","favicon":"https:\u002F\u002Fppr.ru\u002Fresources\u002Fimg\u002Ffavicon.svg"}],"settings":{"analyticsSettings":[],"branding":null,"status":"active","isStartup":false,"hasActivePolls":false,"shouldShowHabrAds":true},"metadata":{"titleHtml":"Программный Продукт, Москва - Создаем решения для государства и бизнеса с 2002 год","title":"Программный Продукт, Москва - Создаем решения для государства и бизнеса с 2002 год","keywords":["android","компьютерное зрение","yandex cloud","тестирование","python","kotlin","colab","искусственный интеллект","алгоритмы","нейросети"],"descriptionHtml":"31 статья от авторов компании Программный Продукт","description":"31 статья от авторов компании Программный Продукт"},"aDeskSettings":null,"careerAlias":null,"schoolAlias":null}},"companyIds":{},"companyTopIds":{},"pagesCount":{},"companyProfiles":{},"companiesCategories":[],"companiesCategoriesTotalCount":0,"companiesWidgets":{},"companiesWorkers":{},"companiesFans":{},"multiwidgets":{},"route":{},"isLoading":false,"companyWorkersLoading":false,"companyFansLoading":false,"multiwidgetLoading":false,"vacancies":{},"companiesGalleries":{},"companiesBanners":{},"companiesLandingVacancies":{},"companiesTechnologies":{},"workplaceInfo":null},"companyAdmin":{"companyInfo":null,"companyInfoLoading":false,"faqArticles":null,"brandingPreviewImageUrl":null,"jivoStatus":0,"adminNotifications":null,"availableInvitesCount":{}},"companyAdd":{"currentStep":"","stepsData":{},"uncompletedSteps":[],"isStepLoading":true,"isStepCommitting":false,"isInitialized":false,"agreementContent":""},"companiesContribution":{"hubs":{},"flows":{},"companyRefs":{}},"companyHubsContribution":{"contributionRefs":{"hubRefs":{},"hubIds":{}}},"conversation":{"messages":[],"respondent":null,"isLoadMore":false},"conversations":{"conversations":[],"pagesCount":0},"docs":{"menu":{},"articles":{},"mainMenu":[],"loading":{"main":false,"dropdown":false,"article":false}},"feature":{"isProbablyVisible":true},"fixedBanner":{"isArticleStickyPanelVisible":false,"isArticleStickyPanelAtTheBottom":false,"isFixedBannerVisible":false,"isStickyPanelIconsHidden":false},"flows":{"flows":[{"id":"1","alias":"develop","title":"Разработка","titleHtml":"Разработка","route":{"name":"FLOW_PAGE","params":{"flowName":"develop"}}},{"id":"6","alias":"admin","title":"Администрирование","titleHtml":"Администрирование","route":{"name":"FLOW_PAGE","params":{"flowName":"admin"}}},{"id":"2","alias":"design","title":"Дизайн","titleHtml":"Дизайн","route":{"name":"FLOW_PAGE","params":{"flowName":"design"}}},{"id":"3","alias":"management","title":"Менеджмент","titleHtml":"Менеджмент","route":{"name":"FLOW_PAGE","params":{"flowName":"management"}}},{"id":"4","alias":"marketing","title":"Маркетинг","titleHtml":"Маркетинг","route":{"name":"FLOW_PAGE","params":{"flowName":"marketing"}}},{"id":"7","alias":"popsci","title":"Научпоп","titleHtml":"Научпоп","route":{"name":"FLOW_PAGE","params":{"flowName":"popsci"}}}],"updates":{}},"global":{"isPwa":false,"device":"mobile","isHabrCom":true,"requestId":"d6fca80edc7986c3d5c7b5f457b31759"},"hubs":{"hubRefs":{},"hubIds":{},"pagesCount":{},"isLoading":false,"route":{}},"hubsBlock":{"hubRefs":{},"hubIds":{}},"i18n":{"fl":"ru","hl":"ru"},"info":{"welcomePage":{},"isLoading":true},"location":{"urlStruct":{"protocol":null,"slashes":null,"auth":null,"host":null,"port":null,"hostname":null,"hash":null,"query":{},"pathname":"\u002Fru\u002Fcompanies\u002Fppr\u002Farticles\u002F765544\u002F","path":"\u002Fru\u002Fcompanies\u002Fppr\u002Farticles\u002F765544\u002F","href":"\u002Fru\u002Fcompanies\u002Fppr\u002Farticles\u002F765544\u002F"}},"me":{"user":null,"uuid":null,"ppgDemanded":false,"karmaResetInfo":{"canReincarnate":null,"wasReincarnated":null,"currentScore":null},"notes":null,"userUpdates":{"feeds":{"newPostsCount":null,"newThreadsCount":null,"newNewsCount":null,"newCount":null},"conversationUnreadCount":0}},"mostReadingList":{"mostReadingListIds":[],"mostReadingListRefs":null,"promoPost":null},"onboarding":{"currentStep":null,"stepsData":{},"stepsErrors":{},"completedSteps":[],"isStepCommitting":false,"isCommitDisabled":true},"ppa":{"articles":{},"card":null,"transactions":null,"totalTransactions":null,"isAccessible":null},"projectsBlocks":{"activeBlocks":{"courses":"project-block-company-article"}},"promoData":{"isLoading":false,"hasLoaded":false,"featurer":null,"megaposts":null,"promoLinks":null,"promoPosts":null,"sticker":null},"publicationStatistics":{"statsInfo":{},"statsFunnels":{},"statsGraph":{},"defaultSuggest":{},"suggest":{},"timeTracker":{},"isTrackingActivity":false,"isUserActive":true,"otherPublicationStats":{}},"pullRefresh":{"shouldRefresh":false},"sandbox":{"articleIds":[],"articleRefs":{},"pagesCount":null,"route":{},"lastVisitedRoute":{},"isLoading":false},"search":{"searchQueryError":null},"settingsOther":{"inputs":{"uiLang":{"errors":[],"ref":null,"value":""},"articlesLangEnglish":{"errors":[],"ref":null,"value":false},"articlesLangRussian":{"errors":[],"ref":null,"value":false},"agreement":{"errors":[],"ref":null,"value":false},"email":{"errors":[],"ref":null,"value":true},"digest":{"errors":[],"ref":null,"value":true}}},"similarList":{"similarListIds":[],"similarListRefs":null},"ssr":{"error":null,"isDataLoaded":true,"isDataLoading":false,"isHydrationFailed":false,"isServer":false},"stories":{"stories":[{"id":"story-998","author":{"logo":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F91a\u002F166\u002F49f\u002F91a16649f9ef89302a5a56cfa22a451d.png","title":"Яндекс Практикум","link":"https:\u002F\u002Fu.habr.com\u002Fstories_up"},"title":"Как расти на работе?","lang":"ru","startTime":"2025-03-18T18:45:00+03:00","finishTime":"2025-03-31T19:00:00+03:00","slides":[{"id":"story-998_1","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fbf4\u002F911\u002F7e6\u002Fbf49117e637ff2099b3944f8803cd7a3.png","button":null},{"id":"story-998_2","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F3e3\u002Fc84\u002Fe83\u002F3e3c84e8330ea1ddf72e9d310457ed2f.png","button":{"title":"Расти в карьере","link":"https:\u002F\u002Fu.habr.com\u002Fstories_up","colorType":"light"}},{"id":"story-998_3","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F84b\u002F533\u002F3c3\u002F84b5333c3e77e8dac62a8b50d042acb9.png","button":{"title":"Расти в карьере","link":"https:\u002F\u002Fu.habr.com\u002Fstories_up","colorType":"light"}},{"id":"story-998_4","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F257\u002Feb0\u002F2be\u002F257eb02bea1777e13f3e647cae6e06cd.png","button":{"title":"Расти в карьере","link":"https:\u002F\u002Fu.habr.com\u002Fstories_up","colorType":"light"}},{"id":"story-998_5","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F858\u002F086\u002F0ed\u002F8580860ed3497c043c04f9a42054d74f.png","button":{"title":"Расти в карьере","link":"https:\u002F\u002Fu.habr.com\u002Fstories_up","colorType":"light"}},{"id":"story-998_6","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fcdf\u002F32f\u002F387\u002Fcdf32f38777f046c063b5182f4125e14.png","button":{"title":"Расти в карьере","link":"https:\u002F\u002Fu.habr.com\u002Fstories_up","colorType":"light"}},{"id":"story-998_7","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fd48\u002Ff2d\u002F0e2\u002Fd48f2d0e2ecd7d746d738191bb913d8f.png","button":{"title":"Расти в карьере","link":"https:\u002F\u002Fu.habr.com\u002Fstories_up","colorType":"light"}},{"id":"story-998_8","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fb38\u002Ffd7\u002Fee0\u002Fb38fd7ee04848bf3b058be7403438bd1.png","button":{"title":"Расти в карьере","link":"https:\u002F\u002Fu.habr.com\u002Fstories_up","colorType":"light"}},{"id":"story-998_9","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F79e\u002Feaa\u002F9d8\u002F79eeaa9d8af5a288ad42bd9d63b5793a.png","button":{"title":"Расти в карьере","link":"https:\u002F\u002Fu.habr.com\u002Fstories_up","colorType":"light"}},{"id":"story-998_10","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fcdc\u002F17e\u002F385\u002Fcdc17e38582dc67838b9abfb200d982e.png","button":{"title":"Расти в карьере","link":"https:\u002F\u002Fu.habr.com\u002Fstories_up","colorType":"light"}}]},{"id":"story-996","author":{"logo":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fe63\u002F36d\u002Fa24\u002Fe6336da24460ab6b9fbc347d03eb263a.png","title":"Хабр","link":null},"title":"Здоровье айтишника","lang":"ru","startTime":"2025-03-17T10:22:00+03:00","finishTime":"2025-04-13T10:22:00+03:00","slides":[{"id":"story-996_1","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fb7c\u002F6de\u002F8ea\u002Fb7c6de8ea6789dbc30f071716172b6dd.jpg","button":null},{"id":"story-996_2","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F2e7\u002F88a\u002F0fe\u002F2e788a0fe61729ca8b23eb59069c844f.jpg","button":{"title":"Личный опыт","link":"https:\u002F\u002Fu.habr.com\u002Fzd-1","colorType":"light"}},{"id":"story-996_3","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fb93\u002F6f4\u002F256\u002Fb936f425653b84fa60ab00d09f78c543.jpg","button":{"title":"Как это было","link":"https:\u002F\u002Fu.habr.com\u002Fzd-2","colorType":"light"}},{"id":"story-996_4","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fc10\u002Fd14\u002Ff5a\u002Fc10d14f5a4859fe10baecbcc2bcb8828.jpg","button":{"title":"Шея в фокусе","link":"https:\u002F\u002Fu.habr.com\u002Fzd-3","colorType":"dark"}},{"id":"story-996_5","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F535\u002Fe1b\u002F77a\u002F535e1b77a9eb896262ad73321f2ad99f.jpg","button":{"title":"Фотоинструкция","link":"https:\u002F\u002Fu.habr.com\u002Fzd-4","colorType":"light"}},{"id":"story-996_6","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F569\u002Fc39\u002F49f\u002F569c3949f5b330ea85d4a1864f481c3d.jpg","button":{"title":"Сидите (не)правильно","link":"https:\u002F\u002Fu.habr.com\u002Fzd-5","colorType":"dark"}},{"id":"story-996_7","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F1f2\u002F1de\u002Fdbf\u002F1f21dedbf2902bc4061a75b839b63595.jpg","button":{"title":"Журнал изменений","link":"https:\u002F\u002Fu.habr.com\u002Fzd-6","colorType":"dark"}},{"id":"story-996_8","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F95a\u002F164\u002F21b\u002F95a16421badc3a9f1135309ab0c42c41.jpg","button":{"title":"Альтернатива","link":"https:\u002F\u002Fu.habr.com\u002Fzd-7","colorType":"light"}},{"id":"story-996_9","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F624\u002F027\u002F54d\u002F62402754d311798af44bcfe7f9abfedc.jpg","button":{"title":"Хроника поисков","link":"https:\u002F\u002Fu.habr.com\u002Fzd-8","colorType":"dark"}}]},{"id":"story-992","author":{"logo":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F3fe\u002F2fc\u002Fb05\u002F3fe2fcb05df852d7e1e00d44e54e39ae.png","title":"Сезоны Хабра","link":"https:\u002F\u002Fu.habr.com\u002Ffnstories"},"title":"Угадайте будущее в новом сезоне","lang":"ru","startTime":"2025-03-12T19:15:00+03:00","finishTime":"2025-03-31T23:56:00+03:00","slides":[{"id":"story-992_1","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fc56\u002Faf5\u002Fc43\u002Fc56af5c4377f7f7b94f7b6ad20fc92c3.png","button":{"title":"А что за сезон?","link":"https:\u002F\u002Fu.habr.com\u002Ffnstories","colorType":"light"}},{"id":"story-992_2","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F8fa\u002Fde7\u002F65d\u002F8fade765d99207f31c597283ae6ce912.png","button":{"title":"Какие темы нужны","link":"https:\u002F\u002Fu.habr.com\u002Ffnstories","colorType":"dark"}},{"id":"story-992_3","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F23e\u002F7b9\u002Fb24\u002F23e7b9b24cb056d1a42e8d31ccea16ce.png","button":{"title":"Сезон будущего ИИ","link":"https:\u002F\u002Fu.habr.com\u002Ffnstories","colorType":"dark"}},{"id":"story-992_4","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F27b\u002Fbfc\u002Fa18\u002F27bbfca18e656ee0122b5cb8eb2cb502.png","button":{"title":"Все правила сезона","link":"https:\u002F\u002Fu.habr.com\u002Ffnstories","colorType":"dark"}},{"id":"story-992_5","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F1e0\u002F6c6\u002Ff33\u002F1e06c6f33e703bbd2b2ae3baee3376fd.png","button":{"title":"Как участвовать","link":"https:\u002F\u002Fu.habr.com\u002Ffnstories","colorType":"dark"}}]},{"id":"story-990","author":{"logo":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F282\u002Fe80\u002Fbf1\u002F282e80bf1b73484126ed53c6f3e42692.png","title":"Aeza","link":"https:\u002F\u002Fu.habr.com\u002FI72qi"},"title":"С праздником весны!","lang":"ru","startTime":"2025-03-09T10:15:00+03:00","finishTime":"2025-03-30T23:59:00+03:00","slides":[{"id":"story-990_1","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F064\u002F9dd\u002Ff59\u002F0649ddf5949cae6c9342fb62034a36ac.png","button":null},{"id":"story-990_2","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F05f\u002F96b\u002F25e\u002F05f96b25e910c32256ee0b1916f21380.png","button":{"title":"Семейная история","link":"https:\u002F\u002Fu.habr.com\u002Fey2bY","colorType":"light"}},{"id":"story-990_3","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fcd1\u002Ff5d\u002F921\u002Fcd1f5d921bb9489ac11727272660bdb6.png","button":{"title":"Движущиеся картинки","link":"https:\u002F\u002Fu.habr.com\u002FWLKXU","colorType":"light"}},{"id":"story-990_4","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fb55\u002Fd45\u002Fec5\u002Fb55d45ec50e53275c60d16ea886a0672.png","button":{"title":"Личный опыт","link":"https:\u002F\u002Fu.habr.com\u002FSxrki","colorType":"light"}},{"id":"story-990_5","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Ffa7\u002F1ce\u002Ffca\u002Ffa71cefca5ed0a3fe8b50bd703b3605f.png","button":{"title":"Алгоритм","link":"https:\u002F\u002Fu.habr.com\u002Ftbz2p","colorType":"light"}},{"id":"story-990_6","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F435\u002F89d\u002Ff90\u002F43589df9018846cc6a8eed986226b252.png","button":{"title":"Выбрать сценарий","link":"https:\u002F\u002Fu.habr.com\u002F0RCPk","colorType":"light"}},{"id":"story-990_7","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F514\u002F5f8\u002F619\u002F5145f86194ad48dad48a846b42af0f93.png","button":{"title":"Jiraзамещение","link":"https:\u002F\u002Fu.habr.com\u002FEwhYq","colorType":"light"}},{"id":"story-990_8","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F439\u002Fa83\u002Fae7\u002F439a83ae78f7ef711e3b9bbed1ec26c5.png","button":{"title":"8 вещей","link":"https:\u002F\u002Fu.habr.com\u002FVTv2r","colorType":"light"}},{"id":"story-990_9","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F02d\u002F783\u002F2f7\u002F02d7832f7b1c95d88bff9f34209e204a.png","button":{"title":"Интерфейсы","link":"https:\u002F\u002Fu.habr.com\u002FUFOMZ","colorType":"light"}},{"id":"story-990_10","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F0cb\u002Ff7f\u002F0d9\u002F0cbf7f0d905d486ce4ff82bc939b21d5.png","button":{"title":"Стикеры ваши","link":"https:\u002F\u002Fu.habr.com\u002FoA1K7","colorType":"light"}}]},{"id":"story-984","author":{"logo":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F648\u002F61b\u002F9ae\u002F64861b9aecb7c474cd94063f98045541.png","title":"Хабр","link":null},"title":"Всегда котов!","lang":"ru","startTime":"2025-03-01T00:01:09+03:00","finishTime":"2025-03-23T16:21:00+03:00","slides":[{"id":"story-984_1","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fc06\u002Fc21\u002F93f\u002Fc06c2193ff34362ac2af782cf2571f55.png","button":null},{"id":"story-984_2","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fb68\u002F15f\u002F763\u002Fb6815f7630b9c015b1e67efb5bdf12d4.jpg","button":{"title":"Сделать purrrr","link":"https:\u002F\u002Fu.habr.com\u002Fj4DN1","colorType":"light"}},{"id":"story-984_3","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F550\u002F76e\u002Fd7a\u002F55076ed7a0954e243f944fc2f330623a.png","button":{"title":"Тыгыдык","link":"https:\u002F\u002Fu.habr.com\u002Fya360_kotov","colorType":"dark"}},{"id":"story-984_4","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F2fb\u002F23b\u002F06c\u002F2fb23b06cf294c2050104b2aef589788.jpg","button":{"title":"Исследование","link":"https:\u002F\u002Fu.habr.com\u002FbO3r0","colorType":"light"}},{"id":"story-984_5","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Ff50\u002F50f\u002F0ae\u002Ff5050f0aeea1335c4f0544c1863f8342.jpg","button":{"title":"Детали проекта","link":"https:\u002F\u002Fu.habr.com\u002FQJmhe","colorType":"light"}},{"id":"story-984_6","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F825\u002F3dd\u002F5f5\u002F8253dd5f5c19dd061578f1d09310a45f.jpg","button":{"title":"Эксперименты","link":"https:\u002F\u002Fu.habr.com\u002FVaOdo","colorType":"light"}},{"id":"story-984_7","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F3fb\u002Fc92\u002F0f9\u002F3fbc920f9ea81eca2c1c027ff77fc659.jpg","button":{"title":"Это не мем","link":"https:\u002F\u002Fu.habr.com\u002F0Wb3p","colorType":"light"}},{"id":"story-984_8","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F2b4\u002F794\u002Fc33\u002F2b4794c33844e60aad9468018fd132cd.jpg","button":{"title":"В засаде","link":"https:\u002F\u002Fu.habr.com\u002FnasCD","colorType":"dark"}}]}]},"technotext":{"years":[],"technotextDocForNominees":null,"technotextDocForWinners":null,"technotextInfo":{},"technotextInfoLoading":false,"technotextWinners":{},"technotextWinnersLoading":false},"userHubsContribution":{"contributionRefs":{"hubRefs":{},"hubIds":{}}},"userInvites":{"availableInvites":0,"usedInvitesIds":[],"usedInvitesRefs":{},"usedInvitesPagesCount":0,"unusedInvitesIds":[],"unusedInvitesRefs":{},"unusedInvitesPagesCount":0},"userVotes":{"karmaVotesList":[],"karmaVotesPagesCount":null,"karmaVotesListLoading":false,"commentsVotesList":[],"commentsVotesPagesCount":null,"commentsVotesListLoading":false,"postsVotesList":[],"postsVotesPagesCount":null,"postsVotesListLoading":false,"userVotesList":[],"userVotesPagesCount":null,"userVotesListLoading":false},"users":{"authorRefs":{},"authorIds":{},"pagesCount":{},"authorProfiles":{"ppr":{"alias":"PPR","badgets":[{"title":"Захабренный","description":"Пользователь с кармой \u003E0","url":null,"isRemovable":false},{"title":"Техноавтор 2023","description":"Участник конкурса «Технотекст 2023»","url":null,"isRemovable":false}],"aboutHtml":"Разработка ПО, информационная безопасность, Big Data, Blockchain, ИТ-консалтинг. Входим в список системообразующих компаний российской экономики.","contacts":[{"title":"Сайт","url":"https:\u002F\u002Fppr.ru\u002F","value":"https:\u002F\u002Fppr.ru\u002F","siteTitle":"«Программный Продукт» — разработка программного обеспечения и информационных систем","favicon":"https:\u002F\u002Fppr.ru\u002Fresources\u002Fimg\u002Ffavicon.svg"},{"title":"Facebook","url":"https:\u002F\u002Ffacebook.com\u002Fprogrammproduct","value":"programmproduct","siteTitle":"Facebook","favicon":"https:\u002F\u002Fstatic.xx.fbcdn.net\u002Frsrc.php\u002FyB\u002Fr\u002F2sFJRNmJ5OP.ico"},{"title":"ВКонтакте","url":"https:\u002F\u002Fvk.com\u002Fprogrammproduct","value":"programmproduct","siteTitle":"VK | VK","favicon":"https:\u002F\u002Fm.vk.com\u002Fimages\u002Ficons\u002Ffavicons\u002Ffav_logo.ico?10"},{"title":"Instagram","url":"https:\u002F\u002Finstagram.com\u002Fprogrammproduct\u002F","value":"programmproduct","siteTitle":"Login • Instagram","favicon":"https:\u002F\u002Fstatic.cdninstagram.com\u002Frsrc.php\u002Fv4\u002FyI\u002Fr\u002FVsNE-OHk_8a.png"}],"invitedBy":null,"careerProfile":null,"companies":{"pagesCount":1,"companyIds":["ppr"],"companyRefs":{"ppr":{"id":"5120","alias":"ppr","titleHtml":"Программный Продукт","descriptionHtml":"Создаем решения для государства и бизнеса","imageUrl":"\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fcompany\u002F16b\u002Ffad\u002Fc05\u002F16bfadc058a1b8a963fc4557d79f30fe.png","relatedData":null,"statistics":{"subscribersCount":88,"rating":86.49,"invest":null},"commonHubs":[]}}}}},"userHubs":{},"userInvitations":{},"authorFollowers":{},"authorFollowed":{},"userSpecialization":{},"karmaStats":[],"statistics":null,"isLoading":false,"authorFollowersLoading":false,"authorFollowedLoading":false,"userHubsLoading":false,"userInvitationsLoading":false,"route":{}},"viewport":{"prevScrollY":{},"scrollY":0,"width":0},"tracker":{"notificationsLoading":false,"notificationsList":[],"notificationsPageCount":0,"pendingMarkNotificationsRead":[],"publicationsLoading":true,"publicationsList":[],"publicationsPageCount":0,"pendingDeletePublications":false,"pendingMarkPublicationsRead":false},"events":{"eventRefs":{},"eventIds":[],"pagesCount":0,"categories":[],"cities":[],"actualEvents":null,"currentEvent":null,"eventsFilter":{"city":"all","timeStarted":null,"timeEnded":null}},"wysiwyg":{"WYSIWYGRulesRefs":null}};(function(){var s;(s=document.currentScript||document.scripts[document.scripts.length-1]).parentNode.removeChild(s);}());</script><script src="https://assets.habr.com/habr-web/js/chunk-vendors.3b11d41f.js" defer></script><script src="https://assets.habr.com/habr-web/js/app.7a97ea6d.js" defer></script></div>
    <div id="overlays"><!----><!--teleport anchor--><!----><!--teleport anchor--><!----><!--teleport anchor--><!----><!--teleport anchor--><!----><!--teleport anchor--><!----><!--teleport anchor--></div>
    
    
    <script async src="https://www.googletagmanager.com/gtag/js?id=G-S28W1WC23F"></script>
    <script>
      window.dataLayer = window.dataLayer || [];
      function gtag(){dataLayer.push(arguments);}
      gtag('js', new Date());
    </script>
  
  <script type="text/javascript" >
    (function(m,e,t,r,i,k,a){m[i]=m[i]||function(){(m[i].a=m[i].a||[]).push(arguments)};
    m[i].l=1*new Date();k=e.createElement(t),a=e.getElementsByTagName(t)[0],k.async=1,k.src=r,a.parentNode.insertBefore(k,a)})
    (window, document, "script", "https://mc.yandex.ru/metrika/tag.js", "ym");

  </script>
    <script type="text/javascript">
      window.addEventListener('load', function () {
        setTimeout(() => {
          const img = new Image();
          img.src = 'https://vk.com/rtrg?p=VK-RTRG-421343-57vKE';
        }, 0);
      });
    </script>
  
    </body>

    </html>
