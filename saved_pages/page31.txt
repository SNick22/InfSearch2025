<!DOCTYPE html>
<html lang="ru">

  <head>
    <title>Микросервисы в банке: на чем их лучше писать? Java&#x2F;Kotlin, а может Go? &#x2F; Хабр</title>
<meta property="fb:app_id" content="444736788986613">
<meta property="fb:pages" content="472597926099084">
<meta name="twitter:card" content="summary_large_image">
<meta name="twitter:site" content="@habr_com">
<meta property="og:site_name" content="Хабр">
<link href="https://habr.com/ru/rss/post/747898/?fl=ru" type="application/rss+xml" title rel="alternate" name="rss">
<link href="https://habr.com/ru/companies/rshb/articles/747898/" rel="canonical" data-hid="e3fa780">
<link rel="image_src" href="https://habrastorage.org/getpro/habr/upload_files/dab/223/fe9/dab223fe90f220923a460a43ec496555.jpeg" data-hid="2a79c45">
<link rel="amphtml" href="https://habr.com/ru/amp/publications/747898/">
<meta property="og:title" content="Микросервисы в банке: на чем их лучше писать? Java/Kotlin, а может Go?">
<meta name="twitter:title" content="Микросервисы в банке: на чем их лучше писать? Java/Kotlin, а может Go?">
<meta name="aiturec:title" content="Микросервисы в банке: на чем их лучше писать? Java/Kotlin, а может Go?">
<meta name="description" content="В июле в офисе РСХБ-Интех (технологической дочки Россельхозбанка) состоялся бесплатный митап для Java-разработчиков — RSHB Backend Dev Meetup . Обсудили Kotlin, Go, маппинг и разные аспекты...">
<meta itemprop="description" content="В июле в офисе РСХБ-Интех (технологической дочки Россельхозбанка) состоялся бесплатный митап для Java-разработчиков — RSHB Backend Dev Meetup . Обсудили Kotlin, Go, маппинг и разные аспекты...">
<meta property="og:description" content="В июле в офисе РСХБ-Интех (технологической дочки Россельхозбанка) состоялся бесплатный митап для Java-разработчиков — RSHB Backend Dev Meetup . Обсудили Kotlin, Go, маппинг и разные аспекты...">
<meta name="twitter:description" content="В июле в офисе РСХБ-Интех (технологической дочки Россельхозбанка) состоялся бесплатный митап для Java-разработчиков — RSHB Backend Dev Meetup . Обсудили Kotlin, Go, маппинг и разные аспекты...">
<meta property="aiturec:description" content="В июле в офисе РСХБ-Интех (технологической дочки Россельхозбанка) состоялся бесплатный митап для Java-разработчиков — RSHB Backend Dev Meetup . Обсудили Kotlin, Go, маппинг и разные аспекты...">
<meta itemprop="image" content="https://habrastorage.org/getpro/habr/upload_files/dab/223/fe9/dab223fe90f220923a460a43ec496555.jpeg">
<meta property="og:image" content="https://habrastorage.org/getpro/habr/upload_files/dab/223/fe9/dab223fe90f220923a460a43ec496555.jpeg">
<meta property="og:image:width" content="1200">
<meta property="og:image:height" content="630">
<meta property="aiturec:image" content="https://habrastorage.org/getpro/habr/upload_files/dab/223/fe9/dab223fe90f220923a460a43ec496555.jpeg">
<meta name="twitter:image" content="https://habrastorage.org/getpro/habr/upload_files/dab/223/fe9/dab223fe90f220923a460a43ec496555.jpeg">
<meta property="vk:image" content="https://habrastorage.org/getpro/habr/upload_files/dab/223/fe9/dab223fe90f220923a460a43ec496555.jpeg?format=vk">
<meta property="vk:image" content="https://habrastorage.org/getpro/habr/upload_files/dab/223/fe9/dab223fe90f220923a460a43ec496555.jpeg?format=vk">
<meta property="aiturec:item_id" content="747898">
<meta property="aiturec:datetime" content="2023-07-13T16:46:06.000Z">
<meta content="https://habr.com/ru/companies/rshb/articles/747898/" property="og:url">
<meta property="og:type" content="article">
<meta property="og:locale" content="ru_RU">
<meta property="og:image:width" content="1200">
<meta property="og:image:height" content="630">
<meta name="keywords" content="kotlin, java, go, микросервисы, россельхозбанк, митапы, рсхб-интех, рсхб цифра">
<script type="application/ld+json" data-hid="1e0f0a2">{"@context":"http:\/\/schema.org","@type":"Article","mainEntityOfPage":{"@type":"WebPage","@id":"https:\/\/habr.com\/ru\/companies\/rshb\/articles\/747898\/"},"headline":"Микросервисы в банке: на чем их лучше писать? Java\/Kotlin, а может Go?","datePublished":"2023-07-13T19:46:06+03:00","dateModified":"2023-07-14T13:00:03+03:00","author":{"@type":"Person","name":"РСХБ.цифра"},"publisher":{"@type":"Organization","name":"Habr","logo":{"@type":"ImageObject","url":"https:\/\/habrastorage.org\/webt\/a_\/lk\/9m\/a_lk9mjkccjox-zccjrpfolmkmq.png"}},"description":"В июле в офисе РСХБ-Интех (технологической дочки Россельхозбанка) состоялся бесплатный митап для Java-разработчиков &mdash; RSHB Backend Dev Meetup. Обсудили Kotlin, G...","url":"https:\/\/habr.com\/ru\/companies\/rshb\/articles\/747898\/#post-content-body","about":["c_rshb","h_java","h_go","h_kotlin","h_tech_events","f_develop","f_marketing"],"image":["https:\/\/habr.com\/share\/publication\/747898\/40a66e3724e11c059037a3567fe3e72d\/","https:\/\/habrastorage.org\/getpro\/habr\/upload_files\/378\/543\/3c7\/3785433c7c3becbf71b603069ed177c7.jpeg","https:\/\/habrastorage.org\/getpro\/habr\/upload_files\/289\/38d\/d2e\/28938dd2e4052e8f33d46c5117ef94b2.jpeg","https:\/\/habrastorage.org\/getpro\/habr\/upload_files\/c2e\/172\/f38\/c2e172f3825d3df5b33c3338d8df6893.jpeg","https:\/\/habrastorage.org\/getpro\/habr\/upload_files\/2cb\/994\/ee1\/2cb994ee1ce1dc921e84ea0edccea145.jpeg","https:\/\/habrastorage.org\/getpro\/habr\/upload_files\/8e6\/598\/e81\/8e6598e8146c2589f40b0d0a7e320d1d.jpeg","https:\/\/habrastorage.org\/getpro\/habr\/upload_files\/9c4\/ddf\/0d7\/9c4ddf0d703219aab5b967d36405d954.jpeg"]}</script>
    <meta charset="UTF-8">
    <meta name="viewport"
      content="width=device-width,initial-scale=1.0,viewport-fit=cover,maximum-scale=1,user-scalable=0">
    <meta name="referrer" content="unsafe-url">
    <style>
      /* cyrillic-ext */
      @font-face {
        font-family: 'Fira Sans';
        font-style: normal;
        font-weight: 400;
        font-display: swap;
        src: url(https://fonts.gstatic.com/s/firasans/v17/va9E4kDNxMZdWfMOD5VvmojLazX3dGTP.woff2) format('woff2');
        unicode-range: U+0460-052F, U+1C80-1C88, U+20B4, U+2DE0-2DFF, U+A640-A69F, U+FE2E-FE2F;
      }

      /* cyrillic */
      @font-face {
        font-family: 'Fira Sans';
        font-style: normal;
        font-weight: 400;
        font-display: swap;
        src: url(https://fonts.gstatic.com/s/firasans/v17/va9E4kDNxMZdWfMOD5Vvk4jLazX3dGTP.woff2) format('woff2');
        unicode-range: U+0301, U+0400-045F, U+0490-0491, U+04B0-04B1, U+2116;
      }

      /* latin-ext */
      @font-face {
        font-family: 'Fira Sans';
        font-style: normal;
        font-weight: 400;
        font-display: swap;
        src: url(https://fonts.gstatic.com/s/firasans/v17/va9E4kDNxMZdWfMOD5VvmYjLazX3dGTP.woff2) format('woff2');
        unicode-range: U+0100-02AF, U+0304, U+0308, U+0329, U+1E00-1E9F, U+1EF2-1EFF, U+2020, U+20A0-20AB, U+20AD-20C0, U+2113, U+2C60-2C7F, U+A720-A7FF;
      }

      /* latin */
      @font-face {
        font-family: 'Fira Sans';
        font-style: normal;
        font-weight: 400;
        font-display: swap;
        src: url(https://fonts.gstatic.com/s/firasans/v17/va9E4kDNxMZdWfMOD5Vvl4jLazX3dA.woff2) format('woff2');
        unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+0304, U+0308, U+0329, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;
      }

      /* cyrillic-ext */
      @font-face {
        font-family: 'Fira Sans';
        font-style: normal;
        font-weight: 500;
        font-display: swap;
        src: url(https://fonts.gstatic.com/s/firasans/v17/va9B4kDNxMZdWfMOD5VnZKveSxf6Xl7Gl3LX.woff2) format('woff2');
        unicode-range: U+0460-052F, U+1C80-1C88, U+20B4, U+2DE0-2DFF, U+A640-A69F, U+FE2E-FE2F;
      }

      /* cyrillic */
      @font-face {
        font-family: 'Fira Sans';
        font-style: normal;
        font-weight: 500;
        font-display: swap;
        src: url(https://fonts.gstatic.com/s/firasans/v17/va9B4kDNxMZdWfMOD5VnZKveQhf6Xl7Gl3LX.woff2) format('woff2');
        unicode-range: U+0301, U+0400-045F, U+0490-0491, U+04B0-04B1, U+2116;
      }

      /* latin-ext */
      @font-face {
        font-family: 'Fira Sans';
        font-style: normal;
        font-weight: 500;
        font-display: swap;
        src: url(https://fonts.gstatic.com/s/firasans/v17/va9B4kDNxMZdWfMOD5VnZKveSBf6Xl7Gl3LX.woff2) format('woff2');
        unicode-range: U+0100-02AF, U+0304, U+0308, U+0329, U+1E00-1E9F, U+1EF2-1EFF, U+2020, U+20A0-20AB, U+20AD-20C0, U+2113, U+2C60-2C7F, U+A720-A7FF;
      }

      /* latin */
      @font-face {
        font-family: 'Fira Sans';
        font-style: normal;
        font-weight: 500;
        font-display: swap;
        src: url(https://fonts.gstatic.com/s/firasans/v17/va9B4kDNxMZdWfMOD5VnZKveRhf6Xl7Glw.woff2) format('woff2');
        unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+0304, U+0308, U+0329, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;
      }

      /* cyrillic-ext */
      @font-face {
        font-family: 'Fira Sans';
        font-style: normal;
        font-weight: 700;
        font-display: swap;
        src: url(https://fonts.gstatic.com/s/firasans/v17/va9B4kDNxMZdWfMOD5VnLK3eSxf6Xl7Gl3LX.woff2) format('woff2');
        unicode-range: U+0460-052F, U+1C80-1C88, U+20B4, U+2DE0-2DFF, U+A640-A69F, U+FE2E-FE2F;
      }

      /* cyrillic */
      @font-face {
        font-family: 'Fira Sans';
        font-style: normal;
        font-weight: 700;
        font-display: swap;
        src: url(https://fonts.gstatic.com/s/firasans/v17/va9B4kDNxMZdWfMOD5VnLK3eQhf6Xl7Gl3LX.woff2) format('woff2');
        unicode-range: U+0301, U+0400-045F, U+0490-0491, U+04B0-04B1, U+2116;
      }

      /* latin-ext */
      @font-face {
        font-family: 'Fira Sans';
        font-style: normal;
        font-weight: 700;
        font-display: swap;
        src: url(https://fonts.gstatic.com/s/firasans/v17/va9B4kDNxMZdWfMOD5VnLK3eSBf6Xl7Gl3LX.woff2) format('woff2');
        unicode-range: U+0100-02AF, U+0304, U+0308, U+0329, U+1E00-1E9F, U+1EF2-1EFF, U+2020, U+20A0-20AB, U+20AD-20C0, U+2113, U+2C60-2C7F, U+A720-A7FF;
      }

      /* latin */
      @font-face {
        font-family: 'Fira Sans';
        font-style: normal;
        font-weight: 700;
        font-display: swap;
        src: url(https://fonts.gstatic.com/s/firasans/v17/va9B4kDNxMZdWfMOD5VnLK3eRhf6Xl7Glw.woff2) format('woff2');
        unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+0304, U+0308, U+0329, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;
      }
    </style>
    <link rel="preload" href="https://assets.habr.com/habr-web/css/theme/light-v1.css" as="style" media="(prefers-color-scheme: light)" /><link rel="preload" href="https://assets.habr.com/habr-web/css/theme/dark-v1.css" as="style" media="(prefers-color-scheme: dark)" /><link id="light-colors" rel="stylesheet" href="https://assets.habr.com/habr-web/css/theme/light-v1.css" media="(prefers-color-scheme: light)" /><link id="dark-colors" rel="stylesheet" href="https://assets.habr.com/habr-web/css/theme/dark-v1.css" media="(prefers-color-scheme: dark)" />
    <script>window.i18nFetch = new Promise((res, rej) => {
          const xhr = new XMLHttpRequest();
          xhr.open('GET', '/js/i18n/ru-compiled.35b2fec11bb79a62419ab67779c2dd82.json');
          xhr.responseType = 'json';
          xhr.onload = function(e) {
            if (this.status === 200) {
              res({ru: xhr.response});
            } else {
              rej(e);
            }
          };
          xhr.send();
        });</script>
    <style>
      .grecaptcha-badge {
        visibility: hidden;
      }
    </style>
    <meta name="habr-version" content="2.233.0">
    
    <meta name="apple-mobile-web-app-status-bar-style" content="#303b44">
    <meta name="msapplication-TileColor" content="#629FBC">
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="mobile-web-app-capable" content="yes">
    <link rel="shortcut icon" type="image/png" sizes="16x16" href="https://assets.habr.com/habr-web/img/favicons/favicon-16.png">
    <link rel="shortcut icon" type="image/png" sizes="32x32" href="https://assets.habr.com/habr-web/img/favicons/favicon-32.png">
    <link rel="apple-touch-icon" type="image/png" sizes="76x76" href="https://assets.habr.com/habr-web/img/favicons/apple-touch-icon-76.png">
    <link rel="apple-touch-icon" type="image/png" sizes="120x120" href="https://assets.habr.com/habr-web/img/favicons/apple-touch-icon-120.png">
    <link rel="apple-touch-icon" type="image/png" sizes="152x152" href="https://assets.habr.com/habr-web/img/favicons/apple-touch-icon-152.png">
    <link rel="apple-touch-icon" type="image/png" sizes="180x180" href="https://assets.habr.com/habr-web/img/favicons/apple-touch-icon-180.png">
    <link rel="apple-touch-icon" type="image/png" sizes="256x256" href="https://assets.habr.com/habr-web/img/favicons/apple-touch-icon-256.png">
    <link rel="apple-touch-startup-image"
      media="screen and (device-width: 320px) and (device-height: 568px) and (-webkit-device-pixel-ratio: 2) and (orientation: landscape)"
      href="https://assets.habr.com/habr-web/img/splashes/splash_1136x640.png">
    <link rel="apple-touch-startup-image"
      media="screen and (device-width: 375px) and (device-height: 812px) and (-webkit-device-pixel-ratio: 3) and (orientation: landscape)"
      href="https://assets.habr.com/habr-web/img/splashes/splash_2436x1125.png">
    <link rel="apple-touch-startup-image"
      media="screen and (device-width: 414px) and (device-height: 896px) and (-webkit-device-pixel-ratio: 2) and (orientation: landscape)"
      href="https://assets.habr.com/habr-web/img/splashes/splash_1792x828.png">
    <link rel="apple-touch-startup-image"
      media="screen and (device-width: 414px) and (device-height: 896px) and (-webkit-device-pixel-ratio: 2) and (orientation: portrait)"
      href="https://assets.habr.com/habr-web/img/splashes/splash_828x1792.png">
    <link rel="apple-touch-startup-image"
      media="screen and (device-width: 375px) and (device-height: 667px) and (-webkit-device-pixel-ratio: 2) and (orientation: landscape)"
      href="https://assets.habr.com/habr-web/img/splashes/splash_1334x750.png">
    <link rel="apple-touch-startup-image"
      media="screen and (device-width: 414px) and (device-height: 896px) and (-webkit-device-pixel-ratio: 3) and (orientation: portrait)"
      href="https://assets.habr.com/habr-web/img/splashes/splash_1242x2668.png">
    <link rel="apple-touch-startup-image"
      media="screen and (device-width: 414px) and (device-height: 736px) and (-webkit-device-pixel-ratio: 3) and (orientation: landscape)"
      href="https://assets.habr.com/habr-web/img/splashes/splash_2208x1242.png">
    <link rel="apple-touch-startup-image"
      media="screen and (device-width: 375px) and (device-height: 812px) and (-webkit-device-pixel-ratio: 3) and (orientation: portrait)"
      href="https://assets.habr.com/habr-web/img/splashes/splash_1125x2436.png">
    <link rel="apple-touch-startup-image"
      media="screen and (device-width: 414px) and (device-height: 736px) and (-webkit-device-pixel-ratio: 3) and (orientation: portrait)"
      href="https://assets.habr.com/habr-web/img/splashes/splash_1242x2208.png">
    <link rel="apple-touch-startup-image"
      media="screen and (device-width: 1024px) and (device-height: 1366px) and (-webkit-device-pixel-ratio: 2) and (orientation: landscape)"
      href="https://assets.habr.com/habr-web/img/splashes/splash_2732x2048.png">
    <link rel="apple-touch-startup-image"
      media="screen and (device-width: 414px) and (device-height: 896px) and (-webkit-device-pixel-ratio: 3) and (orientation: landscape)"
      href="https://assets.habr.com/habr-web/img/splashes/splash_2688x1242.png">
    <link rel="apple-touch-startup-image"
      media="screen and (device-width: 834px) and (device-height: 1112px) and (-webkit-device-pixel-ratio: 2) and (orientation: landscape)"
      href="https://assets.habr.com/habr-web/img/splashes/splash_2224x1668.png">
    <link rel="apple-touch-startup-image"
      media="screen and (device-width: 375px) and (device-height: 667px) and (-webkit-device-pixel-ratio: 2) and (orientation: portrait)"
      href="https://assets.habr.com/habr-web/img/splashes/splash_750x1334.png">
    <link rel="apple-touch-startup-image"
      media="screen and (device-width: 1024px) and (device-height: 1366px) and (-webkit-device-pixel-ratio: 2) and (orientation: portrait)"
      href="https://assets.habr.com/habr-web/img/splashes/splash_2048x2732.png">
    <link rel="apple-touch-startup-image"
      media="screen and (device-width: 834px) and (device-height: 1194px) and (-webkit-device-pixel-ratio: 2) and (orientation: landscape)"
      href="https://assets.habr.com/habr-web/img/splashes/splash_2388x1668.png">
    <link rel="apple-touch-startup-image"
      media="screen and (device-width: 834px) and (device-height: 1112px) and (-webkit-device-pixel-ratio: 2) and (orientation: portrait)"
      href="https://assets.habr.com/habr-web/img/splashes/splash_1668x2224.png">
    <link rel="apple-touch-startup-image"
      media="screen and (device-width: 320px) and (device-height: 568px) and (-webkit-device-pixel-ratio: 2) and (orientation: portrait)"
      href="https://assets.habr.com/habr-web/img/splashes/splash_640x1136.png">
    <link rel="apple-touch-startup-image"
      media="screen and (device-width: 834px) and (device-height: 1194px) and (-webkit-device-pixel-ratio: 2) and (orientation: portrait)"
      href="https://assets.habr.com/habr-web/img/splashes/splash_1668x2388.png">
    <link rel="apple-touch-startup-image"
      media="screen and (device-width: 768px) and (device-height: 1024px) and (-webkit-device-pixel-ratio: 2) and (orientation: landscape)"
      href="https://assets.habr.com/habr-web/img/splashes/splash_2048x1536.png">
    <link rel="apple-touch-startup-image"
      media="screen and (device-width: 768px) and (device-height: 1024px) and (-webkit-device-pixel-ratio: 2) and (orientation: portrait)"
      href="https://assets.habr.com/habr-web/img/splashes/splash_1536x2048.png">
    <link rel="mask-icon" color="#77a2b6" href="https://assets.habr.com/habr-web/img/favicons/apple-touch-icon-120.svg">
    <link crossorigin="use-credentials" href="/manifest.webmanifest" rel="manifest">
    <script async src="https://unpkg.com/pwacompat" crossorigin="anonymous"></script>
    <script>window.yaContextCb = window.yaContextCb || []</script>
    <script src="https://yandex.ru/ads/system/context.js" async></script>
  <link rel="preload" href="https://assets.habr.com/habr-web/css/chunk-vendors.04465f7c.css" as="style"><link rel="preload" href="https://assets.habr.com/habr-web/js/chunk-vendors.3b11d41f.js" as="script"><link rel="preload" href="https://assets.habr.com/habr-web/css/app.20959a76.css" as="style"><link rel="preload" href="https://assets.habr.com/habr-web/js/app.7a97ea6d.js" as="script"><link rel="stylesheet" href="https://assets.habr.com/habr-web/css/chunk-vendors.04465f7c.css"><link rel="stylesheet" href="https://assets.habr.com/habr-web/css/app.20959a76.css"></head>
  <body>
    
    <div id="mount"><div id="app" data-async-called="true"><div class="tm-layout__wrapper"><!--[--><!----><div></div><div class="tm-feature tm-feature"><!----></div><header class="tm-header" data-test-id="header"><div class="tm-page-width"><!--[--><div class="tm-header__container"><div class="tm-header__burger-nav" data-test-id="burger-nav"><button class="tm-header__button tm-header__button_burger" type="button"><svg class="tm-svg-img tm-header__icon tm-header__icon-burger" height="16" width="16"><title>Меню</title><use xlink:href="/img/megazord-v28.371b7fa3..svg#header-burger"></use></svg></button></div><span class="tm-header__logo-wrap"><a class="tm-header__logo tm-header__logo_hl-ru tm-header__logo" href="/ru/"><svg class="tm-svg-img tm-header__icon" height="16" width="16"><title>Хабр</title><use xlink:href="/img/habr-logo-ru.svg#logo"></use></svg></a><span style="display:none;" class="tm-header__beta-sign">β</span></span><!----><div class="tm-header-user-menu tm-header_user-menu"><a href="/ru/search/" class="tm-header-user-menu__item tm-header-user-menu__search" data-test-id="search-button"><svg class="tm-svg-img tm-header-user-menu__icon tm-header-user-menu__icon_search" height="24" width="24"><title>Поиск</title><use xlink:href="/img/megazord-v28.371b7fa3..svg#search"></use></svg></a><!----><!----><div class="tm-header-user-menu__item tm-header-user-menu__write"><div><svg class="tm-svg-img tm-header-user-menu__icon tm-header-user-menu__icon_write" height="24" width="24"><title>Написать публикацию</title><use xlink:href="/img/megazord-v28.371b7fa3..svg#write"></use></svg></div><!----></div><!--[--><div class="tm-header-user-menu__item"><button class="tm-header-user-menu__toggle" data-test-id="user-menu-settings"><svg class="tm-svg-img tm-header-user-menu__icon" height="24" width="24"><title>Настройки</title><use xlink:href="/img/megazord-v28.371b7fa3..svg#page-settings"></use></svg></button></div><a href="https://habr.com/kek/v1/auth/habrahabr/?back=/ru/companies/rshb/articles/747898/&amp;hl=ru" rel="nofollow" class="tm-header-user-menu__item"><!--[--><button class="btn btn_solid btn_small tm-header-user-menu__login" type="button"><!--[-->Войти<!--]--></button><!--]--></a><!--]--><!----><!--teleport start--><!--teleport end--><!----></div></div><!--]--></div></header><div class="tm-layout"><div class="tm-page-progress-bar"></div><!----><!----><div class="tm-page-width"><!--[--><!--]--></div><main class="tm-layout__container"><div class="tm-page" hl="ru" companyname="rshb" data-async-called="true" style="--0c809c5a:16px;--a086013e:100%;--7c457026:0;"><div class="tm-page-width"><!--[--><div class="tm-page__header"><!--[--><div class="tm-company-card__branding tm-company-card__branding_loading tm-company-article__branding" data-test-id="company-card-branding"><div class="tm-company-card__branding-placeholder"><!----></div><a href="https://rshbdigital.ru/"><img class="tm-company-card__branding-image" src="//habrastorage.org/getpro/habr/branding/0ed/4f9/317/0ed4f9317682d68228bf9d6c2581df21.png"></a></div><!--]--></div><div class="tm-page__wrapper"><div class="tm-page__main_has-sidebar tm-page__main"><div class="pull-down"><!----><div class="pull-down__header" style="height:0px;"><div class="pull-down__content" style="bottom:10px;"><svg class="tm-svg-img pull-down__icon pull-down__arrow" height="24" width="24"><title>Обновить</title><use xlink:href="/img/megazord-v28.371b7fa3..svg#pull-arrow"></use></svg></div></div><!--[--><!--[--><div class="tm-article-presenter"><!--[--><!--]--><div class="tm-article-presenter__body" data-test-id="article-body"><div class="tm-misprint-area"><div class="tm-misprint-area__wrapper"><!--[--><article class="tm-article-presenter__content tm-article-presenter__content_narrow"><!--[--><div class="tm-article-presenter__header"><!--[--><!--]--><div class="tm-article-snippet tm-article-snippet tm-article-presenter__snippet"><!--[--><!--]--><div class="tm-article-snippet__meta-container"><div class="tm-article-snippet__meta"><span class="tm-user-info tm-article-snippet__author"><a href="/ru/users/RSHB_tsyfra/" class="tm-user-info__userpic" data-test-id="user-info-pic" title="RSHB_tsyfra"><div class="tm-entity-image"><img alt="" class="tm-entity-image__pic" height="32" src="//habrastorage.org/r/w64/getpro/habr/avatars/7e7/f18/afb/7e7f18afb7438faf517a733c6a367388.jpg" width="32"></div></a><span class="tm-user-info__user tm-user-info__user_appearance-default" data-test-id="user-info-description"><a href="/ru/users/RSHB_tsyfra/" class="tm-user-info__username">RSHB_tsyfra <!----></a><!--[--><span class="tm-article-datetime-published"><time datetime="2023-07-13T16:46:06.000Z" title="2023-07-13, 19:46">13  июл  2023 в 19:46</time></span><!--]--></span></span></div><!----></div><h1 class="tm-title tm-title_h1" lang="ru" data-test-id="articleTitle"><span>Микросервисы в банке: на чем их лучше писать? Java/Kotlin, а может Go?</span></h1><div class="tm-article-snippet__stats" data-test-id="articleStats"><div class="tm-article-complexity tm-article-complexity_complexity-medium"><span class="tm-svg-icon__wrapper tm-article-complexity__icon"><svg class="tm-svg-img tm-svg-icon" height="24" width="24"><title>Уровень сложности</title><use xlink:href="/img/megazord-v28.371b7fa3..svg#complexity-medium"></use></svg></span><span class="tm-article-complexity__label">Средний</span></div><div class="tm-article-reading-time"><span class="tm-svg-icon__wrapper tm-article-reading-time__icon"><svg class="tm-svg-img tm-svg-icon" height="24" width="24"><title>Время на прочтение</title><use xlink:href="/img/megazord-v28.371b7fa3..svg#clock"></use></svg></span><span class="tm-article-reading-time__label">19 мин</span></div><span class="tm-icon-counter tm-data-icons__item"><svg class="tm-svg-img tm-icon-counter__icon" height="24" width="24"><title>Количество просмотров</title><use xlink:href="/img/megazord-v28.371b7fa3..svg#counter-views"></use></svg><span class="tm-icon-counter__value" title="11387">11K</span></span></div><div class="tm-publication-hubs__container" data-test-id="articleHubsList"><div class="tm-publication-hubs"><!--[--><span class="tm-publication-hub__link-container"><a href="/ru/companies/rshb/articles/" class="tm-publication-hub__link"><!--[--><span>Блог компании РСХБ.цифра (Россельхозбанк)</span><!----><!--]--></a></span><span class="tm-publication-hub__link-container"><a href="/ru/hubs/java/" class="tm-publication-hub__link"><!--[--><span>Java</span><span class="tm-article-snippet__profiled-hub" title="Профильный хаб">*</span><!--]--></a></span><span class="tm-publication-hub__link-container"><a href="/ru/hubs/go/" class="tm-publication-hub__link"><!--[--><span>Go</span><span class="tm-article-snippet__profiled-hub" title="Профильный хаб">*</span><!--]--></a></span><span class="tm-publication-hub__link-container"><a href="/ru/hubs/kotlin/" class="tm-publication-hub__link"><!--[--><span>Kotlin</span><span class="tm-article-snippet__profiled-hub" title="Профильный хаб">*</span><!--]--></a></span><span class="tm-publication-hub__link-container"><a href="/ru/hubs/tech_events/" class="tm-publication-hub__link"><!--[--><span>Конференции</span><!----><!--]--></a></span><!--]--></div></div><div class="tm-article-labels" data-test-id="articleLabels"><div class="tm-article-labels__container"><div class="tm-publication-label tm-publication-label_variant-review"><span>Обзор</span></div><!--[--><!--]--></div></div><!----><!----></div></div><!--[--><!----><div class="tm-article-body" data-gallery-root lang="ru"><div><!--[--><!--]--></div><div id="post-content-body"><div><div class="article-formatted-body article-formatted-body article-formatted-body_version-2"><div xmlns="http://www.w3.org/1999/xhtml"><p>В июле в офисе РСХБ-Интех (технологической дочки Россельхозбанка) состоялся бесплатный митап для Java-разработчиков — <a href="https://rshbdigital.ru/backend-dev-meetup">RSHB Backend Dev Meetup</a>. Обсудили Kotlin, Go, маппинг и разные аспекты бэкэнд-разработки. В числе докладчиков выступал Иван Кочергин, руководитель центра собственной разработки РСХБ-Интех. Иван более 10 лет занимается разработкой на Java, последние три года — на Kotlin. В своем докладе он сравнил, на чем лучше писать микросервисы в банке: Java, Kotlin или Go. Делимся расшифровкой доклада. Запись всего митапа можно <a href="https://rutube.ru/video/e3118fad77a101791f2c1a7ba2130be0/?r=wd">посмотреть на Rutube</a>.</p><figure class="full-width "><img src="https://habrastorage.org/r/w780q1/getpro/habr/upload_files/378/543/3c7/3785433c7c3becbf71b603069ed177c7.jpeg" width="1280" height="854" data-src="https://habrastorage.org/getpro/habr/upload_files/378/543/3c7/3785433c7c3becbf71b603069ed177c7.jpeg" data-blurred="true"/></figure><h3>Предисловие</h3><p>Можно выделить несколько основных вызовов современной разработки.</p><p><strong>Time to Market</strong> — время, требующееся на проектирование функционала, его разработку, тестирование и релиз. То есть период от проектирования до момента, когда он станет доступен пользователю. Перед разработчиком стоит очевидная задача минимизировать это время. </p><p><strong>Когнитивная сложность применяемых решений и технологий</strong>. Если раньше новой версии Java можно было ждать по три-четыре года, то сейчас версии выходят каждые полгода, появляются новые фреймворки, парадигмы программирования, библиотеки. В мире фронтенд-разработки ситуация выглядит еще более “выпукло”. Эта сфера требует определенного уровня управления, в противном случае разработчик превращается в перегруженного лишними знаниями ослика.</p><p><strong>Написание ресурсоэффективных приложений.</strong> В 2020 году произошел кризис цепочки поставок, который привел к общемировому дефициту полупроводников. Соответственно, сейчас от разработчиков требуют создания ресурсоэффективных приложений с минимально возможным application footprint, то есть количеством потребляемых ресурсов.</p><p>Перейдем к ответам на данные вызовы. </p><p><strong>Микросервисная архитектура</strong> — набирающий популярность подход, при котором информационная система может быть рассмотрена как набор отдельных сервисов, каждый из которых удовлетворяет нескольким параметрам:</p><ul><li><p>выполняет одну из поставленных бизнес-функций;</p></li><li><p>имеет слабую связку с другими сервисами;</p></li><li><p>имеет возможность деплоя и масштабирования независимо от других сервисов. </p></li></ul><p>Из этого следует, что каждый сервис может быть написан на своем языке программирования, более подходящем под решение конкретной задачи, иметь свое хранилище и разрабатываться отдельной командой или группой разработки.</p><p>Говоря о языках программирования, стоит отметить, что Java лидирует в корпоративной и банковской сфере, и Россельхозбанк (РСХБ) не является исключением. Более 80% репозиториев бэкэнд-сервисов написаны на JVM-стеке: 74% занимает Java и еще около 6% Kotlin. </p><figure class="full-width "><img src="https://habrastorage.org/r/w780q1/getpro/habr/upload_files/289/38d/d2e/28938dd2e4052e8f33d46c5117ef94b2.jpeg" width="1105" height="668" data-src="https://habrastorage.org/getpro/habr/upload_files/289/38d/d2e/28938dd2e4052e8f33d46c5117ef94b2.jpeg" data-blurred="true"/></figure><h3>Kotlin vs Go</h3><p>С учетом всего вышесказанного, бэкграунда РСХБ и стоящих перед нами вызовов давайте попробуем разобраться, на чем лучше писать микросервисы в банке — Kotlin или Go.</p><p>Для начала определим критерии для сравнения.</p><ul><li><p>Null Safety. Позволяет минимизировать количество NPE (NullPointerException), так знакомых всем разработчикам. То есть обращение к непроинициализированным переменным.</p></li><li><p>Возможность расширения функциональности существующих классов/структур без изменения исходного кода.</p></li><li><p>Возможность удобного создания контейнеров для хранения данных.</p></li><li><p>Неблокирующая многопоточность и IO. Если раньше приложение представляло собой монолит, не предполагающий никаких сетевых взаимодействий между его частями, то сейчас отдельным сервисам надо эффективно общаться.</p></li><li><p>Работа с функциями.</p></li><li><p>Синтаксический сахар.</p></li></ul><h4>Null Safety</h4><p>Рассмотрим первый пример на <strong>Kotlin</strong>. Переменная <strong><em>а</em></strong> имеет тип String с вопросительным знаком, и мы присваиваем ей некое значение. Вопросительный знак говорит о том, что переменная может быть установлена в null. Соответственно, когда мы делаем это на следующей строчке, никаких проблем не возникает и наш код отработает корректно.</p><p>Во втором примере переменная <strong><em>b</em></strong> имеет тип String без вопросительного знака. При попытке присвоить ей нулевое значение получаем ошибку компиляции.</p><pre><code>	fun main() {
		var a: String? = "abc" // can be set to null
		a = null // ok
		print(a)
		
		var b: String = "abc" // Regular initialization means non-null by default
		b = null // compilation error
	}</code></pre><p>Теперь давайте рассмотрим пример, когда мы хотим передать некую переменную в Kotlin. У нас есть функция strLength, возвращающая нам длину нашей строки. Поскольку строка (s) всегда будет проинициализирована, то данный метод завершится без каких-либо ошибок. </p><p>В примере с ненулевой строкой показывает значение, соответствующее числу строк (в примере ниже 5). В случае, когда переменная может принимать нулевое значение, появится ошибка компиляции. </p><p>Это все здорово, но мы видим, что переменная nullable на самом деле проинициализирована. В таких случаях мы можем сообщить компилятору, что берем все риски на себя. Для этого в Kotlin есть синтаксис !!. </p><pre><code>	fun main() {
		fun strLength(s: String): Int {
			return s.length
		}
		
		val notNullString = "hello"
		println(strLength(notNullString)) // 5
		
		var nullable: String? = "hello"
		println(strLength(nullable)) // compilation error
		
		println(strLength(!!nullable)) // 5
	}</code></pre><p>Перейдем к тому, как это все реализовано в <strong>Go</strong>: никак. Null Safety в Go отсутствует. При разработке вы часто будете видеть представленную ниже конструкцию с методом doSomething, возвращающим два значения: результат и ошибку. Далее идет проверка на то, что ошибки нет. Если ошибка имеет место, выполнение программы завершается.</p><pre><code>func main() {
	result, err := doSomething()
	if err != nil {
		os.Exit(1)
	}
}</code></pre><p>Такое решение тоже осмысленно. Создатели Go посчитали, что проверка на null является очень простой и всем очевидной. Была попытка реализовать SGo (Safe Go), где использовался похожий на Kotlin синтаксис. Но данный форк был сделан для версии Go 1.7, репозиторий есть в GitLab, но он заброшен. </p><h4>Функции расширения</h4><p>Давайте рассмотрим кейс с функцией расширения в <strong>Kotlin </strong>— ситуация, когда мы хотим расширить поведение какого-либо класса. Возьмем пример с UserPassword. Здесь мы хотим проверить, является ли secure наш пароль. На деле тут должен быть какой-нибудь “страшный” REGEX, проверяющий безопасность пароля. Но для демонстрации обойдемся простой проверкой, что пароль не короче трех символов. Представленный ниже код отработает корректно.</p><pre><code>fun UserPassword.isSecure(): Boolean {
	/* validate password against some horrible regexp*/
	return if(this.password.length &lt; 3) {
		false 
	} else {
		true
	}
}

fun main() {
	val up = UserPassword(username = "John", password = "***")
	println(up.isSecure()) // true
}</code></pre><p>Теперь посмотрим на пример, когда мы пытаемся расширить поведение класса, который не находится в нашей кодовой базе. Для примера возьмем LocalDate (класс из package java.time) и создадим для него функцию расширения, которая сможет распечатать его в привычном нам формате: дата, месяц, год. Выглядеть наш код будет вот так. В методе main мы просто создаем объект LocalDate.now() и на нем вызываем метод. Все просто и понятно.</p><pre><code>import java.time.LocalDate
import java.time.format.DateTimeFormatter

fun LocalDate.toddMMyyyyFormat(): String {
	return this.format(DateTimeFormatter.ofPattern("dd.MM.yyyy"))
}

fun main() {							
	println(LocalDate.now().toddMMyyyyFormat()) // 06.07.2023
}</code></pre><p>Теперь посмотрим, как это выгляди в <strong>Go</strong>. На самом деле, все очень похоже. Мы описываем структуру, метод, но с несколько иным синтаксисом. В целом все абсолютно идентично.</p><pre><code>type UserPassword struct {
	Username string `json:"username"` 
	Password string `json:"password"`
}	

func (up *UserPassword) isSecure() bool {
	/* validate password against some horrible regexp*/
	var isSecure bool
	if len(up.Password) &lt; 3 {
		isSecure = false
	} else {
		isSecure = true
	}
	return isSecure
}

func main() {
	up := UsrPwd{"John", "***"}
	fmt.Println(upwd.MyUsername()) // username = John
}</code></pre><p>Есть проблема, что мы не можем расширять поведение структур, которые не в нашем package. У Go есть ответ на этот вопрос. Есть возможность создать через конструкцию type UsrPwd алиас тип и на нем, поскольку он находится уже в моем package, прикрепить функцию, которая вернет мне мой логин. Далее мы создаем структуру, объект этой структуры, и печатаем его.</p><pre><code>type UserPassword struct {
	Username string `json:"username"` 
	Password string `json:"password"`
}

type UsrPwd UserPassword

func (up UsrPwd) MyUsername() string {
	return "username = " + up.Username
}

func main() {							
	up := UsrPwd{"John", "***"}
	fmt.Println(up.MyUsername()) // username = John
}</code></pre><h4>Контейнеры данных</h4><p>В <strong>Kotlin</strong> контейнеры данных — это Data classes, удобный синтаксис для создания POJO-файлов, у которых переопределён toString, equals, hashcode, а также реализован метод <em>copy</em>, который позволяет копировать объект при необходимости точечно изменяя некоторые поля. Все это переопределено, и за счет языка можно отказаться от библиотеки Lombok. </p><p>В примере далее мы описываем структуру UserPassword, хранящую в себе логин и пароль пользователя, создаем объект данного класса и печатаем его. Как видно, мы при печати получаем название класса и переменных. Стоит обратить внимание, что здесь используются модификаторы val. Есть модификаторы var и val. val — финальное значение, то есть переменную изменить не получится, поэтому в данном случае POJO-файл будет создан без сеттеров.</p><pre><code>	data class UserPassword(val username: String, 
							val password: String)
	 
	fun main() {
		val up = UserPassword(username = "John", password = "***")
		println(up) // UserPassword(username = John, password = ***)
	}</code></pre><p>В <strong>Go</strong> контейнеры данных называются структурами (Structs) и имеют несколько иной синтаксис. Мы определяем тип UserPassword. Все то же самое, но поля Username и Password начинаются с большой буквы, то есть они являются публичными. Они доступны за пределами package, в котором определяются. Соответственно, для того, чтобы при сериализации наши поля имели другие названия, используются теги. В данном случае при сериализации json поля с большой буквы будут конвертированы в поля с маленькой буквы. В Go это называется теги. Чем-то они похожи на аннотации.</p><p>После простановки тегов создаем объект структуры и распечатываем его. Информации получаем меньше, но в целом все понятно.</p><pre><code>type UserPassword struct {
		Username string `json:"username"` 
		Password string `json:"password"`
	}
	 
	func main() {
		up := UserPassword {
			Username: "John", 
			Password: "***",
		}
		fmt.Println(up) // {John ***}
	}</code></pre><h4>Coroutines в Kotlin</h4><p>Давайте представим, что мы хотим получить данные из Интернета, при этом сделать так, чтобы это не влияло на производительность системы в течении большого количества времени. Coroutines дают такую возможность. Для начала создадим Channel для String — структура для обмена данными между Coroutines, чем-то похожая на BlockingQueue. Мы можем отправлять туда и читать оттуда значения. После создания Channel мы передаем в нее функцию getFromInternet, получаем данные из Channel и печатаем то что получили по сети.</p><p>Чем же занимается функция getFromInternet? Тут мы создаем request. Сразу скажу, что я использую функционал httpClient, доступный в Java с 11 версии. Очень удобно этим пользоваться. После создания запроса делаем асинхронный запрос, который вернет нам CompletableFuture. Здесь очень важно обратить внимание на метод await. Его нет в классе CompletableFuture. Это именно та функция-расширение, про которую я рассказывал на предыдущих слайдах. То есть это возможность расширить поведение и, в нашем случае, метод await() - это мостик между миром Java и миром Coroutines. Про это я делал доклад на JPoint в прошлом году. Все желающие могут с ним ознакомиться.</p><p>После получения ответа мы отправляем его в Channel и можем прочитать его.</p><pre><code>fun main() = runBlocking {
	val ch = Channel&lt;String&gt;()
	launch {
		getFromInternet(ch)
	}
	val resBody = ch.receive()
	println(resBody) // response body
}

suspend fun getFromInternet(ch: Channel&lt;String&gt;) {
	val request = HttpRequest.newBuilder()
		.GET()
		.uri(URI.create("https://example.org/"))
		.build()
	
	val response = httpClient
		.sendAsync(request, HttpResponse.BodyHandlers.ofString())
		.await()
	ch.send(response.body())
}

val httpClient: HttpClient = HttpClient.newBuilder()
	.version(HttpClient.Version.HTTP_1_1)
	.build()</code></pre><h4>Goroutines в Go</h4><p>Goroutines имеют очень похожий синтаксис. В данном примере я реализовал точно такой же функционал. Сначала создаем Channel, в котором можем хранить строку, после запускаем в Goroutines метод получения данных из Интернета, как я показывал ранее. Подобного рода конструкции проверок на ошибки у нас будут частыми в Go коде. Полученный ответ передаем в Channel, и в main методе мы его читаем.</p><pre><code>func main() {
	ch := make(chan string)
	go getFromInternet(ch)
	resBody := &lt;- ch
	fmt.Println(resBody) // response body
}

func getFromInternet(ch chan string) {
	res, err := http.Get("https://example.org/")
	if err != nil {
		os.Exit(1)
	}
	resBody, err := ioutil.ReadAll(res.Body)
	if err != nil {
		os.Exit(1)
	}
	ch &lt;- resBody
}</code></pre><p>В целом, за исключением того, что Go использует чуть более хитрый синтаксис в виде стрелочек, а Kotlin более очевидные send/receive, разницы особой нет. Единственное, что нужно отметить, что для запуска Goroutines используется волшебное слово go. Coroutines в Kotlin являются библиотекой. В свою очередь, в Go Goroutines - это часть языка, и для начала их использования ничего подключать не нужно. Про разницу двух подходов (библиотечного и часть языка) есть отличный пост Романа Елизарова.</p><h4>Kotlin: First-Class Functions</h4><p>Рассмотрим возможность работы с функциями. First-Class Functions — функции, которые мы можем передавать в другую функцию как параметр и получать их как возвращаемое значение. В уже знакомом классе UserPassword мы создаем два объекта: John и Ivan. Также у нас есть функция аутентификации, принимающая объект из этого класса, и функция приветствия. </p><p>Допустим, у нас англоязычный сервис, и мы создаем функцию приветствия пользователя на английском языке. Функцию приветствия на английском мы передаем как метод референс. В случае, если мы хотим поприветствовать Ivan иначе, всегда можно использовать метод лямбды. В Kotlin лямбду можно вынести за скобки. Это особенность языка, позволяющая удобно писать собственный dsl. Но в данном примере показанный синтаксис более понятен. Тут лямбда является вторым параметров, и у не знакомых с Kotlin людей вопросов не появится.</p><pre><code>fun main() {
		val john = UserPassword(username = "John", password = "***")
		val ivan = UserPassword(username = "Иван", password = "***")
	 
		auth(john, ::greetingEng) // Hello, John
		auth(ivan, {name -&gt; "Привет, $name"}) // Привет, Иван
	}
	 
	fun auth(up: UserPassword, greeter: (name: String) -&gt; String) {
		println(greeter(up.username))
	}
	 
	fun greetingEng(name: String): String {
		return "Hello, $name"
	}</code></pre><h4>Go: First-Class Functions</h4><p>В Go работа с функциями проходит идентично Kotlin. Мы точно также определяем метод аутентификации, который вторым параметром принимает функцию. Также мы имеем функцию приветствия на английском, и в первом случае передаем ее, во втором передаем анонимную функцию, которая приветствует Ivan по-русски.</p><pre><code>func main() {
		john := UserPassword{"John", "***"}
		ivan := UserPassword{"Иван", "***"}
		
		auth(john, greetingEng) // Hello, John
		auth(ivan, func(name string) string) {
			return "Привет, " + name
		}) // Привет, Иван
	}
	 
	fun auth(up *UserPassword, greeter func(name string) string) {
		fmt.Println(greeter(up.Username))
	}
	 
	fun greetingEng(name string) string {
		return "Hello, " + name
	}</code></pre><p>Ниже приведена итоговая таблица по результатам сравнения Kotlin и Go.</p><figure class="full-width "><img src="https://habrastorage.org/r/w780q1/getpro/habr/upload_files/c2e/172/f38/c2e172f3825d3df5b33c3338d8df6893.jpeg" width="989" height="673" data-src="https://habrastorage.org/getpro/habr/upload_files/c2e/172/f38/c2e172f3825d3df5b33c3338d8df6893.jpeg" data-blurred="true"/></figure><p>В Go Null-safety отсутствует как класс. Но это тот выбор, на который создатели языка пошли сознательно. С этим нужно просто жить. Функции расширения в Kotlin и Go работают одинаково хорошо. Data Containers в Kotlin присутствуют, позволяют создать POJO-файлы и иммутабельные POJO-файлы. В Go возможность создания иммутабельных объектов отсутствует. Синтаксического сахара в Kotlin больше. Работа с функциями и неблокирующаяся многопоточность в Kotlin и Go реализованы идентично и работают очень хорошо.</p><h4>Микросервисы</h4><p>Возвращаясь к теме написания микросервисов. JVM использует при запуске минимум 70 МБ памяти. Это уже не сильно похоже на микросервис, при этом размер потребляемых JVM ресурсов зависит от размера памяти, которую использует само приложение. Для задач обслуживания приложения JVM необходимо от 10 до 25% памяти приложения.</p><p>В итоге наши микросервисы на Java начинают выглядеть как на картинке ниже. Имеется небольшая полезная нагрузка и большая JVM, на которой работает приложение. </p><figure class="full-width "><img src="https://habrastorage.org/r/w780q1/getpro/habr/upload_files/2cb/994/ee1/2cb994ee1ce1dc921e84ea0edccea145.jpeg" width="1147" height="417" data-src="https://habrastorage.org/getpro/habr/upload_files/2cb/994/ee1/2cb994ee1ce1dc921e84ea0edccea145.jpeg" data-blurred="true"/></figure><p>Соответственно, встал вопрос, настолько ли Go эффективен, как о нем говорят. Я написал приложения, удовлетворяющее требованиям App.Farm к наличию OpenAPI и healthcheck-endpoint. App.Farm - это система, которая используется для быстрого запуска и деплоя приложений. Грубо говоря - это корпоративный Kubernetes со всем необходимым обвесом в виде Gitlab, Nexus, SonarQube и тд. Ниже в таблице указаны версии языка и фреймворка, используемые при написании приложений.</p><div><div class="table"><table><tbody><tr><td><p align="left"></p></td><td><p align="left"><strong>JVM</strong></p></td><td><p align="left"><strong>Go</strong></p></td></tr><tr><td><p align="left">Версия языка</p></td><td><p align="left">Java 17</p><p align="left">Kotlin 1.7</p></td><td><p align="left">1.20</p></td></tr><tr><td><p align="left">Версия фреймворка</p></td><td><p align="left">Spring 3.1</p></td><td><p align="left">Echo 4</p></td></tr></tbody></table></div></div><p>Теперь посмотрим на результаты сравнения объёмов потребляемых ресурсов. В критерии размера артефакта победителя нет. Да, в Go показатель меньше, но не значительно. А вот по размеру потребляемой памяти и времени запуска Go существенно выделяется.</p><figure class="full-width "><img src="https://habrastorage.org/r/w780q1/getpro/habr/upload_files/8e6/598/e81/8e6598e8146c2589f40b0d0a7e320d1d.jpeg" width="1234" height="419" data-src="https://habrastorage.org/getpro/habr/upload_files/8e6/598/e81/8e6598e8146c2589f40b0d0a7e320d1d.jpeg" data-blurred="true"/></figure><h4>Да, но…</h4><p>Может показаться, что мы уже получили ответ на поставленный в начале вопрос, но не до конца. Давайте взглянем, что может предложить Java для решения проблемы с потребляемыми ресурсами.</p><p><strong>GraalVM </strong>— виртуальная машина, разрабатывающая Oracle, в состав которой входит утилита Native Image, которая умеет преобразовывать class-файлы и jar-файлы в нативные бинарники. При этом для использования решения есть несколько ограничений.</p><ul><li><p>Требуются новейшие версии фреймворков, и с учетом того, что в банках нередко много легаси, не всегда получится это реализовать;</p></li><li><p>Время сборки значительно увеличится. Native Image на вход необходимо передать либо скомпилированные class-файлы, либо jar-файлы, соответственно, к текущему пайплайну добавится новый этап. Бинарник соберет все классы и интерфейсы, необходимые для работы приложения. Если раньше, например, класс String был доступен из JVM, то теперь его нужно будет положить в данный бинарник.</p></li><li><p>Увеличится размер артефакта</p></li><li><p>Проблемы со сторонними библиотеками. Если новейшие фреймворки гарантируют совместимость с Native Image, то со сторонними библиотеками могут быть проблемы. </p></li></ul><h4>Как следствие </h4><p>Также есть кейсы, в которых JVM лучше Go. Рассмотрим <strong>паттерн Strongman</strong>. Допустим,у нас есть приложение, которое занимается отправкой почты для всего банка, создаёт письма по заданным шаблонам, вставляет корпоративную символику и т.д. Это приложение можно считать микросервисом, так как оно выполняет одну функцию, но при этом работает с большим объёмом данных и потребляет большое количество ресурсов. В таком случае объем потребляемых ресурсов JVM размывается на фоне ресурсов, потребляемых приложением. Кроме того, есть <a href="https://medium.com/helidon/can-java-microservices-be-as-fast-as-go-5ceb9a45d673">сравнение сервисов</a>, написанных на Java и Go, которое показывает, что Java эффективнее работает с большими объемами ресурсов, чем Go.</p><figure class="float full-width "><img src="https://habrastorage.org/r/w780q1/getpro/habr/upload_files/9c4/ddf/0d7/9c4ddf0d703219aab5b967d36405d954.jpeg" width="1239" height="888" data-src="https://habrastorage.org/getpro/habr/upload_files/9c4/ddf/0d7/9c4ddf0d703219aab5b967d36405d954.jpeg" data-blurred="true"/></figure><p>Допустим, у нас нет ситуации, когда в нашем приложении мы не отправляем почту за весь банк. У нас нет тысяч rps, а почта отправляется время от времени. Тогда можно использовать <strong>паттерн Swiss Knife</strong>. Когда разный функционал собирается в один сервис, то получается некое подобие швейцарского ножа, который делает все и понемногу. Внимательный читатель может заметить, что это является отходом от микросервисной архитектуры. Да, но это тот trade off, на который нужно идти сознательно, отдавая себе отчёт в том зачем вы это делаете.</p><h3>Итоги</h3><p>Резюмируя все вышесказанное, давайте посмотрим, что нам могут предложить Kotlin и Go.</p><h4>Kotlin</h4><ul><li><p>Полная совместимость с Java позволяет использовать существующие библиотеки и собственные наработки.</p></li><li><p>Лаконичность синтаксиса позволяет разработчикам писать код быстрее, таким образом снижая time-to-market.</p></li><li><p>Неблокирующая многопоточность: разработка ведется в привычной императивной парадигме. Кроме Coroutines тут имеет место быть такая вещь, как реактивщина. В Spring есть фреймворк Spring Flux, при использовании которого мы можем добиться сопоставимой производительности с Coroutines, но при этом не сильно потеряем в читабельности кода.</p></li><li><p>Количество кода меньше на 20% по сравнению с Java.</p></li><li><p>Возможность использования со старыми версиями Java, что очень критично для банковской сферы, наполненной легаси-системами. Основной плюс заключается в том, что мы получим прирост производительности при использовании Coroutines. Кроме того, даже работая на старых версиях Java разработчики смогут получить опыт работы с новыми парадигмами, которые в их версии языка могут отсутствовать.</p></li></ul><h4>Go</h4><ul><li><p>Маленький Application Footprint, феноменально короткое время запуска.</p></li><li><p>Встроенная поддержка многопоточности — не библиотека, а часть языка.</p></li><li><p>Неблокирующая многопоточность: разработка в привычной императивной парадигме. </p></li></ul><p><strong>Но есть и минусы:</strong></p><ul><li><p>Небольшая экосистема по сравнению с Java, что связано с тем, что это относительно молодой язык. </p></li><li><p>Отсутствие поддержки старых технологий и протоколов. Но тут сложно сказать, плюс это или минус.</p></li><li><p>Меньше возможностей для управления GC.</p></li></ul><p>Какие можно дать рекомендации. Если в вашем проекте используется Java, то лучше начать использовать Kotlin, поскольку это действительно очень хороший язык. Если очень хочется использовать Go, а ваш текущий проект написан на Java, то рекомендация не меняется: все равно начинать использовать Kotlin. Если обременение в виде проекта на Java отсутствует, то стоит дождаться релиза сервиса-пионера на Go, который мы сейчас разрабатываем с командой AppFarm. Это сервис, который проходит все проверки нашего пайплайна и может быть взят за основу.</p><h3>Вопросы слушателей</h3><p>В следующем блоке собрали все вопросы от слушателей и зрителей митапа в онлайне, в том числе на которые не удалось ответить непосредственно на мероприятии. Вопросы собирались в <a href="https://t.me/RSHB_meetups">чате митапов РСХБ.цифра</a> в Telegram.</p><p><strong>В Райффайзенбанке преимущественно на DotNET пишут. Почему не сравниваете с ним?</strong></p><p>Мой бэкграунд это Java-разработка. Более 80% бэкэнд-сервисов в РСХБ написаны на Java. Поэтому я делал доклад, более актуальный для компании, в которой на текущий момент работаю.</p><p><strong>Есть ли в РСХБ техрадар? Если да, если в нем Go или что там вообще есть.</strong></p><p>Есть и техрадар, и Go в нём присутствует. Легализацией Go как языка программирования мы занимаемся не только со стороны разработки, но и со стороны App.Farm. Это тот конвейер приложений, в котором все новые сервисы должны запускаться. App.Farm насаждает определенные стандарты и культуру разработки. До его появления каждый проект был уникальным и это увеличивало когнитивную нагрузку на разработчиков при переходе на другой проект внутри банка. Дополняя тему техрадара, скажу, что следующий доклад у нас будет про Rust. Это тоже очень интересный язык со своими особенностями управления памятью, про который можно чего интересного рассказать и услышать.</p><p><strong>В представленной таблице нет пункта про ООП. Также вопрос — насколько код на Java должен быть маленьким, чтобы его можно было перенести Go, и насколько большим, чтобы переносить на Java?</strong></p><p>Я сторонник полиглотных систем. Все сервисы, выполняющие небольшую функцию и не находящиеся под большой нагрузкой, но при этом делающие много сетевых запросов, я бы писал на Go. В отношении сервисов, работающих с большими объемами данных и под большими нагрузками, очень интересно посмотреть на Rust. На одном из моих проектов мы собираем все файлы банка в единое хранилище. Некоторые файлы могут иметь большой размер. И иногда мы сталкиваемся с ситуацией, при которой приложение может завершиться с Out Of Memory даже на небольшом файле. Это связано с тем, что GC может не успеть отработать и удалить из памяти файлы от предыдущих запросов. Ввиду отсутствия GC в Rust, память, которая используется, сразу освобождается, и будет меньше случаев, когда Kubernetes рубит сервис из-за перерасхода ресурсов.</p><p>Что касается парадигмы языка, да, Go можно назвать процедурным языком. ООП рассматривался командой создателей языка Go как дополнительный источник когнитивной нагрузки, а сложная система наследования приводит к созданию спагетти-кода. <a href="https://go.dev/talks/2015/gophercon-goevolution.slide#19"><u>Они считают</u></a>, что интерфейсов и методов структур достаточно для реализации ООП.</p><p><strong>Вы говорили, что лучше писать на Rust. Много в РСХБ Rust-разработчиков?</strong></p><p>Я, наверное, пока единственный. Но на Rust предполагается реализовать небольшой слой, который отвечает за работу с файлами. Для этого не нужна большая команда - двух человек будет достаточно.</p><p>Добавлю, что я говорил о том, что каждый язык стоит использовать для определенной задачи. А то, что у нас появляется бизнес-задача в виде найма большой команды, это уже другое. Но думаю, мы можем прийти к созданию команды РСХБ, разрабатывающей на Rust.</p><p><strong>Вы приводили сравнение истории с одним сервисом на одну виртуальную машину. Но ведь обычно контейнер используется типа Tomcat, где много сервисов на виртуальную машину. Плюс гексагональная архитектура позволяет решить эту проблему.</strong></p><p>Возможно. Боюсь, с ходу ответить на этот вопрос не получится.</p><p><strong>В рассказе про разницу между языками вы как-то сразу забыли про Java. С точки зрения программиста и с точки зрения бизнеса зачем нам менять одно на другое? Java популярен, он развивается, и все эти фишки, про которые вы говорили, можно нормально прописать на Java.</strong></p><p>Вопрос резонный. Проблема в том, что разница между Java 20 и Kotlin будет незначительной. Но в банке очень много легаси-систем, например, на текущий момент вводиться в эксплуатацию система, написанная на Java 8.0. Соответственно, все те плюшки, о которых мы говорим, попросту недоступны. При этом Kotlin хорошо работает со старыми версиями Java. Да, если в  таблицу сравнения добавить Java, будет примерно то же самое, что у Kotlin.</p><p>В конце 2019 года у меня была мысль не использовать Coroutines Kotlin, хотел дождаться project Loom. Не дождался. </p><p>Последние три года я разрабатываю на Kotlin. Это очень приятный в работе язык. Переход на Kotlin также не занимает какого-то значительного времени. Тут скорее вопрос в поиске TeamLead’ов, которые смогут познакомить команду с новыми идиомами. Потому что зачастую Java-разработчики продолжают писать Java-код, только теперь уже на Kotlin. Сам был в таком замечен.</p><p>Свой первый проект на Kotlin я начинал под личную ответственность. Программист должен быть смелым, я считаю.</p><p><strong>Какая ресурсоэффективность при микросервисной архитектуре, если пустой проект может отъедать 50 МБ памяти? Как эту проблему решать и какие подходы лучше использовать?</strong></p><p>Как я показывал, у нас микросервис может занимать 70 МБ с ходу. Как вариант, если очень хочется писать на JVM, можно использовать Native Image. Это повлечет указанные ранее сложности, но решает проблемы. Или вы можете создать некий utils-сервис, который будет неким швейцарским ножом. Это решит проблему, но идти на этот шаг можно только отдавая себе отчёт в своих действиях. </p><p><strong>70 МБ это, конечно, невыносимо много. Зато когда это все крутится в Kuber на целой виртуалке на Unix, тут, конечно же, ничего страшного. Предложенные методы тоже не совсем ресурсоэффективны. </strong></p><p>Если говорить конкретно про мой взгляд на разработку, мне нравится тема с макросервисами. Для большей части систем 5-6 сервисов будет достаточно. Да, они будут достаточно большими, и все же. И мне не очень нравится ситуация, которую часто можно услышать на собеседованиях: у нас было 100 микросервисов, а у нас 200, а у нас 300 и так далее. Начинаются мериться их количеством, когда их создание совершенно неразумно с точки зрения ресурсов. Поэтому я сторонник макросервисной архитектуры.</p><p>И решение использовать или не использовать Кубер находится не в моей власти. Моя задача состоит в том, чтобы сделать ресурсоэффективными приложения, а не всю банковскую экосистему.</p><p><strong>Неужели проще перевести Java 8.0 на Kotlin чем на Java 17.0?</strong></p><p>Да. Ключевой момент в том, что у Kotlin очень хорошая интероперабельность с Java. Вы можете начать писать новый функционал на Kotlin, можете переводить на него часть существующего функционала. В Kotlin есть файл с расширением .kt, куда можно скопировать java-класс. Kotlin сам все конвертирует, и некоторые проблемы решаются автоматически.</p><p>К тому же нужно помнить, что обычно вы используете разные фреймворки вроде Spring. И обновление версии Java влечёт за собой и обновление версии Spring’а. Даже при переходе со Spring 2.7 на 3.1 мы столкнулись с рядом проблем. А обновление с первой версии Spring’а может занять значительное время.</p><p><strong>Вопрос про Coroutines. Http-клиент возвращает асинхронный ввод-вывод в качестве CompletableFuture в неблокируемый поток. Этот поток обернут в Coroutines. В чем преимущество оборачивания и так неблокируемого I/O в Coroutines, и вместо вызова метода Callable также дождаться ответа асинхронно. Это же то же самое.</strong></p><p>Не совсем. Чтобы получить ответ вам нужно на CompletableFuture вызвать блокирующий метод get. Это плохо для производительности.</p><p>Способ, который вы предлагаете, предполагает использование Callback’ов, а это сразу рушит возможность писать код в привычной императивной парадигме. Мне довелось немного поработать с GWT, где всё делалось на Callback’ах. Удовольствие ниже среднего.</p><p><strong>Как быстро выходят исправления для ошибок в компиляторе для Kotlin и Go? Сколько серьезных ошибок за последние годы было и там, и там, и сталкивались ли вы с багами компилятора? </strong></p><p>Перед тем, как заходить в какую-то авантюру, надо дождаться, пока стабилизируется компилятор. Я предлагаю собрать все ошибки другим, особенно если вы работаете в банке. Соответственно, Go вы можете брать стабильную отлаженную версию 1.20. В Kotlin я начинал с версии 1.3 в 2019 году и ни с какими проблемами не столкнулся. Но, возможно, у меня просто получалось обходить острые углы.</p><p><strong>Завезли ли в GO exception, дженерики и систему сборки?</strong></p><p>Exception точно нет, все будет точно такое же: получаете два значения из функции, проверяете на ошибки, если ошибка есть прерываете исполнение программы. Дженерики появились, а что касается версии сборки — пока с этим есть проблемы. Существует два способа подтянуть зависимости и обычно в библиотеках пишут, какой командой лучше их добавлять. Я с какими-то проблемами особо не сталкивался, но я, вероятно, просто не пользовался старыми или эзотерическими библиотеками. Не могу назвать себя очень опытным пользователем Go.</p><p><strong>Что в Kotlin и Go насчет стрессоустойчивости? Как будет работать приложение под высокой нагрузкой при условии, что база не является узким местом.</strong></p><p>Оба языка вытянут. Единственный минус, который может быть, это то, что оба языка используют GC. Соответственно, в графике мониторинга вы будете видеть пики. Есть, например, <a href="https://discord.com/blog/why-discord-is-switching-from-go-to-rust"><u>статья коллег из Discord</u></a>, которые пишут о том, что один из таких сервисов, который у них был сильно нагружен, был переписан на Rust. В итоге они сразу избавились от пиков просто за счет того, что используемая память после закрытия скоупа освобождается. Это добавляет дополнительные расходы по работе с памятью, но зато полностью удаляет пики.</p><p><strong>Сколько времени в среднем нужно программисту, чтобы перейти с Java на Kotlin?</strong></p><p>На мой взгляд не очень много. Около недели, чтобы начать на нём писать. Корутины требуют большего количества времени на изучение. Я бы дал оценку в месяц.</p><p><strong>Есть ли опыт не синтетических бенчмарков Go vs Kotlin на стандартном бизнесовом сервисе, где помимо вычислений есть запросы к БД, файловый ввод-вывод и пр.?</strong></p><p>У меня нет. В своём докладе я опирался на <a href="https://medium.com/helidon/can-java-microservices-be-as-fast-as-go-5ceb9a45d673"><u>статью</u></a>, которая сравнивала GraalVM с Go.</p><p><strong>Насколько целесообразно разрабатывать на Котлин и Го, разрабы более редкие и поддержка дороже!</strong></p><p>Котлин — это всё-таки JVM-based язык программирования. А java-разработчиков достаточно много. Что касается go-разработчиков, то их количество растёт. Да и язык в целом достаточно прост для освоения. И такие компании как VK и Avito используют эти языки в качестве основных.</p><p><strong>Какое отношение количества Java разработчиков и Kotlin разработчиков?</strong></p><p>В моём Центре сейчас примерно 50/50.</p><p><strong>Go огонь! Но, по Вашему мнению, какие задачи в банке НЕ подходят для Go?</strong></p><p>Для Go существует мало библиотек по работе со старыми протоколами вроде SOAP. </p><p><strong>Исходя из обсуждения Go vs Kotlin - это практически однозначно новый микросервис, тогда в чем проблема использовать GraalVm? Если проблематикой являются ресурсы, то в чем проблема потратить время на шаг пайплайна для сборки ?</strong></p><p>Использование GraalVM плохо подходит для быстрого прототипирования, поскольку у вас вырастет время сборки. Причём достаточно значительно. </p><p>И расходование ресурсов на этапе сборки артефакта тоже вырастет.</p><p><strong>JVM в случае микросервисов потребляет больше ресурсов по сравнению с Go. А есть данные по сравнению стабильности работы приложений на Java/Kotlin и Go? Наверное, не просто так JVM используется в финтехе чаще, чем Go.</strong></p><p>Боюсь, что ответ на этот вопрос лежит не в технической области. Как я говорил, такой параметр как Time To Market очень важен для бизнеса. И для решения некоторых задач вам требуется большое количество программистов. Очевидно, что Java-разработчиков в банках гораздо больше, чем всех остальных. Иногда даже вместе взятых.</p><p></p></div></div></div><!----><!----></div><!----><!----></div><!--]--><!----><div class="tm-article-presenter__meta" data-test-id="article-meta-links"><div class="tm-separated-list tm-article-presenter__meta-list"><span class="tm-separated-list__title">Теги:</span><ul class="tm-separated-list__list"><!--[--><li class="tm-separated-list__item"><!--[--><a href="/ru/search/?target_type=posts&amp;order=relevance&amp;q=[kotlin]" class="tm-tags-list__link"><span>kotlin</span></a><!--]--></li><li class="tm-separated-list__item"><!--[--><a href="/ru/search/?target_type=posts&amp;order=relevance&amp;q=[java]" class="tm-tags-list__link"><span>java</span></a><!--]--></li><li class="tm-separated-list__item"><!--[--><a href="/ru/search/?target_type=posts&amp;order=relevance&amp;q=[go]" class="tm-tags-list__link"><span>go</span></a><!--]--></li><li class="tm-separated-list__item"><!--[--><a href="/ru/search/?target_type=posts&amp;order=relevance&amp;q=[%D0%BC%D0%B8%D0%BA%D1%80%D0%BE%D1%81%D0%B5%D1%80%D0%B2%D0%B8%D1%81%D1%8B]" class="tm-tags-list__link"><span>микросервисы</span></a><!--]--></li><li class="tm-separated-list__item"><!--[--><a href="/ru/search/?target_type=posts&amp;order=relevance&amp;q=[%D1%80%D0%BE%D1%81%D1%81%D0%B5%D0%BB%D1%8C%D1%85%D0%BE%D0%B7%D0%B1%D0%B0%D0%BD%D0%BA]" class="tm-tags-list__link"><span>россельхозбанк</span></a><!--]--></li><li class="tm-separated-list__item"><!--[--><a href="/ru/search/?target_type=posts&amp;order=relevance&amp;q=[%D0%BC%D0%B8%D1%82%D0%B0%D0%BF%D1%8B]" class="tm-tags-list__link"><span>митапы</span></a><!--]--></li><li class="tm-separated-list__item"><!--[--><a href="/ru/search/?target_type=posts&amp;order=relevance&amp;q=[%D1%80%D1%81%D1%85%D0%B1-%D0%B8%D0%BD%D1%82%D0%B5%D1%85]" class="tm-tags-list__link"><span>рсхб-интех</span></a><!--]--></li><li class="tm-separated-list__item"><!--[--><a href="/ru/search/?target_type=posts&amp;order=relevance&amp;q=[%D1%80%D1%81%D1%85%D0%B1+%D1%86%D0%B8%D1%84%D1%80%D0%B0]" class="tm-tags-list__link"><span>рсхб цифра</span></a><!--]--></li><!--]--><!----></ul></div><div class="tm-separated-list tm-article-presenter__meta-list"><span class="tm-separated-list__title">Хабы:</span><ul class="tm-separated-list__list"><!--[--><li class="tm-separated-list__item"><!--[--><a href="/ru/companies/rshb/articles/" class="tm-hubs-list__link"><!--[--><span>Блог компании РСХБ.цифра (Россельхозбанк)</span><!--]--></a><!--]--></li><li class="tm-separated-list__item"><!--[--><a href="/ru/hubs/java/" class="tm-hubs-list__link"><!--[--><span>Java</span><!--]--></a><!--]--></li><li class="tm-separated-list__item"><!--[--><a href="/ru/hubs/go/" class="tm-hubs-list__link"><!--[--><span>Go</span><!--]--></a><!--]--></li><li class="tm-separated-list__item"><!--[--><a href="/ru/hubs/kotlin/" class="tm-hubs-list__link"><!--[--><span>Kotlin</span><!--]--></a><!--]--></li><li class="tm-separated-list__item"><!--[--><a href="/ru/hubs/tech_events/" class="tm-hubs-list__link"><!--[--><span>Конференции</span><!--]--></a><!--]--></li><!--]--><!----></ul></div></div><!----><!--]--></article><!--]--></div><!----></div><div style="" class="tm-article-sticky-panel" data-test-id="article-sticky-panel"><div class="tm-data-icons tm-data-icons tm-data-icons_space-big tm-article-sticky-panel__icons" data-test-id="article-stats-icons"><div class="tm-article-rating tm-data-icons__item"><div class="tm-votes-meter tm-article-rating__votes-switcher"><svg class="tm-svg-img tm-votes-meter__icon tm-votes-meter__icon tm-votes-meter__icon_appearance-article" height="24" width="24"><title>Всего голосов 28: ↑18 и ↓10</title><use xlink:href="/img/megazord-v28.371b7fa3..svg#counter-rating"></use></svg><span class="tm-votes-meter__value tm-votes-meter__value_positive tm-votes-meter__value_appearance-article tm-votes-meter__value_rating tm-votes-meter__value" data-test-id="votes-meter-value" title="Всего голосов 28: ↑18 и ↓10">+13</span></div><!--teleport start--><!--teleport end--><!----></div><!----><!----><button class="bookmarks-button tm-data-icons__item" title="Добавить в закладки" type="button"><span class="tm-svg-icon__wrapper bookmarks-button__icon"><svg class="tm-svg-img tm-svg-icon" height="24" width="24"><title>Добавить в закладки</title><use xlink:href="/img/megazord-v28.371b7fa3..svg#counter-favorite"></use></svg></span><span class="bookmarks-button__counter" title="Количество пользователей, добавивших публикацию в закладки">72</span></button><div class="tm-sharing tm-data-icons__item" title="Поделиться"><button class="tm-sharing__button" type="button"><svg viewbox="0 0 24 24" xmlns="http://www.w3.org/2000/svg" class="tm-sharing__icon"><path fill="currentColor" d="M13.8 13.8V18l7.2-6.6L13.8 5v3.9C5 8.9 3 18.6 3 18.6c2.5-4.4 6-4.8 10.8-4.8z"></path></svg></button><!--teleport start--><!--teleport end--></div><div class="tm-article-comments-counter-link tm-data-icons__item" title="Читать комментарии"><a href="/ru/companies/rshb/articles/747898/comments/" class="tm-article-comments-counter-link__link" data-test-id="counter-comments"><!--[--><svg class="tm-svg-img tm-article-comments-counter-link__icon" height="24" width="24"><title>Комментарии</title><use xlink:href="/img/megazord-v28.371b7fa3..svg#counter-comments"></use></svg><span class="tm-article-comments-counter-link__value">17</span><!--]--></a><!----></div><!--[--><!--[--><!--[--><!----><!--]--><!--]--><!--]--><!--teleport start--><!--teleport end--><!----></div></div></div><!--[--><!--]--><div class="tm-article-presenter__footer"><!--[--><!--[--><div class="tm-article-blocks"><!----><!--[--><section class="tm-block tm-block tm-block_spacing-bottom"><!----><!--[--><div class="tm-block__body tm-block__body tm-block__body_variant-balanced"><!--[--><div class="tm-article-author" data-test-id="article-author-info" data-async-called="true"><!--[--><!--[--><div class="tm-article-author__company"><div class="tm-article-author__company-card"><div class="tm-company-snippet"><a href="/ru/companies/rshb/profile/" class="tm-company-snippet__logo-link"><div class="tm-entity-image"><img alt="" class="tm-entity-image__pic" height="40" src="//habrastorage.org/getpro/habr/company/be1/662/681/be1662681fbd8bfedaae1206d2a6a19c.png" width="40"></div></a><div class="tm-company-snippet__info"><a href="/ru/companies/rshb/profile/" class="tm-company-snippet__title" data-test-id="company-title"><span>РСХБ.цифра (Россельхозбанк)</span></a><div class="tm-company-snippet__description">Меняем банк и сельское хозяйство</div></div></div><div class="tm-article-author__buttons"><!----><!----></div></div><div class="tm-article-author__company-contacts"><!--[--><a class="tm-article-author__contact" href="https://www.rshb.ru/" rel="noopener" target="_blank">Сайт</a><a class="tm-article-author__contact" href="https://vk.com/rshbru" rel="noopener" target="_blank">ВКонтакте</a><a class="tm-article-author__contact" href="https://telegram.me/rshb_tg" rel="noopener" target="_blank">Telegram</a><a class="tm-article-author__contact" href="https://rshbdigital.ru/" rel="noopener" target="_blank">Сайт</a><a class="tm-article-author__contact" href="https://telegram.me/rshbdigital" rel="noopener" target="_blank">Telegram</a><a class="tm-article-author__contact" href="https://rutube.ru/channel/24967187/" rel="noopener" target="_blank">Сайт</a><!--]--></div><div class="tm-article-author__separator"></div></div><!--]--><!--]--><div class="tm-user-card tm-user-card tm-user-card_variant-article tm-article-author__user-card" data-async-called="true"><div class="tm-user-card__info-container"><div class="tm-user-card__header"><div class="tm-user-card__header-data"><a href="/ru/users/RSHB_tsyfra/" class="tm-user-card__userpic tm-user-card__userpic_size-40"><div class="tm-entity-image"><img alt="" class="tm-entity-image__pic" src="//habrastorage.org/getpro/habr/avatars/7e7/f18/afb/7e7f18afb7438faf517a733c6a367388.jpg"></div></a><div class="tm-user-card__meta"><div class="tm-counter-container tm-karma tm-karma" title=" 89 голосов "><div class="tm-counter-container__header"><!--[--><div class="karma-display positive" data-v-7635202e>25</div><!----><!--]--></div><div class="tm-counter-container__footer"><!--[--><div class="tm-karma__text">Карма</div><!--teleport start--><!--teleport end--><!--]--></div></div><div class="tm-counter-container" title="Рейтинг пользователя"><div class="tm-counter-container__header"><!--[--><!--[--><!--]--><div class="tm-votes-lever tm-votes-lever tm-votes-lever_appearance-rating"><!----><div class="tm-votes-lever__score tm-votes-lever__score_appearance-rating tm-votes-lever__score"><!--[--><span><span class="tm-votes-lever__score-counter tm-votes-lever__score-counter_rating tm-votes-lever__score-counter" data-test-id="votes-score-counter">67.6</span></span><!--]--></div><!----></div><!--]--></div><div class="tm-counter-container__footer"><!--[--><span class="tm-rating__text tm-rating__text">Рейтинг</span><!--]--></div></div></div></div></div><div class="tm-user-card__info tm-user-card__info_variant-article tm-user-card__info"><div class="tm-user-card__title tm-user-card__title_variant-article tm-user-card__title"><span class="tm-user-card__name tm-user-card__name_variant-article tm-user-card__name">РСХБ.цифра</span><a href="/ru/users/RSHB_tsyfra/" class="tm-user-card__nickname tm-user-card__nickname tm-user-card__nickname_variant-article"> @RSHB_tsyfra</a><!----></div><p class="tm-user-card__short-info tm-user-card__short-info_variant-article tm-user-card__short-info" data-test-id="user-card-speciality">Единый ИТ-бренд Группы РСХБ</p></div></div><!----><div class="tm-user-card__buttons tm-user-card__buttons_variant-article tm-user-card__buttons"><!----><div class="tm-user-card__button"><div class="tm-button-follow tm-user-card__button-follow"><!----><button class="tm-button-follow__button tm-button-follow__button_big" data-test-id="follow-button" type="button">Подписаться</button></div></div><!----><div class="tm-user-card__button tm-user-card__button_write" data-test-id="user-card-conversations"><svg class="tm-svg-img tm-user-card__button-icon" height="16" width="16"><title>Отправить сообщение</title><use xlink:href="/img/megazord-v28.371b7fa3..svg#mail"></use></svg></div><!----></div><!----></div><div class="tm-article-author__user-contacts" data-test-id="author-contacts"><!----><!----><!--[--><a class="tm-article-author__contact" data-test-id="author-contact-link" href="https://rshb-intech.ru/" rel="noopener" target="_blank">Сайт</a><a class="tm-article-author__contact" data-test-id="author-contact-link" href="https://vc.ru/rshb" rel="noopener" target="_blank">Сайт</a><a class="tm-article-author__contact" data-test-id="author-contact-link" href="https://vk.com/rshbdigital" rel="noopener" target="_blank">ВКонтакте</a><a class="tm-article-author__contact" data-test-id="author-contact-link" href="https://telegram.me/rshbdigital" rel="noopener" target="_blank">Telegram</a><!--]--></div></div><!--]--></div><!--]--><!----></section><!----><!--[--><!--]--><!--]--><div class="tm-article-blocks__comments"><div id="publication-comments" class="tm-article-page-comments"><div><!--[--><div class="tm-article-comments-counter-link tm-article-comments-counter-button"><a href="/ru/companies/rshb/articles/747898/comments/" class="tm-article-comments-counter-link__link tm-article-comments-counter-link__link_button-style" data-test-id="counter-comments"><!--[--><svg class="tm-svg-img tm-article-comments-counter-link__icon tm-article-comments-counter-link__icon_contrasted" height="24" width="24"><title>Комментарии</title><use xlink:href="/img/megazord-v28.371b7fa3..svg#counter-comments"></use></svg><span class="tm-article-comments-counter-link__value tm-article-comments-counter-link__value_contrasted"> Комментарии 17 </span><!--]--></a><!----></div><!--]--></div></div></div><!--[--><!--[--><!--]--><section class="tm-block tm-block tm-block_spacing-bottom"><header class="tm-block__header tm-block__header tm-block__header_variant-borderless"><div class="tm-block__header-container"><h2 class="tm-block__title tm-block__title tm-block__title_variant-large">Публикации</h2><!--[--><!--]--></div><!----></header><!--[--><div class="tm-block__body tm-block__body tm-block__body_variant-condensed-slim"><!--[--><!--[--><div class="tm-tabs tm-tabs"><div class=""><!--[--><span class="tm-tabs__tab-item"><button class="tm-tabs__tab-link tm-tabs__tab-link_active tm-tabs__tab-link_slim tm-tabs__tab-link">Лучшие за сутки</button></span><span class="tm-tabs__tab-item"><button class="tm-tabs__tab-link tm-tabs__tab-link_slim tm-tabs__tab-link">Похожие</button></span><!--]--></div><!----></div><div class="similar-and-daily__tab-view"><div class="placeholder-wrapper"><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><div class="tm-placeholder-article-cards"><!--[--><div class="tm-placeholder-article-card"><div class="tm-placeholder__user"><div class="tm-placeholder__user-pic loads"></div><div class="tm-placeholder__user-date loads"></div></div><div class="tm-placeholder-article-card__title"><div class="tm-placeholder__line tm-placeholder-article-card__title-line loads"></div><div class="tm-placeholder__line tm-placeholder-article-card__title-line loads"></div></div><div class="tm-placeholder-article-card__icons tm-placeholder__counters"><!--[--><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div><div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div><div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div><div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div><div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><!--]--></div></div><div class="tm-placeholder-article-card"><div class="tm-placeholder__user"><div class="tm-placeholder__user-pic loads"></div><div class="tm-placeholder__user-date loads"></div></div><div class="tm-placeholder-article-card__title"><div class="tm-placeholder__line tm-placeholder-article-card__title-line loads"></div><div class="tm-placeholder__line tm-placeholder-article-card__title-line loads"></div></div><div class="tm-placeholder-article-card__icons tm-placeholder__counters"><!--[--><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div><div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div><div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div><div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div><div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><!--]--></div></div><div class="tm-placeholder-article-card"><div class="tm-placeholder__user"><div class="tm-placeholder__user-pic loads"></div><div class="tm-placeholder__user-date loads"></div></div><div class="tm-placeholder-article-card__title"><div class="tm-placeholder__line tm-placeholder-article-card__title-line loads"></div><div class="tm-placeholder__line tm-placeholder-article-card__title-line loads"></div></div><div class="tm-placeholder-article-card__icons tm-placeholder__counters"><!--[--><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div><div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div><div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div><div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div><div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><!--]--></div></div><div class="tm-placeholder-article-card"><div class="tm-placeholder__user"><div class="tm-placeholder__user-pic loads"></div><div class="tm-placeholder__user-date loads"></div></div><div class="tm-placeholder-article-card__title"><div class="tm-placeholder__line tm-placeholder-article-card__title-line loads"></div><div class="tm-placeholder__line tm-placeholder-article-card__title-line loads"></div></div><div class="tm-placeholder-article-card__icons tm-placeholder__counters"><!--[--><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div><div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div><div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div><div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div><div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><!--]--></div></div><div class="tm-placeholder-article-card"><div class="tm-placeholder__user"><div class="tm-placeholder__user-pic loads"></div><div class="tm-placeholder__user-date loads"></div></div><div class="tm-placeholder-article-card__title"><div class="tm-placeholder__line tm-placeholder-article-card__title-line loads"></div><div class="tm-placeholder__line tm-placeholder-article-card__title-line loads"></div></div><div class="tm-placeholder-article-card__icons tm-placeholder__counters"><!--[--><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div><div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div><div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div><div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div><div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><!--]--></div></div><!--]--></div><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----></div><!----></div><!--]--><!--]--></div><!--]--><!----></section><!--[--><!--[--><div class="placeholder-wrapper"><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><div class="tm-placeholder-inset tm-placeholder-vacancies"><div class="tm-placeholder-inset__header"><div class="tm-placeholder__line tm-placeholder__line_inset-header loads"></div></div><div class="tm-placeholder-inset__body"><ul class="tm-placeholder-list"><!--[--><li class="tm-placeholder-list__item tm-placeholder-list__item_inset"><div class="tm-placeholder-list__title-container"><div class="tm-placeholder__line tm-placeholder__line_item-title loads"></div></div><div class="tm-project-block-items__properties"><!--[--><span class="tm-project-block-items__property-item"><span class="tm-placeholder__line loads" style="width:100px;"></span></span><span class="tm-project-block-items__property-item"><span class="tm-placeholder__line loads" style="width:100px;"></span></span><span class="tm-project-block-items__property-item"><span class="tm-placeholder__line loads" style="width:100px;"></span></span><!--]--></div></li><li class="tm-placeholder-list__item tm-placeholder-list__item_inset"><div class="tm-placeholder-list__title-container"><div class="tm-placeholder__line tm-placeholder__line_item-title loads"></div></div><div class="tm-project-block-items__properties"><!--[--><span class="tm-project-block-items__property-item"><span class="tm-placeholder__line loads" style="width:100px;"></span></span><span class="tm-project-block-items__property-item"><span class="tm-placeholder__line loads" style="width:100px;"></span></span><span class="tm-project-block-items__property-item"><span class="tm-placeholder__line loads" style="width:100px;"></span></span><!--]--></div></li><li class="tm-placeholder-list__item tm-placeholder-list__item_inset"><div class="tm-placeholder-list__title-container"><div class="tm-placeholder__line tm-placeholder__line_item-title loads"></div></div><div class="tm-project-block-items__properties"><!--[--><span class="tm-project-block-items__property-item"><span class="tm-placeholder__line loads" style="width:100px;"></span></span><span class="tm-project-block-items__property-item"><span class="tm-placeholder__line loads" style="width:100px;"></span></span><span class="tm-project-block-items__property-item"><span class="tm-placeholder__line loads" style="width:100px;"></span></span><!--]--></div></li><li class="tm-placeholder-list__item tm-placeholder-list__item_inset"><div class="tm-placeholder-list__title-container"><div class="tm-placeholder__line tm-placeholder__line_item-title loads"></div></div><div class="tm-project-block-items__properties"><!--[--><span class="tm-project-block-items__property-item"><span class="tm-placeholder__line loads" style="width:100px;"></span></span><span class="tm-project-block-items__property-item"><span class="tm-placeholder__line loads" style="width:100px;"></span></span><span class="tm-project-block-items__property-item"><span class="tm-placeholder__line loads" style="width:100px;"></span></span><!--]--></div></li><li class="tm-placeholder-list__item tm-placeholder-list__item_inset"><div class="tm-placeholder-list__title-container"><div class="tm-placeholder__line tm-placeholder__line_item-title loads"></div></div><div class="tm-project-block-items__properties"><!--[--><span class="tm-project-block-items__property-item"><span class="tm-placeholder__line loads" style="width:100px;"></span></span><span class="tm-project-block-items__property-item"><span class="tm-placeholder__line loads" style="width:100px;"></span></span><span class="tm-project-block-items__property-item"><span class="tm-placeholder__line loads" style="width:100px;"></span></span><!--]--></div></li><!--]--></ul></div><div class="tm-placeholder-inset__footer"><div class="tm-placeholder__line tm-placeholder__line_inset-footer loads"></div></div></div><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----></div><!--]--><!--]--><!----><!--[--><!--]--><!--]--></div><!--]--><!--]--></div></div><!--]--><!--]--></div></div><div class="tm-page__sidebar"><!--[--><!----><!--]--></div></div><!----><!--]--></div></div></main><!----></div><!----><div class="tm-footer"><div class="tm-page-width"><!--[--><div class="tm-footer__container"><div class="tm-footer__title"><a class="tm-svg-icon__wrapper tm-footer__title-link" href="/ru/"><svg class="tm-svg-img tm-svg-icon" height="16" width="16"><title>Хабр</title><use xlink:href="/img/habr-logo-ru.svg#logo"></use></svg></a></div><div class="tm-footer__social"><!--[--><a class="tm-svg-icon__wrapper tm-social-icons__icon" href="https://www.facebook.com/habrahabr.ru" rel="nofollow noopener noreferrer" target="_blank"><svg class="tm-svg-img tm-svg-icon" height="36" width="36"><title>Facebook</title><use xlink:href="/img/new-social-icons-sprite.svg#social-logo-facebook"></use></svg></a><a class="tm-svg-icon__wrapper tm-social-icons__icon" href="https://twitter.com/habr_com" rel="nofollow noopener noreferrer" target="_blank"><svg class="tm-svg-img tm-svg-icon" height="36" width="36"><title>Twitter</title><use xlink:href="/img/new-social-icons-sprite.svg#social-logo-twitter"></use></svg></a><a class="tm-svg-icon__wrapper tm-social-icons__icon" href="https://vk.com/habr" rel="nofollow noopener noreferrer" target="_blank"><svg class="tm-svg-img tm-svg-icon" height="36" width="36"><title>VK</title><use xlink:href="/img/new-social-icons-sprite.svg#social-logo-vk"></use></svg></a><a class="tm-svg-icon__wrapper tm-social-icons__icon" href="https://telegram.me/habr_com" rel="nofollow noopener noreferrer" target="_blank"><svg class="tm-svg-img tm-svg-icon" height="36" width="36"><title>Telegram</title><use xlink:href="/img/new-social-icons-sprite.svg#social-logo-telegram"></use></svg></a><a class="tm-svg-icon__wrapper tm-social-icons__icon" href="https://www.youtube.com/channel/UCd_sTwKqVrweTt4oAKY5y4w" rel="nofollow noopener noreferrer" target="_blank"><svg class="tm-svg-img tm-svg-icon" height="36" width="36"><title>Youtube</title><use xlink:href="/img/new-social-icons-sprite.svg#social-logo-youtube"></use></svg></a><a class="tm-svg-icon__wrapper tm-social-icons__icon" href="https://dzen.ru/habr" rel="nofollow noopener noreferrer" target="_blank"><svg class="tm-svg-img tm-svg-icon" height="36" width="36"><title>Яндекс Дзен</title><use xlink:href="/img/new-social-icons-sprite.svg#social-logo-dzen"></use></svg></a><!--]--></div><!--teleport start--><!--teleport end--><button class="tm-footer__link"><svg class="tm-svg-img tm-footer__icon" height="16" width="16"><title>Язык</title><use xlink:href="/img/megazord-v28.371b7fa3..svg#lang"></use></svg> Настройка языка</button><a href="/ru/feedback/" class="tm-footer__link">Техническая поддержка</a><div class="tm-footer-copyright"><span class="tm-copyright"><span class="tm-copyright__years">© 2006–2025, </span><span class="tm-copyright__name"><a class="tm-copyright__link" href="https://company.habr.com/" rel="noopener" target="_blank">Habr</a></span></span></div></div><!--]--></div></div><!----><!--]--></div><!----></div><script>window.__INITIAL_STATE__={"adblock":{"hasAcceptableAdsFilter":false,"hasAdblock":false},"articlesList":{"articlesList":{"747898":{"id":"747898","timePublished":"2023-07-13T16:46:06+00:00","isCorporative":true,"lang":"ru","titleHtml":"Микросервисы в банке: на чем их лучше писать? Java\u002FKotlin, а может Go?","leadData":{"textHtml":"\u003Cp\u003EВ июле в офисе РСХБ-Интех (технологической дочки Россельхозбанка) состоялся бесплатный митап для Java-разработчиков — \u003Ca href=\"https:\u002F\u002Frshbdigital.ru\u002Fbackend-dev-meetup\"\u003ERSHB Backend Dev Meetup\u003C\u002Fa\u003E. Обсудили Kotlin, Go, маппинг и разные аспекты бэкэнд-разработки. В числе докладчиков выступал Иван Кочергин, руководитель центра собственной разработки РСХБ-Интех. Иван более 10 лет занимается разработкой на Java, последние три года — на Kotlin. В своем докладе он сравнил, на чем лучше писать микросервисы в банке: Java, Kotlin или Go. Делимся расшифровкой доклада. Запись всего митапа можно \u003Ca href=\"https:\u002F\u002Frutube.ru\u002Fvideo\u002Fe3118fad77a101791f2c1a7ba2130be0\u002F?r=wd\"\u003Eпосмотреть на Rutube\u003C\u002Fa\u003E.\u003C\u002Fp\u003E\u003Cp\u003E\u003C\u002Fp\u003E","imageUrl":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fdab\u002F223\u002Ffe9\u002Fdab223fe90f220923a460a43ec496555.jpeg","buttonTextHtml":"Читать далее","image":{"url":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fdab\u002F223\u002Ffe9\u002Fdab223fe90f220923a460a43ec496555.jpeg","fit":"cover","positionY":0,"positionX":0}},"editorVersion":"2.0","postType":"article","postLabels":[],"author":{"id":"3567369","alias":"RSHB_tsyfra","fullname":"РСХБ.цифра","avatarUrl":"\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Favatars\u002F7e7\u002Ff18\u002Fafb\u002F7e7f18afb7438faf517a733c6a367388.jpg","speciality":"Единый ИТ-бренд Группы РСХБ","scoreStats":{"score":25,"votesCount":89},"rating":67.6,"relatedData":null,"contacts":[{"title":"Сайт","url":"https:\u002F\u002Frshb-intech.ru\u002F","value":"https:\u002F\u002Frshb-intech.ru\u002F","siteTitle":null,"favicon":null},{"title":"Сайт","url":"https:\u002F\u002Fvc.ru\u002Frshb","value":"https:\u002F\u002Fvc.ru\u002Frshb","siteTitle":null,"favicon":null},{"title":"ВКонтакте","url":"https:\u002F\u002Fvk.com\u002Frshbdigital","value":"rshbdigital","siteTitle":null,"favicon":null},{"title":"Telegram","url":"https:\u002F\u002Ftelegram.me\u002Frshbdigital","value":"rshbdigital","siteTitle":null,"favicon":null}],"authorContacts":[{"title":"Сайт","url":"https:\u002F\u002Frshb-intech.ru\u002F","value":"https:\u002F\u002Frshb-intech.ru\u002F","siteTitle":null,"favicon":null},{"title":"Сайт","url":"https:\u002F\u002Fvc.ru\u002Frshb","value":"https:\u002F\u002Fvc.ru\u002Frshb","siteTitle":null,"favicon":null},{"title":"ВКонтакте","url":"https:\u002F\u002Fvk.com\u002Frshbdigital","value":"rshbdigital","siteTitle":null,"favicon":null},{"title":"Telegram","url":"https:\u002F\u002Ftelegram.me\u002Frshbdigital","value":"rshbdigital","siteTitle":null,"favicon":null}],"paymentDetails":{"paymentYandexMoney":null,"paymentPayPalMe":null,"paymentWebmoney":null},"donationsMethod":null,"isInBlacklist":null,"careerProfile":null},"statistics":{"commentsCount":17,"favoritesCount":72,"readingCount":11387,"score":13,"votesCount":28,"votesCountPlus":18,"votesCountMinus":10},"hubs":[{"id":"22524","alias":"rshb","type":"corporative","title":"Блог компании РСХБ.цифра (Россельхозбанк)","titleHtml":"Блог компании РСХБ.цифра (Россельхозбанк)","isProfiled":false,"relatedData":null},{"id":"375","alias":"java","type":"collective","title":"Java","titleHtml":"Java","isProfiled":true,"relatedData":null},{"id":"17748","alias":"go","type":"collective","title":"Go","titleHtml":"Go","isProfiled":true,"relatedData":null},{"id":"19441","alias":"kotlin","type":"collective","title":"Kotlin","titleHtml":"Kotlin","isProfiled":true,"relatedData":null},{"id":"20754","alias":"tech_events","type":"collective","title":"Конференции","titleHtml":"Конференции","isProfiled":false,"relatedData":null}],"flows":[{"id":"1","alias":"develop","title":"Разработка","titleHtml":"Разработка"},{"id":"4","alias":"marketing","title":"Маркетинг","titleHtml":"Маркетинг"}],"relatedData":{"vote":null,"unreadCommentsCount":0,"bookmarked":false,"canComment":false,"canEdit":false,"canViewVotes":false,"votePlus":{"canVote":false,"isChargeEnough":false,"isKarmaEnough":false,"isVotingOver":true,"isPublicationLimitEnough":false},"voteMinus":{"canVote":false,"isChargeEnough":false,"isKarmaEnough":false,"isVotingOver":true,"isPublicationLimitEnough":false},"canModerateComments":false,"trackerSubscribed":false,"emailSubscribed":false},"textHtml":"\u003Cdiv xmlns=\"http:\u002F\u002Fwww.w3.org\u002F1999\u002Fxhtml\"\u003E\u003Cp\u003EВ июле в офисе РСХБ-Интех (технологической дочки Россельхозбанка) состоялся бесплатный митап для Java-разработчиков — \u003Ca href=\"https:\u002F\u002Frshbdigital.ru\u002Fbackend-dev-meetup\"\u003ERSHB Backend Dev Meetup\u003C\u002Fa\u003E. Обсудили Kotlin, Go, маппинг и разные аспекты бэкэнд-разработки. В числе докладчиков выступал Иван Кочергин, руководитель центра собственной разработки РСХБ-Интех. Иван более 10 лет занимается разработкой на Java, последние три года — на Kotlin. В своем докладе он сравнил, на чем лучше писать микросервисы в банке: Java, Kotlin или Go. Делимся расшифровкой доклада. Запись всего митапа можно \u003Ca href=\"https:\u002F\u002Frutube.ru\u002Fvideo\u002Fe3118fad77a101791f2c1a7ba2130be0\u002F?r=wd\"\u003Eпосмотреть на Rutube\u003C\u002Fa\u003E.\u003C\u002Fp\u003E\u003Cfigure class=\"full-width \"\u003E\u003Cimg src=\"https:\u002F\u002Fhabrastorage.org\u002Fr\u002Fw780q1\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F378\u002F543\u002F3c7\u002F3785433c7c3becbf71b603069ed177c7.jpeg\" width=\"1280\" height=\"854\" data-src=\"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F378\u002F543\u002F3c7\u002F3785433c7c3becbf71b603069ed177c7.jpeg\" data-blurred=\"true\"\u002F\u003E\u003C\u002Ffigure\u003E\u003Ch3\u003EПредисловие\u003C\u002Fh3\u003E\u003Cp\u003EМожно выделить несколько основных вызовов современной разработки.\u003C\u002Fp\u003E\u003Cp\u003E\u003Cstrong\u003ETime to Market\u003C\u002Fstrong\u003E — время, требующееся на проектирование функционала, его разработку, тестирование и релиз. То есть период от проектирования до момента, когда он станет доступен пользователю. Перед разработчиком стоит очевидная задача минимизировать это время. \u003C\u002Fp\u003E\u003Cp\u003E\u003Cstrong\u003EКогнитивная сложность применяемых решений и технологий\u003C\u002Fstrong\u003E. Если раньше новой версии Java можно было ждать по три-четыре года, то сейчас версии выходят каждые полгода, появляются новые фреймворки, парадигмы программирования, библиотеки. В мире фронтенд-разработки ситуация выглядит еще более “выпукло”. Эта сфера требует определенного уровня управления, в противном случае разработчик превращается в перегруженного лишними знаниями ослика.\u003C\u002Fp\u003E\u003Cp\u003E\u003Cstrong\u003EНаписание ресурсоэффективных приложений.\u003C\u002Fstrong\u003E В 2020 году произошел кризис цепочки поставок, который привел к общемировому дефициту полупроводников. Соответственно, сейчас от разработчиков требуют создания ресурсоэффективных приложений с минимально возможным application footprint, то есть количеством потребляемых ресурсов.\u003C\u002Fp\u003E\u003Cp\u003EПерейдем к ответам на данные вызовы. \u003C\u002Fp\u003E\u003Cp\u003E\u003Cstrong\u003EМикросервисная архитектура\u003C\u002Fstrong\u003E — набирающий популярность подход, при котором информационная система может быть рассмотрена как набор отдельных сервисов, каждый из которых удовлетворяет нескольким параметрам:\u003C\u002Fp\u003E\u003Cul\u003E\u003Cli\u003E\u003Cp\u003Eвыполняет одну из поставленных бизнес-функций;\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003Eимеет слабую связку с другими сервисами;\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003Eимеет возможность деплоя и масштабирования независимо от других сервисов. \u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003C\u002Ful\u003E\u003Cp\u003EИз этого следует, что каждый сервис может быть написан на своем языке программирования, более подходящем под решение конкретной задачи, иметь свое хранилище и разрабатываться отдельной командой или группой разработки.\u003C\u002Fp\u003E\u003Cp\u003EГоворя о языках программирования, стоит отметить, что Java лидирует в корпоративной и банковской сфере, и Россельхозбанк (РСХБ) не является исключением. Более 80% репозиториев бэкэнд-сервисов написаны на JVM-стеке: 74% занимает Java и еще около 6% Kotlin. \u003C\u002Fp\u003E\u003Cfigure class=\"full-width \"\u003E\u003Cimg src=\"https:\u002F\u002Fhabrastorage.org\u002Fr\u002Fw780q1\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F289\u002F38d\u002Fd2e\u002F28938dd2e4052e8f33d46c5117ef94b2.jpeg\" width=\"1105\" height=\"668\" data-src=\"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F289\u002F38d\u002Fd2e\u002F28938dd2e4052e8f33d46c5117ef94b2.jpeg\" data-blurred=\"true\"\u002F\u003E\u003C\u002Ffigure\u003E\u003Ch3\u003EKotlin vs Go\u003C\u002Fh3\u003E\u003Cp\u003EС учетом всего вышесказанного, бэкграунда РСХБ и стоящих перед нами вызовов давайте попробуем разобраться, на чем лучше писать микросервисы в банке — Kotlin или Go.\u003C\u002Fp\u003E\u003Cp\u003EДля начала определим критерии для сравнения.\u003C\u002Fp\u003E\u003Cul\u003E\u003Cli\u003E\u003Cp\u003ENull Safety. Позволяет минимизировать количество NPE (NullPointerException), так знакомых всем разработчикам. То есть обращение к непроинициализированным переменным.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003EВозможность расширения функциональности существующих классов\u002Fструктур без изменения исходного кода.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003EВозможность удобного создания контейнеров для хранения данных.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003EНеблокирующая многопоточность и IO. Если раньше приложение представляло собой монолит, не предполагающий никаких сетевых взаимодействий между его частями, то сейчас отдельным сервисам надо эффективно общаться.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003EРабота с функциями.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003EСинтаксический сахар.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003C\u002Ful\u003E\u003Ch4\u003ENull Safety\u003C\u002Fh4\u003E\u003Cp\u003EРассмотрим первый пример на \u003Cstrong\u003EKotlin\u003C\u002Fstrong\u003E. Переменная \u003Cstrong\u003E\u003Cem\u003Eа\u003C\u002Fem\u003E\u003C\u002Fstrong\u003E имеет тип String с вопросительным знаком, и мы присваиваем ей некое значение. Вопросительный знак говорит о том, что переменная может быть установлена в null. Соответственно, когда мы делаем это на следующей строчке, никаких проблем не возникает и наш код отработает корректно.\u003C\u002Fp\u003E\u003Cp\u003EВо втором примере переменная \u003Cstrong\u003E\u003Cem\u003Eb\u003C\u002Fem\u003E\u003C\u002Fstrong\u003E имеет тип String без вопросительного знака. При попытке присвоить ей нулевое значение получаем ошибку компиляции.\u003C\u002Fp\u003E\u003Cpre\u003E\u003Ccode\u003E\tfun main() {\n\t\tvar a: String? = \"abc\" \u002F\u002F can be set to null\n\t\ta = null \u002F\u002F ok\n\t\tprint(a)\n\t\t\n\t\tvar b: String = \"abc\" \u002F\u002F Regular initialization means non-null by default\n\t\tb = null \u002F\u002F compilation error\n\t}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EТеперь давайте рассмотрим пример, когда мы хотим передать некую переменную в Kotlin. У нас есть функция strLength, возвращающая нам длину нашей строки. Поскольку строка (s) всегда будет проинициализирована, то данный метод завершится без каких-либо ошибок. \u003C\u002Fp\u003E\u003Cp\u003EВ примере с ненулевой строкой показывает значение, соответствующее числу строк (в примере ниже 5). В случае, когда переменная может принимать нулевое значение, появится ошибка компиляции. \u003C\u002Fp\u003E\u003Cp\u003EЭто все здорово, но мы видим, что переменная nullable на самом деле проинициализирована. В таких случаях мы можем сообщить компилятору, что берем все риски на себя. Для этого в Kotlin есть синтаксис !!. \u003C\u002Fp\u003E\u003Cpre\u003E\u003Ccode\u003E\tfun main() {\n\t\tfun strLength(s: String): Int {\n\t\t\treturn s.length\n\t\t}\n\t\t\n\t\tval notNullString = \"hello\"\n\t\tprintln(strLength(notNullString)) \u002F\u002F 5\n\t\t\n\t\tvar nullable: String? = \"hello\"\n\t\tprintln(strLength(nullable)) \u002F\u002F compilation error\n\t\t\n\t\tprintln(strLength(!!nullable)) \u002F\u002F 5\n\t}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EПерейдем к тому, как это все реализовано в \u003Cstrong\u003EGo\u003C\u002Fstrong\u003E: никак. Null Safety в Go отсутствует. При разработке вы часто будете видеть представленную ниже конструкцию с методом doSomething, возвращающим два значения: результат и ошибку. Далее идет проверка на то, что ошибки нет. Если ошибка имеет место, выполнение программы завершается.\u003C\u002Fp\u003E\u003Cpre\u003E\u003Ccode\u003Efunc main() {\n\tresult, err := doSomething()\n\tif err != nil {\n\t\tos.Exit(1)\n\t}\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EТакое решение тоже осмысленно. Создатели Go посчитали, что проверка на null является очень простой и всем очевидной. Была попытка реализовать SGo (Safe Go), где использовался похожий на Kotlin синтаксис. Но данный форк был сделан для версии Go 1.7, репозиторий есть в GitLab, но он заброшен. \u003C\u002Fp\u003E\u003Ch4\u003EФункции расширения\u003C\u002Fh4\u003E\u003Cp\u003EДавайте рассмотрим кейс с функцией расширения в \u003Cstrong\u003EKotlin \u003C\u002Fstrong\u003E— ситуация, когда мы хотим расширить поведение какого-либо класса. Возьмем пример с UserPassword. Здесь мы хотим проверить, является ли secure наш пароль. На деле тут должен быть какой-нибудь “страшный” REGEX, проверяющий безопасность пароля. Но для демонстрации обойдемся простой проверкой, что пароль не короче трех символов. Представленный ниже код отработает корректно.\u003C\u002Fp\u003E\u003Cpre\u003E\u003Ccode\u003Efun UserPassword.isSecure(): Boolean {\n\t\u002F* validate password against some horrible regexp*\u002F\n\treturn if(this.password.length &lt; 3) {\n\t\tfalse \n\t} else {\n\t\ttrue\n\t}\n}\n\nfun main() {\n\tval up = UserPassword(username = \"John\", password = \"***\")\n\tprintln(up.isSecure()) \u002F\u002F true\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EТеперь посмотрим на пример, когда мы пытаемся расширить поведение класса, который не находится в нашей кодовой базе. Для примера возьмем LocalDate (класс из package java.time) и создадим для него функцию расширения, которая сможет распечатать его в привычном нам формате: дата, месяц, год. Выглядеть наш код будет вот так. В методе main мы просто создаем объект LocalDate.now() и на нем вызываем метод. Все просто и понятно.\u003C\u002Fp\u003E\u003Cpre\u003E\u003Ccode\u003Eimport java.time.LocalDate\nimport java.time.format.DateTimeFormatter\n\nfun LocalDate.toddMMyyyyFormat(): String {\n\treturn this.format(DateTimeFormatter.ofPattern(\"dd.MM.yyyy\"))\n}\n\nfun main() {\t\t\t\t\t\t\t\n\tprintln(LocalDate.now().toddMMyyyyFormat()) \u002F\u002F 06.07.2023\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EТеперь посмотрим, как это выгляди в \u003Cstrong\u003EGo\u003C\u002Fstrong\u003E. На самом деле, все очень похоже. Мы описываем структуру, метод, но с несколько иным синтаксисом. В целом все абсолютно идентично.\u003C\u002Fp\u003E\u003Cpre\u003E\u003Ccode\u003Etype UserPassword struct {\n\tUsername string `json:\"username\"` \n\tPassword string `json:\"password\"`\n}\t\n\nfunc (up *UserPassword) isSecure() bool {\n\t\u002F* validate password against some horrible regexp*\u002F\n\tvar isSecure bool\n\tif len(up.Password) &lt; 3 {\n\t\tisSecure = false\n\t} else {\n\t\tisSecure = true\n\t}\n\treturn isSecure\n}\n\nfunc main() {\n\tup := UsrPwd{\"John\", \"***\"}\n\tfmt.Println(upwd.MyUsername()) \u002F\u002F username = John\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EЕсть проблема, что мы не можем расширять поведение структур, которые не в нашем package. У Go есть ответ на этот вопрос. Есть возможность создать через конструкцию type UsrPwd алиас тип и на нем, поскольку он находится уже в моем package, прикрепить функцию, которая вернет мне мой логин. Далее мы создаем структуру, объект этой структуры, и печатаем его.\u003C\u002Fp\u003E\u003Cpre\u003E\u003Ccode\u003Etype UserPassword struct {\n\tUsername string `json:\"username\"` \n\tPassword string `json:\"password\"`\n}\n\ntype UsrPwd UserPassword\n\nfunc (up UsrPwd) MyUsername() string {\n\treturn \"username = \" + up.Username\n}\n\nfunc main() {\t\t\t\t\t\t\t\n\tup := UsrPwd{\"John\", \"***\"}\n\tfmt.Println(up.MyUsername()) \u002F\u002F username = John\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Ch4\u003EКонтейнеры данных\u003C\u002Fh4\u003E\u003Cp\u003EВ \u003Cstrong\u003EKotlin\u003C\u002Fstrong\u003E контейнеры данных — это Data classes, удобный синтаксис для создания POJO-файлов, у которых переопределён toString, equals, hashcode, а также реализован метод \u003Cem\u003Ecopy\u003C\u002Fem\u003E, который позволяет копировать объект при необходимости точечно изменяя некоторые поля. Все это переопределено, и за счет языка можно отказаться от библиотеки Lombok. \u003C\u002Fp\u003E\u003Cp\u003EВ примере далее мы описываем структуру UserPassword, хранящую в себе логин и пароль пользователя, создаем объект данного класса и печатаем его. Как видно, мы при печати получаем название класса и переменных. Стоит обратить внимание, что здесь используются модификаторы val. Есть модификаторы var и val. val — финальное значение, то есть переменную изменить не получится, поэтому в данном случае POJO-файл будет создан без сеттеров.\u003C\u002Fp\u003E\u003Cpre\u003E\u003Ccode\u003E\tdata class UserPassword(val username: String, \n\t\t\t\t\t\t\tval password: String)\n\t \n\tfun main() {\n\t\tval up = UserPassword(username = \"John\", password = \"***\")\n\t\tprintln(up) \u002F\u002F UserPassword(username = John, password = ***)\n\t}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EВ \u003Cstrong\u003EGo\u003C\u002Fstrong\u003E контейнеры данных называются структурами (Structs) и имеют несколько иной синтаксис. Мы определяем тип UserPassword. Все то же самое, но поля Username и Password начинаются с большой буквы, то есть они являются публичными. Они доступны за пределами package, в котором определяются. Соответственно, для того, чтобы при сериализации наши поля имели другие названия, используются теги. В данном случае при сериализации json поля с большой буквы будут конвертированы в поля с маленькой буквы. В Go это называется теги. Чем-то они похожи на аннотации.\u003C\u002Fp\u003E\u003Cp\u003EПосле простановки тегов создаем объект структуры и распечатываем его. Информации получаем меньше, но в целом все понятно.\u003C\u002Fp\u003E\u003Cpre\u003E\u003Ccode\u003Etype UserPassword struct {\n\t\tUsername string `json:\"username\"` \n\t\tPassword string `json:\"password\"`\n\t}\n\t \n\tfunc main() {\n\t\tup := UserPassword {\n\t\t\tUsername: \"John\", \n\t\t\tPassword: \"***\",\n\t\t}\n\t\tfmt.Println(up) \u002F\u002F {John ***}\n\t}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Ch4\u003ECoroutines в Kotlin\u003C\u002Fh4\u003E\u003Cp\u003EДавайте представим, что мы хотим получить данные из Интернета, при этом сделать так, чтобы это не влияло на производительность системы в течении большого количества времени. Coroutines дают такую возможность. Для начала создадим Channel для String — структура для обмена данными между Coroutines, чем-то похожая на BlockingQueue. Мы можем отправлять туда и читать оттуда значения. После создания Channel мы передаем в нее функцию getFromInternet, получаем данные из Channel и печатаем то что получили по сети.\u003C\u002Fp\u003E\u003Cp\u003EЧем же занимается функция getFromInternet? Тут мы создаем request. Сразу скажу, что я использую функционал httpClient, доступный в Java с 11 версии. Очень удобно этим пользоваться. После создания запроса делаем асинхронный запрос, который вернет нам CompletableFuture. Здесь очень важно обратить внимание на метод await. Его нет в классе CompletableFuture. Это именно та функция-расширение, про которую я рассказывал на предыдущих слайдах. То есть это возможность расширить поведение и, в нашем случае, метод await() - это мостик между миром Java и миром Coroutines. Про это я делал доклад на JPoint в прошлом году. Все желающие могут с ним ознакомиться.\u003C\u002Fp\u003E\u003Cp\u003EПосле получения ответа мы отправляем его в Channel и можем прочитать его.\u003C\u002Fp\u003E\u003Cpre\u003E\u003Ccode\u003Efun main() = runBlocking {\n\tval ch = Channel&lt;String&gt;()\n\tlaunch {\n\t\tgetFromInternet(ch)\n\t}\n\tval resBody = ch.receive()\n\tprintln(resBody) \u002F\u002F response body\n}\n\nsuspend fun getFromInternet(ch: Channel&lt;String&gt;) {\n\tval request = HttpRequest.newBuilder()\n\t\t.GET()\n\t\t.uri(URI.create(\"https:\u002F\u002Fexample.org\u002F\"))\n\t\t.build()\n\t\n\tval response = httpClient\n\t\t.sendAsync(request, HttpResponse.BodyHandlers.ofString())\n\t\t.await()\n\tch.send(response.body())\n}\n\nval httpClient: HttpClient = HttpClient.newBuilder()\n\t.version(HttpClient.Version.HTTP_1_1)\n\t.build()\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Ch4\u003EGoroutines в Go\u003C\u002Fh4\u003E\u003Cp\u003EGoroutines имеют очень похожий синтаксис. В данном примере я реализовал точно такой же функционал. Сначала создаем Channel, в котором можем хранить строку, после запускаем в Goroutines метод получения данных из Интернета, как я показывал ранее. Подобного рода конструкции проверок на ошибки у нас будут частыми в Go коде. Полученный ответ передаем в Channel, и в main методе мы его читаем.\u003C\u002Fp\u003E\u003Cpre\u003E\u003Ccode\u003Efunc main() {\n\tch := make(chan string)\n\tgo getFromInternet(ch)\n\tresBody := &lt;- ch\n\tfmt.Println(resBody) \u002F\u002F response body\n}\n\nfunc getFromInternet(ch chan string) {\n\tres, err := http.Get(\"https:\u002F\u002Fexample.org\u002F\")\n\tif err != nil {\n\t\tos.Exit(1)\n\t}\n\tresBody, err := ioutil.ReadAll(res.Body)\n\tif err != nil {\n\t\tos.Exit(1)\n\t}\n\tch &lt;- resBody\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EВ целом, за исключением того, что Go использует чуть более хитрый синтаксис в виде стрелочек, а Kotlin более очевидные send\u002Freceive, разницы особой нет. Единственное, что нужно отметить, что для запуска Goroutines используется волшебное слово go. Coroutines в Kotlin являются библиотекой. В свою очередь, в Go Goroutines - это часть языка, и для начала их использования ничего подключать не нужно. Про разницу двух подходов (библиотечного и часть языка) есть отличный пост Романа Елизарова.\u003C\u002Fp\u003E\u003Ch4\u003EKotlin: First-Class Functions\u003C\u002Fh4\u003E\u003Cp\u003EРассмотрим возможность работы с функциями. First-Class Functions — функции, которые мы можем передавать в другую функцию как параметр и получать их как возвращаемое значение. В уже знакомом классе UserPassword мы создаем два объекта: John и Ivan. Также у нас есть функция аутентификации, принимающая объект из этого класса, и функция приветствия. \u003C\u002Fp\u003E\u003Cp\u003EДопустим, у нас англоязычный сервис, и мы создаем функцию приветствия пользователя на английском языке. Функцию приветствия на английском мы передаем как метод референс. В случае, если мы хотим поприветствовать Ivan иначе, всегда можно использовать метод лямбды. В Kotlin лямбду можно вынести за скобки. Это особенность языка, позволяющая удобно писать собственный dsl. Но в данном примере показанный синтаксис более понятен. Тут лямбда является вторым параметров, и у не знакомых с Kotlin людей вопросов не появится.\u003C\u002Fp\u003E\u003Cpre\u003E\u003Ccode\u003Efun main() {\n\t\tval john = UserPassword(username = \"John\", password = \"***\")\n\t\tval ivan = UserPassword(username = \"Иван\", password = \"***\")\n\t \n\t\tauth(john, ::greetingEng) \u002F\u002F Hello, John\n\t\tauth(ivan, {name -&gt; \"Привет, $name\"}) \u002F\u002F Привет, Иван\n\t}\n\t \n\tfun auth(up: UserPassword, greeter: (name: String) -&gt; String) {\n\t\tprintln(greeter(up.username))\n\t}\n\t \n\tfun greetingEng(name: String): String {\n\t\treturn \"Hello, $name\"\n\t}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Ch4\u003EGo: First-Class Functions\u003C\u002Fh4\u003E\u003Cp\u003EВ Go работа с функциями проходит идентично Kotlin. Мы точно также определяем метод аутентификации, который вторым параметром принимает функцию. Также мы имеем функцию приветствия на английском, и в первом случае передаем ее, во втором передаем анонимную функцию, которая приветствует Ivan по-русски.\u003C\u002Fp\u003E\u003Cpre\u003E\u003Ccode\u003Efunc main() {\n\t\tjohn := UserPassword{\"John\", \"***\"}\n\t\tivan := UserPassword{\"Иван\", \"***\"}\n\t\t\n\t\tauth(john, greetingEng) \u002F\u002F Hello, John\n\t\tauth(ivan, func(name string) string) {\n\t\t\treturn \"Привет, \" + name\n\t\t}) \u002F\u002F Привет, Иван\n\t}\n\t \n\tfun auth(up *UserPassword, greeter func(name string) string) {\n\t\tfmt.Println(greeter(up.Username))\n\t}\n\t \n\tfun greetingEng(name string) string {\n\t\treturn \"Hello, \" + name\n\t}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EНиже приведена итоговая таблица по результатам сравнения Kotlin и Go.\u003C\u002Fp\u003E\u003Cfigure class=\"full-width \"\u003E\u003Cimg src=\"https:\u002F\u002Fhabrastorage.org\u002Fr\u002Fw780q1\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fc2e\u002F172\u002Ff38\u002Fc2e172f3825d3df5b33c3338d8df6893.jpeg\" width=\"989\" height=\"673\" data-src=\"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fc2e\u002F172\u002Ff38\u002Fc2e172f3825d3df5b33c3338d8df6893.jpeg\" data-blurred=\"true\"\u002F\u003E\u003C\u002Ffigure\u003E\u003Cp\u003EВ Go Null-safety отсутствует как класс. Но это тот выбор, на который создатели языка пошли сознательно. С этим нужно просто жить. Функции расширения в Kotlin и Go работают одинаково хорошо. Data Containers в Kotlin присутствуют, позволяют создать POJO-файлы и иммутабельные POJO-файлы. В Go возможность создания иммутабельных объектов отсутствует. Синтаксического сахара в Kotlin больше. Работа с функциями и неблокирующаяся многопоточность в Kotlin и Go реализованы идентично и работают очень хорошо.\u003C\u002Fp\u003E\u003Ch4\u003EМикросервисы\u003C\u002Fh4\u003E\u003Cp\u003EВозвращаясь к теме написания микросервисов. JVM использует при запуске минимум 70 МБ памяти. Это уже не сильно похоже на микросервис, при этом размер потребляемых JVM ресурсов зависит от размера памяти, которую использует само приложение. Для задач обслуживания приложения JVM необходимо от 10 до 25% памяти приложения.\u003C\u002Fp\u003E\u003Cp\u003EВ итоге наши микросервисы на Java начинают выглядеть как на картинке ниже. Имеется небольшая полезная нагрузка и большая JVM, на которой работает приложение. \u003C\u002Fp\u003E\u003Cfigure class=\"full-width \"\u003E\u003Cimg src=\"https:\u002F\u002Fhabrastorage.org\u002Fr\u002Fw780q1\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F2cb\u002F994\u002Fee1\u002F2cb994ee1ce1dc921e84ea0edccea145.jpeg\" width=\"1147\" height=\"417\" data-src=\"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F2cb\u002F994\u002Fee1\u002F2cb994ee1ce1dc921e84ea0edccea145.jpeg\" data-blurred=\"true\"\u002F\u003E\u003C\u002Ffigure\u003E\u003Cp\u003EСоответственно, встал вопрос, настолько ли Go эффективен, как о нем говорят. Я написал приложения, удовлетворяющее требованиям App.Farm к наличию OpenAPI и healthcheck-endpoint. App.Farm - это система, которая используется для быстрого запуска и деплоя приложений. Грубо говоря - это корпоративный Kubernetes со всем необходимым обвесом в виде Gitlab, Nexus, SonarQube и тд. Ниже в таблице указаны версии языка и фреймворка, используемые при написании приложений.\u003C\u002Fp\u003E\u003Cdiv\u003E\u003Cdiv class=\"table\"\u003E\u003Ctable\u003E\u003Ctbody\u003E\u003Ctr\u003E\u003Ctd\u003E\u003Cp align=\"left\"\u003E\u003C\u002Fp\u003E\u003C\u002Ftd\u003E\u003Ctd\u003E\u003Cp align=\"left\"\u003E\u003Cstrong\u003EJVM\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\u003C\u002Ftd\u003E\u003Ctd\u003E\u003Cp align=\"left\"\u003E\u003Cstrong\u003EGo\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\u003C\u002Ftd\u003E\u003C\u002Ftr\u003E\u003Ctr\u003E\u003Ctd\u003E\u003Cp align=\"left\"\u003EВерсия языка\u003C\u002Fp\u003E\u003C\u002Ftd\u003E\u003Ctd\u003E\u003Cp align=\"left\"\u003EJava 17\u003C\u002Fp\u003E\u003Cp align=\"left\"\u003EKotlin 1.7\u003C\u002Fp\u003E\u003C\u002Ftd\u003E\u003Ctd\u003E\u003Cp align=\"left\"\u003E1.20\u003C\u002Fp\u003E\u003C\u002Ftd\u003E\u003C\u002Ftr\u003E\u003Ctr\u003E\u003Ctd\u003E\u003Cp align=\"left\"\u003EВерсия фреймворка\u003C\u002Fp\u003E\u003C\u002Ftd\u003E\u003Ctd\u003E\u003Cp align=\"left\"\u003ESpring 3.1\u003C\u002Fp\u003E\u003C\u002Ftd\u003E\u003Ctd\u003E\u003Cp align=\"left\"\u003EEcho 4\u003C\u002Fp\u003E\u003C\u002Ftd\u003E\u003C\u002Ftr\u003E\u003C\u002Ftbody\u003E\u003C\u002Ftable\u003E\u003C\u002Fdiv\u003E\u003C\u002Fdiv\u003E\u003Cp\u003EТеперь посмотрим на результаты сравнения объёмов потребляемых ресурсов. В критерии размера артефакта победителя нет. Да, в Go показатель меньше, но не значительно. А вот по размеру потребляемой памяти и времени запуска Go существенно выделяется.\u003C\u002Fp\u003E\u003Cfigure class=\"full-width \"\u003E\u003Cimg src=\"https:\u002F\u002Fhabrastorage.org\u002Fr\u002Fw780q1\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F8e6\u002F598\u002Fe81\u002F8e6598e8146c2589f40b0d0a7e320d1d.jpeg\" width=\"1234\" height=\"419\" data-src=\"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F8e6\u002F598\u002Fe81\u002F8e6598e8146c2589f40b0d0a7e320d1d.jpeg\" data-blurred=\"true\"\u002F\u003E\u003C\u002Ffigure\u003E\u003Ch4\u003EДа, но…\u003C\u002Fh4\u003E\u003Cp\u003EМожет показаться, что мы уже получили ответ на поставленный в начале вопрос, но не до конца. Давайте взглянем, что может предложить Java для решения проблемы с потребляемыми ресурсами.\u003C\u002Fp\u003E\u003Cp\u003E\u003Cstrong\u003EGraalVM \u003C\u002Fstrong\u003E— виртуальная машина, разрабатывающая Oracle, в состав которой входит утилита Native Image, которая умеет преобразовывать class-файлы и jar-файлы в нативные бинарники. При этом для использования решения есть несколько ограничений.\u003C\u002Fp\u003E\u003Cul\u003E\u003Cli\u003E\u003Cp\u003EТребуются новейшие версии фреймворков, и с учетом того, что в банках нередко много легаси, не всегда получится это реализовать;\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003EВремя сборки значительно увеличится. Native Image на вход необходимо передать либо скомпилированные class-файлы, либо jar-файлы, соответственно, к текущему пайплайну добавится новый этап. Бинарник соберет все классы и интерфейсы, необходимые для работы приложения. Если раньше, например, класс String был доступен из JVM, то теперь его нужно будет положить в данный бинарник.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003EУвеличится размер артефакта\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003EПроблемы со сторонними библиотеками. Если новейшие фреймворки гарантируют совместимость с Native Image, то со сторонними библиотеками могут быть проблемы. \u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003C\u002Ful\u003E\u003Ch4\u003EКак следствие \u003C\u002Fh4\u003E\u003Cp\u003EТакже есть кейсы, в которых JVM лучше Go. Рассмотрим \u003Cstrong\u003Eпаттерн Strongman\u003C\u002Fstrong\u003E. Допустим,у нас есть приложение, которое занимается отправкой почты для всего банка, создаёт письма по заданным шаблонам, вставляет корпоративную символику и т.д. Это приложение можно считать микросервисом, так как оно выполняет одну функцию, но при этом работает с большим объёмом данных и потребляет большое количество ресурсов. В таком случае объем потребляемых ресурсов JVM размывается на фоне ресурсов, потребляемых приложением. Кроме того, есть \u003Ca href=\"https:\u002F\u002Fmedium.com\u002Fhelidon\u002Fcan-java-microservices-be-as-fast-as-go-5ceb9a45d673\"\u003Eсравнение сервисов\u003C\u002Fa\u003E, написанных на Java и Go, которое показывает, что Java эффективнее работает с большими объемами ресурсов, чем Go.\u003C\u002Fp\u003E\u003Cfigure class=\"float full-width \"\u003E\u003Cimg src=\"https:\u002F\u002Fhabrastorage.org\u002Fr\u002Fw780q1\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F9c4\u002Fddf\u002F0d7\u002F9c4ddf0d703219aab5b967d36405d954.jpeg\" width=\"1239\" height=\"888\" data-src=\"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F9c4\u002Fddf\u002F0d7\u002F9c4ddf0d703219aab5b967d36405d954.jpeg\" data-blurred=\"true\"\u002F\u003E\u003C\u002Ffigure\u003E\u003Cp\u003EДопустим, у нас нет ситуации, когда в нашем приложении мы не отправляем почту за весь банк. У нас нет тысяч rps, а почта отправляется время от времени. Тогда можно использовать \u003Cstrong\u003Eпаттерн Swiss Knife\u003C\u002Fstrong\u003E. Когда разный функционал собирается в один сервис, то получается некое подобие швейцарского ножа, который делает все и понемногу. Внимательный читатель может заметить, что это является отходом от микросервисной архитектуры. Да, но это тот trade off, на который нужно идти сознательно, отдавая себе отчёт в том зачем вы это делаете.\u003C\u002Fp\u003E\u003Ch3\u003EИтоги\u003C\u002Fh3\u003E\u003Cp\u003EРезюмируя все вышесказанное, давайте посмотрим, что нам могут предложить Kotlin и Go.\u003C\u002Fp\u003E\u003Ch4\u003EKotlin\u003C\u002Fh4\u003E\u003Cul\u003E\u003Cli\u003E\u003Cp\u003EПолная совместимость с Java позволяет использовать существующие библиотеки и собственные наработки.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003EЛаконичность синтаксиса позволяет разработчикам писать код быстрее, таким образом снижая time-to-market.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003EНеблокирующая многопоточность: разработка ведется в привычной императивной парадигме. Кроме Coroutines тут имеет место быть такая вещь, как реактивщина. В Spring есть фреймворк Spring Flux, при использовании которого мы можем добиться сопоставимой производительности с Coroutines, но при этом не сильно потеряем в читабельности кода.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003EКоличество кода меньше на 20% по сравнению с Java.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003EВозможность использования со старыми версиями Java, что очень критично для банковской сферы, наполненной легаси-системами. Основной плюс заключается в том, что мы получим прирост производительности при использовании Coroutines. Кроме того, даже работая на старых версиях Java разработчики смогут получить опыт работы с новыми парадигмами, которые в их версии языка могут отсутствовать.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003C\u002Ful\u003E\u003Ch4\u003EGo\u003C\u002Fh4\u003E\u003Cul\u003E\u003Cli\u003E\u003Cp\u003EМаленький Application Footprint, феноменально короткое время запуска.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003EВстроенная поддержка многопоточности — не библиотека, а часть языка.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003EНеблокирующая многопоточность: разработка в привычной императивной парадигме. \u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003C\u002Ful\u003E\u003Cp\u003E\u003Cstrong\u003EНо есть и минусы:\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\u003Cul\u003E\u003Cli\u003E\u003Cp\u003EНебольшая экосистема по сравнению с Java, что связано с тем, что это относительно молодой язык. \u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003EОтсутствие поддержки старых технологий и протоколов. Но тут сложно сказать, плюс это или минус.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003EМеньше возможностей для управления GC.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003C\u002Ful\u003E\u003Cp\u003EКакие можно дать рекомендации. Если в вашем проекте используется Java, то лучше начать использовать Kotlin, поскольку это действительно очень хороший язык. Если очень хочется использовать Go, а ваш текущий проект написан на Java, то рекомендация не меняется: все равно начинать использовать Kotlin. Если обременение в виде проекта на Java отсутствует, то стоит дождаться релиза сервиса-пионера на Go, который мы сейчас разрабатываем с командой AppFarm. Это сервис, который проходит все проверки нашего пайплайна и может быть взят за основу.\u003C\u002Fp\u003E\u003Ch3\u003EВопросы слушателей\u003C\u002Fh3\u003E\u003Cp\u003EВ следующем блоке собрали все вопросы от слушателей и зрителей митапа в онлайне, в том числе на которые не удалось ответить непосредственно на мероприятии. Вопросы собирались в \u003Ca href=\"https:\u002F\u002Ft.me\u002FRSHB_meetups\"\u003Eчате митапов РСХБ.цифра\u003C\u002Fa\u003E в Telegram.\u003C\u002Fp\u003E\u003Cp\u003E\u003Cstrong\u003EВ Райффайзенбанке преимущественно на DotNET пишут. Почему не сравниваете с ним?\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\u003Cp\u003EМой бэкграунд это Java-разработка. Более 80% бэкэнд-сервисов в РСХБ написаны на Java. Поэтому я делал доклад, более актуальный для компании, в которой на текущий момент работаю.\u003C\u002Fp\u003E\u003Cp\u003E\u003Cstrong\u003EЕсть ли в РСХБ техрадар? Если да, если в нем Go или что там вообще есть.\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\u003Cp\u003EЕсть и техрадар, и Go в нём присутствует. Легализацией Go как языка программирования мы занимаемся не только со стороны разработки, но и со стороны App.Farm. Это тот конвейер приложений, в котором все новые сервисы должны запускаться. App.Farm насаждает определенные стандарты и культуру разработки. До его появления каждый проект был уникальным и это увеличивало когнитивную нагрузку на разработчиков при переходе на другой проект внутри банка. Дополняя тему техрадара, скажу, что следующий доклад у нас будет про Rust. Это тоже очень интересный язык со своими особенностями управления памятью, про который можно чего интересного рассказать и услышать.\u003C\u002Fp\u003E\u003Cp\u003E\u003Cstrong\u003EВ представленной таблице нет пункта про ООП. Также вопрос — насколько код на Java должен быть маленьким, чтобы его можно было перенести Go, и насколько большим, чтобы переносить на Java?\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\u003Cp\u003EЯ сторонник полиглотных систем. Все сервисы, выполняющие небольшую функцию и не находящиеся под большой нагрузкой, но при этом делающие много сетевых запросов, я бы писал на Go. В отношении сервисов, работающих с большими объемами данных и под большими нагрузками, очень интересно посмотреть на Rust. На одном из моих проектов мы собираем все файлы банка в единое хранилище. Некоторые файлы могут иметь большой размер. И иногда мы сталкиваемся с ситуацией, при которой приложение может завершиться с Out Of Memory даже на небольшом файле. Это связано с тем, что GC может не успеть отработать и удалить из памяти файлы от предыдущих запросов. Ввиду отсутствия GC в Rust, память, которая используется, сразу освобождается, и будет меньше случаев, когда Kubernetes рубит сервис из-за перерасхода ресурсов.\u003C\u002Fp\u003E\u003Cp\u003EЧто касается парадигмы языка, да, Go можно назвать процедурным языком. ООП рассматривался командой создателей языка Go как дополнительный источник когнитивной нагрузки, а сложная система наследования приводит к созданию спагетти-кода. \u003Ca href=\"https:\u002F\u002Fgo.dev\u002Ftalks\u002F2015\u002Fgophercon-goevolution.slide#19\"\u003E\u003Cu\u003EОни считают\u003C\u002Fu\u003E\u003C\u002Fa\u003E, что интерфейсов и методов структур достаточно для реализации ООП.\u003C\u002Fp\u003E\u003Cp\u003E\u003Cstrong\u003EВы говорили, что лучше писать на Rust. Много в РСХБ Rust-разработчиков?\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\u003Cp\u003EЯ, наверное, пока единственный. Но на Rust предполагается реализовать небольшой слой, который отвечает за работу с файлами. Для этого не нужна большая команда - двух человек будет достаточно.\u003C\u002Fp\u003E\u003Cp\u003EДобавлю, что я говорил о том, что каждый язык стоит использовать для определенной задачи. А то, что у нас появляется бизнес-задача в виде найма большой команды, это уже другое. Но думаю, мы можем прийти к созданию команды РСХБ, разрабатывающей на Rust.\u003C\u002Fp\u003E\u003Cp\u003E\u003Cstrong\u003EВы приводили сравнение истории с одним сервисом на одну виртуальную машину. Но ведь обычно контейнер используется типа Tomcat, где много сервисов на виртуальную машину. Плюс гексагональная архитектура позволяет решить эту проблему.\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\u003Cp\u003EВозможно. Боюсь, с ходу ответить на этот вопрос не получится.\u003C\u002Fp\u003E\u003Cp\u003E\u003Cstrong\u003EВ рассказе про разницу между языками вы как-то сразу забыли про Java. С точки зрения программиста и с точки зрения бизнеса зачем нам менять одно на другое? Java популярен, он развивается, и все эти фишки, про которые вы говорили, можно нормально прописать на Java.\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\u003Cp\u003EВопрос резонный. Проблема в том, что разница между Java 20 и Kotlin будет незначительной. Но в банке очень много легаси-систем, например, на текущий момент вводиться в эксплуатацию система, написанная на Java 8.0. Соответственно, все те плюшки, о которых мы говорим, попросту недоступны. При этом Kotlin хорошо работает со старыми версиями Java. Да, если в  таблицу сравнения добавить Java, будет примерно то же самое, что у Kotlin.\u003C\u002Fp\u003E\u003Cp\u003EВ конце 2019 года у меня была мысль не использовать Coroutines Kotlin, хотел дождаться project Loom. Не дождался. \u003C\u002Fp\u003E\u003Cp\u003EПоследние три года я разрабатываю на Kotlin. Это очень приятный в работе язык. Переход на Kotlin также не занимает какого-то значительного времени. Тут скорее вопрос в поиске TeamLead’ов, которые смогут познакомить команду с новыми идиомами. Потому что зачастую Java-разработчики продолжают писать Java-код, только теперь уже на Kotlin. Сам был в таком замечен.\u003C\u002Fp\u003E\u003Cp\u003EСвой первый проект на Kotlin я начинал под личную ответственность. Программист должен быть смелым, я считаю.\u003C\u002Fp\u003E\u003Cp\u003E\u003Cstrong\u003EКакая ресурсоэффективность при микросервисной архитектуре, если пустой проект может отъедать 50 МБ памяти? Как эту проблему решать и какие подходы лучше использовать?\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\u003Cp\u003EКак я показывал, у нас микросервис может занимать 70 МБ с ходу. Как вариант, если очень хочется писать на JVM, можно использовать Native Image. Это повлечет указанные ранее сложности, но решает проблемы. Или вы можете создать некий utils-сервис, который будет неким швейцарским ножом. Это решит проблему, но идти на этот шаг можно только отдавая себе отчёт в своих действиях. \u003C\u002Fp\u003E\u003Cp\u003E\u003Cstrong\u003E70 МБ это, конечно, невыносимо много. Зато когда это все крутится в Kuber на целой виртуалке на Unix, тут, конечно же, ничего страшного. Предложенные методы тоже не совсем ресурсоэффективны. \u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\u003Cp\u003EЕсли говорить конкретно про мой взгляд на разработку, мне нравится тема с макросервисами. Для большей части систем 5-6 сервисов будет достаточно. Да, они будут достаточно большими, и все же. И мне не очень нравится ситуация, которую часто можно услышать на собеседованиях: у нас было 100 микросервисов, а у нас 200, а у нас 300 и так далее. Начинаются мериться их количеством, когда их создание совершенно неразумно с точки зрения ресурсов. Поэтому я сторонник макросервисной архитектуры.\u003C\u002Fp\u003E\u003Cp\u003EИ решение использовать или не использовать Кубер находится не в моей власти. Моя задача состоит в том, чтобы сделать ресурсоэффективными приложения, а не всю банковскую экосистему.\u003C\u002Fp\u003E\u003Cp\u003E\u003Cstrong\u003EНеужели проще перевести Java 8.0 на Kotlin чем на Java 17.0?\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\u003Cp\u003EДа. Ключевой момент в том, что у Kotlin очень хорошая интероперабельность с Java. Вы можете начать писать новый функционал на Kotlin, можете переводить на него часть существующего функционала. В Kotlin есть файл с расширением .kt, куда можно скопировать java-класс. Kotlin сам все конвертирует, и некоторые проблемы решаются автоматически.\u003C\u002Fp\u003E\u003Cp\u003EК тому же нужно помнить, что обычно вы используете разные фреймворки вроде Spring. И обновление версии Java влечёт за собой и обновление версии Spring’а. Даже при переходе со Spring 2.7 на 3.1 мы столкнулись с рядом проблем. А обновление с первой версии Spring’а может занять значительное время.\u003C\u002Fp\u003E\u003Cp\u003E\u003Cstrong\u003EВопрос про Coroutines. Http-клиент возвращает асинхронный ввод-вывод в качестве CompletableFuture в неблокируемый поток. Этот поток обернут в Coroutines. В чем преимущество оборачивания и так неблокируемого I\u002FO в Coroutines, и вместо вызова метода Callable также дождаться ответа асинхронно. Это же то же самое.\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\u003Cp\u003EНе совсем. Чтобы получить ответ вам нужно на CompletableFuture вызвать блокирующий метод get. Это плохо для производительности.\u003C\u002Fp\u003E\u003Cp\u003EСпособ, который вы предлагаете, предполагает использование Callback’ов, а это сразу рушит возможность писать код в привычной императивной парадигме. Мне довелось немного поработать с GWT, где всё делалось на Callback’ах. Удовольствие ниже среднего.\u003C\u002Fp\u003E\u003Cp\u003E\u003Cstrong\u003EКак быстро выходят исправления для ошибок в компиляторе для Kotlin и Go? Сколько серьезных ошибок за последние годы было и там, и там, и сталкивались ли вы с багами компилятора? \u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\u003Cp\u003EПеред тем, как заходить в какую-то авантюру, надо дождаться, пока стабилизируется компилятор. Я предлагаю собрать все ошибки другим, особенно если вы работаете в банке. Соответственно, Go вы можете брать стабильную отлаженную версию 1.20. В Kotlin я начинал с версии 1.3 в 2019 году и ни с какими проблемами не столкнулся. Но, возможно, у меня просто получалось обходить острые углы.\u003C\u002Fp\u003E\u003Cp\u003E\u003Cstrong\u003EЗавезли ли в GO exception, дженерики и систему сборки?\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\u003Cp\u003EException точно нет, все будет точно такое же: получаете два значения из функции, проверяете на ошибки, если ошибка есть прерываете исполнение программы. Дженерики появились, а что касается версии сборки — пока с этим есть проблемы. Существует два способа подтянуть зависимости и обычно в библиотеках пишут, какой командой лучше их добавлять. Я с какими-то проблемами особо не сталкивался, но я, вероятно, просто не пользовался старыми или эзотерическими библиотеками. Не могу назвать себя очень опытным пользователем Go.\u003C\u002Fp\u003E\u003Cp\u003E\u003Cstrong\u003EЧто в Kotlin и Go насчет стрессоустойчивости? Как будет работать приложение под высокой нагрузкой при условии, что база не является узким местом.\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\u003Cp\u003EОба языка вытянут. Единственный минус, который может быть, это то, что оба языка используют GC. Соответственно, в графике мониторинга вы будете видеть пики. Есть, например, \u003Ca href=\"https:\u002F\u002Fdiscord.com\u002Fblog\u002Fwhy-discord-is-switching-from-go-to-rust\"\u003E\u003Cu\u003Eстатья коллег из Discord\u003C\u002Fu\u003E\u003C\u002Fa\u003E, которые пишут о том, что один из таких сервисов, который у них был сильно нагружен, был переписан на Rust. В итоге они сразу избавились от пиков просто за счет того, что используемая память после закрытия скоупа освобождается. Это добавляет дополнительные расходы по работе с памятью, но зато полностью удаляет пики.\u003C\u002Fp\u003E\u003Cp\u003E\u003Cstrong\u003EСколько времени в среднем нужно программисту, чтобы перейти с Java на Kotlin?\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\u003Cp\u003EНа мой взгляд не очень много. Около недели, чтобы начать на нём писать. Корутины требуют большего количества времени на изучение. Я бы дал оценку в месяц.\u003C\u002Fp\u003E\u003Cp\u003E\u003Cstrong\u003EЕсть ли опыт не синтетических бенчмарков Go vs Kotlin на стандартном бизнесовом сервисе, где помимо вычислений есть запросы к БД, файловый ввод-вывод и пр.?\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\u003Cp\u003EУ меня нет. В своём докладе я опирался на \u003Ca href=\"https:\u002F\u002Fmedium.com\u002Fhelidon\u002Fcan-java-microservices-be-as-fast-as-go-5ceb9a45d673\"\u003E\u003Cu\u003Eстатью\u003C\u002Fu\u003E\u003C\u002Fa\u003E, которая сравнивала GraalVM с Go.\u003C\u002Fp\u003E\u003Cp\u003E\u003Cstrong\u003EНасколько целесообразно разрабатывать на Котлин и Го, разрабы более редкие и поддержка дороже!\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\u003Cp\u003EКотлин — это всё-таки JVM-based язык программирования. А java-разработчиков достаточно много. Что касается go-разработчиков, то их количество растёт. Да и язык в целом достаточно прост для освоения. И такие компании как VK и Avito используют эти языки в качестве основных.\u003C\u002Fp\u003E\u003Cp\u003E\u003Cstrong\u003EКакое отношение количества Java разработчиков и Kotlin разработчиков?\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\u003Cp\u003EВ моём Центре сейчас примерно 50\u002F50.\u003C\u002Fp\u003E\u003Cp\u003E\u003Cstrong\u003EGo огонь! Но, по Вашему мнению, какие задачи в банке НЕ подходят для Go?\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\u003Cp\u003EДля Go существует мало библиотек по работе со старыми протоколами вроде SOAP. \u003C\u002Fp\u003E\u003Cp\u003E\u003Cstrong\u003EИсходя из обсуждения Go vs Kotlin - это практически однозначно новый микросервис, тогда в чем проблема использовать GraalVm? Если проблематикой являются ресурсы, то в чем проблема потратить время на шаг пайплайна для сборки ?\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\u003Cp\u003EИспользование GraalVM плохо подходит для быстрого прототипирования, поскольку у вас вырастет время сборки. Причём достаточно значительно. \u003C\u002Fp\u003E\u003Cp\u003EИ расходование ресурсов на этапе сборки артефакта тоже вырастет.\u003C\u002Fp\u003E\u003Cp\u003E\u003Cstrong\u003EJVM в случае микросервисов потребляет больше ресурсов по сравнению с Go. А есть данные по сравнению стабильности работы приложений на Java\u002FKotlin и Go? Наверное, не просто так JVM используется в финтехе чаще, чем Go.\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\u003Cp\u003EБоюсь, что ответ на этот вопрос лежит не в технической области. Как я говорил, такой параметр как Time To Market очень важен для бизнеса. И для решения некоторых задач вам требуется большое количество программистов. Очевидно, что Java-разработчиков в банках гораздо больше, чем всех остальных. Иногда даже вместе взятых.\u003C\u002Fp\u003E\u003Cp\u003E\u003C\u002Fp\u003E\u003C\u002Fdiv\u003E","tags":[{"titleHtml":"kotlin"},{"titleHtml":"java"},{"titleHtml":"go"},{"titleHtml":"микросервисы"},{"titleHtml":"россельхозбанк"},{"titleHtml":"митапы"},{"titleHtml":"рсхб-интех"},{"titleHtml":"рсхб цифра"}],"metadata":{"stylesUrls":[],"scriptUrls":[],"shareImageUrl":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fdab\u002F223\u002Ffe9\u002Fdab223fe90f220923a460a43ec496555.jpeg","shareImageWidth":1200,"shareImageHeight":630,"vkShareImageUrl":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fdab\u002F223\u002Ffe9\u002Fdab223fe90f220923a460a43ec496555.jpeg","schemaJsonLd":"{\"@context\":\"http:\\\u002F\\\u002Fschema.org\",\"@type\":\"Article\",\"mainEntityOfPage\":{\"@type\":\"WebPage\",\"@id\":\"https:\\\u002F\\\u002Fhabr.com\\\u002Fru\\\u002Fcompanies\\\u002Frshb\\\u002Farticles\\\u002F747898\\\u002F\"},\"headline\":\"Микросервисы в банке: на чем их лучше писать? Java\\\u002FKotlin, а может Go?\",\"datePublished\":\"2023-07-13T19:46:06+03:00\",\"dateModified\":\"2023-07-14T13:00:03+03:00\",\"author\":{\"@type\":\"Person\",\"name\":\"РСХБ.цифра\"},\"publisher\":{\"@type\":\"Organization\",\"name\":\"Habr\",\"logo\":{\"@type\":\"ImageObject\",\"url\":\"https:\\\u002F\\\u002Fhabrastorage.org\\\u002Fwebt\\\u002Fa_\\\u002Flk\\\u002F9m\\\u002Fa_lk9mjkccjox-zccjrpfolmkmq.png\"}},\"description\":\"В июле в офисе РСХБ-Интех (технологической дочки Россельхозбанка) состоялся бесплатный митап для Java-разработчиков &mdash; RSHB Backend Dev Meetup. Обсудили Kotlin, G...\",\"url\":\"https:\\\u002F\\\u002Fhabr.com\\\u002Fru\\\u002Fcompanies\\\u002Frshb\\\u002Farticles\\\u002F747898\\\u002F#post-content-body\",\"about\":[\"c_rshb\",\"h_java\",\"h_go\",\"h_kotlin\",\"h_tech_events\",\"f_develop\",\"f_marketing\"],\"image\":[\"https:\\\u002F\\\u002Fhabr.com\\\u002Fshare\\\u002Fpublication\\\u002F747898\\\u002F40a66e3724e11c059037a3567fe3e72d\\\u002F\",\"https:\\\u002F\\\u002Fhabrastorage.org\\\u002Fgetpro\\\u002Fhabr\\\u002Fupload_files\\\u002F378\\\u002F543\\\u002F3c7\\\u002F3785433c7c3becbf71b603069ed177c7.jpeg\",\"https:\\\u002F\\\u002Fhabrastorage.org\\\u002Fgetpro\\\u002Fhabr\\\u002Fupload_files\\\u002F289\\\u002F38d\\\u002Fd2e\\\u002F28938dd2e4052e8f33d46c5117ef94b2.jpeg\",\"https:\\\u002F\\\u002Fhabrastorage.org\\\u002Fgetpro\\\u002Fhabr\\\u002Fupload_files\\\u002Fc2e\\\u002F172\\\u002Ff38\\\u002Fc2e172f3825d3df5b33c3338d8df6893.jpeg\",\"https:\\\u002F\\\u002Fhabrastorage.org\\\u002Fgetpro\\\u002Fhabr\\\u002Fupload_files\\\u002F2cb\\\u002F994\\\u002Fee1\\\u002F2cb994ee1ce1dc921e84ea0edccea145.jpeg\",\"https:\\\u002F\\\u002Fhabrastorage.org\\\u002Fgetpro\\\u002Fhabr\\\u002Fupload_files\\\u002F8e6\\\u002F598\\\u002Fe81\\\u002F8e6598e8146c2589f40b0d0a7e320d1d.jpeg\",\"https:\\\u002F\\\u002Fhabrastorage.org\\\u002Fgetpro\\\u002Fhabr\\\u002Fupload_files\\\u002F9c4\\\u002Fddf\\\u002F0d7\\\u002F9c4ddf0d703219aab5b967d36405d954.jpeg\"]}","metaDescription":"В июле в офисе РСХБ-Интех (технологической дочки Россельхозбанка) состоялся бесплатный митап для Java-разработчиков — RSHB Backend Dev Meetup . Обсудили Kotlin, Go, маппинг и разные аспекты...","mainImageUrl":null,"amp":true,"customTrackerLinks":[]},"polls":[],"commentsEnabled":{"status":true,"reason":null},"rulesRemindEnabled":false,"votesEnabled":true,"status":"published","plannedPublishTime":null,"checked":null,"hasPinnedComments":false,"format":"review","banner":null,"multiwidget":null,"multiwidgetUuid":null,"readingTime":19,"complexity":"medium","isEditorial":false,"allowedFeatures":{"isTestTargetAllow":false}}},"articlesIds":{},"isLoading":false,"pagesCount":{},"route":{},"reasonsList":null,"postReasonsList":null,"view":"list","lastVisitedRoute":{},"ssrCommentsArticleIds":[""],"viewedPosts":[],"myFeedFilter":{"complexity":"all","score":"all","types":["articles","posts","news"]},"myFeedIsApplyFilters":false,"myFeedIsForce":false,"karma":{"userReasonsList":null}},"authorContribution":{"authors":{}},"betaTest":{"currentAnnouncement":null,"announcements":{},"announcementCards":null,"announcementComments":{},"announcementCommentThreads":{},"announcementCommentingStatuses":{},"archivedList":[]},"authorStatistics":{"articleRefs":{},"articleIds":{},"pagesCount":{},"route":{},"viewsCount":[],"maxStatsCount":{}},"career":{"seoLandings":[],"hubs":""},"comments":{"articleComments":{},"articlePinnedComments":{},"searchCommentsResults":null,"pagesCount":null,"commentAccess":{},"scrollParents":{},"pageArticleComments":{"lastViewedComment":0,"postId":null,"lastCommentTimestamp":"","moderated":[],"moderatedIds":[],"commentRoute":"","idempotenceKey":""}},"companies":{"companyRefs":{"rshb":{"alias":"rshb","imageUrl":"\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fcompany\u002Fbe1\u002F662\u002F681\u002Fbe1662681fbd8bfedaae1206d2a6a19c.png","titleHtml":"РСХБ.цифра (Россельхозбанк)","descriptionHtml":"Меняем банк и сельское хозяйство","relatedData":null,"statistics":{"subscribersCount":26744,"rating":292.99,"invest":null,"postsCount":300,"threadsCount":133,"newsCount":220,"vacanciesCount":0,"employeesCount":71,"careerRating":4.29},"foundationDate":{"year":"2000","month":"03","day":"15"},"location":{"city":{"id":"447159","title":"Москва"},"region":{"id":"1885","title":"Москва и Московская обл."},"country":{"id":"168","title":"Россия"}},"siteUrl":"https:\u002F\u002Fwww.rshbdigital.ru","staffNumber":"свыше 10 000 человек","registrationDate":"2020-08-20T14:12:37+00:00","representativeUser":{"alias":"knyazevay","fullname":"Юлия Князева"},"contacts":[{"title":"Сайт","url":"https:\u002F\u002Fwww.rshb.ru\u002F","siteTitle":"Россельхозбанк","favicon":"https:\u002F\u002Fwww.rshb.ru\u002Ffavicon.ico"},{"title":"ВКонтакте","url":"https:\u002F\u002Fvk.com\u002Frshbru","siteTitle":"VK | VK","favicon":"https:\u002F\u002Fm.vk.com\u002Fimages\u002Ficons\u002Ffavicons\u002Ffav_logo.ico?10"},{"title":"Telegram","url":"https:\u002F\u002Ftelegram.me\u002Frshb_tg","siteTitle":"Telegram: Contact @rshb_tg","favicon":"https:\u002F\u002Ftelegram.org\u002Fimg\u002Fwebsite_icon.svg?4"},{"title":"Сайт","url":"https:\u002F\u002Frshbdigital.ru\u002F","siteTitle":"РСХБ в цифре","favicon":"https:\u002F\u002Frshbdigital.ru\u002Ffavicon.svg"},{"title":"Telegram","url":"https:\u002F\u002Ftelegram.me\u002Frshbdigital","siteTitle":"Telegram: Contact @rshbdigital","favicon":"https:\u002F\u002Ftelegram.org\u002Fimg\u002Fwebsite_icon.svg?4"},{"title":"Сайт","url":"https:\u002F\u002Frutube.ru\u002Fchannel\u002F24967187\u002F","siteTitle":"РСХБ.цифра на RUTUBE: 219 видео – смотреть онлайн и бесплатно (24967187)","favicon":"https:\u002F\u002Fstatic.rutube.ru\u002Fstatic\u002Fimg\u002Ffavicon-icons\u002Fv3\u002Ffavicon.ico"}],"settings":{"analyticsSettings":[{"type":"ym","trackingId":"97059584"}],"branding":{"imageUrl":"\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fbranding\u002F0ed\u002F4f9\u002F317\u002F0ed4f9317682d68228bf9d6c2581df21.png","linkUrl":"https:\u002F\u002Frshbdigital.ru\u002F","pixelUrl":null,"uuid":"0193de4d-093f-727c-9606-82329a65e6a5"},"status":"active","isStartup":false,"hasActivePolls":false,"shouldShowHabrAds":false},"metadata":{"titleHtml":"РСХБ.цифра (Россельхозбанк), Москва - Меняем банк и сельское хозяйство с 15 марта 2000 г.","title":"РСХБ.цифра (Россельхозбанк), Москва - Меняем банк и сельское хозяйство с 15 марта 2000 г.","keywords":["ml","ии","platform","git","paas","ci","nexus","gitflow","git workflow","gitlab-ci","gitops"],"descriptionHtml":"300 статей от авторов компании РСХБ.цифра (Россельхозбанк)","description":"300 статей от авторов компании РСХБ.цифра (Россельхозбанк)"},"aDeskSettings":null,"careerAlias":"rshb","schoolAlias":null}},"companyIds":{},"companyTopIds":{},"pagesCount":{},"companyProfiles":{},"companiesCategories":[],"companiesCategoriesTotalCount":0,"companiesWidgets":{},"companiesWorkers":{},"companiesFans":{},"multiwidgets":{},"route":{},"isLoading":false,"companyWorkersLoading":false,"companyFansLoading":false,"multiwidgetLoading":false,"vacancies":{},"companiesGalleries":{},"companiesBanners":{},"companiesLandingVacancies":{},"companiesTechnologies":{},"workplaceInfo":null},"companyAdmin":{"companyInfo":null,"companyInfoLoading":false,"faqArticles":null,"brandingPreviewImageUrl":null,"jivoStatus":0,"adminNotifications":null,"availableInvitesCount":{}},"companyAdd":{"currentStep":"","stepsData":{},"uncompletedSteps":[],"isStepLoading":true,"isStepCommitting":false,"isInitialized":false,"agreementContent":""},"companiesContribution":{"hubs":{},"flows":{},"companyRefs":{}},"companyHubsContribution":{"contributionRefs":{"hubRefs":{},"hubIds":{}}},"conversation":{"messages":[],"respondent":null,"isLoadMore":false},"conversations":{"conversations":[],"pagesCount":0},"docs":{"menu":{},"articles":{},"mainMenu":[],"loading":{"main":false,"dropdown":false,"article":false}},"feature":{"isProbablyVisible":true},"fixedBanner":{"isArticleStickyPanelVisible":false,"isArticleStickyPanelAtTheBottom":false,"isFixedBannerVisible":false,"isStickyPanelIconsHidden":false},"flows":{"flows":[{"id":"1","alias":"develop","title":"Разработка","titleHtml":"Разработка","route":{"name":"FLOW_PAGE","params":{"flowName":"develop"}}},{"id":"6","alias":"admin","title":"Администрирование","titleHtml":"Администрирование","route":{"name":"FLOW_PAGE","params":{"flowName":"admin"}}},{"id":"2","alias":"design","title":"Дизайн","titleHtml":"Дизайн","route":{"name":"FLOW_PAGE","params":{"flowName":"design"}}},{"id":"3","alias":"management","title":"Менеджмент","titleHtml":"Менеджмент","route":{"name":"FLOW_PAGE","params":{"flowName":"management"}}},{"id":"4","alias":"marketing","title":"Маркетинг","titleHtml":"Маркетинг","route":{"name":"FLOW_PAGE","params":{"flowName":"marketing"}}},{"id":"7","alias":"popsci","title":"Научпоп","titleHtml":"Научпоп","route":{"name":"FLOW_PAGE","params":{"flowName":"popsci"}}}],"updates":{}},"global":{"isPwa":false,"device":"mobile","isHabrCom":true,"requestId":"a53229e43e4f789b0b111d3563ceb711"},"hubs":{"hubRefs":{},"hubIds":{},"pagesCount":{},"isLoading":false,"route":{}},"hubsBlock":{"hubRefs":{},"hubIds":{}},"i18n":{"fl":"ru","hl":"ru"},"info":{"welcomePage":{},"isLoading":true},"location":{"urlStruct":{"protocol":null,"slashes":null,"auth":null,"host":null,"port":null,"hostname":null,"hash":null,"query":{},"pathname":"\u002Fru\u002Fcompanies\u002Frshb\u002Farticles\u002F747898\u002F","path":"\u002Fru\u002Fcompanies\u002Frshb\u002Farticles\u002F747898\u002F","href":"\u002Fru\u002Fcompanies\u002Frshb\u002Farticles\u002F747898\u002F"}},"me":{"user":null,"uuid":null,"ppgDemanded":false,"karmaResetInfo":{"canReincarnate":null,"wasReincarnated":null,"currentScore":null},"notes":null,"userUpdates":{"feeds":{"newPostsCount":null,"newThreadsCount":null,"newNewsCount":null,"newCount":null},"conversationUnreadCount":0}},"mostReadingList":{"mostReadingListIds":[],"mostReadingListRefs":null,"promoPost":null},"onboarding":{"currentStep":null,"stepsData":{},"stepsErrors":{},"completedSteps":[],"isStepCommitting":false,"isCommitDisabled":true},"ppa":{"articles":{},"card":null,"transactions":null,"totalTransactions":null,"isAccessible":null},"projectsBlocks":{"activeBlocks":{"vacancies":"project-block-company-article"}},"promoData":{"isLoading":false,"hasLoaded":false,"featurer":null,"megaposts":null,"promoLinks":null,"promoPosts":null,"sticker":null},"publicationStatistics":{"statsInfo":{},"statsFunnels":{},"statsGraph":{},"defaultSuggest":{},"suggest":{},"timeTracker":{},"isTrackingActivity":false,"isUserActive":true,"otherPublicationStats":{}},"pullRefresh":{"shouldRefresh":false},"sandbox":{"articleIds":[],"articleRefs":{},"pagesCount":null,"route":{},"lastVisitedRoute":{},"isLoading":false},"search":{"searchQueryError":null},"settingsOther":{"inputs":{"uiLang":{"errors":[],"ref":null,"value":""},"articlesLangEnglish":{"errors":[],"ref":null,"value":false},"articlesLangRussian":{"errors":[],"ref":null,"value":false},"agreement":{"errors":[],"ref":null,"value":false},"email":{"errors":[],"ref":null,"value":true},"digest":{"errors":[],"ref":null,"value":true}}},"similarList":{"similarListIds":[],"similarListRefs":null},"ssr":{"error":null,"isDataLoaded":true,"isDataLoading":false,"isHydrationFailed":false,"isServer":false},"stories":{"stories":[{"id":"story-998","author":{"logo":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F91a\u002F166\u002F49f\u002F91a16649f9ef89302a5a56cfa22a451d.png","title":"Яндекс Практикум","link":"https:\u002F\u002Fu.habr.com\u002Fstories_up"},"title":"Как расти на работе?","lang":"ru","startTime":"2025-03-18T18:45:00+03:00","finishTime":"2025-03-31T19:00:00+03:00","slides":[{"id":"story-998_1","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fbf4\u002F911\u002F7e6\u002Fbf49117e637ff2099b3944f8803cd7a3.png","button":null},{"id":"story-998_2","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F3e3\u002Fc84\u002Fe83\u002F3e3c84e8330ea1ddf72e9d310457ed2f.png","button":{"title":"Расти в карьере","link":"https:\u002F\u002Fu.habr.com\u002Fstories_up","colorType":"light"}},{"id":"story-998_3","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F84b\u002F533\u002F3c3\u002F84b5333c3e77e8dac62a8b50d042acb9.png","button":{"title":"Расти в карьере","link":"https:\u002F\u002Fu.habr.com\u002Fstories_up","colorType":"light"}},{"id":"story-998_4","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F257\u002Feb0\u002F2be\u002F257eb02bea1777e13f3e647cae6e06cd.png","button":{"title":"Расти в карьере","link":"https:\u002F\u002Fu.habr.com\u002Fstories_up","colorType":"light"}},{"id":"story-998_5","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F858\u002F086\u002F0ed\u002F8580860ed3497c043c04f9a42054d74f.png","button":{"title":"Расти в карьере","link":"https:\u002F\u002Fu.habr.com\u002Fstories_up","colorType":"light"}},{"id":"story-998_6","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fcdf\u002F32f\u002F387\u002Fcdf32f38777f046c063b5182f4125e14.png","button":{"title":"Расти в карьере","link":"https:\u002F\u002Fu.habr.com\u002Fstories_up","colorType":"light"}},{"id":"story-998_7","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fd48\u002Ff2d\u002F0e2\u002Fd48f2d0e2ecd7d746d738191bb913d8f.png","button":{"title":"Расти в карьере","link":"https:\u002F\u002Fu.habr.com\u002Fstories_up","colorType":"light"}},{"id":"story-998_8","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fb38\u002Ffd7\u002Fee0\u002Fb38fd7ee04848bf3b058be7403438bd1.png","button":{"title":"Расти в карьере","link":"https:\u002F\u002Fu.habr.com\u002Fstories_up","colorType":"light"}},{"id":"story-998_9","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F79e\u002Feaa\u002F9d8\u002F79eeaa9d8af5a288ad42bd9d63b5793a.png","button":{"title":"Расти в карьере","link":"https:\u002F\u002Fu.habr.com\u002Fstories_up","colorType":"light"}},{"id":"story-998_10","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fcdc\u002F17e\u002F385\u002Fcdc17e38582dc67838b9abfb200d982e.png","button":{"title":"Расти в карьере","link":"https:\u002F\u002Fu.habr.com\u002Fstories_up","colorType":"light"}}]},{"id":"story-996","author":{"logo":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fe63\u002F36d\u002Fa24\u002Fe6336da24460ab6b9fbc347d03eb263a.png","title":"Хабр","link":null},"title":"Здоровье айтишника","lang":"ru","startTime":"2025-03-17T10:22:00+03:00","finishTime":"2025-04-13T10:22:00+03:00","slides":[{"id":"story-996_1","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fb7c\u002F6de\u002F8ea\u002Fb7c6de8ea6789dbc30f071716172b6dd.jpg","button":null},{"id":"story-996_2","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F2e7\u002F88a\u002F0fe\u002F2e788a0fe61729ca8b23eb59069c844f.jpg","button":{"title":"Личный опыт","link":"https:\u002F\u002Fu.habr.com\u002Fzd-1","colorType":"light"}},{"id":"story-996_3","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fb93\u002F6f4\u002F256\u002Fb936f425653b84fa60ab00d09f78c543.jpg","button":{"title":"Как это было","link":"https:\u002F\u002Fu.habr.com\u002Fzd-2","colorType":"light"}},{"id":"story-996_4","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fc10\u002Fd14\u002Ff5a\u002Fc10d14f5a4859fe10baecbcc2bcb8828.jpg","button":{"title":"Шея в фокусе","link":"https:\u002F\u002Fu.habr.com\u002Fzd-3","colorType":"dark"}},{"id":"story-996_5","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F535\u002Fe1b\u002F77a\u002F535e1b77a9eb896262ad73321f2ad99f.jpg","button":{"title":"Фотоинструкция","link":"https:\u002F\u002Fu.habr.com\u002Fzd-4","colorType":"light"}},{"id":"story-996_6","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F569\u002Fc39\u002F49f\u002F569c3949f5b330ea85d4a1864f481c3d.jpg","button":{"title":"Сидите (не)правильно","link":"https:\u002F\u002Fu.habr.com\u002Fzd-5","colorType":"dark"}},{"id":"story-996_7","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F1f2\u002F1de\u002Fdbf\u002F1f21dedbf2902bc4061a75b839b63595.jpg","button":{"title":"Журнал изменений","link":"https:\u002F\u002Fu.habr.com\u002Fzd-6","colorType":"dark"}},{"id":"story-996_8","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F95a\u002F164\u002F21b\u002F95a16421badc3a9f1135309ab0c42c41.jpg","button":{"title":"Альтернатива","link":"https:\u002F\u002Fu.habr.com\u002Fzd-7","colorType":"light"}},{"id":"story-996_9","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F624\u002F027\u002F54d\u002F62402754d311798af44bcfe7f9abfedc.jpg","button":{"title":"Хроника поисков","link":"https:\u002F\u002Fu.habr.com\u002Fzd-8","colorType":"dark"}}]},{"id":"story-992","author":{"logo":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F3fe\u002F2fc\u002Fb05\u002F3fe2fcb05df852d7e1e00d44e54e39ae.png","title":"Сезоны Хабра","link":"https:\u002F\u002Fu.habr.com\u002Ffnstories"},"title":"Угадайте будущее в новом сезоне","lang":"ru","startTime":"2025-03-12T19:15:00+03:00","finishTime":"2025-03-31T23:56:00+03:00","slides":[{"id":"story-992_1","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fc56\u002Faf5\u002Fc43\u002Fc56af5c4377f7f7b94f7b6ad20fc92c3.png","button":{"title":"А что за сезон?","link":"https:\u002F\u002Fu.habr.com\u002Ffnstories","colorType":"light"}},{"id":"story-992_2","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F8fa\u002Fde7\u002F65d\u002F8fade765d99207f31c597283ae6ce912.png","button":{"title":"Какие темы нужны","link":"https:\u002F\u002Fu.habr.com\u002Ffnstories","colorType":"dark"}},{"id":"story-992_3","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F23e\u002F7b9\u002Fb24\u002F23e7b9b24cb056d1a42e8d31ccea16ce.png","button":{"title":"Сезон будущего ИИ","link":"https:\u002F\u002Fu.habr.com\u002Ffnstories","colorType":"dark"}},{"id":"story-992_4","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F27b\u002Fbfc\u002Fa18\u002F27bbfca18e656ee0122b5cb8eb2cb502.png","button":{"title":"Все правила сезона","link":"https:\u002F\u002Fu.habr.com\u002Ffnstories","colorType":"dark"}},{"id":"story-992_5","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F1e0\u002F6c6\u002Ff33\u002F1e06c6f33e703bbd2b2ae3baee3376fd.png","button":{"title":"Как участвовать","link":"https:\u002F\u002Fu.habr.com\u002Ffnstories","colorType":"dark"}}]},{"id":"story-990","author":{"logo":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F282\u002Fe80\u002Fbf1\u002F282e80bf1b73484126ed53c6f3e42692.png","title":"Aeza","link":"https:\u002F\u002Fu.habr.com\u002FI72qi"},"title":"С праздником весны!","lang":"ru","startTime":"2025-03-09T10:15:00+03:00","finishTime":"2025-03-30T23:59:00+03:00","slides":[{"id":"story-990_1","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F064\u002F9dd\u002Ff59\u002F0649ddf5949cae6c9342fb62034a36ac.png","button":null},{"id":"story-990_2","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F05f\u002F96b\u002F25e\u002F05f96b25e910c32256ee0b1916f21380.png","button":{"title":"Семейная история","link":"https:\u002F\u002Fu.habr.com\u002Fey2bY","colorType":"light"}},{"id":"story-990_3","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fcd1\u002Ff5d\u002F921\u002Fcd1f5d921bb9489ac11727272660bdb6.png","button":{"title":"Движущиеся картинки","link":"https:\u002F\u002Fu.habr.com\u002FWLKXU","colorType":"light"}},{"id":"story-990_4","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fb55\u002Fd45\u002Fec5\u002Fb55d45ec50e53275c60d16ea886a0672.png","button":{"title":"Личный опыт","link":"https:\u002F\u002Fu.habr.com\u002FSxrki","colorType":"light"}},{"id":"story-990_5","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Ffa7\u002F1ce\u002Ffca\u002Ffa71cefca5ed0a3fe8b50bd703b3605f.png","button":{"title":"Алгоритм","link":"https:\u002F\u002Fu.habr.com\u002Ftbz2p","colorType":"light"}},{"id":"story-990_6","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F435\u002F89d\u002Ff90\u002F43589df9018846cc6a8eed986226b252.png","button":{"title":"Выбрать сценарий","link":"https:\u002F\u002Fu.habr.com\u002F0RCPk","colorType":"light"}},{"id":"story-990_7","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F514\u002F5f8\u002F619\u002F5145f86194ad48dad48a846b42af0f93.png","button":{"title":"Jiraзамещение","link":"https:\u002F\u002Fu.habr.com\u002FEwhYq","colorType":"light"}},{"id":"story-990_8","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F439\u002Fa83\u002Fae7\u002F439a83ae78f7ef711e3b9bbed1ec26c5.png","button":{"title":"8 вещей","link":"https:\u002F\u002Fu.habr.com\u002FVTv2r","colorType":"light"}},{"id":"story-990_9","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F02d\u002F783\u002F2f7\u002F02d7832f7b1c95d88bff9f34209e204a.png","button":{"title":"Интерфейсы","link":"https:\u002F\u002Fu.habr.com\u002FUFOMZ","colorType":"light"}},{"id":"story-990_10","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F0cb\u002Ff7f\u002F0d9\u002F0cbf7f0d905d486ce4ff82bc939b21d5.png","button":{"title":"Стикеры ваши","link":"https:\u002F\u002Fu.habr.com\u002FoA1K7","colorType":"light"}}]},{"id":"story-984","author":{"logo":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F648\u002F61b\u002F9ae\u002F64861b9aecb7c474cd94063f98045541.png","title":"Хабр","link":null},"title":"Всегда котов!","lang":"ru","startTime":"2025-03-01T00:01:09+03:00","finishTime":"2025-03-23T16:21:00+03:00","slides":[{"id":"story-984_1","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fc06\u002Fc21\u002F93f\u002Fc06c2193ff34362ac2af782cf2571f55.png","button":null},{"id":"story-984_2","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fb68\u002F15f\u002F763\u002Fb6815f7630b9c015b1e67efb5bdf12d4.jpg","button":{"title":"Сделать purrrr","link":"https:\u002F\u002Fu.habr.com\u002Fj4DN1","colorType":"light"}},{"id":"story-984_3","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F550\u002F76e\u002Fd7a\u002F55076ed7a0954e243f944fc2f330623a.png","button":{"title":"Тыгыдык","link":"https:\u002F\u002Fu.habr.com\u002Fya360_kotov","colorType":"dark"}},{"id":"story-984_4","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F2fb\u002F23b\u002F06c\u002F2fb23b06cf294c2050104b2aef589788.jpg","button":{"title":"Исследование","link":"https:\u002F\u002Fu.habr.com\u002FbO3r0","colorType":"light"}},{"id":"story-984_5","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Ff50\u002F50f\u002F0ae\u002Ff5050f0aeea1335c4f0544c1863f8342.jpg","button":{"title":"Детали проекта","link":"https:\u002F\u002Fu.habr.com\u002FQJmhe","colorType":"light"}},{"id":"story-984_6","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F825\u002F3dd\u002F5f5\u002F8253dd5f5c19dd061578f1d09310a45f.jpg","button":{"title":"Эксперименты","link":"https:\u002F\u002Fu.habr.com\u002FVaOdo","colorType":"light"}},{"id":"story-984_7","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F3fb\u002Fc92\u002F0f9\u002F3fbc920f9ea81eca2c1c027ff77fc659.jpg","button":{"title":"Это не мем","link":"https:\u002F\u002Fu.habr.com\u002F0Wb3p","colorType":"light"}},{"id":"story-984_8","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F2b4\u002F794\u002Fc33\u002F2b4794c33844e60aad9468018fd132cd.jpg","button":{"title":"В засаде","link":"https:\u002F\u002Fu.habr.com\u002FnasCD","colorType":"dark"}}]}]},"technotext":{"years":[],"technotextDocForNominees":null,"technotextDocForWinners":null,"technotextInfo":{},"technotextInfoLoading":false,"technotextWinners":{},"technotextWinnersLoading":false},"userHubsContribution":{"contributionRefs":{"hubRefs":{},"hubIds":{}}},"userInvites":{"availableInvites":0,"usedInvitesIds":[],"usedInvitesRefs":{},"usedInvitesPagesCount":0,"unusedInvitesIds":[],"unusedInvitesRefs":{},"unusedInvitesPagesCount":0},"userVotes":{"karmaVotesList":[],"karmaVotesPagesCount":null,"karmaVotesListLoading":false,"commentsVotesList":[],"commentsVotesPagesCount":null,"commentsVotesListLoading":false,"postsVotesList":[],"postsVotesPagesCount":null,"postsVotesListLoading":false,"userVotesList":[],"userVotesPagesCount":null,"userVotesListLoading":false},"users":{"authorRefs":{},"authorIds":{},"pagesCount":{},"authorProfiles":{"rshb_tsyfra":{"alias":"RSHB_tsyfra","badgets":[{"title":"Захабренный","description":"Пользователь с кармой \u003E0","url":null,"isRemovable":false},{"title":"Техноавтор 2023","description":"Участник конкурса «Технотекст 2023»","url":null,"isRemovable":false}],"aboutHtml":"","contacts":[],"invitedBy":{"issuerLogin":"knyazevay","timeCreated":"2023-04-17T11:29:05+00:00"},"careerProfile":null,"companies":{"pagesCount":1,"companyIds":["rshb"],"companyRefs":{"rshb":{"id":"7630","alias":"rshb","titleHtml":"РСХБ.цифра (Россельхозбанк)","descriptionHtml":"Меняем банк и сельское хозяйство","imageUrl":"\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fcompany\u002Fbe1\u002F662\u002F681\u002Fbe1662681fbd8bfedaae1206d2a6a19c.png","relatedData":null,"statistics":{"subscribersCount":26744,"rating":292.99,"invest":null},"commonHubs":[]}}}}},"userHubs":{},"userInvitations":{},"authorFollowers":{},"authorFollowed":{},"userSpecialization":{},"karmaStats":[],"statistics":null,"isLoading":false,"authorFollowersLoading":false,"authorFollowedLoading":false,"userHubsLoading":false,"userInvitationsLoading":false,"route":{}},"viewport":{"prevScrollY":{},"scrollY":0,"width":0},"tracker":{"notificationsLoading":false,"notificationsList":[],"notificationsPageCount":0,"pendingMarkNotificationsRead":[],"publicationsLoading":true,"publicationsList":[],"publicationsPageCount":0,"pendingDeletePublications":false,"pendingMarkPublicationsRead":false},"events":{"eventRefs":{},"eventIds":[],"pagesCount":0,"categories":[],"cities":[],"actualEvents":null,"currentEvent":null,"eventsFilter":{"city":"all","timeStarted":null,"timeEnded":null}},"wysiwyg":{"WYSIWYGRulesRefs":null}};(function(){var s;(s=document.currentScript||document.scripts[document.scripts.length-1]).parentNode.removeChild(s);}());</script><script src="https://assets.habr.com/habr-web/js/chunk-vendors.3b11d41f.js" defer></script><script src="https://assets.habr.com/habr-web/js/app.7a97ea6d.js" defer></script></div>
    <div id="overlays"><!----><!--teleport anchor--><!----><!--teleport anchor--><!----><!--teleport anchor--><!----><!--teleport anchor--><!----><!--teleport anchor--><!----><!--teleport anchor--></div>
    
    
    <script async src="https://www.googletagmanager.com/gtag/js?id=G-S28W1WC23F"></script>
    <script>
      window.dataLayer = window.dataLayer || [];
      function gtag(){dataLayer.push(arguments);}
      gtag('js', new Date());
    </script>
  
  <script type="text/javascript" >
    (function(m,e,t,r,i,k,a){m[i]=m[i]||function(){(m[i].a=m[i].a||[]).push(arguments)};
    m[i].l=1*new Date();k=e.createElement(t),a=e.getElementsByTagName(t)[0],k.async=1,k.src=r,a.parentNode.insertBefore(k,a)})
    (window, document, "script", "https://mc.yandex.ru/metrika/tag.js", "ym");

  </script>
    <script type="text/javascript">
      window.addEventListener('load', function () {
        setTimeout(() => {
          const img = new Image();
          img.src = 'https://vk.com/rtrg?p=VK-RTRG-421343-57vKE';
        }, 0);
      });
    </script>
  
    </body>

    </html>
