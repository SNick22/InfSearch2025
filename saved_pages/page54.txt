<!DOCTYPE html>
<html lang="ru">

  <head>
    <title>Использование Kotlin и WebFlux для выполнения задач ML в Apache Spark на GPU &#x2F; Хабр</title>
<meta property="fb:app_id" content="444736788986613">
<meta property="fb:pages" content="472597926099084">
<meta name="twitter:card" content="summary_large_image">
<meta name="twitter:site" content="@habr_com">
<meta property="og:site_name" content="Хабр">
<link href="https://habr.com/ru/rss/post/752702/?fl=ru" type="application/rss+xml" title rel="alternate" name="rss">
<link href="https://habr.com/ru/articles/752702/" rel="canonical" data-hid="e3fa780">
<link rel="image_src" href="https://habrastorage.org/getpro/habr/upload_files/534/8ab/c24/5348abc24b103b7cd01511262690a129.png" data-hid="2a79c45">
<link rel="amphtml" href="https://habr.com/ru/amp/publications/752702/">
<meta property="og:title" content="Использование Kotlin и WebFlux для выполнения задач ML в Apache Spark на GPU">
<meta name="twitter:title" content="Использование Kotlin и WebFlux для выполнения задач ML в Apache Spark на GPU">
<meta name="aiturec:title" content="Использование Kotlin и WebFlux для выполнения задач ML в Apache Spark на GPU">
<meta name="description" content="Это третья статья по теме реализации масштабируемой системы для выполнения задач распределенного машинного обучения на GPU с использованием Java, Kotlin, Spring и Spark. Список всех статей: Варианты...">
<meta itemprop="description" content="Это третья статья по теме реализации масштабируемой системы для выполнения задач распределенного машинного обучения на GPU с использованием Java, Kotlin, Spring и Spark. Список всех статей: Варианты...">
<meta property="og:description" content="Это третья статья по теме реализации масштабируемой системы для выполнения задач распределенного машинного обучения на GPU с использованием Java, Kotlin, Spring и Spark. Список всех статей: Варианты...">
<meta name="twitter:description" content="Это третья статья по теме реализации масштабируемой системы для выполнения задач распределенного машинного обучения на GPU с использованием Java, Kotlin, Spring и Spark. Список всех статей: Варианты...">
<meta property="aiturec:description" content="Это третья статья по теме реализации масштабируемой системы для выполнения задач распределенного машинного обучения на GPU с использованием Java, Kotlin, Spring и Spark. Список всех статей: Варианты...">
<meta itemprop="image" content="https://habrastorage.org/getpro/habr/upload_files/534/8ab/c24/5348abc24b103b7cd01511262690a129.png">
<meta property="og:image" content="https://habrastorage.org/getpro/habr/upload_files/534/8ab/c24/5348abc24b103b7cd01511262690a129.png">
<meta property="og:image:width" content="1200">
<meta property="og:image:height" content="630">
<meta property="aiturec:image" content="https://habrastorage.org/getpro/habr/upload_files/534/8ab/c24/5348abc24b103b7cd01511262690a129.png">
<meta name="twitter:image" content="https://habrastorage.org/getpro/habr/upload_files/534/8ab/c24/5348abc24b103b7cd01511262690a129.png">
<meta property="vk:image" content="https://habrastorage.org/getpro/habr/upload_files/534/8ab/c24/5348abc24b103b7cd01511262690a129.png?format=vk">
<meta property="vk:image" content="https://habrastorage.org/getpro/habr/upload_files/534/8ab/c24/5348abc24b103b7cd01511262690a129.png?format=vk">
<meta property="aiturec:item_id" content="752702">
<meta property="aiturec:datetime" content="2023-08-05T17:40:07.000Z">
<meta content="https://habr.com/ru/articles/752702/" property="og:url">
<meta property="og:type" content="article">
<meta property="og:locale" content="ru_RU">
<meta property="og:image:width" content="1200">
<meta property="og:image:height" content="630">
<meta name="keywords" content="java, kotlin, ml, cuda, gpu, spring, Сезон java one love">
<script type="application/ld+json" data-hid="1e0f0a2">{"@context":"http:\/\/schema.org","@type":"Article","mainEntityOfPage":{"@type":"WebPage","@id":"https:\/\/habr.com\/ru\/articles\/752702\/"},"headline":"Использование Kotlin и WebFlux для выполнения задач ML в Apache Spark на GPU","datePublished":"2023-08-05T20:40:07+03:00","dateModified":"2023-08-18T21:29:05+03:00","author":{"@type":"Person","name":"Александр Питасов"},"publisher":{"@type":"Organization","name":"Habr","logo":{"@type":"ImageObject","url":"https:\/\/habrastorage.org\/webt\/a_\/lk\/9m\/a_lk9mjkccjox-zccjrpfolmkmq.png"}},"description":"Это третья статья по теме реализации масштабируемой системы для выполнения задач распределенного машинного обучения на GPU с использованием Java, Kotlin, Spring...","url":"https:\/\/habr.com\/ru\/articles\/752702\/#post-content-body","about":["h_java","h_kotlin","f_develop"],"image":["https:\/\/habr.com\/share\/publication\/752702\/343bdef8033f18bc49e84f962f0cf232\/","https:\/\/habrastorage.org\/getpro\/habr\/upload_files\/5c1\/63b\/20e\/5c163b20e6ab80ee4f28f0f2d8e28d7d.png","https:\/\/habrastorage.org\/getpro\/habr\/upload_files\/e08\/f3c\/48d\/e08f3c48d26d8cce66809170930a50b7.png","https:\/\/habrastorage.org\/getpro\/habr\/upload_files\/7e1\/064\/f04\/7e1064f04404b72302373b5dd2866755.png","https:\/\/habrastorage.org\/getpro\/habr\/upload_files\/8d5\/d2e\/23c\/8d5d2e23c9a420c265176e3e538629a3.png","https:\/\/habrastorage.org\/getpro\/habr\/upload_files\/eb3\/7fa\/e74\/eb37fae743e1bb4f63e556859398410c.png","https:\/\/habrastorage.org\/getpro\/habr\/upload_files\/0e1\/ed9\/277\/0e1ed92770b663be5470a9d0bd7de83f.png","https:\/\/habrastorage.org\/getpro\/habr\/upload_files\/7c5\/fbd\/ec8\/7c5fbdec89c06d57889dec93f531219c.png","https:\/\/habrastorage.org\/getpro\/habr\/upload_files\/fd8\/ac6\/471\/fd8ac6471e893d7b9c44a5b69718a8c6.png","https:\/\/habrastorage.org\/getpro\/habr\/upload_files\/43c\/9a1\/f77\/43c9a1f77e2ab983ecd185a569e79d29.png","https:\/\/habrastorage.org\/getpro\/habr\/upload_files\/0a5\/529\/1a5\/0a55291a5dd00b285a5a6d8b0dbb5019.png","https:\/\/habrastorage.org\/getpro\/habr\/upload_files\/6b8\/0b7\/6eb\/6b80b76eb36d769f28e798de98753e98.png","https:\/\/habrastorage.org\/getpro\/habr\/upload_files\/98f\/2bd\/fb3\/98f2bdfb3f7d10d28fea2cc7e56ce918.png","https:\/\/habrastorage.org\/getpro\/habr\/upload_files\/ad5\/b75\/e4f\/ad5b75e4f9174de4db9df2c54e786ee9.png","https:\/\/habrastorage.org\/getpro\/habr\/upload_files\/a1c\/78f\/d8d\/a1c78fd8d21977140396f9080f9b9d0d.png"]}</script>
    <meta charset="UTF-8">
    <meta name="viewport"
      content="width=device-width,initial-scale=1.0,viewport-fit=cover,maximum-scale=1,user-scalable=0">
    <meta name="referrer" content="unsafe-url">
    <style>
      /* cyrillic-ext */
      @font-face {
        font-family: 'Fira Sans';
        font-style: normal;
        font-weight: 400;
        font-display: swap;
        src: url(https://fonts.gstatic.com/s/firasans/v17/va9E4kDNxMZdWfMOD5VvmojLazX3dGTP.woff2) format('woff2');
        unicode-range: U+0460-052F, U+1C80-1C88, U+20B4, U+2DE0-2DFF, U+A640-A69F, U+FE2E-FE2F;
      }

      /* cyrillic */
      @font-face {
        font-family: 'Fira Sans';
        font-style: normal;
        font-weight: 400;
        font-display: swap;
        src: url(https://fonts.gstatic.com/s/firasans/v17/va9E4kDNxMZdWfMOD5Vvk4jLazX3dGTP.woff2) format('woff2');
        unicode-range: U+0301, U+0400-045F, U+0490-0491, U+04B0-04B1, U+2116;
      }

      /* latin-ext */
      @font-face {
        font-family: 'Fira Sans';
        font-style: normal;
        font-weight: 400;
        font-display: swap;
        src: url(https://fonts.gstatic.com/s/firasans/v17/va9E4kDNxMZdWfMOD5VvmYjLazX3dGTP.woff2) format('woff2');
        unicode-range: U+0100-02AF, U+0304, U+0308, U+0329, U+1E00-1E9F, U+1EF2-1EFF, U+2020, U+20A0-20AB, U+20AD-20C0, U+2113, U+2C60-2C7F, U+A720-A7FF;
      }

      /* latin */
      @font-face {
        font-family: 'Fira Sans';
        font-style: normal;
        font-weight: 400;
        font-display: swap;
        src: url(https://fonts.gstatic.com/s/firasans/v17/va9E4kDNxMZdWfMOD5Vvl4jLazX3dA.woff2) format('woff2');
        unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+0304, U+0308, U+0329, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;
      }

      /* cyrillic-ext */
      @font-face {
        font-family: 'Fira Sans';
        font-style: normal;
        font-weight: 500;
        font-display: swap;
        src: url(https://fonts.gstatic.com/s/firasans/v17/va9B4kDNxMZdWfMOD5VnZKveSxf6Xl7Gl3LX.woff2) format('woff2');
        unicode-range: U+0460-052F, U+1C80-1C88, U+20B4, U+2DE0-2DFF, U+A640-A69F, U+FE2E-FE2F;
      }

      /* cyrillic */
      @font-face {
        font-family: 'Fira Sans';
        font-style: normal;
        font-weight: 500;
        font-display: swap;
        src: url(https://fonts.gstatic.com/s/firasans/v17/va9B4kDNxMZdWfMOD5VnZKveQhf6Xl7Gl3LX.woff2) format('woff2');
        unicode-range: U+0301, U+0400-045F, U+0490-0491, U+04B0-04B1, U+2116;
      }

      /* latin-ext */
      @font-face {
        font-family: 'Fira Sans';
        font-style: normal;
        font-weight: 500;
        font-display: swap;
        src: url(https://fonts.gstatic.com/s/firasans/v17/va9B4kDNxMZdWfMOD5VnZKveSBf6Xl7Gl3LX.woff2) format('woff2');
        unicode-range: U+0100-02AF, U+0304, U+0308, U+0329, U+1E00-1E9F, U+1EF2-1EFF, U+2020, U+20A0-20AB, U+20AD-20C0, U+2113, U+2C60-2C7F, U+A720-A7FF;
      }

      /* latin */
      @font-face {
        font-family: 'Fira Sans';
        font-style: normal;
        font-weight: 500;
        font-display: swap;
        src: url(https://fonts.gstatic.com/s/firasans/v17/va9B4kDNxMZdWfMOD5VnZKveRhf6Xl7Glw.woff2) format('woff2');
        unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+0304, U+0308, U+0329, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;
      }

      /* cyrillic-ext */
      @font-face {
        font-family: 'Fira Sans';
        font-style: normal;
        font-weight: 700;
        font-display: swap;
        src: url(https://fonts.gstatic.com/s/firasans/v17/va9B4kDNxMZdWfMOD5VnLK3eSxf6Xl7Gl3LX.woff2) format('woff2');
        unicode-range: U+0460-052F, U+1C80-1C88, U+20B4, U+2DE0-2DFF, U+A640-A69F, U+FE2E-FE2F;
      }

      /* cyrillic */
      @font-face {
        font-family: 'Fira Sans';
        font-style: normal;
        font-weight: 700;
        font-display: swap;
        src: url(https://fonts.gstatic.com/s/firasans/v17/va9B4kDNxMZdWfMOD5VnLK3eQhf6Xl7Gl3LX.woff2) format('woff2');
        unicode-range: U+0301, U+0400-045F, U+0490-0491, U+04B0-04B1, U+2116;
      }

      /* latin-ext */
      @font-face {
        font-family: 'Fira Sans';
        font-style: normal;
        font-weight: 700;
        font-display: swap;
        src: url(https://fonts.gstatic.com/s/firasans/v17/va9B4kDNxMZdWfMOD5VnLK3eSBf6Xl7Gl3LX.woff2) format('woff2');
        unicode-range: U+0100-02AF, U+0304, U+0308, U+0329, U+1E00-1E9F, U+1EF2-1EFF, U+2020, U+20A0-20AB, U+20AD-20C0, U+2113, U+2C60-2C7F, U+A720-A7FF;
      }

      /* latin */
      @font-face {
        font-family: 'Fira Sans';
        font-style: normal;
        font-weight: 700;
        font-display: swap;
        src: url(https://fonts.gstatic.com/s/firasans/v17/va9B4kDNxMZdWfMOD5VnLK3eRhf6Xl7Glw.woff2) format('woff2');
        unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+0304, U+0308, U+0329, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;
      }
    </style>
    <link rel="preload" href="https://assets.habr.com/habr-web/css/theme/light-v1.css" as="style" media="(prefers-color-scheme: light)" /><link rel="preload" href="https://assets.habr.com/habr-web/css/theme/dark-v1.css" as="style" media="(prefers-color-scheme: dark)" /><link id="light-colors" rel="stylesheet" href="https://assets.habr.com/habr-web/css/theme/light-v1.css" media="(prefers-color-scheme: light)" /><link id="dark-colors" rel="stylesheet" href="https://assets.habr.com/habr-web/css/theme/dark-v1.css" media="(prefers-color-scheme: dark)" />
    <script>window.i18nFetch = new Promise((res, rej) => {
          const xhr = new XMLHttpRequest();
          xhr.open('GET', '/js/i18n/ru-compiled.35b2fec11bb79a62419ab67779c2dd82.json');
          xhr.responseType = 'json';
          xhr.onload = function(e) {
            if (this.status === 200) {
              res({ru: xhr.response});
            } else {
              rej(e);
            }
          };
          xhr.send();
        });</script>
    <style>
      .grecaptcha-badge {
        visibility: hidden;
      }
    </style>
    <meta name="habr-version" content="2.233.0">
    
    <meta name="apple-mobile-web-app-status-bar-style" content="#303b44">
    <meta name="msapplication-TileColor" content="#629FBC">
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="mobile-web-app-capable" content="yes">
    <link rel="shortcut icon" type="image/png" sizes="16x16" href="https://assets.habr.com/habr-web/img/favicons/favicon-16.png">
    <link rel="shortcut icon" type="image/png" sizes="32x32" href="https://assets.habr.com/habr-web/img/favicons/favicon-32.png">
    <link rel="apple-touch-icon" type="image/png" sizes="76x76" href="https://assets.habr.com/habr-web/img/favicons/apple-touch-icon-76.png">
    <link rel="apple-touch-icon" type="image/png" sizes="120x120" href="https://assets.habr.com/habr-web/img/favicons/apple-touch-icon-120.png">
    <link rel="apple-touch-icon" type="image/png" sizes="152x152" href="https://assets.habr.com/habr-web/img/favicons/apple-touch-icon-152.png">
    <link rel="apple-touch-icon" type="image/png" sizes="180x180" href="https://assets.habr.com/habr-web/img/favicons/apple-touch-icon-180.png">
    <link rel="apple-touch-icon" type="image/png" sizes="256x256" href="https://assets.habr.com/habr-web/img/favicons/apple-touch-icon-256.png">
    <link rel="apple-touch-startup-image"
      media="screen and (device-width: 320px) and (device-height: 568px) and (-webkit-device-pixel-ratio: 2) and (orientation: landscape)"
      href="https://assets.habr.com/habr-web/img/splashes/splash_1136x640.png">
    <link rel="apple-touch-startup-image"
      media="screen and (device-width: 375px) and (device-height: 812px) and (-webkit-device-pixel-ratio: 3) and (orientation: landscape)"
      href="https://assets.habr.com/habr-web/img/splashes/splash_2436x1125.png">
    <link rel="apple-touch-startup-image"
      media="screen and (device-width: 414px) and (device-height: 896px) and (-webkit-device-pixel-ratio: 2) and (orientation: landscape)"
      href="https://assets.habr.com/habr-web/img/splashes/splash_1792x828.png">
    <link rel="apple-touch-startup-image"
      media="screen and (device-width: 414px) and (device-height: 896px) and (-webkit-device-pixel-ratio: 2) and (orientation: portrait)"
      href="https://assets.habr.com/habr-web/img/splashes/splash_828x1792.png">
    <link rel="apple-touch-startup-image"
      media="screen and (device-width: 375px) and (device-height: 667px) and (-webkit-device-pixel-ratio: 2) and (orientation: landscape)"
      href="https://assets.habr.com/habr-web/img/splashes/splash_1334x750.png">
    <link rel="apple-touch-startup-image"
      media="screen and (device-width: 414px) and (device-height: 896px) and (-webkit-device-pixel-ratio: 3) and (orientation: portrait)"
      href="https://assets.habr.com/habr-web/img/splashes/splash_1242x2668.png">
    <link rel="apple-touch-startup-image"
      media="screen and (device-width: 414px) and (device-height: 736px) and (-webkit-device-pixel-ratio: 3) and (orientation: landscape)"
      href="https://assets.habr.com/habr-web/img/splashes/splash_2208x1242.png">
    <link rel="apple-touch-startup-image"
      media="screen and (device-width: 375px) and (device-height: 812px) and (-webkit-device-pixel-ratio: 3) and (orientation: portrait)"
      href="https://assets.habr.com/habr-web/img/splashes/splash_1125x2436.png">
    <link rel="apple-touch-startup-image"
      media="screen and (device-width: 414px) and (device-height: 736px) and (-webkit-device-pixel-ratio: 3) and (orientation: portrait)"
      href="https://assets.habr.com/habr-web/img/splashes/splash_1242x2208.png">
    <link rel="apple-touch-startup-image"
      media="screen and (device-width: 1024px) and (device-height: 1366px) and (-webkit-device-pixel-ratio: 2) and (orientation: landscape)"
      href="https://assets.habr.com/habr-web/img/splashes/splash_2732x2048.png">
    <link rel="apple-touch-startup-image"
      media="screen and (device-width: 414px) and (device-height: 896px) and (-webkit-device-pixel-ratio: 3) and (orientation: landscape)"
      href="https://assets.habr.com/habr-web/img/splashes/splash_2688x1242.png">
    <link rel="apple-touch-startup-image"
      media="screen and (device-width: 834px) and (device-height: 1112px) and (-webkit-device-pixel-ratio: 2) and (orientation: landscape)"
      href="https://assets.habr.com/habr-web/img/splashes/splash_2224x1668.png">
    <link rel="apple-touch-startup-image"
      media="screen and (device-width: 375px) and (device-height: 667px) and (-webkit-device-pixel-ratio: 2) and (orientation: portrait)"
      href="https://assets.habr.com/habr-web/img/splashes/splash_750x1334.png">
    <link rel="apple-touch-startup-image"
      media="screen and (device-width: 1024px) and (device-height: 1366px) and (-webkit-device-pixel-ratio: 2) and (orientation: portrait)"
      href="https://assets.habr.com/habr-web/img/splashes/splash_2048x2732.png">
    <link rel="apple-touch-startup-image"
      media="screen and (device-width: 834px) and (device-height: 1194px) and (-webkit-device-pixel-ratio: 2) and (orientation: landscape)"
      href="https://assets.habr.com/habr-web/img/splashes/splash_2388x1668.png">
    <link rel="apple-touch-startup-image"
      media="screen and (device-width: 834px) and (device-height: 1112px) and (-webkit-device-pixel-ratio: 2) and (orientation: portrait)"
      href="https://assets.habr.com/habr-web/img/splashes/splash_1668x2224.png">
    <link rel="apple-touch-startup-image"
      media="screen and (device-width: 320px) and (device-height: 568px) and (-webkit-device-pixel-ratio: 2) and (orientation: portrait)"
      href="https://assets.habr.com/habr-web/img/splashes/splash_640x1136.png">
    <link rel="apple-touch-startup-image"
      media="screen and (device-width: 834px) and (device-height: 1194px) and (-webkit-device-pixel-ratio: 2) and (orientation: portrait)"
      href="https://assets.habr.com/habr-web/img/splashes/splash_1668x2388.png">
    <link rel="apple-touch-startup-image"
      media="screen and (device-width: 768px) and (device-height: 1024px) and (-webkit-device-pixel-ratio: 2) and (orientation: landscape)"
      href="https://assets.habr.com/habr-web/img/splashes/splash_2048x1536.png">
    <link rel="apple-touch-startup-image"
      media="screen and (device-width: 768px) and (device-height: 1024px) and (-webkit-device-pixel-ratio: 2) and (orientation: portrait)"
      href="https://assets.habr.com/habr-web/img/splashes/splash_1536x2048.png">
    <link rel="mask-icon" color="#77a2b6" href="https://assets.habr.com/habr-web/img/favicons/apple-touch-icon-120.svg">
    <link crossorigin="use-credentials" href="/manifest.webmanifest" rel="manifest">
    <script async src="https://unpkg.com/pwacompat" crossorigin="anonymous"></script>
    <script>window.yaContextCb = window.yaContextCb || []</script>
    <script src="https://yandex.ru/ads/system/context.js" async></script>
  <link rel="preload" href="https://assets.habr.com/habr-web/css/chunk-vendors.04465f7c.css" as="style"><link rel="preload" href="https://assets.habr.com/habr-web/js/chunk-vendors.3b11d41f.js" as="script"><link rel="preload" href="https://assets.habr.com/habr-web/css/app.20959a76.css" as="style"><link rel="preload" href="https://assets.habr.com/habr-web/js/app.7a97ea6d.js" as="script"><link rel="stylesheet" href="https://assets.habr.com/habr-web/css/chunk-vendors.04465f7c.css"><link rel="stylesheet" href="https://assets.habr.com/habr-web/css/app.20959a76.css"></head>
  <body>
    
    <div id="mount"><div id="app" data-async-called="true"><div class="tm-layout__wrapper"><!--[--><!----><div></div><div class="tm-feature tm-feature"><!----></div><header class="tm-header" data-test-id="header"><div class="tm-page-width"><!--[--><div class="tm-header__container"><div class="tm-header__burger-nav" data-test-id="burger-nav"><button class="tm-header__button tm-header__button_burger" type="button"><svg class="tm-svg-img tm-header__icon tm-header__icon-burger" height="16" width="16"><title>Меню</title><use xlink:href="/img/megazord-v28.371b7fa3..svg#header-burger"></use></svg></button></div><span class="tm-header__logo-wrap"><a class="tm-header__logo tm-header__logo_hl-ru tm-header__logo" href="/ru/"><svg class="tm-svg-img tm-header__icon" height="16" width="16"><title>Хабр</title><use xlink:href="/img/habr-logo-ru.svg#logo"></use></svg></a><span style="display:none;" class="tm-header__beta-sign">β</span></span><!----><div class="tm-header-user-menu tm-header_user-menu"><a href="/ru/search/" class="tm-header-user-menu__item tm-header-user-menu__search" data-test-id="search-button"><svg class="tm-svg-img tm-header-user-menu__icon tm-header-user-menu__icon_search" height="24" width="24"><title>Поиск</title><use xlink:href="/img/megazord-v28.371b7fa3..svg#search"></use></svg></a><!----><!----><div class="tm-header-user-menu__item tm-header-user-menu__write"><div><svg class="tm-svg-img tm-header-user-menu__icon tm-header-user-menu__icon_write" height="24" width="24"><title>Написать публикацию</title><use xlink:href="/img/megazord-v28.371b7fa3..svg#write"></use></svg></div><!----></div><!--[--><div class="tm-header-user-menu__item"><button class="tm-header-user-menu__toggle" data-test-id="user-menu-settings"><svg class="tm-svg-img tm-header-user-menu__icon" height="24" width="24"><title>Настройки</title><use xlink:href="/img/megazord-v28.371b7fa3..svg#page-settings"></use></svg></button></div><a href="https://habr.com/kek/v1/auth/habrahabr/?back=/ru/articles/752702/&amp;hl=ru" rel="nofollow" class="tm-header-user-menu__item"><!--[--><button class="btn btn_solid btn_small tm-header-user-menu__login" type="button"><!--[-->Войти<!--]--></button><!--]--></a><!--]--><!----><!--teleport start--><!--teleport end--><!----></div></div><!--]--></div></header><div class="tm-layout"><div class="tm-page-progress-bar"></div><!----><!----><div class="tm-page-width"><!--[--><!--]--></div><main class="tm-layout__container"><div class="tm-page" hl="ru" data-async-called="true" style="--0c809c5a:16px;--a086013e:100%;--7c457026:0;"><div class="tm-page-width"><!--[--><!----><div class="tm-page__wrapper"><div class="tm-page__main_has-sidebar tm-page__main"><div class="pull-down"><!----><div class="pull-down__header" style="height:0px;"><div class="pull-down__content" style="bottom:10px;"><svg class="tm-svg-img pull-down__icon pull-down__arrow" height="24" width="24"><title>Обновить</title><use xlink:href="/img/megazord-v28.371b7fa3..svg#pull-arrow"></use></svg></div></div><!--[--><!--[--><div class="banner-wrapper narrow" style="--467224fc:100px;--58ff5eba:auto;" data-v-ad758baa><!--[--><div class="placeholder-wrapper placeholder" data-v-ad758baa><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><div class="adfox-banner-placeholder narrow" data-v-12f7bcca><div class="image loads" data-v-12f7bcca></div><div class="lines" data-v-12f7bcca><div class="line loads" data-v-12f7bcca></div><div class="line loads" data-v-12f7bcca></div><div class="line loads" data-v-12f7bcca></div></div></div><!----></div><div id="adfox_169815559787254866" class="tm-adfox-banner" data-v-ad758baa></div><!--]--></div><div class="tm-article-presenter"><!--[--><!--]--><div class="tm-article-presenter__body" data-test-id="article-body"><div class="tm-misprint-area"><div class="tm-misprint-area__wrapper"><!--[--><article class="tm-article-presenter__content tm-article-presenter__content_narrow"><!--[--><div class="tm-article-presenter__header"><!--[--><!--]--><div class="tm-article-snippet tm-article-snippet tm-article-presenter__snippet"><!--[--><!--]--><div class="tm-article-snippet__meta-container"><div class="tm-article-snippet__meta"><span class="tm-user-info tm-article-snippet__author"><a href="/ru/users/Dartya/" class="tm-user-info__userpic" data-test-id="user-info-pic" title="Dartya"><div class="tm-entity-image"><!--[--><img alt="" class="tm-entity-image__pic" height="32" src="https://assets.habr.com/habr-web/img/avatars/014.png" width="32"><!--]--></div></a><span class="tm-user-info__user tm-user-info__user_appearance-default" data-test-id="user-info-description"><a href="/ru/users/Dartya/" class="tm-user-info__username">Dartya <!----></a><!--[--><span class="tm-article-datetime-published"><time datetime="2023-08-05T17:40:07.000Z" title="2023-08-05, 20:40">5  авг  2023 в 20:40</time></span><!--]--></span></span></div><!----></div><h1 class="tm-title tm-title_h1" lang="ru" data-test-id="articleTitle"><span>Использование Kotlin и WebFlux для выполнения задач ML в Apache Spark на GPU</span></h1><div class="tm-article-snippet__stats" data-test-id="articleStats"><div class="tm-article-complexity tm-article-complexity_complexity-medium"><span class="tm-svg-icon__wrapper tm-article-complexity__icon"><svg class="tm-svg-img tm-svg-icon" height="24" width="24"><title>Уровень сложности</title><use xlink:href="/img/megazord-v28.371b7fa3..svg#complexity-medium"></use></svg></span><span class="tm-article-complexity__label">Средний</span></div><div class="tm-article-reading-time"><span class="tm-svg-icon__wrapper tm-article-reading-time__icon"><svg class="tm-svg-img tm-svg-icon" height="24" width="24"><title>Время на прочтение</title><use xlink:href="/img/megazord-v28.371b7fa3..svg#clock"></use></svg></span><span class="tm-article-reading-time__label">32 мин</span></div><span class="tm-icon-counter tm-data-icons__item"><svg class="tm-svg-img tm-icon-counter__icon" height="24" width="24"><title>Количество просмотров</title><use xlink:href="/img/megazord-v28.371b7fa3..svg#counter-views"></use></svg><span class="tm-icon-counter__value" title="3713">3.7K</span></span></div><div class="tm-publication-hubs__container" data-test-id="articleHubsList"><div class="tm-publication-hubs"><!--[--><span class="tm-publication-hub__link-container"><a href="/ru/hubs/java/" class="tm-publication-hub__link"><!--[--><span>Java</span><span class="tm-article-snippet__profiled-hub" title="Профильный хаб">*</span><!--]--></a></span><span class="tm-publication-hub__link-container"><a href="/ru/hubs/kotlin/" class="tm-publication-hub__link"><!--[--><span>Kotlin</span><span class="tm-article-snippet__profiled-hub" title="Профильный хаб">*</span><!--]--></a></span><!--]--></div></div><div class="tm-article-labels" data-test-id="articleLabels"><div class="tm-article-labels__container"><!----><!--[--><div class="tm-publication-label tm-publication-label_variant-seasonJava2023 tm-publication-label_variant-season"><a href="https://u.habr.com/java" target="_blank">Cезон Java one love ☕</a></div><!--]--></div></div><!----><!----></div></div><!--[--><!----><div class="tm-article-body" data-gallery-root lang="ru"><div><!--[--><!--]--></div><div id="post-content-body"><div><div class="article-formatted-body article-formatted-body article-formatted-body_version-2"><div xmlns="http://www.w3.org/1999/xhtml"><p>Это третья статья по теме реализации масштабируемой системы для выполнения задач распределенного машинного обучения на GPU с использованием Java, Kotlin, Spring и Spark. Список всех статей:</p><ol><li><p><a href="https://habr.com/ru/articles/679248/" rel="noopener noreferrer nofollow">Варианты использования Java ML библиотек совместно со Spring, Docker, Spark, Rapids, CUDA</a></p></li><li><p><a href="https://habr.com/ru/articles/739634/" rel="noopener noreferrer nofollow">Масштабируемая Big Data система в Kubernetes с использованием Spark и Cassandra</a></p></li><li><p><a href="https://habr.com/ru/articles/752702/" rel="noopener noreferrer nofollow">Использование Kotlin и WebFlux для выполнения задач ML в Apache Spark на GPU</a></p></li></ol><h2>О чем данная статья</h2><p>В предыдущей статье для создания Spark Driver приложения использовался сервлетный стек Spring (Boot 2.7.11) и JDK 8. </p><p>На дворе вторая половина 2023 года, у многих в проде уже используется Boot 3+ (а то и 3.1+), совсем скоро должна выйти новая LTS версия Java, и, мягко говоря, Boot 2+ и JDK8 устарели. Использовались они намеренно, так как для задач тренировки моделей машинного обучения на GPU в среде Spark частью системы является ускоритель вычислений на GPU <a href="https://github.com/NVIDIA/spark-rapids" rel="noopener noreferrer nofollow">NVidia Rapids</a>. Поддержка JDK 17 появилась только в релизе v23.06.0 от 27.06.23, с ее выходом появилась возможность перейти на актуальную LTS версию Java, а с ней - на Spring Boot 3+.</p><p>В данной статье описывается миграция с Boot 2 и JDK 8 До Boot 3 и JDK 17, со Spring Web на Spring WebFlux, в конце сравниваются Web и WebFlux версии по потреблению аппаратных ресурсов и скорости выполнения.</p><h2>JDK8, Spring boot 2.7.11 → JDK17, Spring Boot 3.1.1</h2><p>Для миграции достаточно поднять версии Rapids до 23.06.0, JDK до 17, Spring Boot до 3.1.1. Нюансов не так уж и много:</p><ol><li><p>Конфликт логеров Slf4j и Log4j при использовании Spark: из зависимости spring boot starter web исключаем spring boot starter logging:</p></li></ol><details class="spoiler"><summary>pom.xml</summary><div class="spoiler__content"><pre><code class="xml">&lt;dependency&gt;
    &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
    &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;
    &lt;version&gt;${spring.boot.version}&lt;/version&gt;
    &lt;exclusions&gt;
        &lt;exclusion&gt;
            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
            &lt;artifactId&gt;spring-boot-starter-logging&lt;/artifactId&gt;
        &lt;/exclusion&gt;
        &lt;exclusion&gt;
            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
            &lt;artifactId&gt;spring-boot-starter-tomcat&lt;/artifactId&gt;
        &lt;/exclusion&gt;
    &lt;/exclusions&gt;
&lt;/dependency&gt;</code></pre><p></p></div></details><ol start="2"><li><p>Запускать Spark Driver на JDK 17 необходимо со следующими параметрами (приведено для Dockerfile):</p></li></ol><details class="spoiler"><summary>Application Dockerfile</summary><div class="spoiler__content"><pre><code>ENV JAVA_OPTS='--add-opens=java.base/java.lang=ALL-UNNAMED \
               --add-opens=java.base/java.lang.invoke=ALL-UNNAMED \
               --add-opens=java.base/java.lang.reflect=ALL-UNNAMED \
               --add-opens=java.base/java.io=ALL-UNNAMED \
               --add-opens=java.base/java.net=ALL-UNNAMED \
               --add-opens=java.base/java.nio=ALL-UNNAMED \
               --add-opens=java.base/java.util=ALL-UNNAMED \
               --add-opens=java.base/java.util.concurrent=ALL-UNNAMED \
               --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED \
               --add-opens=java.base/sun.nio.ch=ALL-UNNAMED \
               --add-opens=java.base/sun.nio.cs=ALL-UNNAMED \
               --add-opens=java.base/sun.security.action=ALL-UNNAMED \
               --add-opens=java.base/sun.util.calendar=ALL-UNNAMED \
               --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED'</code></pre><p></p></div></details><ol start="3"><li><p>В связи с переходом на Hibernate 6, при использовании JSOB и BYTEA полей в сущностях Postgres придется немного отрефакторить Entity:</p></li></ol><figure class="full-width "><img src="https://habrastorage.org/r/w1560/getpro/habr/upload_files/5c1/63b/20e/5c163b20e6ab80ee4f28f0f2d8e28d7d.png" width="709" height="776" data-src="https://habrastorage.org/getpro/habr/upload_files/5c1/63b/20e/5c163b20e6ab80ee4f28f0f2d8e28d7d.png"/></figure><p>При этом, использовавшийся ранее CustomPostgresDialect оказывается не нужным и его можно удалить, заменив на <code>org.hibernate.dialect.PostgreSQLDialect</code>:</p><details class="spoiler"><summary>application.yml</summary><div class="spoiler__content"><pre><code class="yaml">spring:
  ...
  jpa:
    database-platform: com.mlwebservice.config.CustomPostgresDialect  # &lt;== delete
    database-platform: org.hibernate.dialect.PostgreSQLDialect        # &lt;== add</code></pre><p></p></div></details><details class="spoiler"><summary>Ранее использовавшийся CustomPostgresDialect</summary><div class="spoiler__content"><pre><code class="java">package com.mlwebservice.config

import com.vladmihalcea.hibernate.type.array.IntArrayType
import com.vladmihalcea.hibernate.type.array.StringArrayType
import com.vladmihalcea.hibernate.type.json.JsonBinaryType
import com.vladmihalcea.hibernate.type.json.JsonNodeBinaryType
import com.vladmihalcea.hibernate.type.json.JsonNodeStringType
import com.vladmihalcea.hibernate.type.json.JsonStringType
import org.hibernate.dialect.PostgreSQL10Dialect
import java.sql.Types

class CustomPostgresDialect : PostgreSQL10Dialect() {
    init {
        registerHibernateType(Types.OTHER, StringArrayType::class.qualifiedName)
        registerHibernateType(Types.OTHER, IntArrayType::class.qualifiedName)
        registerHibernateType(Types.OTHER, JsonStringType::class.qualifiedName)
        registerHibernateType(Types.OTHER, JsonBinaryType::class.qualifiedName)
        registerHibernateType(Types.OTHER, JsonNodeBinaryType::class.qualifiedName)
        registerHibernateType(Types.OTHER, JsonNodeStringType::class.qualifiedName)
    }
}</code></pre><p></p></div></details><p>Не считая докерфайлов и действий по добавлению новой версии jar'ника Rapids в директорию с jar-файлами для отправки в Spark executors и в образ executor’а, это все, что необходимо выполнить. Актуальную версию можно взять <a href="https://gitlab.com/AlexPit/java-ml-spark-example/-/tree/kubernetes-java17-spark332" rel="noopener noreferrer nofollow">в соответствующей ветке репозитория</a>.</p><p>На этом можно было бы и закончить, но любопытство ведь берет свое, и появился вопрос - а заработает ли на реактивном стеке, и будет ли эффект?</p><h2>Сделаем ML реактивным: Spring Web → Spring WebFlux </h2><h3>Зависимости</h3><p>Изменений при таком переходе изначально должно быть больше, но так же есть нюансы в виде управления зависимостями. Так, Netty, необходимый для Project Reactor (WebFlux) используется самим Spark и драйвером Cassandra, поэтому изначально конфликтовали. Решается путем задания трех зависимостей в самом начале списка зависимостей:</p><details class="spoiler"><summary>pom.xml: Зависимости Netty</summary><div class="spoiler__content"><pre><code class="xml">&lt;dependencies&gt;
    &lt;!-- Netty --&gt;
    &lt;dependency&gt;
        &lt;groupId&gt;io.netty&lt;/groupId&gt;
        &lt;artifactId&gt;netty-all&lt;/artifactId&gt;
        &lt;version&gt;4.1.74.Final&lt;/version&gt;
    &lt;/dependency&gt;
    &lt;dependency&gt;
        &lt;groupId&gt;io.netty&lt;/groupId&gt;
        &lt;artifactId&gt;netty-codec-http&lt;/artifactId&gt;
        &lt;version&gt;4.1.74.Final&lt;/version&gt;
    &lt;/dependency&gt;
    &lt;dependency&gt;
        &lt;groupId&gt;io.netty&lt;/groupId&gt;
        &lt;artifactId&gt;netty-resolver-dns&lt;/artifactId&gt;
        &lt;version&gt;4.1.74.Final&lt;/version&gt;
    &lt;/dependency&gt;

    &lt;!-- Spring --&gt;
    &lt;dependency&gt;
        &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
        &lt;artifactId&gt;spring-boot-starter-webflux&lt;/artifactId&gt;
        &lt;version&gt;${spring.boot.version}&lt;/version&gt;
        &lt;exclusions&gt;
            &lt;exclusion&gt;
                &lt;artifactId&gt;log4j-to-slf4j&lt;/artifactId&gt;
                &lt;groupId&gt;org.apache.logging.log4j&lt;/groupId&gt;
            &lt;/exclusion&gt;
        &lt;/exclusions&gt;
    &lt;/dependency&gt;
    ...
&lt;/dependencies&gt;</code></pre><p></p></div></details><p>Spring Data тоже заменяется на реактивную версию:</p><details class="spoiler"><summary>pom.xml: R2DBC и Spring Data Cassandra Reactive</summary><div class="spoiler__content"><pre><code class="xml">&lt;dependency&gt;
    &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
    &lt;artifactId&gt;spring-boot-starter-data-cassandra-reactive&lt;/artifactId&gt;
    &lt;version&gt;${spring.boot.version}&lt;/version&gt;
&lt;/dependency&gt;
&lt;dependency&gt;
    &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
    &lt;artifactId&gt;spring-boot-starter-data-r2dbc&lt;/artifactId&gt;
    &lt;version&gt;${spring.boot.version}&lt;/version&gt;
&lt;/dependency&gt;
&lt;dependency&gt;
    &lt;groupId&gt;io.r2dbc&lt;/groupId&gt;
    &lt;artifactId&gt;r2dbc-postgresql&lt;/artifactId&gt;
    &lt;version&gt;0.8.13.RELEASE&lt;/version&gt;
&lt;/dependency&gt;</code></pre><p></p></div></details><p>И добавляются несколько библиотек для работы Kotlin в среде WebFlux:</p><details class="spoiler"><summary>pom.xml: Kotlin dependencies</summary><div class="spoiler__content"><pre><code class="xml">&lt;dependency&gt;
    &lt;groupId&gt;org.jetbrains.kotlin&lt;/groupId&gt;
    &lt;artifactId&gt;kotlin-stdlib&lt;/artifactId&gt;
    &lt;version&gt;${kotlin.version}&lt;/version&gt;
&lt;/dependency&gt;
&lt;dependency&gt;
    &lt;groupId&gt;org.jetbrains.kotlin&lt;/groupId&gt;
    &lt;artifactId&gt;kotlin-reflect&lt;/artifactId&gt;
    &lt;version&gt;${kotlin.version}&lt;/version&gt;
    &lt;scope&gt;runtime&lt;/scope&gt;
&lt;/dependency&gt;
&lt;dependency&gt;
    &lt;groupId&gt;org.jetbrains.kotlinx&lt;/groupId&gt;
    &lt;artifactId&gt;kotlinx-coroutines-reactor&lt;/artifactId&gt;
    &lt;version&gt;1.7.2&lt;/version&gt;
    &lt;scope&gt;runtime&lt;/scope&gt;
&lt;/dependency&gt;
&lt;dependency&gt;
    &lt;groupId&gt;io.projectreactor.kotlin&lt;/groupId&gt;
    &lt;artifactId&gt;reactor-kotlin-extensions&lt;/artifactId&gt;
    &lt;version&gt;1.2.2&lt;/version&gt;
    &lt;scope&gt;runtime&lt;/scope&gt;
&lt;/dependency&gt;</code></pre><p></p></div></details><p>Кстати, сам Kotlin тоже поднял с версии 1.8.21 до 1.9.0.</p><p>Для логирования HTTP запросов-ответов добавляем Zalando Logbook:</p><details class="spoiler"><summary>pom.xml: Zalando Logbook</summary><div class="spoiler__content"><pre><code class="xml">&lt;dependency&gt;
    &lt;groupId&gt;org.zalando&lt;/groupId&gt;
    &lt;artifactId&gt;logbook-spring-boot-autoconfigure&lt;/artifactId&gt;
    &lt;version&gt;3.2.0&lt;/version&gt;
&lt;/dependency&gt;
&lt;dependency&gt;
    &lt;groupId&gt;org.zalando&lt;/groupId&gt;
    &lt;artifactId&gt;logbook-netty&lt;/artifactId&gt;
    &lt;version&gt;3.2.0&lt;/version&gt;
&lt;/dependency&gt;</code></pre><p></p></div></details><details class="spoiler"><summary>pom.xml (полная версия для WebFlux)</summary><div class="spoiler__content"><pre><code class="xml">&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"&gt;
    &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;

    &lt;groupId&gt;com.mlwebservice&lt;/groupId&gt;
    &lt;artifactId&gt;MLWebService&lt;/artifactId&gt;
    &lt;version&gt;1.0.0-SNAPSHOT&lt;/version&gt;

    &lt;properties&gt;
        &lt;java.version&gt;17&lt;/java.version&gt;
        &lt;spring.boot.version&gt;3.1.1&lt;/spring.boot.version&gt;
        &lt;scala.version&gt;2.12&lt;/scala.version&gt;
        &lt;spark.version&gt;3.3.2&lt;/spark.version&gt;
        &lt;lombok.version&gt;1.18.24&lt;/lombok.version&gt;
        &lt;org.mapstruct.version&gt;1.4.2.Final&lt;/org.mapstruct.version&gt;
        &lt;kotlin.version&gt;1.9.0&lt;/kotlin.version&gt;
        &lt;jackson.version&gt;2.13.5&lt;/jackson.version&gt;
    &lt;/properties&gt;

    &lt;distributionManagement&gt;
        &lt;repository&gt;
            &lt;id&gt;XGBoost4J Snapshot Repo&lt;/id&gt;
            &lt;name&gt;XGBoost4J Snapshot Repo&lt;/name&gt;
            &lt;url&gt;https://s3-us-west-2.amazonaws.com/xgboost-maven-repo/snapshot/&lt;/url&gt;
        &lt;/repository&gt;
    &lt;/distributionManagement&gt;

    &lt;dependencies&gt;
        &lt;!-- Netty --&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;io.netty&lt;/groupId&gt;
            &lt;artifactId&gt;netty-all&lt;/artifactId&gt;
            &lt;version&gt;4.1.74.Final&lt;/version&gt;
        &lt;/dependency&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;io.netty&lt;/groupId&gt;
            &lt;artifactId&gt;netty-codec-http&lt;/artifactId&gt;
            &lt;version&gt;4.1.74.Final&lt;/version&gt;
        &lt;/dependency&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;io.netty&lt;/groupId&gt;
            &lt;artifactId&gt;netty-resolver-dns&lt;/artifactId&gt;
            &lt;version&gt;4.1.74.Final&lt;/version&gt;
        &lt;/dependency&gt;

        &lt;!-- Spring --&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
            &lt;artifactId&gt;spring-boot-starter-webflux&lt;/artifactId&gt;
            &lt;version&gt;${spring.boot.version}&lt;/version&gt;
            &lt;exclusions&gt;
                &lt;exclusion&gt;
                    &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
                    &lt;artifactId&gt;spring-boot-starter-logging&lt;/artifactId&gt;
                &lt;/exclusion&gt;
            &lt;/exclusions&gt;
        &lt;/dependency&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;com.fasterxml.jackson.core&lt;/groupId&gt;
            &lt;artifactId&gt;jackson-core&lt;/artifactId&gt;
            &lt;version&gt;${jackson.version}&lt;/version&gt;
        &lt;/dependency&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;com.fasterxml.jackson.module&lt;/groupId&gt;
            &lt;artifactId&gt;jackson-module-kotlin&lt;/artifactId&gt;
            &lt;version&gt;${jackson.version}&lt;/version&gt;
        &lt;/dependency&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;com.fasterxml.jackson.core&lt;/groupId&gt;
            &lt;artifactId&gt;jackson-annotations&lt;/artifactId&gt;
            &lt;version&gt;${jackson.version}&lt;/version&gt;
        &lt;/dependency&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;com.fasterxml.jackson.core&lt;/groupId&gt;
            &lt;artifactId&gt;jackson-databind&lt;/artifactId&gt;
            &lt;version&gt;${jackson.version}&lt;/version&gt;
        &lt;/dependency&gt;

        &lt;!-- Spring Data --&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;org.springframework.data&lt;/groupId&gt;
            &lt;artifactId&gt;spring-data-commons&lt;/artifactId&gt;
            &lt;version&gt;${spring.boot.version}&lt;/version&gt;
        &lt;/dependency&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
            &lt;artifactId&gt;spring-boot-starter-data-cassandra-reactive&lt;/artifactId&gt;
            &lt;version&gt;${spring.boot.version}&lt;/version&gt;
        &lt;/dependency&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
            &lt;artifactId&gt;spring-boot-starter-data-r2dbc&lt;/artifactId&gt;
            &lt;version&gt;${spring.boot.version}&lt;/version&gt;
        &lt;/dependency&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
            &lt;artifactId&gt;spring-boot-starter-data-jpa&lt;/artifactId&gt;
            &lt;version&gt;${spring.boot.version}&lt;/version&gt;
        &lt;/dependency&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;org.postgresql&lt;/groupId&gt;
            &lt;artifactId&gt;postgresql&lt;/artifactId&gt;
            &lt;scope&gt;runtime&lt;/scope&gt;
            &lt;version&gt;42.6.0&lt;/version&gt;
        &lt;/dependency&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;io.r2dbc&lt;/groupId&gt;
            &lt;artifactId&gt;r2dbc-postgresql&lt;/artifactId&gt;
            &lt;version&gt;0.8.13.RELEASE&lt;/version&gt;
        &lt;/dependency&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;com.vladmihalcea&lt;/groupId&gt;
            &lt;artifactId&gt;hibernate-types-60&lt;/artifactId&gt;
            &lt;version&gt;2.21.1&lt;/version&gt;
        &lt;/dependency&gt;

        &lt;!-- Cassandra --&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;com.datastax.oss&lt;/groupId&gt;
            &lt;artifactId&gt;java-driver-core&lt;/artifactId&gt;
            &lt;version&gt;4.13.0&lt;/version&gt;
        &lt;/dependency&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;org.scala-lang&lt;/groupId&gt;
            &lt;artifactId&gt;scala-library&lt;/artifactId&gt;
            &lt;version&gt;2.12.15&lt;/version&gt;
        &lt;/dependency&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;com.datastax.spark&lt;/groupId&gt;
            &lt;artifactId&gt;spark-cassandra-connector_2.12&lt;/artifactId&gt;
            &lt;version&gt;3.3.0&lt;/version&gt;
        &lt;/dependency&gt;

        &lt;dependency&gt;
            &lt;groupId&gt;com.typesafe&lt;/groupId&gt;
            &lt;artifactId&gt;config&lt;/artifactId&gt;
            &lt;version&gt;1.4.2&lt;/version&gt;
        &lt;/dependency&gt;

        &lt;!-- Spark --&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;org.apache.spark&lt;/groupId&gt;
            &lt;artifactId&gt;spark-core_${scala.version}&lt;/artifactId&gt;
            &lt;version&gt;${spark.version}&lt;/version&gt;
        &lt;/dependency&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;org.apache.spark&lt;/groupId&gt;
            &lt;artifactId&gt;spark-hive_${scala.version}&lt;/artifactId&gt;
            &lt;version&gt;${spark.version}&lt;/version&gt;
        &lt;/dependency&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;org.apache.spark&lt;/groupId&gt;
            &lt;artifactId&gt;spark-streaming_${scala.version}&lt;/artifactId&gt;
            &lt;version&gt;${spark.version}&lt;/version&gt;
        &lt;/dependency&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;org.apache.spark&lt;/groupId&gt;
            &lt;artifactId&gt;spark-sql_${scala.version}&lt;/artifactId&gt;
            &lt;version&gt;${spark.version}&lt;/version&gt;
        &lt;/dependency&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;org.apache.spark&lt;/groupId&gt;
            &lt;artifactId&gt;spark-mllib_${scala.version}&lt;/artifactId&gt;
            &lt;version&gt;${spark.version}&lt;/version&gt;
        &lt;/dependency&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;org.antlr&lt;/groupId&gt;
            &lt;artifactId&gt;antlr4-runtime&lt;/artifactId&gt;
            &lt;version&gt;4.8&lt;/version&gt;
            &lt;scope&gt;runtime&lt;/scope&gt;
        &lt;/dependency&gt;

        &lt;!-- GXBoost --&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;ml.dmlc&lt;/groupId&gt;
            &lt;artifactId&gt;xgboost4j-spark-gpu_${scala.version}&lt;/artifactId&gt;
            &lt;version&gt;1.7.5&lt;/version&gt;
        &lt;/dependency&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;ml.dmlc&lt;/groupId&gt;
            &lt;artifactId&gt;xgboost4j-gpu_${scala.version}&lt;/artifactId&gt;
            &lt;version&gt;1.7.5&lt;/version&gt;
        &lt;/dependency&gt;

        &lt;!-- Kubernetes --&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;org.apache.spark&lt;/groupId&gt;
            &lt;artifactId&gt;spark-kubernetes_${scala.version}&lt;/artifactId&gt;
            &lt;version&gt;${spark.version}&lt;/version&gt;
        &lt;/dependency&gt;

        &lt;dependency&gt;
            &lt;groupId&gt;org.codehaus.janino&lt;/groupId&gt;
            &lt;artifactId&gt;commons-compiler&lt;/artifactId&gt;
            &lt;version&gt;3.0.16&lt;/version&gt;
        &lt;/dependency&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;org.codehaus.janino&lt;/groupId&gt;
            &lt;artifactId&gt;janino&lt;/artifactId&gt;
            &lt;version&gt;3.0.16&lt;/version&gt;
        &lt;/dependency&gt;

        &lt;!-- Rapids --&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;com.nvidia&lt;/groupId&gt;
            &lt;artifactId&gt;rapids-4-spark_${scala.version}&lt;/artifactId&gt;
            &lt;version&gt;23.06.0&lt;/version&gt;
        &lt;/dependency&gt;

        &lt;!-- Lombok --&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;org.projectlombok&lt;/groupId&gt;
            &lt;artifactId&gt;lombok&lt;/artifactId&gt;
            &lt;version&gt;${lombok.version}&lt;/version&gt;
        &lt;/dependency&gt;

        &lt;!-- Logging --&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;org.zalando&lt;/groupId&gt;
            &lt;artifactId&gt;logbook-spring-webflux&lt;/artifactId&gt;
            &lt;version&gt;3.1.0&lt;/version&gt;
        &lt;/dependency&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;org.zalando&lt;/groupId&gt;
            &lt;artifactId&gt;logbook-spring-boot-autoconfigure&lt;/artifactId&gt;
            &lt;version&gt;3.2.0&lt;/version&gt;
        &lt;/dependency&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;org.zalando&lt;/groupId&gt;
            &lt;artifactId&gt;logbook-netty&lt;/artifactId&gt;
            &lt;version&gt;3.2.0&lt;/version&gt;
        &lt;/dependency&gt;

        &lt;!-- Utils --&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;org.apache.commons&lt;/groupId&gt;
            &lt;artifactId&gt;commons-lang3&lt;/artifactId&gt;
            &lt;version&gt;3.12.0&lt;/version&gt;
        &lt;/dependency&gt;

        &lt;!-- Kotlin --&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;org.jetbrains.kotlin&lt;/groupId&gt;
            &lt;artifactId&gt;kotlin-stdlib&lt;/artifactId&gt;
            &lt;version&gt;${kotlin.version}&lt;/version&gt;
        &lt;/dependency&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;org.jetbrains.kotlin&lt;/groupId&gt;
            &lt;artifactId&gt;kotlin-reflect&lt;/artifactId&gt;
            &lt;version&gt;${kotlin.version}&lt;/version&gt;
            &lt;scope&gt;runtime&lt;/scope&gt;
        &lt;/dependency&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;org.jetbrains.kotlinx&lt;/groupId&gt;
            &lt;artifactId&gt;kotlinx-coroutines-reactor&lt;/artifactId&gt;
            &lt;version&gt;1.7.2&lt;/version&gt;
            &lt;scope&gt;runtime&lt;/scope&gt;
        &lt;/dependency&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;io.projectreactor.kotlin&lt;/groupId&gt;
            &lt;artifactId&gt;reactor-kotlin-extensions&lt;/artifactId&gt;
            &lt;version&gt;1.2.2&lt;/version&gt;
            &lt;scope&gt;runtime&lt;/scope&gt;
        &lt;/dependency&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;org.jetbrains.kotlinx.spark&lt;/groupId&gt;
            &lt;artifactId&gt;kotlin-spark-api_3.3.1_${scala.version}&lt;/artifactId&gt;
            &lt;version&gt;1.2.3&lt;/version&gt;
        &lt;/dependency&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;org.jetbrains.kotlin&lt;/groupId&gt;
            &lt;artifactId&gt;kotlin-test&lt;/artifactId&gt;
            &lt;version&gt;${kotlin.version}&lt;/version&gt;
            &lt;scope&gt;test&lt;/scope&gt;
        &lt;/dependency&gt;
    &lt;/dependencies&gt;

    &lt;build&gt;
        &lt;finalName&gt;service&lt;/finalName&gt;
        &lt;plugins&gt;
            &lt;plugin&gt;
                &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
                &lt;artifactId&gt;spring-boot-maven-plugin&lt;/artifactId&gt;
                &lt;version&gt;3.0.6&lt;/version&gt;
                &lt;configuration&gt;
                    &lt;mainClass&gt;com.mlwebservice.MLWebServiceApplication&lt;/mainClass&gt;
                &lt;/configuration&gt;
                &lt;executions&gt;
                    &lt;execution&gt;
                        &lt;goals&gt;
                            &lt;goal&gt;repackage&lt;/goal&gt;
                        &lt;/goals&gt;
                    &lt;/execution&gt;
                &lt;/executions&gt;
            &lt;/plugin&gt;

            &lt;plugin&gt;
                &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;
                &lt;artifactId&gt;maven-compiler-plugin&lt;/artifactId&gt;
                &lt;version&gt;3.11.0&lt;/version&gt;
                &lt;executions&gt;
                    &lt;execution&gt;
                        &lt;id&gt;compile&lt;/id&gt;
                        &lt;phase&gt;compile&lt;/phase&gt;
                        &lt;goals&gt;
                            &lt;goal&gt;compile&lt;/goal&gt;
                        &lt;/goals&gt;
                    &lt;/execution&gt;
                    &lt;execution&gt;
                        &lt;id&gt;testCompile&lt;/id&gt;
                        &lt;phase&gt;test-compile&lt;/phase&gt;
                        &lt;goals&gt;
                            &lt;goal&gt;testCompile&lt;/goal&gt;
                        &lt;/goals&gt;
                    &lt;/execution&gt;
                &lt;/executions&gt;
                &lt;configuration&gt;
                    &lt;source&gt;${java.version}&lt;/source&gt;
                    &lt;target&gt;${java.version}&lt;/target&gt;
                    &lt;annotationProcessorPaths&gt;
                        &lt;path&gt;
                            &lt;groupId&gt;org.projectlombok&lt;/groupId&gt;
                            &lt;artifactId&gt;lombok&lt;/artifactId&gt;
                            &lt;version&gt;${lombok.version}&lt;/version&gt;
                        &lt;/path&gt;
                    &lt;/annotationProcessorPaths&gt;
                &lt;/configuration&gt;
            &lt;/plugin&gt;

            &lt;plugin&gt;
                &lt;groupId&gt;org.jetbrains.kotlin&lt;/groupId&gt;
                &lt;artifactId&gt;kotlin-maven-plugin&lt;/artifactId&gt;
                &lt;version&gt;${kotlin.version}&lt;/version&gt;
                &lt;executions&gt;
                    &lt;execution&gt;
                        &lt;id&gt;compile&lt;/id&gt;
                        &lt;phase&gt;process-sources&lt;/phase&gt;
                        &lt;goals&gt;
                            &lt;goal&gt;compile&lt;/goal&gt;
                        &lt;/goals&gt;
                        &lt;configuration&gt;
                            &lt;jvmTarget&gt;${java.version}&lt;/jvmTarget&gt;
                            &lt;sourceDirs&gt;
                                &lt;source&gt;src/main/java&lt;/source&gt;
                                &lt;source&gt;src/main/kotlin&lt;/source&gt;
                                &lt;source&gt;target/generated-sources/annotations&lt;/source&gt;
                            &lt;/sourceDirs&gt;
                        &lt;/configuration&gt;
                    &lt;/execution&gt;
                    &lt;execution&gt;
                        &lt;id&gt;test-compile&lt;/id&gt;
                        &lt;phase&gt;test-compile&lt;/phase&gt;
                        &lt;goals&gt;
                            &lt;goal&gt;test-compile&lt;/goal&gt;
                        &lt;/goals&gt;
                        &lt;configuration&gt;
                            &lt;jvmTarget&gt;${java.version}&lt;/jvmTarget&gt;
                            &lt;sourceDirs&gt;
                                &lt;source&gt;src/main/java&lt;/source&gt;
                                &lt;source&gt;src/main/kotlin&lt;/source&gt;
                                &lt;source&gt;target/generated-sources/annotations&lt;/source&gt;
                            &lt;/sourceDirs&gt;
                        &lt;/configuration&gt;
                    &lt;/execution&gt;
                &lt;/executions&gt;
                &lt;configuration&gt;
                    &lt;jvmTarget&gt;${java.version}&lt;/jvmTarget&gt;
                    &lt;sourceDirs&gt;
                        &lt;source&gt;src/main/java&lt;/source&gt;
                        &lt;source&gt;src/main/kotlin&lt;/source&gt;
                        &lt;source&gt;target/generated-sources/annotations&lt;/source&gt;
                    &lt;/sourceDirs&gt;
                &lt;/configuration&gt;
            &lt;/plugin&gt;
        &lt;/plugins&gt;
    &lt;/build&gt;
&lt;/project&gt;
</code></pre><p></p></div></details><h3>Main класс</h3><p>Модифицируем Main класс приложения, необходимо добавить аннотации <code>@EnableWebFlux</code> и <code>@EnableR2dbcRepositories</code>, указать тип приложения <code>REACTIVE</code></p><details class="spoiler"><summary>Main class</summary><div class="spoiler__content"><pre><code class="java">package com.mlwebservice;

import org.springframework.boot.WebApplicationType;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.boot.autoconfigure.cassandra.CassandraAutoConfiguration;
import org.springframework.boot.autoconfigure.gson.GsonAutoConfiguration;
import org.springframework.boot.builder.SpringApplicationBuilder;
import org.springframework.data.r2dbc.repository.config.EnableR2dbcRepositories;
import org.springframework.web.reactive.config.EnableWebFlux;

import java.net.InetAddress;
import java.net.UnknownHostException;

@EnableWebFlux
@EnableR2dbcRepositories
@SpringBootApplication(exclude = {
        GsonAutoConfiguration.class,
        CassandraAutoConfiguration.class
})
public class MLWebServiceApplication {
    public static void main(String[] args) {
        new SpringApplicationBuilder(MLWebServiceApplication.class)
                .web(WebApplicationType.REACTIVE)
                .run(args);
        );
    }
}</code></pre><p></p></div></details><h3>Spring Data → R2DBC</h3><p>Так как в сущности БД используется JSONB поле (с его отображением в приложении в виде JsonNode), необходима конфигурация R2DBC с кастомными конвертерами:</p><details class="spoiler"><summary>Jsonb converters</summary><div class="spoiler__content"><pre><code class="kotlin">package com.mlwebservice.config

import com.fasterxml.jackson.databind.JsonNode
import com.fasterxml.jackson.databind.ObjectMapper
import io.r2dbc.postgresql.codec.Json
import org.springframework.context.annotation.Bean
import org.springframework.context.annotation.Configuration
import org.springframework.core.convert.converter.Converter
import org.springframework.data.convert.ReadingConverter
import org.springframework.data.convert.WritingConverter
import org.springframework.data.r2dbc.convert.R2dbcCustomConversions
import org.springframework.data.r2dbc.dialect.PostgresDialect

@Configuration
open class R2dbcConfiguration(private val objectMapper: ObjectMapper) {

    @Bean
    open fun customConversions() : R2dbcCustomConversions {
        val converters = listOf&lt;Converter&lt;*, *&gt;&gt;(
            JsonNodeWritingConverter(objectMapper),
            JsonNodeReadingConverter(objectMapper)
        )
        return R2dbcCustomConversions.of(PostgresDialect.INSTANCE, converters);
    }
}

@WritingConverter
class JsonNodeWritingConverter(private val objectMapper: ObjectMapper) : Converter&lt;JsonNode, Json&gt; {
    override fun convert(source: JsonNode): Json {
        return Json.of(objectMapper.writeValueAsString(source));
    }
}

@ReadingConverter
class JsonNodeReadingConverter(private val objectMapper: ObjectMapper) : Converter&lt;Json, JsonNode&gt; {
    override fun convert(source: Json): JsonNode? {
        return objectMapper.readTree(source.asString());
    }
}</code></pre><p></p></div></details><p>Далее следует удалить из упомянутой выше сущности <code>ModelEntity</code> лишние аннотации, в итоге должно получиться:</p><details class="spoiler"><summary>ModelEntity</summary><div class="spoiler__content"><pre><code class="kotlin">package com.mlwebservice.persist.entity

import com.fasterxml.jackson.databind.JsonNode
import com.fasterxml.jackson.databind.ObjectMapper
import com.fasterxml.jackson.databind.node.ObjectNode
import org.springframework.data.annotation.CreatedDate
import org.springframework.data.annotation.Id
import org.springframework.data.annotation.LastModifiedDate
import org.springframework.data.relational.core.mapping.Column
import org.springframework.data.relational.core.mapping.Table
import java.time.LocalDateTime
import java.util.*

@Table(name = "models", schema = "instrument_data")
data class ModelEntity constructor(
    @Id
    val id: Long? = null,
  
    @Column("model")
    val model: ByteArray,

    @Column("created_at")
    val createdAt: LocalDateTime,

    @Column("last_trained_at")
    val lastTrainedAt: LocalDateTime,

    @Column("task_id")
    val taskId: UUID,

    @Column("parameters")
    val parameters: JsonNode
)
// конструкторы и прочее необходимое</code></pre><p></p></div></details><p>Сам репозиторий сущностей теперь наследуется от R2dbcRepository:</p><pre><code class="kotlin">@Repository
interface ModelRepository : R2dbcRepository&lt;ModelEntity, Long&gt;</code></pre><p>Методы сохранения и загрузки модели трансформируются для работы в WebFlux:</p><details class="spoiler"><summary>методы для работы с моделями данных</summary><div class="spoiler__content"><p>метод загрузки модели из БД</p><pre><code class="kotlin">internal inline fun &lt;reified T&gt; loadModel(modelId: Long): T {
    val optional = modelRepository.findById(modelId)

    val entity = optional.get()
    val modelByteArray = entity.model

    val byteArrayInputStream = ByteArrayInputStream(modelByteArray)
    val modelObject = ObjectInputStream(byteArrayInputStream).use { it.readObject() }

    if (modelObject is T) {
        return modelObject
    } else {
        throw ServiceException.withMessage("Model id $modelId has incorrect format")
    }
}</code></pre><p>модифицируется до:</p><pre><code class="kotlin">internal inline fun &lt;reified T&gt; loadModel(modelId: Long): Mono&lt;T&gt; =
        modelRepository.findById(modelId)
            .map { modelEntity: ModelEntity -&gt;
                ByteArrayInputStream(modelEntity.model)
            }
            .publishOn(Schedulers.boundedElastic())
            .map { byteArrayInputStream: ByteArrayInputStream -&gt;
                ObjectInputStream(byteArrayInputStream).use { it.readObject() }
            }
            .flatMap { modelObject -&gt;
                if (modelObject is T) {
                    Mono.just(modelObject)
                } else {
                    Mono.error(ServiceException.withMessage("Model id $modelId has incorrect format"))
                }
            }</code></pre><p>а метод сохранения:</p><pre><code class="kotlin">fun saveModel(
    model : PredictionModel&lt;Vector, XGBoostRegressionModel&gt;,
    taskId : UUID,
    modelParameters : AnalyticsRequest.ModelParameters
) {
    val byteArrayOutputStream = ByteArrayOutputStream()
    ObjectOutputStream(byteArrayOutputStream).use { it.writeObject(model) }
    val modelByteArray: ByteArray = byteArrayOutputStream.toByteArray()
    val jsonParams : JsonNode = objectMapper.convertValue(modelParameters, JsonNode::class.java)

    val entity = ModelEntity(modelByteArray, taskId, jsonParams)
    modelRepository.save(entity)
    log.info("Model for task id {} saved. Parameters map: {}, jsonNode: {}",
        taskId, modelParameters, jsonParams)
}</code></pre><p>модифицируется до:</p><pre><code class="kotlin">fun saveModel(
        model: PredictionModel&lt;Vector, XGBoostRegressionModel&gt;,
        taskId: UUID,
        modelParameters: AnalyticsRequest.ModelParameters
    ): Mono&lt;Void&gt; =
        Mono.fromCallable {
            val jsonParams: JsonNode = objectMapper.convertValue(modelParameters, JsonNode::class.java)

            val byteArrayOutputStream = ByteArrayOutputStream()
            ObjectOutputStream(byteArrayOutputStream).use { objectOutputStream -&gt;
                objectOutputStream.writeObject(model)
            }
            val modelByteArray: ByteArray = byteArrayOutputStream.toByteArray()

            ModelEntity(modelByteArray, taskId, jsonParams)
        }
            .subscribeOn(Schedulers.boundedElastic())
            .flatMap { entity -&gt;
                modelRepository.save(entity)
                    .doOnSuccess {
                        log.info(
                            "Model for task id {} saved. Parameters map: {}, jsonNode: {}",
                            taskId, modelParameters, entity.parameters.toString()
                        )
                    }
                    .then()
            }</code></pre><p></p></div></details><h3>Cassandra</h3><p>Репозитории Cassandra строились на основе взаимодействия со спарковой сессией. Переработать методы довольно просто. Так, метод получения датасета в базовом абстрактном репозитории:</p><details class="spoiler"><summary>cassandraDataset web</summary><div class="spoiler__content"><pre><code class="kotlin">fun cassandraDataset(keyspace: String, table: String): Dataset&lt;Row&gt; {
    val cassandraDataset: Dataset&lt;Row&gt; = sparkSession.read()
        .format("org.apache.spark.sql.cassandra")
        .option("keyspace", keyspace)
        .option("table", table)
        .load()

    cassandraDataset.createOrReplaceTempView(table)
    return cassandraDataset
}</code></pre><p></p></div></details><p>модифицируется до:</p><details class="spoiler"><summary>cassandraDataset webflux</summary><div class="spoiler__content"><pre><code class="kotlin">fun cassandraDataset(keyspace: String, table: String): Mono&lt;Dataset&lt;Row&gt;&gt; =
    Mono.fromCallable {
        val cassandraDataset: Dataset&lt;Row&gt; = sparkSession.read()
            .format("org.apache.spark.sql.cassandra")
            .option("keyspace", keyspace)
            .option("table", table)
            .load()

        cassandraDataset.createOrReplaceTempView(table)
        cassandraDataset
    }</code></pre><p></p></div></details><p>метод сохранения датасета:</p><details class="spoiler"><summary>saveDataSet web</summary><div class="spoiler__content"><pre><code>open fun saveDataSet(dataset: Dataset&lt;Row&gt;) {
    dataset.write()
        .format("org.apache.spark.sql.cassandra")
        .mode("append")
        .option("confirm.truncate", "false")
        .option("keyspace", keyspace)
        .option("table", table)
        .save();
}</code></pre><p></p></div></details><p>модифицируется до:</p><details class="spoiler"><summary>saveDataSet webflux</summary><div class="spoiler__content"><pre><code class="kotlin">open fun saveDataSet(dataset: Dataset&lt;Row&gt;): Mono&lt;Void&gt; =
    Mono.fromRunnable {
        dataset.write()
            .format("org.apache.spark.sql.cassandra")
            .mode("append")
            .option("confirm.truncate", "false")
            .option("keyspace", keyspace)
            .option("table", table)
            .save()
    }</code></pre><p></p></div></details><p>метод получения базового датасета с определенными оффсетами:</p><details class="spoiler"><summary>getBaseDataSet web</summary><div class="spoiler__content"><pre><code class="kotlin">fun getBaseDataSet(
    ticker: String,
    taskNumber : UUID,
    dateStart : LocalDate,
    dateEnd : LocalDate,
    currentOffset : Int,
    batchSize : Int
): Dataset&lt;Row&gt; {
    val filteredDataset = cassandraDataset(table)
        .filter(
            functions.col("ticker").equalTo(ticker)
                .and(functions.col("task_number").equalTo(taskNumber.toString()))
                .and(functions.col("datetime").between(dateStart, dateEnd))
        )

    val offsetDataset = filteredDataset.withColumn(
        "row_number",
        functions.row_number().over(orderBy("datetime"))
    )

    return offsetDataset
        .filter(functions.col("row_number")
            .between(currentOffset + 1, currentOffset + batchSize))
        .drop("row_number")
}</code></pre><p></p></div></details><p>модифицируется до:</p><details class="spoiler"><summary>getBaseDataSet webflux</summary><div class="spoiler__content"><pre><code class="kotlin">fun getBaseDataSet(
    ticker: String,
    taskNumber: UUID,
    dateStart: LocalDate,
    dateEnd: LocalDate,
    currentOffset: Int,
    batchSize: Int
): Mono&lt;Dataset&lt;Row&gt;&gt; =
    cassandraDataset(table)
        .map { dataset -&gt;
            dataset
                .filter(
                    functions.col("ticker").equalTo(ticker)
                        .and(functions.col("task_number").equalTo(taskNumber.toString()))
                        .and(functions.col("datetime").between(dateStart, dateEnd))
                ).withColumn(
                    "row_number",
                    functions.row_number().over(orderBy("datetime"))
                )
                .filter(
                    functions.col("row_number")
                        .between(currentOffset + 1, currentOffset + batchSize)
                )
                .drop("row_number")
        }</code></pre><p></p></div></details><p>Остальные репозитории конкретных таблиц переписываются по такому же принципу.</p><p>В сервисе работы с данными следует упомянуть метод объединения датасетов (теперь же репозитории возвращают реактивные <code>Mono&lt;Dataset&lt;Row&gt;&gt;</code>):</p><details class="spoiler"><summary>getMainDataset web</summary><div class="spoiler__content"><pre><code class="kotlin">fun getMainDataset(
    ticker : String,
    taskNumber : UUID,
    dateStart : LocalDate,
    dateEnd : LocalDate
) : Dataset&lt;Row&gt; {
    val timeSeries = timeSeriesRepository.getDataset(ticker, taskNumber, dateStart, dateEnd).`as`("ts")
    val emaDataSet = emaRepository.getEmaDataSet(ticker, dateStart, dateEnd).`as`("ema")
    val stochasticDataset = stochasticRepository.getStochasticDataSet(ticker, dateStart, dateEnd).`as`("stoch")
    val bBandsDataset = bBandIndicatorRepository.getBBandsDataSet(ticker, dateStart, dateEnd).`as`("bb")
    val macdDataset = macdRepository.getMacdDataSet(ticker, dateStart, dateEnd).`as`("macd")
    val rsiDataset = rsiRepository.getRsiDataSet(ticker, dateStart, dateEnd).`as`("rsi")
    val smaDataset = smaRepository.getSmaDataSet(ticker, dateStart, dateEnd).`as`("sma")
    val willrDataset = willrRepository.getWillrDataSet(ticker, dateStart, dateEnd).`as`("willr")

    return combineDatasets(
        timeSeries, emaDataSet, stochasticDataset, bBandsDataset, macdDataset, rsiDataset, smaDataset, willrDataset
    )
}</code></pre><p></p></div></details><p>модифицируется до:</p><details class="spoiler"><summary>getMainDataset webflux</summary><div class="spoiler__content"><pre><code class="kotlin">fun getMainDataset(
    ticker: String,
    taskNumber: UUID,
    dateStart: LocalDate,
    dateEnd: LocalDate
): Mono&lt;Dataset&lt;Row&gt;&gt; {
    val timeSeriesMono = timeSeriesRepository.getDataset(ticker, taskNumber, dateStart, dateEnd)
        .map { dataset -&gt; dataset.alias("ts") }
    val emaDataSetMono = emaRepository.getEmaDataSet(ticker, dateStart, dateEnd)
        .map { dataset -&gt; dataset.alias("ema") }
    val stochasticDatasetMono = stochasticRepository.getStochasticDataSet(ticker, dateStart, dateEnd)
        .map { dataset -&gt; dataset.alias("stoch") }
    val bBandsDatasetMono = bBandIndicatorRepository.getBBandsDataSet(ticker, dateStart, dateEnd)
        .map { dataset -&gt; dataset.alias("bb") }
    val macdDatasetMono = macdRepository.getMacdDataSet(ticker, dateStart, dateEnd)
        .map { dataset -&gt; dataset.alias("macd") }
    val rsiDatasetMono = rsiRepository.getRsiDataSet(ticker, dateStart, dateEnd)
        .map { dataset -&gt; dataset.alias("rsi") }
    val smaDatasetMono = smaRepository.getSmaDataSet(ticker, dateStart, dateEnd)
        .map { dataset -&gt; dataset.alias("sma") }
    val willrDatasetMono = willrRepository.getWillrDataSet(ticker, dateStart, dateEnd)
        .map { dataset -&gt; dataset.alias("willr") }

    return Mono.zip(
        timeSeriesMono, emaDataSetMono, stochasticDatasetMono, bBandsDatasetMono,
        macdDatasetMono, rsiDatasetMono, smaDatasetMono, willrDatasetMono
    ).map { tuple -&gt;
        combineDatasets(tuple.t1, tuple.t2, tuple.t3, tuple.t4, tuple.t5, tuple.t6, tuple.t7, tuple.t8)
    }
}</code></pre><p></p></div></details><p>здесь получаются 8 датасетов в Mono-обертках, обертки объединяются в один Mono посредством .zip() и передаются на исполнение в метод комбинации датасетов, который не менялся.</p><h3>Сервис StockAnalyticsService</h3><p>Метод выполнения предикта с помощью сохраненной модели:</p><details class="spoiler"><summary>predictWithExistingModel web</summary><div class="spoiler__content"><pre><code class="kotlin">fun predictWithExistingModel(
    ticker : String,
    taskNumber : UUID,
    dateStart : LocalDate,
    dateEnd : LocalDate,
    modelId : Long
): StockPredictDto {
    val model: PredictionModel&lt;Vector, XGBoostRegressionModel&gt; = modelService.loadModel(modelId)
    val data = dataReaderService.getMainDataset(ticker, taskNumber, dateStart, dateEnd)

    var predictions = model.transform(data)
    predictions = predictions.select("dateTime", "prediction")
    return StockPredictDto.fromDataset(predictions)
}</code></pre><p></p></div></details><p>модифицируется до:</p><details class="spoiler"><summary>predictWithExistingModel webflux</summary><div class="spoiler__content"><pre><code class="kotlin">fun predictWithExistingModel(
    ticker: String,
    taskNumber: UUID,
    dateStart: LocalDate,
    dateEnd: LocalDate,
    modelId: Long
): Mono&lt;StockPredictDto&gt; =
    modelService.loadModel&lt;PredictionModel&lt;Vector, XGBoostRegressionModel&gt;&gt;(modelId)
        .flatMap { model -&gt;
            dataReaderService.getMainDataset(ticker, taskNumber, dateStart, dateEnd)
                .map { data -&gt;
                    val predictions = model.transform(data)
                        .select("dateTime", "prediction")
                    StockPredictDto.fromDataset(predictions)
                }
        }</code></pre><p></p></div></details><p>Метод обучения модели:</p><details class="spoiler"><summary>trainModel web</summary><div class="spoiler__content"><pre><code class="kotlin">fun trainModel(
    ticker : String,
    taskNumber : UUID,
    dateStart : LocalDate,
    dateEnd : LocalDate,
    evalPivotPoint : Long,
    offset : Long,
    modelParameters : AnalyticsRequest.ModelParameters
) : ModelTrainResultResponse {
    val pivot = dateEnd.minusDays(evalPivotPoint)

    val tdf = dataReaderService.getDatasetWithLabel(ticker, taskNumber, dateStart, pivot, offset)
    val edf = dataReaderService.getDatasetWithLabel(ticker, taskNumber, pivot, dateEnd, offset)
        .selectExpr(*allColumns)

    val modelParams = createModelParams(modelParameters)
    val regressor = xgBoostRegressor(modelParams)

    val model: PredictionModel&lt;Vector, XGBoostRegressionModel&gt; = regressor.fit(tdf)
    val predictions = model.transform(edf)

    combinedDataRepository.saveData(tdf.selectExpr(*allColumns).unionAll(edf), ticker, taskNumber)
    modelService.saveModel(model, taskNumber, modelParameters)

    val result = predictions.withColumn("error", col("prediction").minus(col(labelName)))
    return ModelTrainResultResponse(ModelTrainResult.listFromDataset(result.selectExpr(*resultExp)))
}</code></pre><p></p></div></details><p>модифицируется до:</p><details class="spoiler"><summary>trainModel webflux</summary><div class="spoiler__content"><pre><code class="kotlin">fun trainModel(
        ticker: String,
        taskNumber: UUID,
        dateStart: LocalDate,
        dateEnd: LocalDate,
        evalPivotPoint: Long,
        offset: Long,
        modelParameters: AnalyticsRequest.ModelParameters
    ): Mono&lt;ModelTrainResultResponse&gt; =
        Mono.just(dateEnd.minusDays(evalPivotPoint))
            .flatMap { pivot: LocalDate -&gt;
                dataReaderService.getDatasetWithLabel(ticker, taskNumber, dateStart, pivot, offset)
                    .zipWith(dataReaderService.getDatasetWithLabel(ticker, taskNumber, pivot, dateEnd, offset))
            }
            .flatMap { tuple: Tuple2&lt;Dataset&lt;Row&gt;, Dataset&lt;Row&gt;&gt; -&gt;
                val tdf = tuple.t1
                val edf = tuple.t2

                val modelParams = createModelParams(modelParameters)
                val regressor = xgBoostRegressor(modelParams)

                Mono.fromCallable { regressor.fit(tdf) }
                    .flatMap { model: XGBoostRegressionModel -&gt;
                        val predictions = model.transform(edf)

                        val saveDataMono = combinedDataRepository.saveData(
                            tdf.selectExpr(*allColumns).unionAll(edf),
                            ticker,
                            taskNumber
                        )

                        modelService.saveModel(model, taskNumber, modelParameters)
                            .then(saveDataMono)
                            .thenReturn(predictions)
                    }
            }
            .map { predictions: Dataset&lt;Row&gt; -&gt;
                val result = predictions.withColumn("error", col("prediction").minus(col(labelName)))
                ModelTrainResultResponse(ModelTrainResult.listFromDataset(result.selectExpr(*resultExp)))
            }</code></pre><p></p></div></details><p>здесь tdf и edf обернуты в Mono, поэтому объединяются в кортеж из двух элементов <code>Mono&lt;Tuple2&gt;</code>, далее в оборачиваем в <code>Callable</code> функцию <code>regressor.fit(tdf)</code>, которая будет выполнена асинхронно и вернет результат в виде <code>model: XGBoostRegressionModel</code>. В функции <code>flatMap</code> она используется с эвалюирующим датасетом для получения предиктов, затем сохраняется в БД с помощью описанного выше метода saveModel. Остальная логика очевидна.</p><p>Наибольшую сложность вызывает метод инкрементального обучения (да, на данной модели инкремент не работает и требуется замена XGBoost на другую модель, но цель была трансформировать логику под реактивную среду и получить работающий пример, который далее можно использовать для инкрементального обучения модели). </p><p>Исходный метод:</p><details class="spoiler"><summary>incrementTrainModel web</summary><div class="spoiler__content"><pre><code class="kotlin">fun incrementTrainModel(
    ticker : String,
    taskNumber : UUID,
    dateStart : LocalDate,
    dateEnd : LocalDate,
    evalPivotPoint : Long,
    offset : Long,
    batchSize : Int,
    modelParameters : AnalyticsRequest.ModelParameters
) : ModelTrainResultResponse {
    val pivot = dateEnd.minusDays(evalPivotPoint)
    var currentBatchOffset = 0
    var i = 0

    val modelParams = createModelParams(modelParameters)
    val regressor = xgBoostRegressor(modelParams)

    var model: PredictionModel&lt;Vector, XGBoostRegressionModel&gt;? = null
    var predictions: Dataset&lt;Row&gt;? = null

    var tdf: Dataset&lt;Row&gt;?
    do {
        log.info("Iteration {}: currentOffset {}", i, currentBatchOffset)
        tdf = dataReaderService.getDatasetWithLabel(
            ticker, taskNumber, dateStart, pivot, offset, currentBatchOffset, batchSize
        )
        if (tdf.isEmpty) break

        model = regressor.fit(tdf)
        combinedDataRepository.saveData(tdf.selectExpr(*allColumns), ticker, taskNumber)

        currentBatchOffset += batchSize
        i++
    } while (tdf?.isEmpty == false)

    val edf = dataReaderService.getDatasetWithLabel(
        ticker, taskNumber, pivot, dateEnd, offset, 0, 100).selectExpr(*allColumns)
    if (model != null) {
        predictions = model.transform(edf)
    }
    combinedDataRepository.saveData(edf.selectExpr(*allColumns), ticker, taskNumber)
    modelService.saveModel(model!!, taskNumber, modelParameters)

    val result = predictions!!.withColumn("error", col("prediction").minus(col(labelName)))
    return ModelTrainResultResponse(ModelTrainResult.listFromDataset(result.selectExpr(*resultExp)))
}</code></pre><p></p></div></details><p>модифицируется до:</p><details class="spoiler"><summary>incrementTrainModel webflux</summary><div class="spoiler__content"><pre><code class="kotlin">fun incrementTrainModel(
        ticker: String,
        taskNumber: UUID,
        dateStart: LocalDate,
        dateEnd: LocalDate,
        evalPivotPoint: Long,
        offset: Long,
        batchSize: Int,
        modelParameters: AnalyticsRequest.ModelParameters
    ): Mono&lt;ModelTrainResultResponse&gt; {
        val pivot = dateEnd.minusDays(evalPivotPoint)
        var currentBatchOffset = 0
        var i = 0

        val modelParams = createModelParams(modelParameters)
        val regressor = xgBoostRegressor(modelParams)

        var model: PredictionModel&lt;Vector, XGBoostRegressionModel&gt;? = null
        var tdf: Dataset&lt;Row&gt;? = null

        return Mono.defer {
            dataReaderService.getDatasetWithLabel(
                ticker, taskNumber, dateStart, pivot, offset, currentBatchOffset, batchSize
            )
        }
            .map { dataset -&gt;
                tdf = dataset
                log.info("Iteration {}: currentOffset {}", i, currentBatchOffset)
                if (tdf?.isEmpty == true) {
                    log.warn(
                        "tdf is empty, no more data for learning, Iteration {}: currentOffset {}",
                        i, currentBatchOffset
                    )
                    Mono.empty()
                } else {
                    model = regressor.fit(tdf)
                    log.info("model trained, Iteration {}: currentOffset {}", i, currentBatchOffset)
                    currentBatchOffset += batchSize
                    i++
                    combinedDataRepository.saveData(tdf!!.selectExpr(*allColumns), ticker, taskNumber)
                        .thenReturn(currentBatchOffset + batchSize)
                }
            }
            .repeat { tdf?.isEmpty == false }
            .then(dataReaderService
                .getDatasetWithLabel(ticker, taskNumber, pivot, dateEnd, offset, 0, 100)
                .flatMap { edf -&gt;
                    log.info("Got edf")
                    combinedDataRepository.saveData(edf.selectExpr(*allColumns), ticker, taskNumber)
                        .then(modelService.saveModel(model!!, taskNumber, modelParameters))
                        .thenReturn(model!!.transform(edf))
                }.map { predictions -&gt;
                    log.info("Predictions stage")
                    val result = predictions?.withColumn(
                        "error", col("prediction")
                            .minus(col(labelName))
                    )
                    ModelTrainResultResponse(ModelTrainResult.listFromDataset(result!!.selectExpr(*resultExp)))
                })
            .doOnError { exception -&gt;
                log.error("Error while increment learning; taskNumber = {}", taskNumber, exception)
                ModelTrainResultResponse()
            }
    }</code></pre><p></p></div></details><p>В отличие от Java, лямбда-выражения в Kotlin не требуют от переменных, чтобы они были effectively final, поэтому переменные <code>currentBatchOffset</code>, i, model и tdf могут изменяться в ходе выполнения основного стрима.</p><p>Здесь функция получения датасета обертывается в <code>Mono.defer()</code>. Особенность данного подхода в том, что выполнение функции откладывается до момента подписки на данный Mono. А подписка будет повторяться методом .repeat() до тех пор, пока не выполнится условие <code>tdf?.isEmpty == false</code>.</p><p>Когда очередной tdf будет пустым, выполнится логика в <code>then</code>: из кассандры будет получен датасет edf, который сохранится в таблице скомбинированных данных, так же будут получены предикты модели и сохранена сама модель. Затем из предиктов подготовится результат метода. В случае ошибки вернется пустой результат метода.</p><p>Не сказать, что это идеальное исполнение метода, но как пример сойдет.</p><p>Подробно реализацию можно посмотреть <a href="https://gitlab.com/AlexPit/java-ml-spark-example/-/tree/kubernetes-java17-spark332-reactive" rel="noopener noreferrer nofollow">в отдельной ветке репозитория</a>.</p><h2>Сравнение двух реализаций</h2><p>Как известно, реактивный стек отличается от сервлетного тем, что для выполнения одной и той же логики зачастую требуется меньше ресурсов. В некоторых случаях может возрасти скорость выполнения алгоритма.</p><p>Тестирование происходило по следующей методике: </p><ol><li><p>Сервис поднимается в Docker-контейнере с 4 CPU и 4 Gb памяти, использует Spark Executor (v. 3.3.2, JDK 17), так же в Docker контейнере, который подключается к Standalone-мастеру Spark в виртуальной машине. Все работает на одной машине под управлением Windows 10 Pro, задачи тренировки моделей выполняются на GPU NVidia 4090.</p></li><li><p>В течении 10 минут производятся запросы методов: обучения новой модели (POST /analytics - для сокращения “1 запрос”), получения предиктов с помощью сохраненной модели (GET /analytics - для сокращения “2 запрос”) и инкрементального обучения (POST /analytics/increment - для сокращения “3 запрос”) с batch_size = 50 записей, во время которого делается 12 итераций над 6 сотнями записей в таблицах Cassandra. Первый цикл на “не прогретом” драйвере (первые запросы всегда выполняются дольше), далее два одинаковых цикла по одному запросу каждого метода на “прогретом драйвере” и в четвертом цикле запускаются одновременно 1, 2, 3 методы.</p></li><li><p>Driver работает в режиме Spark Cluster, используется одна Spark Session на все время работы приложения;</p></li><li><p>Изначальные параметры запуска JVM одинаковые: первоначальный размер кучи 512 Мб, максимальный размер не указан, GC по умолчанию (G1).</p></li></ol><p>Результаты потребления ресурсов:</p><div><div class="table"><table><tbody><tr><td><p align="left"></p></td><td data-colwidth="123" width="123"><p align="left">Максимальное потребление CPU</p></td><td><p align="left">Среднее потребление CPU</p></td><td data-colwidth="122" width="122"><p align="left">Максимальное потребление памяти, Gb</p></td><td><p align="left">Среднее потребление памяти, Gb</p></td><td><p align="left">Количество Stop the world за 10 минут</p></td></tr><tr><td><p align="left">Spring Web</p></td><td data-colwidth="123" width="123"><p align="left">3,4</p></td><td><p align="left">1,5</p></td><td data-colwidth="122" width="122"><p align="left">4</p></td><td><p align="left">2</p></td><td><p align="left">4</p></td></tr><tr><td><p align="left">Spring Webflux</p></td><td data-colwidth="123" width="123"><p align="left">3,4</p></td><td><p align="left">1,1</p></td><td data-colwidth="122" width="122"><p align="left">1</p></td><td><p align="left">0,5</p></td><td><p align="left">0</p></td></tr></tbody></table></div></div><p>С указанными выше параметрами для сервлетного стека наблюдалось 4 stop the world от G1 GC, при этом один раз результатом выполнения предиктов из сохраненной модели стала ошибка сервера.</p><p>На графике видно, что потребление памяти растет линейно до момента, когда свободного места для кучи уже нет и ее необходимо чистить.</p><figure class="full-width "><img src="https://habrastorage.org/r/w1560/getpro/habr/upload_files/e08/f3c/48d/e08f3c48d26d8cce66809170930a50b7.png" alt="График потребления ресурсов Web приложения с параметрами JVM -Xms512m" title="График потребления ресурсов Web приложения с параметрами JVM -Xms512m" width="2997" height="1026" data-src="https://habrastorage.org/getpro/habr/upload_files/e08/f3c/48d/e08f3c48d26d8cce66809170930a50b7.png"/><div><figcaption>График потребления ресурсов Web приложения с параметрами JVM -Xms512m</figcaption></div></figure><p>У реактивного стека другая картина: после первых запросов стабильные ~0.5 Гб памяти. По потреблению CPU разница не настолько большая.</p><figure class="full-width "><img src="https://habrastorage.org/r/w1560/getpro/habr/upload_files/7e1/064/f04/7e1064f04404b72302373b5dd2866755.png" alt="График потребления ресурсов WebFlux приложения с параметрами JVM -Xms512m" title="График потребления ресурсов WebFlux приложения с параметрами JVM -Xms512m" width="2985" height="1010" data-src="https://habrastorage.org/getpro/habr/upload_files/7e1/064/f04/7e1064f04404b72302373b5dd2866755.png"/><div><figcaption>График потребления ресурсов WebFlux приложения с параметрами JVM -Xms512m</figcaption></div></figure><p>Скорость выполнения запросов:</p><figure class="full-width "><img src="https://habrastorage.org/r/w1560/getpro/habr/upload_files/8d5/d2e/23c/8d5d2e23c9a420c265176e3e538629a3.png" alt="Сравнительная таблица Web и WebFlux версия приложения с параметрами JVM -Xms512m" title="Сравнительная таблица Web и WebFlux версия приложения с параметрами JVM -Xms512m" width="1774" height="198" data-src="https://habrastorage.org/getpro/habr/upload_files/8d5/d2e/23c/8d5d2e23c9a420c265176e3e538629a3.png"/><div><figcaption>Сравнительная таблица Web и WebFlux версия приложения с параметрами JVM -Xms512m</figcaption></div></figure><p>Топ-5 классов по потреблению памяти:  </p><figure class="full-width "><img src="https://habrastorage.org/r/w1560/getpro/habr/upload_files/eb3/7fa/e74/eb37fae743e1bb4f63e556859398410c.png" width="1150" height="223" data-src="https://habrastorage.org/getpro/habr/upload_files/eb3/7fa/e74/eb37fae743e1bb4f63e556859398410c.png"/></figure><p>Учитывая, что весь результирующий датасет занимает около 55 Мб, такой объем аллоцированной памяти вызывает вопросы. Анализ стектрейсов показал, что в большинстве случаев источником и причиной является Spark и Rapids, которые строят план запросов, обмениваются данными между БД, экзекуторами и драйвером, подготавливают массивы данных для загрузки в GPU и вычитывают результат из него. Потратив некоторое время на изучение вопроса оптимизации использования памяти, могу сделать вывод, что это штатное поведение системы в такой конфигурации, и надо научиться с этим жить при использовании сервлетного стека.</p><p>Первые попытки жить с этим в привели к изменению параметров запуска JVM для сервлетного стека на следующие: -Xms512m -Xmx3g -XX:GCTimeRatio=19 (жесткое указание того, что система может потратить до 5% времени на сборку мусора - (1 / (1+19))) -XX:+UseZGC. Учитывая, что реактивному стеку достаточно в среднем 512 Мб памяти, и что Z GC потребляет несколько больше памяти, чем G1 GC, планка максимального размера кучи снизилась до 3 Гб. </p><figure class="full-width "><img src="https://habrastorage.org/r/w1560/getpro/habr/upload_files/0e1/ed9/277/0e1ed92770b663be5470a9d0bd7de83f.png" alt="График потребления ресурсов Web приложения с параметрами JVM -Xms512m -Xmx3g -XX:GCTimeRatio=19 -XX:+UseZGC" title="График потребления ресурсов Web приложения с параметрами JVM -Xms512m -Xmx3g -XX:GCTimeRatio=19 -XX:+UseZGC" width="2977" height="1004" data-src="https://habrastorage.org/getpro/habr/upload_files/0e1/ed9/277/0e1ed92770b663be5470a9d0bd7de83f.png"/><div><figcaption>График потребления ресурсов Web приложения с параметрами JVM -Xms512m -Xmx3g -XX:GCTimeRatio=19 -XX:+UseZGC</figcaption></div></figure><p>Потребление CPU незначительно снизилось, наблюдается схожее потребление памяти, но stop the world уже не зафиксировано. Судя по графику, после завершения работы методов POST /analytics и GET /analytics куча очищается, но при работе POST /analytics/increment куча очищается только к моменту приближения к своему максимальному размеру. Логика, которая могла бы вести к утечке памяти, отсутствует, причина такого высокого потребления памяти остается не выясненной. </p><p>Результаты переключения GC в таблице потребления ресурсов:</p><div><div class="table"><table><tbody><tr><td><p align="left"></p></td><td data-colwidth="126" width="126"><p align="left"><br/>Максимальное потребление CPU</p></td><td><p align="left">Среднее потребление CPU</p></td><td data-colwidth="124" width="124"><p align="left">Максимальное потребление памяти, Gb</p></td><td><p align="left">Среднее потребление памяти, Gb</p></td><td><p align="left">Количество Stop the world</p></td></tr><tr><td><p align="left">Spring Web</p></td><td data-colwidth="126" width="126"><p align="left">3,4</p></td><td><p align="left">1,5</p></td><td data-colwidth="124" width="124"><p align="left">3</p></td><td><p align="left">1,5</p></td><td><p align="left">0</p></td></tr><tr><td><p align="left">Spring Webflux</p></td><td data-colwidth="126" width="126"><p align="left">3,4</p></td><td><p align="left">1,1</p></td><td data-colwidth="124" width="124"><p align="left">1</p></td><td><p align="left">0,5</p></td><td><p align="left">0</p></td></tr></tbody></table></div></div><p>и скорости выполнения запросов:</p><figure class="full-width "><img src="https://habrastorage.org/r/w1560/getpro/habr/upload_files/7c5/fbd/ec8/7c5fbdec89c06d57889dec93f531219c.png" alt="Сравнительная таблица скорости выполнения запросов Web приложения с параметрами JVM -Xms512m -Xmx3g -XX:GCTimeRatio=19 -XX:+UseZGC относительно WebFlux приложения с G1 GC и параметрами JVM -Xms512m" title="Сравнительная таблица скорости выполнения запросов Web приложения с параметрами JVM -Xms512m -Xmx3g -XX:GCTimeRatio=19 -XX:+UseZGC относительно WebFlux приложения с G1 GC и параметрами JVM -Xms512m" width="1773" height="246" data-src="https://habrastorage.org/getpro/habr/upload_files/7c5/fbd/ec8/7c5fbdec89c06d57889dec93f531219c.png"/><div><figcaption>Сравнительная таблица скорости выполнения запросов Web приложения с параметрами JVM -Xms512m -Xmx3g -XX:GCTimeRatio=19 -XX:+UseZGC относительно WebFlux приложения с G1 GC и параметрами JVM -Xms512m</figcaption></div></figure><p>Стало интересно, что будет, если для G1 GC установить максимальный размер кучи как для Z GC и установить жесткий предел времени выполнения на сборку мусора. В этом случае оказалось, что память заполняется как и раньше, но stop the world стало больше, так как доступной памяти меньше, и, соответственно, заполняется она быстрее. Потребление ресурсов осталось примерно на том же уровне:</p><figure class="full-width "><img src="https://habrastorage.org/r/w1560/getpro/habr/upload_files/fd8/ac6/471/fd8ac6471e893d7b9c44a5b69718a8c6.png" alt="График потребления ресурсов Web приложения с параметрами JVM -Xms512m -Xmx3g -XX:GCTimeRatio=19 -XX:+UseG1GC" title="График потребления ресурсов Web приложения с параметрами JVM -Xms512m -Xmx3g -XX:GCTimeRatio=19 -XX:+UseG1GC" width="2966" height="1006" data-src="https://habrastorage.org/getpro/habr/upload_files/fd8/ac6/471/fd8ac6471e893d7b9c44a5b69718a8c6.png"/><div><figcaption>График потребления ресурсов Web приложения с параметрами JVM -Xms512m -Xmx3g -XX:GCTimeRatio=19 -XX:+UseG1GC</figcaption></div></figure><div><div class="table"><table><tbody><tr><td><p align="left"></p></td><td data-colwidth="123" width="123"><p align="left"><br/>Максимальное потребление CPU</p></td><td><p align="left">Среднее потребление CPU</p></td><td data-colwidth="125" width="125"><p align="left">Максимальное потребление памяти, Gb</p></td><td><p align="left">Среднее потребление памяти, Gb</p></td><td><p align="left">Количество Stop the world</p></td></tr><tr><td><p align="left">Spring Web</p></td><td data-colwidth="123" width="123"><p align="left">3,4</p></td><td><p align="left">1,5</p></td><td data-colwidth="125" width="125"><p align="left">3</p></td><td><p align="left">1,5</p></td><td><p align="left">6</p></td></tr><tr><td><p align="left">Spring Webflux</p></td><td data-colwidth="123" width="123"><p align="left">3,4</p></td><td><p align="left">1,1</p></td><td data-colwidth="125" width="125"><p align="left">1</p></td><td><p align="left">0,5</p></td><td><p align="left">0</p></td></tr></tbody></table></div></div><p>Скорость выполнения запросов возросла, но не существенно.</p><figure class="full-width "><img src="https://habrastorage.org/r/w1560/getpro/habr/upload_files/43c/9a1/f77/43c9a1f77e2ab983ecd185a569e79d29.png" alt="Сравнительная таблица скорости выполнения запросов Web приложения с параметрами JVM -Xms512m -Xmx3g -XX:GCTimeRatio=19 -XX:+UseG1GC относительно WebFlux приложения с G1 GC и параметрами JVM -Xms512m" title="Сравнительная таблица скорости выполнения запросов Web приложения с параметрами JVM -Xms512m -Xmx3g -XX:GCTimeRatio=19 -XX:+UseG1GC относительно WebFlux приложения с G1 GC и параметрами JVM -Xms512m" width="1774" height="246" data-src="https://habrastorage.org/getpro/habr/upload_files/43c/9a1/f77/43c9a1f77e2ab983ecd185a569e79d29.png"/><div><figcaption>Сравнительная таблица скорости выполнения запросов Web приложения с параметрами JVM -Xms512m -Xmx3g -XX:GCTimeRatio=19 -XX:+UseG1GC относительно WebFlux приложения с G1 GC и параметрами JVM -Xms512m</figcaption></div></figure><p>Так же попробовал в сервлетном стеке использовать Parallel GC с параметрами -Xms512m -Xmx4g -XX:GCTimeRatio=19 -XX:+UseParallelGC. Результаты самые худшие, за 10 минут удалось прогнать только 2 цикла. Если первые два метода выполнялись примерно за то же время без отклонений, то метод инкрементального обучения выполнялся в первый раз 3мин 32с, что хуже примерно на 1,5 минуты среднего результата сервлетного стека, а второй запрос подвис и выполнялся 8мин 10с. Результаты в таблицах не фиксировал.</p><figure class="full-width "><img src="https://habrastorage.org/r/w1560/getpro/habr/upload_files/0a5/529/1a5/0a55291a5dd00b285a5a6d8b0dbb5019.png" alt="График потребления ресурсов Web версии приложения с Pasrallel GC" title="График потребления ресурсов Web версии приложения с Pasrallel GC" width="1445" height="882" data-src="https://habrastorage.org/getpro/habr/upload_files/0a5/529/1a5/0a55291a5dd00b285a5a6d8b0dbb5019.png"/><div><figcaption>График потребления ресурсов Web версии приложения с Pasrallel GC</figcaption></div></figure><p>Напоследок применил настройки JVM -Xms512m -Xmx3g -XX:GCTimeRatio=19 -XX:+UseZGC к версии WebFlux, которая оказалась на данный момент самой оптимальной по потреблению ресурсов и скорости обработки запросов. Сравнительные таблицы версии с дефолтными параметрами и G1 GC и версии с кастомными параметрами JVM с Z GC ниже.</p><p>График потребления ресурсов:</p><figure class="full-width "><img src="https://habrastorage.org/r/w1560/getpro/habr/upload_files/6b8/0b7/6eb/6b80b76eb36d769f28e798de98753e98.png" alt="График потребления ресурсов WebFlux приложения с параметрами JVM -Xms512m -Xmx3g -XX:GCTimeRatio=19 -XX:+UseZGC" title="График потребления ресурсов WebFlux приложения с параметрами JVM -Xms512m -Xmx3g -XX:GCTimeRatio=19 -XX:+UseZGC" width="2965" height="1007" data-src="https://habrastorage.org/getpro/habr/upload_files/6b8/0b7/6eb/6b80b76eb36d769f28e798de98753e98.png"/><div><figcaption>График потребления ресурсов WebFlux приложения с параметрами JVM -Xms512m -Xmx3g -XX:GCTimeRatio=19 -XX:+UseZGC</figcaption></div></figure><p>Таблица потребления ресурсов:</p><div><div class="table"><table><tbody><tr><td><p align="left"></p></td><td data-colwidth="124" width="124"><p align="left"><br/>Максимальное потребление CPU</p></td><td><p align="left">Среднее потребление CPU</p></td><td data-colwidth="122" width="122"><p align="left">Максимальное потребление памяти, Gb</p></td><td><p align="left">Среднее потребление памяти, Gb</p></td><td><p align="left">Количество Stop the world</p></td></tr><tr><td><p align="left">Spring Webflux G1 GC</p></td><td data-colwidth="124" width="124"><p align="left">3,4</p></td><td><p align="left">1,1</p></td><td data-colwidth="122" width="122"><p align="left">1</p></td><td><p align="left">0,5</p></td><td><p align="left">0</p></td></tr><tr><td><p align="left">Spring Webflux Z GC</p></td><td data-colwidth="124" width="124"><p align="left">3,4</p></td><td><p align="left">1,4</p></td><td data-colwidth="122" width="122"><p align="left">2,84</p></td><td><p align="left">1,5</p></td><td><p align="left">0</p></td></tr></tbody></table></div></div><p>Таблица скорости выполнения запросов:  </p><figure class="full-width "><img src="https://habrastorage.org/r/w1560/getpro/habr/upload_files/98f/2bd/fb3/98f2bdfb3f7d10d28fea2cc7e56ce918.png" alt="Сравнительная таблица скорости выполнения запросов WebFlux приложения с параметрами JVM -Xms512m -Xmx3g -XX:GCTimeRatio=19 -XX:+UseZGC относительно WebFlux приложения с G1 GC и параметрами JVM -Xms512m" title="Сравнительная таблица скорости выполнения запросов WebFlux приложения с параметрами JVM -Xms512m -Xmx3g -XX:GCTimeRatio=19 -XX:+UseZGC относительно WebFlux приложения с G1 GC и параметрами JVM -Xms512m" width="1773" height="245" data-src="https://habrastorage.org/getpro/habr/upload_files/98f/2bd/fb3/98f2bdfb3f7d10d28fea2cc7e56ce918.png"/><div><figcaption>Сравнительная таблица скорости выполнения запросов WebFlux приложения с параметрами JVM -Xms512m -Xmx3g -XX:GCTimeRatio=19 -XX:+UseZGC относительно WebFlux приложения с G1 GC и параметрами JVM -Xms512m</figcaption></div></figure><p>Итоговые таблицы со всеми версиями и различными значениями параметров конфигурации JVM представлены ниже. За основу взяты результаты для WebFlux на G1 GC с одним параметром JVM минимального размера хипа 512m.</p><figure class="full-width "><img src="https://habrastorage.org/r/w1560/getpro/habr/upload_files/ad5/b75/e4f/ad5b75e4f9174de4db9df2c54e786ee9.png" alt="Сводные таблицы по потреблению ресурсов" title="Сводные таблицы по потреблению ресурсов" width="1037" height="737" data-src="https://habrastorage.org/getpro/habr/upload_files/ad5/b75/e4f/ad5b75e4f9174de4db9df2c54e786ee9.png"/><div><figcaption>Сводные таблицы по потреблению ресурсов</figcaption></div></figure><figure class="full-width "><img src="https://habrastorage.org/r/w1560/getpro/habr/upload_files/a1c/78f/d8d/a1c78fd8d21977140396f9080f9b9d0d.png" alt="Сводные таблицы времени выполнения запросов" title="Сводные таблицы времени выполнения запросов" width="1477" height="860" data-src="https://habrastorage.org/getpro/habr/upload_files/a1c/78f/d8d/a1c78fd8d21977140396f9080f9b9d0d.png"/><div><figcaption>Сводные таблицы времени выполнения запросов</figcaption></div></figure><h2>Вывод</h2><p>Подводя черту после написания третьей статьи на тему построения системы распределенного машинного обучения на Java и Kotlin, самый большой вывод, который напрашивается - построить подобную систему сложно, много неизвестных, необходимо выполнить много исследований, но добиться работающего решения вполне реально, было бы желание.</p><p>Если так случилось, что нужно выполнять задачи ML на JVM стеке технологий, <s>учите Python и не занимайтесь фигней, а руководству продайте альтернативную систему</s> отличным выбором в качестве основы будет Kotlin и Spring Webflux (как альтернатива - Web с Z GC), и, естественно, Apache Spark. По окончанию работ над любым приложением стоит провести проверку профилировщиком, так как с очень высокой вероятностью при дефолтных параметрах JVM работа приложения не будет оптимальной.</p><p>Другой вопрос - является ли данная система эффективной с точки зрения производительности и потребления ресурсов? Без тестов на альтернативной системе (например, Python + Dask) объективно ответить на данный вопрос я затрудняюсь. Возможно, в будущем попробую поднять такую систему и написать альтернативную логику на питоне, тогда будет с чем сравнить и о чем написать очередную статью.</p><p></p></div></div></div><!----><!----></div><!----><!----></div><!--]--><!----><div class="tm-article-presenter__meta" data-test-id="article-meta-links"><div class="tm-separated-list tm-article-presenter__meta-list"><span class="tm-separated-list__title">Теги:</span><ul class="tm-separated-list__list"><!--[--><li class="tm-separated-list__item"><!--[--><a href="/ru/search/?target_type=posts&amp;order=relevance&amp;q=[java]" class="tm-tags-list__link"><span>java</span></a><!--]--></li><li class="tm-separated-list__item"><!--[--><a href="/ru/search/?target_type=posts&amp;order=relevance&amp;q=[kotlin]" class="tm-tags-list__link"><span>kotlin</span></a><!--]--></li><li class="tm-separated-list__item"><!--[--><a href="/ru/search/?target_type=posts&amp;order=relevance&amp;q=[ml]" class="tm-tags-list__link"><span>ml</span></a><!--]--></li><li class="tm-separated-list__item"><!--[--><a href="/ru/search/?target_type=posts&amp;order=relevance&amp;q=[cuda]" class="tm-tags-list__link"><span>cuda</span></a><!--]--></li><li class="tm-separated-list__item"><!--[--><a href="/ru/search/?target_type=posts&amp;order=relevance&amp;q=[gpu]" class="tm-tags-list__link"><span>gpu</span></a><!--]--></li><li class="tm-separated-list__item"><!--[--><a href="/ru/search/?target_type=posts&amp;order=relevance&amp;q=[spring]" class="tm-tags-list__link"><span>spring</span></a><!--]--></li><li class="tm-separated-list__item"><!--[--><a href="/ru/search/?target_type=posts&amp;order=relevance&amp;q=[%D0%A1%D0%B5%D0%B7%D0%BE%D0%BD+java+one+love]" class="tm-tags-list__link"><span>Сезон java one love</span></a><!--]--></li><!--]--><!----></ul></div><div class="tm-separated-list tm-article-presenter__meta-list"><span class="tm-separated-list__title">Хабы:</span><ul class="tm-separated-list__list"><!--[--><li class="tm-separated-list__item"><!--[--><a href="/ru/hubs/java/" class="tm-hubs-list__link"><!--[--><span>Java</span><!--]--></a><!--]--></li><li class="tm-separated-list__item"><!--[--><a href="/ru/hubs/kotlin/" class="tm-hubs-list__link"><!--[--><span>Kotlin</span><!--]--></a><!--]--></li><!--]--><!----></ul></div></div><!----><!--]--></article><!--]--></div><!----></div><div style="" class="tm-article-sticky-panel" data-test-id="article-sticky-panel"><div class="tm-data-icons tm-data-icons tm-data-icons_space-big tm-article-sticky-panel__icons" data-test-id="article-stats-icons"><div class="tm-article-rating tm-data-icons__item"><div class="tm-votes-meter tm-article-rating__votes-switcher"><svg class="tm-svg-img tm-votes-meter__icon tm-votes-meter__icon tm-votes-meter__icon_appearance-article" height="24" width="24"><title>Всего голосов 6: ↑5 и ↓1</title><use xlink:href="/img/megazord-v28.371b7fa3..svg#counter-rating"></use></svg><span class="tm-votes-meter__value tm-votes-meter__value_positive tm-votes-meter__value_appearance-article tm-votes-meter__value_rating tm-votes-meter__value" data-test-id="votes-meter-value" title="Всего голосов 6: ↑5 и ↓1">+8</span></div><!--teleport start--><!--teleport end--><!----></div><!----><!----><button class="bookmarks-button tm-data-icons__item" title="Добавить в закладки" type="button"><span class="tm-svg-icon__wrapper bookmarks-button__icon"><svg class="tm-svg-img tm-svg-icon" height="24" width="24"><title>Добавить в закладки</title><use xlink:href="/img/megazord-v28.371b7fa3..svg#counter-favorite"></use></svg></span><span class="bookmarks-button__counter" title="Количество пользователей, добавивших публикацию в закладки">26</span></button><div class="tm-sharing tm-data-icons__item" title="Поделиться"><button class="tm-sharing__button" type="button"><svg viewbox="0 0 24 24" xmlns="http://www.w3.org/2000/svg" class="tm-sharing__icon"><path fill="currentColor" d="M13.8 13.8V18l7.2-6.6L13.8 5v3.9C5 8.9 3 18.6 3 18.6c2.5-4.4 6-4.8 10.8-4.8z"></path></svg></button><!--teleport start--><!--teleport end--></div><div class="tm-article-comments-counter-link tm-data-icons__item" title="Читать комментарии"><a href="/ru/articles/752702/comments/" class="tm-article-comments-counter-link__link" data-test-id="counter-comments"><!--[--><svg class="tm-svg-img tm-article-comments-counter-link__icon" height="24" width="24"><title>Комментарии</title><use xlink:href="/img/megazord-v28.371b7fa3..svg#counter-comments"></use></svg><span class="tm-article-comments-counter-link__value">4</span><!--]--></a><!----></div><!--[--><!--[--><!--[--><!----><!--]--><!--]--><!--]--><!--teleport start--><!--teleport end--><!----></div></div></div><!--[--><!--]--><div class="tm-article-presenter__footer"><!--[--><!--[--><div class="tm-article-blocks"><!----><!--[--><section class="tm-block tm-block tm-block_spacing-bottom"><!----><!--[--><div class="tm-block__body tm-block__body tm-block__body_variant-balanced"><!--[--><div class="tm-article-author" data-test-id="article-author-info" data-async-called="true"><!--[--><!--]--><div class="tm-user-card tm-user-card tm-user-card_variant-article tm-article-author__user-card" data-async-called="true"><div class="tm-user-card__info-container"><div class="tm-user-card__header"><div class="tm-user-card__header-data"><a href="/ru/users/Dartya/" class="tm-user-card__userpic tm-user-card__userpic_size-40"><div class="tm-entity-image"><!--[--><img alt="" class="tm-entity-image__pic" src="https://assets.habr.com/habr-web/img/avatars/014.png"><!--]--></div></a><div class="tm-user-card__meta"><div class="tm-counter-container tm-karma tm-karma" title=" 13 голосов "><div class="tm-counter-container__header"><!--[--><div class="karma-display positive" data-v-7635202e>13</div><!----><!--]--></div><div class="tm-counter-container__footer"><!--[--><div class="tm-karma__text">Карма</div><!--teleport start--><!--teleport end--><!--]--></div></div><div class="tm-counter-container" title="Рейтинг пользователя"><div class="tm-counter-container__header"><!--[--><!--[--><!--]--><div class="tm-votes-lever tm-votes-lever tm-votes-lever_appearance-rating"><!----><div class="tm-votes-lever__score tm-votes-lever__score_appearance-rating tm-votes-lever__score"><!--[--><span><span class="tm-votes-lever__score-counter tm-votes-lever__score-counter_rating tm-votes-lever__score-counter" data-test-id="votes-score-counter">0</span></span><!--]--></div><!----></div><!--]--></div><div class="tm-counter-container__footer"><!--[--><span class="tm-rating__text tm-rating__text">Рейтинг</span><!--]--></div></div></div></div></div><div class="tm-user-card__info tm-user-card__info_variant-article tm-user-card__info"><div class="tm-user-card__title tm-user-card__title_variant-article tm-user-card__title"><span class="tm-user-card__name tm-user-card__name_variant-article tm-user-card__name">Александр Питасов</span><a href="/ru/users/Dartya/" class="tm-user-card__nickname tm-user-card__nickname tm-user-card__nickname_variant-article"> @Dartya</a><!----></div><p class="tm-user-card__short-info tm-user-card__short-info_variant-article tm-user-card__short-info" data-test-id="user-card-speciality">Пользователь</p></div></div><!----><div class="tm-user-card__buttons tm-user-card__buttons_variant-article tm-user-card__buttons"><!----><div class="tm-user-card__button"><div class="tm-button-follow tm-user-card__button-follow"><!----><button class="tm-button-follow__button tm-button-follow__button_big" data-test-id="follow-button" type="button">Подписаться</button></div></div><!----><div class="tm-user-card__button tm-user-card__button_write" data-test-id="user-card-conversations"><svg class="tm-svg-img tm-user-card__button-icon" height="16" width="16"><title>Отправить сообщение</title><use xlink:href="/img/megazord-v28.371b7fa3..svg#mail"></use></svg></div><!----></div><!----></div><div class="tm-article-author__user-contacts" data-test-id="author-contacts"><!----><!----><!----></div></div><!--]--></div><!--]--><!----></section><!----><!--[--><div class="banner-wrapper leaderboard tm-page-article__banner" style="--467224fc:200px;--58ff5eba:auto;" data-v-ad758baa><!--[--><div class="placeholder-wrapper placeholder" data-v-ad758baa><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><div class="adfox-banner-placeholder leaderboard" data-v-12f7bcca><div class="image loads" data-v-12f7bcca></div><div class="lines" data-v-12f7bcca><div class="line loads" data-v-12f7bcca></div><div class="line loads" data-v-12f7bcca></div><div class="line loads" data-v-12f7bcca></div></div></div><!----></div><div id="adfox_164725660339535756" class="tm-adfox-banner" data-v-ad758baa></div><!--]--></div><!--]--><!--]--><div class="tm-article-blocks__comments"><div id="publication-comments" class="tm-article-page-comments"><div><!--[--><div class="tm-article-comments-counter-link tm-article-comments-counter-button"><a href="/ru/articles/752702/comments/" class="tm-article-comments-counter-link__link tm-article-comments-counter-link__link_button-style" data-test-id="counter-comments"><!--[--><svg class="tm-svg-img tm-article-comments-counter-link__icon tm-article-comments-counter-link__icon_contrasted" height="24" width="24"><title>Комментарии</title><use xlink:href="/img/megazord-v28.371b7fa3..svg#counter-comments"></use></svg><span class="tm-article-comments-counter-link__value tm-article-comments-counter-link__value_contrasted"> Комментарии 4 </span><!--]--></a><!----></div><!--]--></div></div></div><!--[--><!--[--><!--]--><section class="tm-block tm-block tm-block_spacing-bottom"><header class="tm-block__header tm-block__header tm-block__header_variant-borderless"><div class="tm-block__header-container"><h2 class="tm-block__title tm-block__title tm-block__title_variant-large">Публикации</h2><!--[--><!--]--></div><!----></header><!--[--><div class="tm-block__body tm-block__body tm-block__body_variant-condensed-slim"><!--[--><!--[--><div class="tm-tabs tm-tabs"><div class=""><!--[--><span class="tm-tabs__tab-item"><button class="tm-tabs__tab-link tm-tabs__tab-link_active tm-tabs__tab-link_slim tm-tabs__tab-link">Лучшие за сутки</button></span><span class="tm-tabs__tab-item"><button class="tm-tabs__tab-link tm-tabs__tab-link_slim tm-tabs__tab-link">Похожие</button></span><!--]--></div><!----></div><div class="similar-and-daily__tab-view"><div class="daily-articles-list"><ul class="tm-article-card-list"><!--[--><!--]--><div class="tm-bordered-card"><!----><!--[--><!--]--></div></ul><div class="daily-articles-block__button-container"><button class="btn btn_transparent btn_small tm-button tm-button_color-horizon" type="button"><!--[--><!--[-->Показать лучшие за всё время<!--]--><!--]--></button></div></div><!----></div><!--]--><!--]--></div><!--]--><!----></section><!--[--><section class="tm-block tm-block tm-block_spacing-around tm-stories-block" data-navigatable tabindex="0" data-async-called="true"><header class="tm-block__header tm-block__header"><div class="tm-block__header-container"><h2 class="tm-block__title tm-block__title">Истории</h2><!--[--><!--]--></div><!----></header><!--[--><div class="tm-block__body tm-block__body tm-block__body_variant-equal"><!--[--><div class="tm-stories-empty"><!--[--><div class="tm-stories-card-empty"><div class="tm-stories-card-empty__image"></div><div class="tm-stories-card-empty__title"><div class="tm-stories-card-empty__title-block"></div><div class="tm-stories-card-empty__title-block"></div><div class="tm-stories-card-empty__title-block"></div></div></div><div class="tm-stories-card-empty"><div class="tm-stories-card-empty__image"></div><div class="tm-stories-card-empty__title"><div class="tm-stories-card-empty__title-block"></div><div class="tm-stories-card-empty__title-block"></div><div class="tm-stories-card-empty__title-block"></div></div></div><div class="tm-stories-card-empty"><div class="tm-stories-card-empty__image"></div><div class="tm-stories-card-empty__title"><div class="tm-stories-card-empty__title-block"></div><div class="tm-stories-card-empty__title-block"></div><div class="tm-stories-card-empty__title-block"></div></div></div><div class="tm-stories-card-empty"><div class="tm-stories-card-empty__image"></div><div class="tm-stories-card-empty__title"><div class="tm-stories-card-empty__title-block"></div><div class="tm-stories-card-empty__title-block"></div><div class="tm-stories-card-empty__title-block"></div></div></div><div class="tm-stories-card-empty"><div class="tm-stories-card-empty__image"></div><div class="tm-stories-card-empty__title"><div class="tm-stories-card-empty__title-block"></div><div class="tm-stories-card-empty__title-block"></div><div class="tm-stories-card-empty__title-block"></div></div></div><div class="tm-stories-card-empty"><div class="tm-stories-card-empty__image"></div><div class="tm-stories-card-empty__title"><div class="tm-stories-card-empty__title-block"></div><div class="tm-stories-card-empty__title-block"></div><div class="tm-stories-card-empty__title-block"></div></div></div><!--]--></div><!----><!--]--></div><!--]--><!----></section><div class="placeholder-wrapper"><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><div class="tm-placeholder-inset tm-placeholder-courses"><div class="tm-placeholder-inset__header"><div class="tm-placeholder__line tm-placeholder__line_inset-header loads"></div></div><div class="tm-placeholder-inset__body"><ul class="tm-placeholder-list"><!--[--><li class="tm-placeholder-list__item tm-placeholder-list__item_inset"><div class="tm-placeholder-list__title-container"><div class="tm-placeholder__company-avatar"></div><div class="tm-placeholder__line tm-placeholder__line_item-title loads"></div></div><div class="tm-project-block-items__properties"><!--[--><span class="tm-project-block-items__property-item"><span class="tm-placeholder__line loads" style="width:100px;"></span></span><span class="tm-project-block-items__property-item"><span class="tm-placeholder__line loads" style="width:100px;"></span></span><span class="tm-project-block-items__property-item"><span class="tm-placeholder__line loads" style="width:100px;"></span></span><!--]--></div></li><li class="tm-placeholder-list__item tm-placeholder-list__item_inset"><div class="tm-placeholder-list__title-container"><div class="tm-placeholder__company-avatar"></div><div class="tm-placeholder__line tm-placeholder__line_item-title loads"></div></div><div class="tm-project-block-items__properties"><!--[--><span class="tm-project-block-items__property-item"><span class="tm-placeholder__line loads" style="width:100px;"></span></span><span class="tm-project-block-items__property-item"><span class="tm-placeholder__line loads" style="width:100px;"></span></span><span class="tm-project-block-items__property-item"><span class="tm-placeholder__line loads" style="width:100px;"></span></span><!--]--></div></li><li class="tm-placeholder-list__item tm-placeholder-list__item_inset"><div class="tm-placeholder-list__title-container"><div class="tm-placeholder__company-avatar"></div><div class="tm-placeholder__line tm-placeholder__line_item-title loads"></div></div><div class="tm-project-block-items__properties"><!--[--><span class="tm-project-block-items__property-item"><span class="tm-placeholder__line loads" style="width:100px;"></span></span><span class="tm-project-block-items__property-item"><span class="tm-placeholder__line loads" style="width:100px;"></span></span><span class="tm-project-block-items__property-item"><span class="tm-placeholder__line loads" style="width:100px;"></span></span><!--]--></div></li><li class="tm-placeholder-list__item tm-placeholder-list__item_inset"><div class="tm-placeholder-list__title-container"><div class="tm-placeholder__company-avatar"></div><div class="tm-placeholder__line tm-placeholder__line_item-title loads"></div></div><div class="tm-project-block-items__properties"><!--[--><span class="tm-project-block-items__property-item"><span class="tm-placeholder__line loads" style="width:100px;"></span></span><span class="tm-project-block-items__property-item"><span class="tm-placeholder__line loads" style="width:100px;"></span></span><span class="tm-project-block-items__property-item"><span class="tm-placeholder__line loads" style="width:100px;"></span></span><!--]--></div></li><li class="tm-placeholder-list__item tm-placeholder-list__item_inset"><div class="tm-placeholder-list__title-container"><div class="tm-placeholder__company-avatar"></div><div class="tm-placeholder__line tm-placeholder__line_item-title loads"></div></div><div class="tm-project-block-items__properties"><!--[--><span class="tm-project-block-items__property-item"><span class="tm-placeholder__line loads" style="width:100px;"></span></span><span class="tm-project-block-items__property-item"><span class="tm-placeholder__line loads" style="width:100px;"></span></span><span class="tm-project-block-items__property-item"><span class="tm-placeholder__line loads" style="width:100px;"></span></span><!--]--></div></li><!--]--></ul></div><div class="tm-placeholder-inset__footer"><div class="tm-placeholder__line tm-placeholder__line_inset-footer loads"></div></div></div><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----></div><!--]--><!----><!--[--><div><div class="placeholder-wrapper"><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><div class="tm-placeholder-promo"><div class="tm-placeholder-promo__header"><div class="tm-placeholder__line tm-placeholder__line_promo-title"></div></div><div class="tm-placeholder-promo__body"><div class="tm-placeholder-promo__posts"><div class="tm-placeholder-promo__post"><div class="tm-placeholder-promo__image"></div><div class="tm-placeholder__line tm-placeholder__line_post-title"></div></div><div class="tm-placeholder-promo__post"><div class="tm-placeholder-promo__image"></div><div class="tm-placeholder__line tm-placeholder__line_post-title"></div></div><div class="tm-placeholder-promo__post"><div class="tm-placeholder-promo__image"></div><div class="tm-placeholder__line tm-placeholder__line_post-title"></div></div></div><div class="tm-placeholder-promo__dots"><div class="tm-placeholder-promo__dot"></div><div class="tm-placeholder-promo__dot"></div><div class="tm-placeholder-promo__dot"></div></div></div></div><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----></div></div><section class="tm-block tm-block tm-block_spacing-top" data-async-called="true"><header class="tm-block__header tm-block__header"><div class="tm-block__header-container"><h2 class="tm-block__title tm-block__title">Работа</h2><!--[--><!--]--></div><!----></header><!--[--><div class="tm-block__body tm-block__body"><!--[--><!--[--><div class="tm-vacancies-block__item"><a class="tm-vacancies-block__vacancy-title" href="https://career.habr.com/vacancies/java_developer" target="_blank">Java разработчик</a><div class="tm-vacancies-block__vacancies-count">211
    вакансий</div></div><!--]--><!--]--></div><!--]--><footer class="tm-block__footer"><!--[--><a class="tm-block-extralink" href="https://career.habr.com/catalog">Все вакансии</a><!--]--></footer></section><section class="tm-block tm-block tm-block_spacing-around tm-events-block" data-navigatable tabindex="0" data-async-called="true"><header class="tm-block__header tm-block__header tm-block__header_variant-borderless-large"><div class="tm-block__header-container"><h2 class="tm-block__title tm-block__title">Ближайшие события</h2><!--[--><!--]--></div><!----></header><!--[--><div class="tm-block__body tm-block__body tm-block__body_variant-equal"><!--[--><div class="swiper-container tm-events-widget" style="--swiper-space-between:22px;"><div class="swiper-wrapper"><!--[--><!--[--><div class="swiper-slide"><!--[--><section class="tm-block tm-block tm-block_spacing-none" id="588" tabindex="-1"><!----><!--[--><div class="tm-event-card tm-event-card_is-widget tm-event-card_responsive"><a href="/ru/events/588/" class=""><img alt class="tm-event-card__image" data-src="https://habrastorage.org/getpro/habr/upload_files/f79/1fc/79d/f791fc79d0d9fdda84397ed0c0717764.png" loading="lazy" src="https://habrastorage.org/r/w390/getpro/habr/upload_files/f79/1fc/79d/f791fc79d0d9fdda84397ed0c0717764.png" srcset="https://habrastorage.org/r/w390/getpro/habr/upload_files/f79/1fc/79d/f791fc79d0d9fdda84397ed0c0717764.png, https://habrastorage.org/getpro/habr/upload_files/f79/1fc/79d/f791fc79d0d9fdda84397ed0c0717764.png 2x"></a><!----><div class="tm-event-card__info"><div class="tm-event-card__date"><!----><div class="tm-event-card__day"><span>17  февраля   – 24  марта  </span></div></div><a href="/ru/events/588/" class="tm-event-card__title-link"><span>Конкурс «Снежный код» от Хекслета. Три гранта на бесплатное 10-месячное обучение</span></a><div class="tm-event-card__places"><div class="tm-event-card__places-list"><!--[--><span class="tm-event-card__places-item"><span>Онлайн</span><!----></span><!--]--></div></div></div><div class="tm-event-card__footer tm-event-card__footer_widget"><a href="/ru/events/#588" class="tm-event-card__link">Больше событий в календаре</a><div class="tm-event-card__categories"><!--[--><div class="event-category__label event-category__label_type-development"><span>Разработка</span></div><!--]--></div></div></div><!--]--><!----></section><!--]--></div><div class="swiper-slide"><!--[--><section class="tm-block tm-block tm-block_spacing-none" id="596" tabindex="-1"><!----><!--[--><div class="tm-event-card tm-event-card_is-widget tm-event-card_responsive"><a href="/ru/events/596/" class=""><img alt class="tm-event-card__image" data-src="https://habrastorage.org/getpro/habr/upload_files/b14/cd3/772/b14cd3772bc67698c8fbfd846e23824a.png" loading="lazy" src="https://habrastorage.org/r/w390/getpro/habr/upload_files/b14/cd3/772/b14cd3772bc67698c8fbfd846e23824a.png" srcset="https://habrastorage.org/r/w390/getpro/habr/upload_files/b14/cd3/772/b14cd3772bc67698c8fbfd846e23824a.png, https://habrastorage.org/getpro/habr/upload_files/b14/cd3/772/b14cd3772bc67698c8fbfd846e23824a.png 2x"></a><!----><div class="tm-event-card__info"><div class="tm-event-card__date"><!----><div class="tm-event-card__day"><span>20  марта  </span></div></div><a href="/ru/events/596/" class="tm-event-card__title-link"><span>Офлайн-конференция Хабр х K-team: как удерживать таланты в 2025 году</span></a><div class="tm-event-card__places"><div class="tm-event-card__places-list"><!--[--><span class="tm-event-card__places-item"><span>Москва</span><!----></span><!--]--></div></div></div><div class="tm-event-card__footer tm-event-card__footer_widget"><a href="/ru/events/#596" class="tm-event-card__link">Больше событий в календаре</a><div class="tm-event-card__categories"><!--[--><div class="event-category__label event-category__label_type-other"><span>Другое</span></div><!--]--></div></div></div><!--]--><!----></section><!--]--></div><div class="swiper-slide"><!--[--><section class="tm-block tm-block tm-block_spacing-none" id="604" tabindex="-1"><!----><!--[--><div class="tm-event-card tm-event-card_is-widget tm-event-card_responsive"><a href="/ru/events/604/" class=""><img alt class="tm-event-card__image" data-src="https://habrastorage.org/getpro/habr/upload_files/733/9ef/194/7339ef1945f3ee6906daf89db79829d4.png" loading="lazy" src="https://habrastorage.org/r/w390/getpro/habr/upload_files/733/9ef/194/7339ef1945f3ee6906daf89db79829d4.png" srcset="https://habrastorage.org/r/w390/getpro/habr/upload_files/733/9ef/194/7339ef1945f3ee6906daf89db79829d4.png, https://habrastorage.org/getpro/habr/upload_files/733/9ef/194/7339ef1945f3ee6906daf89db79829d4.png 2x"></a><!----><div class="tm-event-card__info"><div class="tm-event-card__date"><!----><div class="tm-event-card__day"><span>20  марта  </span></div></div><a href="/ru/events/604/" class="tm-event-card__title-link"><span>IX HappyWorkForum | Аутентичность и ментальное здоровье персонала</span></a><div class="tm-event-card__places"><div class="tm-event-card__places-list"><!--[--><span class="tm-event-card__places-item"><span>Москва</span><span class="tm-event-card__places-separator"> • </span></span><span class="tm-event-card__places-item"><span>Онлайн</span><!----></span><!--]--></div></div></div><div class="tm-event-card__footer tm-event-card__footer_widget"><a href="/ru/events/#604" class="tm-event-card__link">Больше событий в календаре</a><div class="tm-event-card__categories"><!--[--><div class="event-category__label event-category__label_type-other"><span>Другое</span></div><!--]--></div></div></div><!--]--><!----></section><!--]--></div><div class="swiper-slide"><!--[--><section class="tm-block tm-block tm-block_spacing-none" id="612" tabindex="-1"><!----><!--[--><div class="tm-event-card tm-event-card_is-widget tm-event-card_responsive"><a href="/ru/events/612/" class=""><img alt class="tm-event-card__image" data-src="https://habrastorage.org/getpro/habr/upload_files/38f/10d/f4c/38f10df4c7f9d7c5d4610fe426af0ab4.png" loading="lazy" src="https://habrastorage.org/r/w390/getpro/habr/upload_files/38f/10d/f4c/38f10df4c7f9d7c5d4610fe426af0ab4.png" srcset="https://habrastorage.org/r/w390/getpro/habr/upload_files/38f/10d/f4c/38f10df4c7f9d7c5d4610fe426af0ab4.png, https://habrastorage.org/getpro/habr/upload_files/38f/10d/f4c/38f10df4c7f9d7c5d4610fe426af0ab4.png 2x"></a><!----><div class="tm-event-card__info"><div class="tm-event-card__date"><!----><div class="tm-event-card__day"><span>20  марта  </span></div></div><a href="/ru/events/612/" class="tm-event-card__title-link"><span>Вебинар «Мастерская бюджета: как управлять затратами на облачные ресурсы»</span></a><div class="tm-event-card__places"><div class="tm-event-card__places-list"><!--[--><span class="tm-event-card__places-item"><span>Онлайн</span><!----></span><!--]--></div></div></div><div class="tm-event-card__footer tm-event-card__footer_widget"><a href="/ru/events/#612" class="tm-event-card__link">Больше событий в календаре</a><div class="tm-event-card__categories"><!--[--><div class="event-category__label event-category__label_type-development"><span>Разработка</span></div><div class="event-category__label event-category__label_type-admin"><span>Администрирование</span></div><!--]--></div></div></div><!--]--><!----></section><!--]--></div><div class="swiper-slide"><!--[--><section class="tm-block tm-block tm-block_spacing-none" id="616" tabindex="-1"><!----><!--[--><div class="tm-event-card tm-event-card_is-widget tm-event-card_responsive"><a href="/ru/events/616/" class=""><img alt class="tm-event-card__image" data-src="https://habrastorage.org/getpro/habr/upload_files/523/7fb/13a/5237fb13ad7fb6fb483c49691aaec836.png" loading="lazy" src="https://habrastorage.org/r/w390/getpro/habr/upload_files/523/7fb/13a/5237fb13ad7fb6fb483c49691aaec836.png" srcset="https://habrastorage.org/r/w390/getpro/habr/upload_files/523/7fb/13a/5237fb13ad7fb6fb483c49691aaec836.png, https://habrastorage.org/getpro/habr/upload_files/523/7fb/13a/5237fb13ad7fb6fb483c49691aaec836.png 2x"></a><!----><div class="tm-event-card__info"><div class="tm-event-card__date"><!----><div class="tm-event-card__day"><span>21  марта  </span></div></div><a href="/ru/events/616/" class="tm-event-card__title-link"><span>Бизнес-конференция «Digital Brand Day 2025: Орбита 2025»</span></a><div class="tm-event-card__places"><div class="tm-event-card__places-list"><!--[--><span class="tm-event-card__places-item"><span>Москва</span><!----></span><!--]--></div></div></div><div class="tm-event-card__footer tm-event-card__footer_widget"><a href="/ru/events/#616" class="tm-event-card__link">Больше событий в календаре</a><div class="tm-event-card__categories"><!--[--><div class="event-category__label event-category__label_type-marketing"><span>Маркетинг</span></div><div class="event-category__label event-category__label_type-other"><span>Другое</span></div><!--]--></div></div></div><!--]--><!----></section><!--]--></div><div class="swiper-slide"><!--[--><section class="tm-block tm-block tm-block_spacing-none" id="608" tabindex="-1"><!----><!--[--><div class="tm-event-card tm-event-card_is-widget tm-event-card_responsive"><a href="/ru/events/608/" class=""><img alt class="tm-event-card__image" data-src="https://habrastorage.org/getpro/habr/upload_files/8fd/e04/ddd/8fde04ddd9ba3f6bcd515aa6209f96b7.png" loading="lazy" src="https://habrastorage.org/r/w390/getpro/habr/upload_files/8fd/e04/ddd/8fde04ddd9ba3f6bcd515aa6209f96b7.png" srcset="https://habrastorage.org/r/w390/getpro/habr/upload_files/8fd/e04/ddd/8fde04ddd9ba3f6bcd515aa6209f96b7.png, https://habrastorage.org/getpro/habr/upload_files/8fd/e04/ddd/8fde04ddd9ba3f6bcd515aa6209f96b7.png 2x"></a><!----><div class="tm-event-card__info"><div class="tm-event-card__date"><!----><div class="tm-event-card__day"><span>27  марта  </span></div></div><a href="/ru/events/608/" class="tm-event-card__title-link"><span>Вебинар «Контент-маркетинг здорового человека: как привлечь внимание аудитории»</span></a><div class="tm-event-card__places"><div class="tm-event-card__places-list"><!--[--><span class="tm-event-card__places-item"><span>Онлайн</span><!----></span><!--]--></div></div></div><div class="tm-event-card__footer tm-event-card__footer_widget"><a href="/ru/events/#608" class="tm-event-card__link">Больше событий в календаре</a><div class="tm-event-card__categories"><!--[--><div class="event-category__label event-category__label_type-marketing"><span>Маркетинг</span></div><div class="event-category__label event-category__label_type-other"><span>Другое</span></div><!--]--></div></div></div><!--]--><!----></section><!--]--></div><div class="swiper-slide"><!--[--><section class="tm-block tm-block tm-block_spacing-none" id="606" tabindex="-1"><!----><!--[--><div class="tm-event-card tm-event-card_is-widget tm-event-card_responsive"><a href="/ru/events/606/" class=""><img alt class="tm-event-card__image" data-src="https://habrastorage.org/getpro/habr/upload_files/b99/62a/b24/b9962ab2439c6edc80f96d7f0a847c72.png" loading="lazy" src="https://habrastorage.org/r/w390/getpro/habr/upload_files/b99/62a/b24/b9962ab2439c6edc80f96d7f0a847c72.png" srcset="https://habrastorage.org/r/w390/getpro/habr/upload_files/b99/62a/b24/b9962ab2439c6edc80f96d7f0a847c72.png, https://habrastorage.org/getpro/habr/upload_files/b99/62a/b24/b9962ab2439c6edc80f96d7f0a847c72.png 2x"></a><!----><div class="tm-event-card__info"><div class="tm-event-card__date"><!----><div class="tm-event-card__day"><span>31  марта  </span></div></div><a href="/ru/events/606/" class="tm-event-card__title-link"><span>Серия вебинаров «DevOps Middle: AvitoTech vs ecom.tech»</span></a><div class="tm-event-card__places"><div class="tm-event-card__places-list"><!--[--><span class="tm-event-card__places-item"><span>Онлайн</span><!----></span><!--]--></div></div></div><div class="tm-event-card__footer tm-event-card__footer_widget"><a href="/ru/events/#606" class="tm-event-card__link">Больше событий в календаре</a><div class="tm-event-card__categories"><!--[--><div class="event-category__label event-category__label_type-development"><span>Разработка</span></div><div class="event-category__label event-category__label_type-admin"><span>Администрирование</span></div><!--]--></div></div></div><!--]--><!----></section><!--]--></div><div class="swiper-slide"><!--[--><section class="tm-block tm-block tm-block_spacing-none" id="618" tabindex="-1"><!----><!--[--><div class="tm-event-card tm-event-card_is-widget tm-event-card_responsive"><a href="/ru/events/618/" class=""><img alt class="tm-event-card__image" data-src="https://habrastorage.org/getpro/habr/upload_files/f76/0f9/a82/f760f9a827b851a5eeca4802c643a91d.png" loading="lazy" src="https://habrastorage.org/r/w390/getpro/habr/upload_files/f76/0f9/a82/f760f9a827b851a5eeca4802c643a91d.png" srcset="https://habrastorage.org/r/w390/getpro/habr/upload_files/f76/0f9/a82/f760f9a827b851a5eeca4802c643a91d.png, https://habrastorage.org/getpro/habr/upload_files/f76/0f9/a82/f760f9a827b851a5eeca4802c643a91d.png 2x"></a><!----><div class="tm-event-card__info"><div class="tm-event-card__date"><!----><div class="tm-event-card__day"><span>3  апреля  </span></div></div><a href="/ru/events/618/" class="tm-event-card__title-link"><span>Реалити для разработчиков: узнайте, как строится новое публичное облако MWS</span></a><div class="tm-event-card__places"><div class="tm-event-card__places-list"><!--[--><span class="tm-event-card__places-item"><span>Онлайн</span><!----></span><!--]--></div></div></div><div class="tm-event-card__footer tm-event-card__footer_widget"><a href="/ru/events/#618" class="tm-event-card__link">Больше событий в календаре</a><div class="tm-event-card__categories"><!--[--><div class="event-category__label event-category__label_type-development"><span>Разработка</span></div><!--]--></div></div></div><!--]--><!----></section><!--]--></div><div class="swiper-slide"><!--[--><section class="tm-block tm-block tm-block_spacing-none" id="620" tabindex="-1"><!----><!--[--><div class="tm-event-card tm-event-card_is-widget tm-event-card_responsive"><a href="/ru/events/620/" class=""><img alt class="tm-event-card__image" data-src="https://habrastorage.org/getpro/habr/upload_files/eba/c37/879/ebac378793b959ebce42f41713e7b67f.jpg" loading="lazy" src="https://habrastorage.org/r/w390/getpro/habr/upload_files/eba/c37/879/ebac378793b959ebce42f41713e7b67f.jpg" srcset="https://habrastorage.org/r/w390/getpro/habr/upload_files/eba/c37/879/ebac378793b959ebce42f41713e7b67f.jpg, https://habrastorage.org/getpro/habr/upload_files/eba/c37/879/ebac378793b959ebce42f41713e7b67f.jpg 2x"></a><!----><div class="tm-event-card__info"><div class="tm-event-card__date"><!----><div class="tm-event-card__day"><span>3  апреля  </span></div></div><a href="/ru/events/620/" class="tm-event-card__title-link"><span>Открытая встреча «System Analysis Meetup SberHealth»</span></a><div class="tm-event-card__places"><div class="tm-event-card__places-list"><!--[--><span class="tm-event-card__places-item"><span>Москва</span><span class="tm-event-card__places-separator"> • </span></span><span class="tm-event-card__places-item"><span>Онлайн</span><!----></span><!--]--></div></div></div><div class="tm-event-card__footer tm-event-card__footer_widget"><a href="/ru/events/#620" class="tm-event-card__link">Больше событий в календаре</a><div class="tm-event-card__categories"><!--[--><div class="event-category__label event-category__label_type-analytics"><span>Аналитика</span></div><!--]--></div></div></div><!--]--><!----></section><!--]--></div><div class="swiper-slide"><!--[--><section class="tm-block tm-block tm-block_spacing-none" id="590" tabindex="-1"><!----><!--[--><div class="tm-event-card tm-event-card_is-widget tm-event-card_responsive"><a href="/ru/events/590/" class=""><img alt class="tm-event-card__image" data-src="https://habrastorage.org/getpro/habr/upload_files/31b/e68/295/31be6829578e7934fbc944396eb330b1.png" loading="lazy" src="https://habrastorage.org/r/w390/getpro/habr/upload_files/31b/e68/295/31be6829578e7934fbc944396eb330b1.png" srcset="https://habrastorage.org/r/w390/getpro/habr/upload_files/31b/e68/295/31be6829578e7934fbc944396eb330b1.png, https://habrastorage.org/getpro/habr/upload_files/31b/e68/295/31be6829578e7934fbc944396eb330b1.png 2x"></a><!----><div class="tm-event-card__info"><div class="tm-event-card__date"><!----><div class="tm-event-card__day"><span>10  апреля  </span></div></div><a href="/ru/events/590/" class="tm-event-card__title-link"><span>«GoCloud 2025» — масштабная IT-конференция про облака и AI</span></a><div class="tm-event-card__places"><div class="tm-event-card__places-list"><!--[--><span class="tm-event-card__places-item"><span>Москва</span><span class="tm-event-card__places-separator"> • </span></span><span class="tm-event-card__places-item"><span>Онлайн</span><!----></span><!--]--></div></div></div><div class="tm-event-card__footer tm-event-card__footer_widget"><a href="/ru/events/#590" class="tm-event-card__link">Больше событий в календаре</a><div class="tm-event-card__categories"><!--[--><div class="event-category__label event-category__label_type-development"><span>Разработка</span></div><div class="event-category__label event-category__label_type-admin"><span>Администрирование</span></div><div class="event-category__label event-category__label_type-management"><span>Менеджмент</span></div><!--]--></div></div></div><!--]--><!----></section><!--]--></div><div class="swiper-slide"><!--[--><section class="tm-block tm-block tm-block_spacing-none" id="516" tabindex="-1"><!----><!--[--><div class="tm-event-card tm-event-card_is-widget tm-event-card_responsive"><a href="/ru/events/516/" class=""><img alt class="tm-event-card__image" data-src="https://habrastorage.org/getpro/habr/upload_files/0e9/3a8/3ec/0e93a83ecea09f806d1df907ddb036a4.jpg" loading="lazy" src="https://habrastorage.org/r/w390/getpro/habr/upload_files/0e9/3a8/3ec/0e93a83ecea09f806d1df907ddb036a4.jpg" srcset="https://habrastorage.org/r/w390/getpro/habr/upload_files/0e9/3a8/3ec/0e93a83ecea09f806d1df907ddb036a4.jpg, https://habrastorage.org/getpro/habr/upload_files/0e9/3a8/3ec/0e93a83ecea09f806d1df907ddb036a4.jpg 2x"></a><!----><div class="tm-event-card__info"><div class="tm-event-card__date"><!----><div class="tm-event-card__day"><span>25 – 26  апреля  </span></div></div><a href="/ru/events/516/" class="tm-event-card__title-link"><span>IT-конференция Merge Tatarstan 2025</span></a><div class="tm-event-card__places"><div class="tm-event-card__places-list"><!--[--><span class="tm-event-card__places-item"><span>Казань</span><!----></span><!--]--></div></div></div><div class="tm-event-card__footer tm-event-card__footer_widget"><a href="/ru/events/#516" class="tm-event-card__link">Больше событий в календаре</a><div class="tm-event-card__categories"><!--[--><div class="event-category__label event-category__label_type-development"><span>Разработка</span></div><div class="event-category__label event-category__label_type-marketing"><span>Маркетинг</span></div><div class="event-category__label event-category__label_type-other"><span>Другое</span></div><!--]--></div></div></div><!--]--><!----></section><!--]--></div><div class="swiper-slide"><!--[--><section class="tm-block tm-block tm-block_spacing-none" id="610" tabindex="-1"><!----><!--[--><div class="tm-event-card tm-event-card_is-widget tm-event-card_responsive"><a href="/ru/events/610/" class=""><img alt class="tm-event-card__image" data-src="https://habrastorage.org/getpro/habr/upload_files/652/12d/998/65212d998fb4939d9787bd9c726d2acb.png" loading="lazy" src="https://habrastorage.org/r/w390/getpro/habr/upload_files/652/12d/998/65212d998fb4939d9787bd9c726d2acb.png" srcset="https://habrastorage.org/r/w390/getpro/habr/upload_files/652/12d/998/65212d998fb4939d9787bd9c726d2acb.png, https://habrastorage.org/getpro/habr/upload_files/652/12d/998/65212d998fb4939d9787bd9c726d2acb.png 2x"></a><!----><div class="tm-event-card__info"><div class="tm-event-card__date"><!----><div class="tm-event-card__day"><span>20 – 22  июня  </span></div></div><a href="/ru/events/610/" class="tm-event-card__title-link"><span>Летняя айти-тусовка Summer Merge</span></a><div class="tm-event-card__places"><div class="tm-event-card__places-list"><!--[--><span class="tm-event-card__places-item"><span>Ульяновская область</span><!----></span><!--]--></div></div></div><div class="tm-event-card__footer tm-event-card__footer_widget"><a href="/ru/events/#610" class="tm-event-card__link">Больше событий в календаре</a><div class="tm-event-card__categories"><!--[--><div class="event-category__label event-category__label_type-development"><span>Разработка</span></div><div class="event-category__label event-category__label_type-other"><span>Другое</span></div><!--]--></div></div></div><!--]--><!----></section><!--]--></div><!--]--><!--]--></div><!----><!--[--><button class="swiper-button-prev"><span class="tm-svg-icon__wrapper swiper-button-icon"><svg class="tm-svg-img tm-svg-icon" height="24" width="24"><title>Влево</title><use xlink:href="/img/megazord-v28.371b7fa3..svg#arrow-back"></use></svg></span></button><button class="swiper-button-next"><span class="tm-svg-icon__wrapper swiper-button-icon"><svg class="tm-svg-img tm-svg-icon" height="24" width="24"><title>Вправо</title><use xlink:href="/img/megazord-v28.371b7fa3..svg#arrow-back"></use></svg></span></button><!--]--></div><!--]--></div><!--]--><!----></section><!--]--><!--]--></div><!--]--><!--]--></div></div><!--]--><!--]--></div></div><div class="tm-page__sidebar"><!--[--><!----><!--]--></div></div><!----><!--]--></div></div></main><!----></div><!----><div class="tm-footer"><div class="tm-page-width"><!--[--><div class="tm-footer__container"><div class="tm-footer__title"><a class="tm-svg-icon__wrapper tm-footer__title-link" href="/ru/"><svg class="tm-svg-img tm-svg-icon" height="16" width="16"><title>Хабр</title><use xlink:href="/img/habr-logo-ru.svg#logo"></use></svg></a></div><div class="tm-footer__social"><!--[--><a class="tm-svg-icon__wrapper tm-social-icons__icon" href="https://www.facebook.com/habrahabr.ru" rel="nofollow noopener noreferrer" target="_blank"><svg class="tm-svg-img tm-svg-icon" height="36" width="36"><title>Facebook</title><use xlink:href="/img/new-social-icons-sprite.svg#social-logo-facebook"></use></svg></a><a class="tm-svg-icon__wrapper tm-social-icons__icon" href="https://twitter.com/habr_com" rel="nofollow noopener noreferrer" target="_blank"><svg class="tm-svg-img tm-svg-icon" height="36" width="36"><title>Twitter</title><use xlink:href="/img/new-social-icons-sprite.svg#social-logo-twitter"></use></svg></a><a class="tm-svg-icon__wrapper tm-social-icons__icon" href="https://vk.com/habr" rel="nofollow noopener noreferrer" target="_blank"><svg class="tm-svg-img tm-svg-icon" height="36" width="36"><title>VK</title><use xlink:href="/img/new-social-icons-sprite.svg#social-logo-vk"></use></svg></a><a class="tm-svg-icon__wrapper tm-social-icons__icon" href="https://telegram.me/habr_com" rel="nofollow noopener noreferrer" target="_blank"><svg class="tm-svg-img tm-svg-icon" height="36" width="36"><title>Telegram</title><use xlink:href="/img/new-social-icons-sprite.svg#social-logo-telegram"></use></svg></a><a class="tm-svg-icon__wrapper tm-social-icons__icon" href="https://www.youtube.com/channel/UCd_sTwKqVrweTt4oAKY5y4w" rel="nofollow noopener noreferrer" target="_blank"><svg class="tm-svg-img tm-svg-icon" height="36" width="36"><title>Youtube</title><use xlink:href="/img/new-social-icons-sprite.svg#social-logo-youtube"></use></svg></a><a class="tm-svg-icon__wrapper tm-social-icons__icon" href="https://dzen.ru/habr" rel="nofollow noopener noreferrer" target="_blank"><svg class="tm-svg-img tm-svg-icon" height="36" width="36"><title>Яндекс Дзен</title><use xlink:href="/img/new-social-icons-sprite.svg#social-logo-dzen"></use></svg></a><!--]--></div><!--teleport start--><!--teleport end--><button class="tm-footer__link"><svg class="tm-svg-img tm-footer__icon" height="16" width="16"><title>Язык</title><use xlink:href="/img/megazord-v28.371b7fa3..svg#lang"></use></svg> Настройка языка</button><a href="/ru/feedback/" class="tm-footer__link">Техническая поддержка</a><div class="tm-footer-copyright"><span class="tm-copyright"><span class="tm-copyright__years">© 2006–2025, </span><span class="tm-copyright__name"><a class="tm-copyright__link" href="https://company.habr.com/" rel="noopener" target="_blank">Habr</a></span></span></div></div><!--]--></div></div><!----><!--]--></div><!----></div><script>window.__INITIAL_STATE__={"adblock":{"hasAcceptableAdsFilter":false,"hasAdblock":false},"articlesList":{"articlesList":{"752702":{"id":"752702","timePublished":"2023-08-05T17:40:07+00:00","isCorporative":false,"lang":"ru","titleHtml":"Использование Kotlin и WebFlux для выполнения задач ML в Apache Spark на GPU","leadData":{"textHtml":"\u003Cp\u003EВ предыдущей статье для создания Spark Driver приложения использовался сервлетный стек Spring (Boot 2.7.11) и JDK 8. \u003C\u002Fp\u003E\u003Cp\u003EНа дворе вторая половина 2023 года, у многих в проде уже используется Boot 3+ (а то и 3.1+), совсем скоро должна выйти новая LTS версия Java, и, мягко говоря, Boot 2+ и JDK8 устарели. Использовались они намеренно, так как для задач тренировки моделей машинного обучения на GPU в среде Spark  частью системы является ускоритель вычислений на GPU \u003Ca href=\"https:\u002F\u002Fgithub.com\u002FNVIDIA\u002Fspark-rapids\" rel=\"noopener noreferrer nofollow\"\u003ENVidia Rapids\u003C\u002Fa\u003E. Поддержка JDK 17 появилась только в релизе v23.06.0 от 27.06.23, с ее выходом появилась возможность перейти на актуальную LTS версию Java, а с ней - на Spring Boot 3+. \u003C\u002Fp\u003E\u003Cp\u003EВ данной статье описывается миграция с Boot 2 и JDK 8 До Boot 3 и JDK 17, со Spring Web на Spring WebFlux, в конце сравниваются Web и WebFlux версии по потреблению аппаратных ресурсов и скорости выполнения.\u003C\u002Fp\u003E\u003Cp\u003E\u003C\u002Fp\u003E","imageUrl":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F534\u002F8ab\u002Fc24\u002F5348abc24b103b7cd01511262690a129.png","buttonTextHtml":"Читать далее","image":{"url":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F534\u002F8ab\u002Fc24\u002F5348abc24b103b7cd01511262690a129.png","fit":"cover","positionY":0,"positionX":0}},"editorVersion":"2.0","postType":"article","postLabels":[{"type":"seasonJava2023","typeOf":"season","title":"Cезон Java one love ☕","data":{"url":"https:\u002F\u002Fu.habr.com\u002Fjava"}}],"author":{"id":"942912","alias":"Dartya","fullname":"Александр Питасов","avatarUrl":null,"speciality":null,"scoreStats":{"score":13,"votesCount":13},"rating":0,"relatedData":null,"contacts":[],"authorContacts":[],"paymentDetails":{"paymentYandexMoney":null,"paymentPayPalMe":null,"paymentWebmoney":null},"donationsMethod":null,"isInBlacklist":null,"careerProfile":null},"statistics":{"commentsCount":4,"favoritesCount":26,"readingCount":3713,"score":8,"votesCount":6,"votesCountPlus":5,"votesCountMinus":1},"hubs":[{"id":"375","alias":"java","type":"collective","title":"Java","titleHtml":"Java","isProfiled":true,"relatedData":null},{"id":"19441","alias":"kotlin","type":"collective","title":"Kotlin","titleHtml":"Kotlin","isProfiled":true,"relatedData":null}],"flows":[{"id":"1","alias":"develop","title":"Разработка","titleHtml":"Разработка"}],"relatedData":{"vote":null,"unreadCommentsCount":0,"bookmarked":false,"canComment":false,"canEdit":false,"canViewVotes":false,"votePlus":{"canVote":false,"isChargeEnough":false,"isKarmaEnough":false,"isVotingOver":true,"isPublicationLimitEnough":false},"voteMinus":{"canVote":false,"isChargeEnough":false,"isKarmaEnough":false,"isVotingOver":true,"isPublicationLimitEnough":false},"canModerateComments":false,"trackerSubscribed":false,"emailSubscribed":false},"textHtml":"\u003Cdiv xmlns=\"http:\u002F\u002Fwww.w3.org\u002F1999\u002Fxhtml\"\u003E\u003Cp\u003EЭто третья статья по теме реализации масштабируемой системы для выполнения задач распределенного машинного обучения на GPU с использованием Java, Kotlin, Spring и Spark. Список всех статей:\u003C\u002Fp\u003E\u003Col\u003E\u003Cli\u003E\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fhabr.com\u002Fru\u002Farticles\u002F679248\u002F\" rel=\"noopener noreferrer nofollow\"\u003EВарианты использования Java ML библиотек совместно со Spring, Docker, Spark, Rapids, CUDA\u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fhabr.com\u002Fru\u002Farticles\u002F739634\u002F\" rel=\"noopener noreferrer nofollow\"\u003EМасштабируемая Big Data система в Kubernetes с использованием Spark и Cassandra\u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fhabr.com\u002Fru\u002Farticles\u002F752702\u002F\" rel=\"noopener noreferrer nofollow\"\u003EИспользование Kotlin и WebFlux для выполнения задач ML в Apache Spark на GPU\u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003C\u002Fol\u003E\u003Ch2\u003EО чем данная статья\u003C\u002Fh2\u003E\u003Cp\u003EВ предыдущей статье для создания Spark Driver приложения использовался сервлетный стек Spring (Boot 2.7.11) и JDK 8. \u003C\u002Fp\u003E\u003Cp\u003EНа дворе вторая половина 2023 года, у многих в проде уже используется Boot 3+ (а то и 3.1+), совсем скоро должна выйти новая LTS версия Java, и, мягко говоря, Boot 2+ и JDK8 устарели. Использовались они намеренно, так как для задач тренировки моделей машинного обучения на GPU в среде Spark частью системы является ускоритель вычислений на GPU \u003Ca href=\"https:\u002F\u002Fgithub.com\u002FNVIDIA\u002Fspark-rapids\" rel=\"noopener noreferrer nofollow\"\u003ENVidia Rapids\u003C\u002Fa\u003E. Поддержка JDK 17 появилась только в релизе v23.06.0 от 27.06.23, с ее выходом появилась возможность перейти на актуальную LTS версию Java, а с ней - на Spring Boot 3+.\u003C\u002Fp\u003E\u003Cp\u003EВ данной статье описывается миграция с Boot 2 и JDK 8 До Boot 3 и JDK 17, со Spring Web на Spring WebFlux, в конце сравниваются Web и WebFlux версии по потреблению аппаратных ресурсов и скорости выполнения.\u003C\u002Fp\u003E\u003Ch2\u003EJDK8, Spring boot 2.7.11 → JDK17, Spring Boot 3.1.1\u003C\u002Fh2\u003E\u003Cp\u003EДля миграции достаточно поднять версии Rapids до 23.06.0, JDK до 17, Spring Boot до 3.1.1. Нюансов не так уж и много:\u003C\u002Fp\u003E\u003Col\u003E\u003Cli\u003E\u003Cp\u003EКонфликт логеров Slf4j и Log4j при использовании Spark: из зависимости spring boot starter web исключаем spring boot starter logging:\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003C\u002Fol\u003E\u003Cdetails class=\"spoiler\"\u003E\u003Csummary\u003Epom.xml\u003C\u002Fsummary\u003E\u003Cdiv class=\"spoiler__content\"\u003E\u003Cpre\u003E\u003Ccode class=\"xml\"\u003E&lt;dependency&gt;\n    &lt;groupId&gt;org.springframework.boot&lt;\u002FgroupId&gt;\n    &lt;artifactId&gt;spring-boot-starter-web&lt;\u002FartifactId&gt;\n    &lt;version&gt;${spring.boot.version}&lt;\u002Fversion&gt;\n    &lt;exclusions&gt;\n        &lt;exclusion&gt;\n            &lt;groupId&gt;org.springframework.boot&lt;\u002FgroupId&gt;\n            &lt;artifactId&gt;spring-boot-starter-logging&lt;\u002FartifactId&gt;\n        &lt;\u002Fexclusion&gt;\n        &lt;exclusion&gt;\n            &lt;groupId&gt;org.springframework.boot&lt;\u002FgroupId&gt;\n            &lt;artifactId&gt;spring-boot-starter-tomcat&lt;\u002FartifactId&gt;\n        &lt;\u002Fexclusion&gt;\n    &lt;\u002Fexclusions&gt;\n&lt;\u002Fdependency&gt;\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003E\u003C\u002Fp\u003E\u003C\u002Fdiv\u003E\u003C\u002Fdetails\u003E\u003Col start=\"2\"\u003E\u003Cli\u003E\u003Cp\u003EЗапускать Spark Driver на JDK 17 необходимо со следующими параметрами (приведено для Dockerfile):\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003C\u002Fol\u003E\u003Cdetails class=\"spoiler\"\u003E\u003Csummary\u003EApplication Dockerfile\u003C\u002Fsummary\u003E\u003Cdiv class=\"spoiler__content\"\u003E\u003Cpre\u003E\u003Ccode\u003EENV JAVA_OPTS='--add-opens=java.base\u002Fjava.lang=ALL-UNNAMED \\\n               --add-opens=java.base\u002Fjava.lang.invoke=ALL-UNNAMED \\\n               --add-opens=java.base\u002Fjava.lang.reflect=ALL-UNNAMED \\\n               --add-opens=java.base\u002Fjava.io=ALL-UNNAMED \\\n               --add-opens=java.base\u002Fjava.net=ALL-UNNAMED \\\n               --add-opens=java.base\u002Fjava.nio=ALL-UNNAMED \\\n               --add-opens=java.base\u002Fjava.util=ALL-UNNAMED \\\n               --add-opens=java.base\u002Fjava.util.concurrent=ALL-UNNAMED \\\n               --add-opens=java.base\u002Fjava.util.concurrent.atomic=ALL-UNNAMED \\\n               --add-opens=java.base\u002Fsun.nio.ch=ALL-UNNAMED \\\n               --add-opens=java.base\u002Fsun.nio.cs=ALL-UNNAMED \\\n               --add-opens=java.base\u002Fsun.security.action=ALL-UNNAMED \\\n               --add-opens=java.base\u002Fsun.util.calendar=ALL-UNNAMED \\\n               --add-opens=java.security.jgss\u002Fsun.security.krb5=ALL-UNNAMED'\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003E\u003C\u002Fp\u003E\u003C\u002Fdiv\u003E\u003C\u002Fdetails\u003E\u003Col start=\"3\"\u003E\u003Cli\u003E\u003Cp\u003EВ связи с переходом на Hibernate 6, при использовании JSOB и BYTEA полей в сущностях Postgres придется немного отрефакторить Entity:\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003C\u002Fol\u003E\u003Cfigure class=\"full-width \"\u003E\u003Cimg src=\"https:\u002F\u002Fhabrastorage.org\u002Fr\u002Fw1560\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F5c1\u002F63b\u002F20e\u002F5c163b20e6ab80ee4f28f0f2d8e28d7d.png\" width=\"709\" height=\"776\" data-src=\"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F5c1\u002F63b\u002F20e\u002F5c163b20e6ab80ee4f28f0f2d8e28d7d.png\"\u002F\u003E\u003C\u002Ffigure\u003E\u003Cp\u003EПри этом, использовавшийся ранее CustomPostgresDialect оказывается не нужным и его можно удалить, заменив на \u003Ccode\u003Eorg.hibernate.dialect.PostgreSQLDialect\u003C\u002Fcode\u003E:\u003C\u002Fp\u003E\u003Cdetails class=\"spoiler\"\u003E\u003Csummary\u003Eapplication.yml\u003C\u002Fsummary\u003E\u003Cdiv class=\"spoiler__content\"\u003E\u003Cpre\u003E\u003Ccode class=\"yaml\"\u003Espring:\n  ...\n  jpa:\n    database-platform: com.mlwebservice.config.CustomPostgresDialect  # &lt;== delete\n    database-platform: org.hibernate.dialect.PostgreSQLDialect        # &lt;== add\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003E\u003C\u002Fp\u003E\u003C\u002Fdiv\u003E\u003C\u002Fdetails\u003E\u003Cdetails class=\"spoiler\"\u003E\u003Csummary\u003EРанее использовавшийся CustomPostgresDialect\u003C\u002Fsummary\u003E\u003Cdiv class=\"spoiler__content\"\u003E\u003Cpre\u003E\u003Ccode class=\"java\"\u003Epackage com.mlwebservice.config\n\nimport com.vladmihalcea.hibernate.type.array.IntArrayType\nimport com.vladmihalcea.hibernate.type.array.StringArrayType\nimport com.vladmihalcea.hibernate.type.json.JsonBinaryType\nimport com.vladmihalcea.hibernate.type.json.JsonNodeBinaryType\nimport com.vladmihalcea.hibernate.type.json.JsonNodeStringType\nimport com.vladmihalcea.hibernate.type.json.JsonStringType\nimport org.hibernate.dialect.PostgreSQL10Dialect\nimport java.sql.Types\n\nclass CustomPostgresDialect : PostgreSQL10Dialect() {\n    init {\n        registerHibernateType(Types.OTHER, StringArrayType::class.qualifiedName)\n        registerHibernateType(Types.OTHER, IntArrayType::class.qualifiedName)\n        registerHibernateType(Types.OTHER, JsonStringType::class.qualifiedName)\n        registerHibernateType(Types.OTHER, JsonBinaryType::class.qualifiedName)\n        registerHibernateType(Types.OTHER, JsonNodeBinaryType::class.qualifiedName)\n        registerHibernateType(Types.OTHER, JsonNodeStringType::class.qualifiedName)\n    }\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003E\u003C\u002Fp\u003E\u003C\u002Fdiv\u003E\u003C\u002Fdetails\u003E\u003Cp\u003EНе считая докерфайлов и действий по добавлению новой версии jar'ника Rapids в директорию с jar-файлами для отправки в Spark executors и в образ executor’а, это все, что необходимо выполнить. Актуальную версию можно взять \u003Ca href=\"https:\u002F\u002Fgitlab.com\u002FAlexPit\u002Fjava-ml-spark-example\u002F-\u002Ftree\u002Fkubernetes-java17-spark332\" rel=\"noopener noreferrer nofollow\"\u003Eв соответствующей ветке репозитория\u003C\u002Fa\u003E.\u003C\u002Fp\u003E\u003Cp\u003EНа этом можно было бы и закончить, но любопытство ведь берет свое, и появился вопрос - а заработает ли на реактивном стеке, и будет ли эффект?\u003C\u002Fp\u003E\u003Ch2\u003EСделаем ML реактивным: Spring Web → Spring WebFlux \u003C\u002Fh2\u003E\u003Ch3\u003EЗависимости\u003C\u002Fh3\u003E\u003Cp\u003EИзменений при таком переходе изначально должно быть больше, но так же есть нюансы в виде управления зависимостями. Так, Netty, необходимый для Project Reactor (WebFlux) используется самим Spark и драйвером Cassandra, поэтому изначально конфликтовали. Решается путем задания трех зависимостей в самом начале списка зависимостей:\u003C\u002Fp\u003E\u003Cdetails class=\"spoiler\"\u003E\u003Csummary\u003Epom.xml: Зависимости Netty\u003C\u002Fsummary\u003E\u003Cdiv class=\"spoiler__content\"\u003E\u003Cpre\u003E\u003Ccode class=\"xml\"\u003E&lt;dependencies&gt;\n    &lt;!-- Netty --&gt;\n    &lt;dependency&gt;\n        &lt;groupId&gt;io.netty&lt;\u002FgroupId&gt;\n        &lt;artifactId&gt;netty-all&lt;\u002FartifactId&gt;\n        &lt;version&gt;4.1.74.Final&lt;\u002Fversion&gt;\n    &lt;\u002Fdependency&gt;\n    &lt;dependency&gt;\n        &lt;groupId&gt;io.netty&lt;\u002FgroupId&gt;\n        &lt;artifactId&gt;netty-codec-http&lt;\u002FartifactId&gt;\n        &lt;version&gt;4.1.74.Final&lt;\u002Fversion&gt;\n    &lt;\u002Fdependency&gt;\n    &lt;dependency&gt;\n        &lt;groupId&gt;io.netty&lt;\u002FgroupId&gt;\n        &lt;artifactId&gt;netty-resolver-dns&lt;\u002FartifactId&gt;\n        &lt;version&gt;4.1.74.Final&lt;\u002Fversion&gt;\n    &lt;\u002Fdependency&gt;\n\n    &lt;!-- Spring --&gt;\n    &lt;dependency&gt;\n        &lt;groupId&gt;org.springframework.boot&lt;\u002FgroupId&gt;\n        &lt;artifactId&gt;spring-boot-starter-webflux&lt;\u002FartifactId&gt;\n        &lt;version&gt;${spring.boot.version}&lt;\u002Fversion&gt;\n        &lt;exclusions&gt;\n            &lt;exclusion&gt;\n                &lt;artifactId&gt;log4j-to-slf4j&lt;\u002FartifactId&gt;\n                &lt;groupId&gt;org.apache.logging.log4j&lt;\u002FgroupId&gt;\n            &lt;\u002Fexclusion&gt;\n        &lt;\u002Fexclusions&gt;\n    &lt;\u002Fdependency&gt;\n    ...\n&lt;\u002Fdependencies&gt;\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003E\u003C\u002Fp\u003E\u003C\u002Fdiv\u003E\u003C\u002Fdetails\u003E\u003Cp\u003ESpring Data тоже заменяется на реактивную версию:\u003C\u002Fp\u003E\u003Cdetails class=\"spoiler\"\u003E\u003Csummary\u003Epom.xml: R2DBC и Spring Data Cassandra Reactive\u003C\u002Fsummary\u003E\u003Cdiv class=\"spoiler__content\"\u003E\u003Cpre\u003E\u003Ccode class=\"xml\"\u003E&lt;dependency&gt;\n    &lt;groupId&gt;org.springframework.boot&lt;\u002FgroupId&gt;\n    &lt;artifactId&gt;spring-boot-starter-data-cassandra-reactive&lt;\u002FartifactId&gt;\n    &lt;version&gt;${spring.boot.version}&lt;\u002Fversion&gt;\n&lt;\u002Fdependency&gt;\n&lt;dependency&gt;\n    &lt;groupId&gt;org.springframework.boot&lt;\u002FgroupId&gt;\n    &lt;artifactId&gt;spring-boot-starter-data-r2dbc&lt;\u002FartifactId&gt;\n    &lt;version&gt;${spring.boot.version}&lt;\u002Fversion&gt;\n&lt;\u002Fdependency&gt;\n&lt;dependency&gt;\n    &lt;groupId&gt;io.r2dbc&lt;\u002FgroupId&gt;\n    &lt;artifactId&gt;r2dbc-postgresql&lt;\u002FartifactId&gt;\n    &lt;version&gt;0.8.13.RELEASE&lt;\u002Fversion&gt;\n&lt;\u002Fdependency&gt;\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003E\u003C\u002Fp\u003E\u003C\u002Fdiv\u003E\u003C\u002Fdetails\u003E\u003Cp\u003EИ добавляются несколько библиотек для работы Kotlin в среде WebFlux:\u003C\u002Fp\u003E\u003Cdetails class=\"spoiler\"\u003E\u003Csummary\u003Epom.xml: Kotlin dependencies\u003C\u002Fsummary\u003E\u003Cdiv class=\"spoiler__content\"\u003E\u003Cpre\u003E\u003Ccode class=\"xml\"\u003E&lt;dependency&gt;\n    &lt;groupId&gt;org.jetbrains.kotlin&lt;\u002FgroupId&gt;\n    &lt;artifactId&gt;kotlin-stdlib&lt;\u002FartifactId&gt;\n    &lt;version&gt;${kotlin.version}&lt;\u002Fversion&gt;\n&lt;\u002Fdependency&gt;\n&lt;dependency&gt;\n    &lt;groupId&gt;org.jetbrains.kotlin&lt;\u002FgroupId&gt;\n    &lt;artifactId&gt;kotlin-reflect&lt;\u002FartifactId&gt;\n    &lt;version&gt;${kotlin.version}&lt;\u002Fversion&gt;\n    &lt;scope&gt;runtime&lt;\u002Fscope&gt;\n&lt;\u002Fdependency&gt;\n&lt;dependency&gt;\n    &lt;groupId&gt;org.jetbrains.kotlinx&lt;\u002FgroupId&gt;\n    &lt;artifactId&gt;kotlinx-coroutines-reactor&lt;\u002FartifactId&gt;\n    &lt;version&gt;1.7.2&lt;\u002Fversion&gt;\n    &lt;scope&gt;runtime&lt;\u002Fscope&gt;\n&lt;\u002Fdependency&gt;\n&lt;dependency&gt;\n    &lt;groupId&gt;io.projectreactor.kotlin&lt;\u002FgroupId&gt;\n    &lt;artifactId&gt;reactor-kotlin-extensions&lt;\u002FartifactId&gt;\n    &lt;version&gt;1.2.2&lt;\u002Fversion&gt;\n    &lt;scope&gt;runtime&lt;\u002Fscope&gt;\n&lt;\u002Fdependency&gt;\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003E\u003C\u002Fp\u003E\u003C\u002Fdiv\u003E\u003C\u002Fdetails\u003E\u003Cp\u003EКстати, сам Kotlin тоже поднял с версии 1.8.21 до 1.9.0.\u003C\u002Fp\u003E\u003Cp\u003EДля логирования HTTP запросов-ответов добавляем Zalando Logbook:\u003C\u002Fp\u003E\u003Cdetails class=\"spoiler\"\u003E\u003Csummary\u003Epom.xml: Zalando Logbook\u003C\u002Fsummary\u003E\u003Cdiv class=\"spoiler__content\"\u003E\u003Cpre\u003E\u003Ccode class=\"xml\"\u003E&lt;dependency&gt;\n    &lt;groupId&gt;org.zalando&lt;\u002FgroupId&gt;\n    &lt;artifactId&gt;logbook-spring-boot-autoconfigure&lt;\u002FartifactId&gt;\n    &lt;version&gt;3.2.0&lt;\u002Fversion&gt;\n&lt;\u002Fdependency&gt;\n&lt;dependency&gt;\n    &lt;groupId&gt;org.zalando&lt;\u002FgroupId&gt;\n    &lt;artifactId&gt;logbook-netty&lt;\u002FartifactId&gt;\n    &lt;version&gt;3.2.0&lt;\u002Fversion&gt;\n&lt;\u002Fdependency&gt;\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003E\u003C\u002Fp\u003E\u003C\u002Fdiv\u003E\u003C\u002Fdetails\u003E\u003Cdetails class=\"spoiler\"\u003E\u003Csummary\u003Epom.xml (полная версия для WebFlux)\u003C\u002Fsummary\u003E\u003Cdiv class=\"spoiler__content\"\u003E\u003Cpre\u003E\u003Ccode class=\"xml\"\u003E&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;project xmlns=\"http:\u002F\u002Fmaven.apache.org\u002FPOM\u002F4.0.0\"\n         xmlns:xsi=\"http:\u002F\u002Fwww.w3.org\u002F2001\u002FXMLSchema-instance\"\n         xsi:schemaLocation=\"http:\u002F\u002Fmaven.apache.org\u002FPOM\u002F4.0.0 http:\u002F\u002Fmaven.apache.org\u002Fxsd\u002Fmaven-4.0.0.xsd\"&gt;\n    &lt;modelVersion&gt;4.0.0&lt;\u002FmodelVersion&gt;\n\n    &lt;groupId&gt;com.mlwebservice&lt;\u002FgroupId&gt;\n    &lt;artifactId&gt;MLWebService&lt;\u002FartifactId&gt;\n    &lt;version&gt;1.0.0-SNAPSHOT&lt;\u002Fversion&gt;\n\n    &lt;properties&gt;\n        &lt;java.version&gt;17&lt;\u002Fjava.version&gt;\n        &lt;spring.boot.version&gt;3.1.1&lt;\u002Fspring.boot.version&gt;\n        &lt;scala.version&gt;2.12&lt;\u002Fscala.version&gt;\n        &lt;spark.version&gt;3.3.2&lt;\u002Fspark.version&gt;\n        &lt;lombok.version&gt;1.18.24&lt;\u002Flombok.version&gt;\n        &lt;org.mapstruct.version&gt;1.4.2.Final&lt;\u002Forg.mapstruct.version&gt;\n        &lt;kotlin.version&gt;1.9.0&lt;\u002Fkotlin.version&gt;\n        &lt;jackson.version&gt;2.13.5&lt;\u002Fjackson.version&gt;\n    &lt;\u002Fproperties&gt;\n\n    &lt;distributionManagement&gt;\n        &lt;repository&gt;\n            &lt;id&gt;XGBoost4J Snapshot Repo&lt;\u002Fid&gt;\n            &lt;name&gt;XGBoost4J Snapshot Repo&lt;\u002Fname&gt;\n            &lt;url&gt;https:\u002F\u002Fs3-us-west-2.amazonaws.com\u002Fxgboost-maven-repo\u002Fsnapshot\u002F&lt;\u002Furl&gt;\n        &lt;\u002Frepository&gt;\n    &lt;\u002FdistributionManagement&gt;\n\n    &lt;dependencies&gt;\n        &lt;!-- Netty --&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;io.netty&lt;\u002FgroupId&gt;\n            &lt;artifactId&gt;netty-all&lt;\u002FartifactId&gt;\n            &lt;version&gt;4.1.74.Final&lt;\u002Fversion&gt;\n        &lt;\u002Fdependency&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;io.netty&lt;\u002FgroupId&gt;\n            &lt;artifactId&gt;netty-codec-http&lt;\u002FartifactId&gt;\n            &lt;version&gt;4.1.74.Final&lt;\u002Fversion&gt;\n        &lt;\u002Fdependency&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;io.netty&lt;\u002FgroupId&gt;\n            &lt;artifactId&gt;netty-resolver-dns&lt;\u002FartifactId&gt;\n            &lt;version&gt;4.1.74.Final&lt;\u002Fversion&gt;\n        &lt;\u002Fdependency&gt;\n\n        &lt;!-- Spring --&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.springframework.boot&lt;\u002FgroupId&gt;\n            &lt;artifactId&gt;spring-boot-starter-webflux&lt;\u002FartifactId&gt;\n            &lt;version&gt;${spring.boot.version}&lt;\u002Fversion&gt;\n            &lt;exclusions&gt;\n                &lt;exclusion&gt;\n                    &lt;groupId&gt;org.springframework.boot&lt;\u002FgroupId&gt;\n                    &lt;artifactId&gt;spring-boot-starter-logging&lt;\u002FartifactId&gt;\n                &lt;\u002Fexclusion&gt;\n            &lt;\u002Fexclusions&gt;\n        &lt;\u002Fdependency&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;com.fasterxml.jackson.core&lt;\u002FgroupId&gt;\n            &lt;artifactId&gt;jackson-core&lt;\u002FartifactId&gt;\n            &lt;version&gt;${jackson.version}&lt;\u002Fversion&gt;\n        &lt;\u002Fdependency&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;com.fasterxml.jackson.module&lt;\u002FgroupId&gt;\n            &lt;artifactId&gt;jackson-module-kotlin&lt;\u002FartifactId&gt;\n            &lt;version&gt;${jackson.version}&lt;\u002Fversion&gt;\n        &lt;\u002Fdependency&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;com.fasterxml.jackson.core&lt;\u002FgroupId&gt;\n            &lt;artifactId&gt;jackson-annotations&lt;\u002FartifactId&gt;\n            &lt;version&gt;${jackson.version}&lt;\u002Fversion&gt;\n        &lt;\u002Fdependency&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;com.fasterxml.jackson.core&lt;\u002FgroupId&gt;\n            &lt;artifactId&gt;jackson-databind&lt;\u002FartifactId&gt;\n            &lt;version&gt;${jackson.version}&lt;\u002Fversion&gt;\n        &lt;\u002Fdependency&gt;\n\n        &lt;!-- Spring Data --&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.springframework.data&lt;\u002FgroupId&gt;\n            &lt;artifactId&gt;spring-data-commons&lt;\u002FartifactId&gt;\n            &lt;version&gt;${spring.boot.version}&lt;\u002Fversion&gt;\n        &lt;\u002Fdependency&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.springframework.boot&lt;\u002FgroupId&gt;\n            &lt;artifactId&gt;spring-boot-starter-data-cassandra-reactive&lt;\u002FartifactId&gt;\n            &lt;version&gt;${spring.boot.version}&lt;\u002Fversion&gt;\n        &lt;\u002Fdependency&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.springframework.boot&lt;\u002FgroupId&gt;\n            &lt;artifactId&gt;spring-boot-starter-data-r2dbc&lt;\u002FartifactId&gt;\n            &lt;version&gt;${spring.boot.version}&lt;\u002Fversion&gt;\n        &lt;\u002Fdependency&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.springframework.boot&lt;\u002FgroupId&gt;\n            &lt;artifactId&gt;spring-boot-starter-data-jpa&lt;\u002FartifactId&gt;\n            &lt;version&gt;${spring.boot.version}&lt;\u002Fversion&gt;\n        &lt;\u002Fdependency&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.postgresql&lt;\u002FgroupId&gt;\n            &lt;artifactId&gt;postgresql&lt;\u002FartifactId&gt;\n            &lt;scope&gt;runtime&lt;\u002Fscope&gt;\n            &lt;version&gt;42.6.0&lt;\u002Fversion&gt;\n        &lt;\u002Fdependency&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;io.r2dbc&lt;\u002FgroupId&gt;\n            &lt;artifactId&gt;r2dbc-postgresql&lt;\u002FartifactId&gt;\n            &lt;version&gt;0.8.13.RELEASE&lt;\u002Fversion&gt;\n        &lt;\u002Fdependency&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;com.vladmihalcea&lt;\u002FgroupId&gt;\n            &lt;artifactId&gt;hibernate-types-60&lt;\u002FartifactId&gt;\n            &lt;version&gt;2.21.1&lt;\u002Fversion&gt;\n        &lt;\u002Fdependency&gt;\n\n        &lt;!-- Cassandra --&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;com.datastax.oss&lt;\u002FgroupId&gt;\n            &lt;artifactId&gt;java-driver-core&lt;\u002FartifactId&gt;\n            &lt;version&gt;4.13.0&lt;\u002Fversion&gt;\n        &lt;\u002Fdependency&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.scala-lang&lt;\u002FgroupId&gt;\n            &lt;artifactId&gt;scala-library&lt;\u002FartifactId&gt;\n            &lt;version&gt;2.12.15&lt;\u002Fversion&gt;\n        &lt;\u002Fdependency&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;com.datastax.spark&lt;\u002FgroupId&gt;\n            &lt;artifactId&gt;spark-cassandra-connector_2.12&lt;\u002FartifactId&gt;\n            &lt;version&gt;3.3.0&lt;\u002Fversion&gt;\n        &lt;\u002Fdependency&gt;\n\n        &lt;dependency&gt;\n            &lt;groupId&gt;com.typesafe&lt;\u002FgroupId&gt;\n            &lt;artifactId&gt;config&lt;\u002FartifactId&gt;\n            &lt;version&gt;1.4.2&lt;\u002Fversion&gt;\n        &lt;\u002Fdependency&gt;\n\n        &lt;!-- Spark --&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.apache.spark&lt;\u002FgroupId&gt;\n            &lt;artifactId&gt;spark-core_${scala.version}&lt;\u002FartifactId&gt;\n            &lt;version&gt;${spark.version}&lt;\u002Fversion&gt;\n        &lt;\u002Fdependency&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.apache.spark&lt;\u002FgroupId&gt;\n            &lt;artifactId&gt;spark-hive_${scala.version}&lt;\u002FartifactId&gt;\n            &lt;version&gt;${spark.version}&lt;\u002Fversion&gt;\n        &lt;\u002Fdependency&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.apache.spark&lt;\u002FgroupId&gt;\n            &lt;artifactId&gt;spark-streaming_${scala.version}&lt;\u002FartifactId&gt;\n            &lt;version&gt;${spark.version}&lt;\u002Fversion&gt;\n        &lt;\u002Fdependency&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.apache.spark&lt;\u002FgroupId&gt;\n            &lt;artifactId&gt;spark-sql_${scala.version}&lt;\u002FartifactId&gt;\n            &lt;version&gt;${spark.version}&lt;\u002Fversion&gt;\n        &lt;\u002Fdependency&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.apache.spark&lt;\u002FgroupId&gt;\n            &lt;artifactId&gt;spark-mllib_${scala.version}&lt;\u002FartifactId&gt;\n            &lt;version&gt;${spark.version}&lt;\u002Fversion&gt;\n        &lt;\u002Fdependency&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.antlr&lt;\u002FgroupId&gt;\n            &lt;artifactId&gt;antlr4-runtime&lt;\u002FartifactId&gt;\n            &lt;version&gt;4.8&lt;\u002Fversion&gt;\n            &lt;scope&gt;runtime&lt;\u002Fscope&gt;\n        &lt;\u002Fdependency&gt;\n\n        &lt;!-- GXBoost --&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;ml.dmlc&lt;\u002FgroupId&gt;\n            &lt;artifactId&gt;xgboost4j-spark-gpu_${scala.version}&lt;\u002FartifactId&gt;\n            &lt;version&gt;1.7.5&lt;\u002Fversion&gt;\n        &lt;\u002Fdependency&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;ml.dmlc&lt;\u002FgroupId&gt;\n            &lt;artifactId&gt;xgboost4j-gpu_${scala.version}&lt;\u002FartifactId&gt;\n            &lt;version&gt;1.7.5&lt;\u002Fversion&gt;\n        &lt;\u002Fdependency&gt;\n\n        &lt;!-- Kubernetes --&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.apache.spark&lt;\u002FgroupId&gt;\n            &lt;artifactId&gt;spark-kubernetes_${scala.version}&lt;\u002FartifactId&gt;\n            &lt;version&gt;${spark.version}&lt;\u002Fversion&gt;\n        &lt;\u002Fdependency&gt;\n\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.codehaus.janino&lt;\u002FgroupId&gt;\n            &lt;artifactId&gt;commons-compiler&lt;\u002FartifactId&gt;\n            &lt;version&gt;3.0.16&lt;\u002Fversion&gt;\n        &lt;\u002Fdependency&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.codehaus.janino&lt;\u002FgroupId&gt;\n            &lt;artifactId&gt;janino&lt;\u002FartifactId&gt;\n            &lt;version&gt;3.0.16&lt;\u002Fversion&gt;\n        &lt;\u002Fdependency&gt;\n\n        &lt;!-- Rapids --&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;com.nvidia&lt;\u002FgroupId&gt;\n            &lt;artifactId&gt;rapids-4-spark_${scala.version}&lt;\u002FartifactId&gt;\n            &lt;version&gt;23.06.0&lt;\u002Fversion&gt;\n        &lt;\u002Fdependency&gt;\n\n        &lt;!-- Lombok --&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.projectlombok&lt;\u002FgroupId&gt;\n            &lt;artifactId&gt;lombok&lt;\u002FartifactId&gt;\n            &lt;version&gt;${lombok.version}&lt;\u002Fversion&gt;\n        &lt;\u002Fdependency&gt;\n\n        &lt;!-- Logging --&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.zalando&lt;\u002FgroupId&gt;\n            &lt;artifactId&gt;logbook-spring-webflux&lt;\u002FartifactId&gt;\n            &lt;version&gt;3.1.0&lt;\u002Fversion&gt;\n        &lt;\u002Fdependency&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.zalando&lt;\u002FgroupId&gt;\n            &lt;artifactId&gt;logbook-spring-boot-autoconfigure&lt;\u002FartifactId&gt;\n            &lt;version&gt;3.2.0&lt;\u002Fversion&gt;\n        &lt;\u002Fdependency&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.zalando&lt;\u002FgroupId&gt;\n            &lt;artifactId&gt;logbook-netty&lt;\u002FartifactId&gt;\n            &lt;version&gt;3.2.0&lt;\u002Fversion&gt;\n        &lt;\u002Fdependency&gt;\n\n        &lt;!-- Utils --&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.apache.commons&lt;\u002FgroupId&gt;\n            &lt;artifactId&gt;commons-lang3&lt;\u002FartifactId&gt;\n            &lt;version&gt;3.12.0&lt;\u002Fversion&gt;\n        &lt;\u002Fdependency&gt;\n\n        &lt;!-- Kotlin --&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.jetbrains.kotlin&lt;\u002FgroupId&gt;\n            &lt;artifactId&gt;kotlin-stdlib&lt;\u002FartifactId&gt;\n            &lt;version&gt;${kotlin.version}&lt;\u002Fversion&gt;\n        &lt;\u002Fdependency&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.jetbrains.kotlin&lt;\u002FgroupId&gt;\n            &lt;artifactId&gt;kotlin-reflect&lt;\u002FartifactId&gt;\n            &lt;version&gt;${kotlin.version}&lt;\u002Fversion&gt;\n            &lt;scope&gt;runtime&lt;\u002Fscope&gt;\n        &lt;\u002Fdependency&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.jetbrains.kotlinx&lt;\u002FgroupId&gt;\n            &lt;artifactId&gt;kotlinx-coroutines-reactor&lt;\u002FartifactId&gt;\n            &lt;version&gt;1.7.2&lt;\u002Fversion&gt;\n            &lt;scope&gt;runtime&lt;\u002Fscope&gt;\n        &lt;\u002Fdependency&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;io.projectreactor.kotlin&lt;\u002FgroupId&gt;\n            &lt;artifactId&gt;reactor-kotlin-extensions&lt;\u002FartifactId&gt;\n            &lt;version&gt;1.2.2&lt;\u002Fversion&gt;\n            &lt;scope&gt;runtime&lt;\u002Fscope&gt;\n        &lt;\u002Fdependency&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.jetbrains.kotlinx.spark&lt;\u002FgroupId&gt;\n            &lt;artifactId&gt;kotlin-spark-api_3.3.1_${scala.version}&lt;\u002FartifactId&gt;\n            &lt;version&gt;1.2.3&lt;\u002Fversion&gt;\n        &lt;\u002Fdependency&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.jetbrains.kotlin&lt;\u002FgroupId&gt;\n            &lt;artifactId&gt;kotlin-test&lt;\u002FartifactId&gt;\n            &lt;version&gt;${kotlin.version}&lt;\u002Fversion&gt;\n            &lt;scope&gt;test&lt;\u002Fscope&gt;\n        &lt;\u002Fdependency&gt;\n    &lt;\u002Fdependencies&gt;\n\n    &lt;build&gt;\n        &lt;finalName&gt;service&lt;\u002FfinalName&gt;\n        &lt;plugins&gt;\n            &lt;plugin&gt;\n                &lt;groupId&gt;org.springframework.boot&lt;\u002FgroupId&gt;\n                &lt;artifactId&gt;spring-boot-maven-plugin&lt;\u002FartifactId&gt;\n                &lt;version&gt;3.0.6&lt;\u002Fversion&gt;\n                &lt;configuration&gt;\n                    &lt;mainClass&gt;com.mlwebservice.MLWebServiceApplication&lt;\u002FmainClass&gt;\n                &lt;\u002Fconfiguration&gt;\n                &lt;executions&gt;\n                    &lt;execution&gt;\n                        &lt;goals&gt;\n                            &lt;goal&gt;repackage&lt;\u002Fgoal&gt;\n                        &lt;\u002Fgoals&gt;\n                    &lt;\u002Fexecution&gt;\n                &lt;\u002Fexecutions&gt;\n            &lt;\u002Fplugin&gt;\n\n            &lt;plugin&gt;\n                &lt;groupId&gt;org.apache.maven.plugins&lt;\u002FgroupId&gt;\n                &lt;artifactId&gt;maven-compiler-plugin&lt;\u002FartifactId&gt;\n                &lt;version&gt;3.11.0&lt;\u002Fversion&gt;\n                &lt;executions&gt;\n                    &lt;execution&gt;\n                        &lt;id&gt;compile&lt;\u002Fid&gt;\n                        &lt;phase&gt;compile&lt;\u002Fphase&gt;\n                        &lt;goals&gt;\n                            &lt;goal&gt;compile&lt;\u002Fgoal&gt;\n                        &lt;\u002Fgoals&gt;\n                    &lt;\u002Fexecution&gt;\n                    &lt;execution&gt;\n                        &lt;id&gt;testCompile&lt;\u002Fid&gt;\n                        &lt;phase&gt;test-compile&lt;\u002Fphase&gt;\n                        &lt;goals&gt;\n                            &lt;goal&gt;testCompile&lt;\u002Fgoal&gt;\n                        &lt;\u002Fgoals&gt;\n                    &lt;\u002Fexecution&gt;\n                &lt;\u002Fexecutions&gt;\n                &lt;configuration&gt;\n                    &lt;source&gt;${java.version}&lt;\u002Fsource&gt;\n                    &lt;target&gt;${java.version}&lt;\u002Ftarget&gt;\n                    &lt;annotationProcessorPaths&gt;\n                        &lt;path&gt;\n                            &lt;groupId&gt;org.projectlombok&lt;\u002FgroupId&gt;\n                            &lt;artifactId&gt;lombok&lt;\u002FartifactId&gt;\n                            &lt;version&gt;${lombok.version}&lt;\u002Fversion&gt;\n                        &lt;\u002Fpath&gt;\n                    &lt;\u002FannotationProcessorPaths&gt;\n                &lt;\u002Fconfiguration&gt;\n            &lt;\u002Fplugin&gt;\n\n            &lt;plugin&gt;\n                &lt;groupId&gt;org.jetbrains.kotlin&lt;\u002FgroupId&gt;\n                &lt;artifactId&gt;kotlin-maven-plugin&lt;\u002FartifactId&gt;\n                &lt;version&gt;${kotlin.version}&lt;\u002Fversion&gt;\n                &lt;executions&gt;\n                    &lt;execution&gt;\n                        &lt;id&gt;compile&lt;\u002Fid&gt;\n                        &lt;phase&gt;process-sources&lt;\u002Fphase&gt;\n                        &lt;goals&gt;\n                            &lt;goal&gt;compile&lt;\u002Fgoal&gt;\n                        &lt;\u002Fgoals&gt;\n                        &lt;configuration&gt;\n                            &lt;jvmTarget&gt;${java.version}&lt;\u002FjvmTarget&gt;\n                            &lt;sourceDirs&gt;\n                                &lt;source&gt;src\u002Fmain\u002Fjava&lt;\u002Fsource&gt;\n                                &lt;source&gt;src\u002Fmain\u002Fkotlin&lt;\u002Fsource&gt;\n                                &lt;source&gt;target\u002Fgenerated-sources\u002Fannotations&lt;\u002Fsource&gt;\n                            &lt;\u002FsourceDirs&gt;\n                        &lt;\u002Fconfiguration&gt;\n                    &lt;\u002Fexecution&gt;\n                    &lt;execution&gt;\n                        &lt;id&gt;test-compile&lt;\u002Fid&gt;\n                        &lt;phase&gt;test-compile&lt;\u002Fphase&gt;\n                        &lt;goals&gt;\n                            &lt;goal&gt;test-compile&lt;\u002Fgoal&gt;\n                        &lt;\u002Fgoals&gt;\n                        &lt;configuration&gt;\n                            &lt;jvmTarget&gt;${java.version}&lt;\u002FjvmTarget&gt;\n                            &lt;sourceDirs&gt;\n                                &lt;source&gt;src\u002Fmain\u002Fjava&lt;\u002Fsource&gt;\n                                &lt;source&gt;src\u002Fmain\u002Fkotlin&lt;\u002Fsource&gt;\n                                &lt;source&gt;target\u002Fgenerated-sources\u002Fannotations&lt;\u002Fsource&gt;\n                            &lt;\u002FsourceDirs&gt;\n                        &lt;\u002Fconfiguration&gt;\n                    &lt;\u002Fexecution&gt;\n                &lt;\u002Fexecutions&gt;\n                &lt;configuration&gt;\n                    &lt;jvmTarget&gt;${java.version}&lt;\u002FjvmTarget&gt;\n                    &lt;sourceDirs&gt;\n                        &lt;source&gt;src\u002Fmain\u002Fjava&lt;\u002Fsource&gt;\n                        &lt;source&gt;src\u002Fmain\u002Fkotlin&lt;\u002Fsource&gt;\n                        &lt;source&gt;target\u002Fgenerated-sources\u002Fannotations&lt;\u002Fsource&gt;\n                    &lt;\u002FsourceDirs&gt;\n                &lt;\u002Fconfiguration&gt;\n            &lt;\u002Fplugin&gt;\n        &lt;\u002Fplugins&gt;\n    &lt;\u002Fbuild&gt;\n&lt;\u002Fproject&gt;\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003E\u003C\u002Fp\u003E\u003C\u002Fdiv\u003E\u003C\u002Fdetails\u003E\u003Ch3\u003EMain класс\u003C\u002Fh3\u003E\u003Cp\u003EМодифицируем Main класс приложения, необходимо добавить аннотации \u003Ccode\u003E@EnableWebFlux\u003C\u002Fcode\u003E и \u003Ccode\u003E@EnableR2dbcRepositories\u003C\u002Fcode\u003E, указать тип приложения \u003Ccode\u003EREACTIVE\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\u003Cdetails class=\"spoiler\"\u003E\u003Csummary\u003EMain class\u003C\u002Fsummary\u003E\u003Cdiv class=\"spoiler__content\"\u003E\u003Cpre\u003E\u003Ccode class=\"java\"\u003Epackage com.mlwebservice;\n\nimport org.springframework.boot.WebApplicationType;\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\nimport org.springframework.boot.autoconfigure.cassandra.CassandraAutoConfiguration;\nimport org.springframework.boot.autoconfigure.gson.GsonAutoConfiguration;\nimport org.springframework.boot.builder.SpringApplicationBuilder;\nimport org.springframework.data.r2dbc.repository.config.EnableR2dbcRepositories;\nimport org.springframework.web.reactive.config.EnableWebFlux;\n\nimport java.net.InetAddress;\nimport java.net.UnknownHostException;\n\n@EnableWebFlux\n@EnableR2dbcRepositories\n@SpringBootApplication(exclude = {\n        GsonAutoConfiguration.class,\n        CassandraAutoConfiguration.class\n})\npublic class MLWebServiceApplication {\n    public static void main(String[] args) {\n        new SpringApplicationBuilder(MLWebServiceApplication.class)\n                .web(WebApplicationType.REACTIVE)\n                .run(args);\n        );\n    }\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003E\u003C\u002Fp\u003E\u003C\u002Fdiv\u003E\u003C\u002Fdetails\u003E\u003Ch3\u003ESpring Data → R2DBC\u003C\u002Fh3\u003E\u003Cp\u003EТак как в сущности БД используется JSONB поле (с его отображением в приложении в виде JsonNode), необходима конфигурация R2DBC с кастомными конвертерами:\u003C\u002Fp\u003E\u003Cdetails class=\"spoiler\"\u003E\u003Csummary\u003EJsonb converters\u003C\u002Fsummary\u003E\u003Cdiv class=\"spoiler__content\"\u003E\u003Cpre\u003E\u003Ccode class=\"kotlin\"\u003Epackage com.mlwebservice.config\n\nimport com.fasterxml.jackson.databind.JsonNode\nimport com.fasterxml.jackson.databind.ObjectMapper\nimport io.r2dbc.postgresql.codec.Json\nimport org.springframework.context.annotation.Bean\nimport org.springframework.context.annotation.Configuration\nimport org.springframework.core.convert.converter.Converter\nimport org.springframework.data.convert.ReadingConverter\nimport org.springframework.data.convert.WritingConverter\nimport org.springframework.data.r2dbc.convert.R2dbcCustomConversions\nimport org.springframework.data.r2dbc.dialect.PostgresDialect\n\n@Configuration\nopen class R2dbcConfiguration(private val objectMapper: ObjectMapper) {\n\n    @Bean\n    open fun customConversions() : R2dbcCustomConversions {\n        val converters = listOf&lt;Converter&lt;*, *&gt;&gt;(\n            JsonNodeWritingConverter(objectMapper),\n            JsonNodeReadingConverter(objectMapper)\n        )\n        return R2dbcCustomConversions.of(PostgresDialect.INSTANCE, converters);\n    }\n}\n\n@WritingConverter\nclass JsonNodeWritingConverter(private val objectMapper: ObjectMapper) : Converter&lt;JsonNode, Json&gt; {\n    override fun convert(source: JsonNode): Json {\n        return Json.of(objectMapper.writeValueAsString(source));\n    }\n}\n\n@ReadingConverter\nclass JsonNodeReadingConverter(private val objectMapper: ObjectMapper) : Converter&lt;Json, JsonNode&gt; {\n    override fun convert(source: Json): JsonNode? {\n        return objectMapper.readTree(source.asString());\n    }\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003E\u003C\u002Fp\u003E\u003C\u002Fdiv\u003E\u003C\u002Fdetails\u003E\u003Cp\u003EДалее следует удалить из упомянутой выше сущности \u003Ccode\u003EModelEntity\u003C\u002Fcode\u003E лишние аннотации, в итоге должно получиться:\u003C\u002Fp\u003E\u003Cdetails class=\"spoiler\"\u003E\u003Csummary\u003EModelEntity\u003C\u002Fsummary\u003E\u003Cdiv class=\"spoiler__content\"\u003E\u003Cpre\u003E\u003Ccode class=\"kotlin\"\u003Epackage com.mlwebservice.persist.entity\n\nimport com.fasterxml.jackson.databind.JsonNode\nimport com.fasterxml.jackson.databind.ObjectMapper\nimport com.fasterxml.jackson.databind.node.ObjectNode\nimport org.springframework.data.annotation.CreatedDate\nimport org.springframework.data.annotation.Id\nimport org.springframework.data.annotation.LastModifiedDate\nimport org.springframework.data.relational.core.mapping.Column\nimport org.springframework.data.relational.core.mapping.Table\nimport java.time.LocalDateTime\nimport java.util.*\n\n@Table(name = \"models\", schema = \"instrument_data\")\ndata class ModelEntity constructor(\n    @Id\n    val id: Long? = null,\n  \n    @Column(\"model\")\n    val model: ByteArray,\n\n    @Column(\"created_at\")\n    val createdAt: LocalDateTime,\n\n    @Column(\"last_trained_at\")\n    val lastTrainedAt: LocalDateTime,\n\n    @Column(\"task_id\")\n    val taskId: UUID,\n\n    @Column(\"parameters\")\n    val parameters: JsonNode\n)\n\u002F\u002F конструкторы и прочее необходимое\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003E\u003C\u002Fp\u003E\u003C\u002Fdiv\u003E\u003C\u002Fdetails\u003E\u003Cp\u003EСам репозиторий сущностей теперь наследуется от R2dbcRepository:\u003C\u002Fp\u003E\u003Cpre\u003E\u003Ccode class=\"kotlin\"\u003E@Repository\ninterface ModelRepository : R2dbcRepository&lt;ModelEntity, Long&gt;\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EМетоды сохранения и загрузки модели трансформируются для работы в WebFlux:\u003C\u002Fp\u003E\u003Cdetails class=\"spoiler\"\u003E\u003Csummary\u003Eметоды для работы с моделями данных\u003C\u002Fsummary\u003E\u003Cdiv class=\"spoiler__content\"\u003E\u003Cp\u003Eметод загрузки модели из БД\u003C\u002Fp\u003E\u003Cpre\u003E\u003Ccode class=\"kotlin\"\u003Einternal inline fun &lt;reified T&gt; loadModel(modelId: Long): T {\n    val optional = modelRepository.findById(modelId)\n\n    val entity = optional.get()\n    val modelByteArray = entity.model\n\n    val byteArrayInputStream = ByteArrayInputStream(modelByteArray)\n    val modelObject = ObjectInputStream(byteArrayInputStream).use { it.readObject() }\n\n    if (modelObject is T) {\n        return modelObject\n    } else {\n        throw ServiceException.withMessage(\"Model id $modelId has incorrect format\")\n    }\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003Eмодифицируется до:\u003C\u002Fp\u003E\u003Cpre\u003E\u003Ccode class=\"kotlin\"\u003Einternal inline fun &lt;reified T&gt; loadModel(modelId: Long): Mono&lt;T&gt; =\n        modelRepository.findById(modelId)\n            .map { modelEntity: ModelEntity -&gt;\n                ByteArrayInputStream(modelEntity.model)\n            }\n            .publishOn(Schedulers.boundedElastic())\n            .map { byteArrayInputStream: ByteArrayInputStream -&gt;\n                ObjectInputStream(byteArrayInputStream).use { it.readObject() }\n            }\n            .flatMap { modelObject -&gt;\n                if (modelObject is T) {\n                    Mono.just(modelObject)\n                } else {\n                    Mono.error(ServiceException.withMessage(\"Model id $modelId has incorrect format\"))\n                }\n            }\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003Eа метод сохранения:\u003C\u002Fp\u003E\u003Cpre\u003E\u003Ccode class=\"kotlin\"\u003Efun saveModel(\n    model : PredictionModel&lt;Vector, XGBoostRegressionModel&gt;,\n    taskId : UUID,\n    modelParameters : AnalyticsRequest.ModelParameters\n) {\n    val byteArrayOutputStream = ByteArrayOutputStream()\n    ObjectOutputStream(byteArrayOutputStream).use { it.writeObject(model) }\n    val modelByteArray: ByteArray = byteArrayOutputStream.toByteArray()\n    val jsonParams : JsonNode = objectMapper.convertValue(modelParameters, JsonNode::class.java)\n\n    val entity = ModelEntity(modelByteArray, taskId, jsonParams)\n    modelRepository.save(entity)\n    log.info(\"Model for task id {} saved. Parameters map: {}, jsonNode: {}\",\n        taskId, modelParameters, jsonParams)\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003Eмодифицируется до:\u003C\u002Fp\u003E\u003Cpre\u003E\u003Ccode class=\"kotlin\"\u003Efun saveModel(\n        model: PredictionModel&lt;Vector, XGBoostRegressionModel&gt;,\n        taskId: UUID,\n        modelParameters: AnalyticsRequest.ModelParameters\n    ): Mono&lt;Void&gt; =\n        Mono.fromCallable {\n            val jsonParams: JsonNode = objectMapper.convertValue(modelParameters, JsonNode::class.java)\n\n            val byteArrayOutputStream = ByteArrayOutputStream()\n            ObjectOutputStream(byteArrayOutputStream).use { objectOutputStream -&gt;\n                objectOutputStream.writeObject(model)\n            }\n            val modelByteArray: ByteArray = byteArrayOutputStream.toByteArray()\n\n            ModelEntity(modelByteArray, taskId, jsonParams)\n        }\n            .subscribeOn(Schedulers.boundedElastic())\n            .flatMap { entity -&gt;\n                modelRepository.save(entity)\n                    .doOnSuccess {\n                        log.info(\n                            \"Model for task id {} saved. Parameters map: {}, jsonNode: {}\",\n                            taskId, modelParameters, entity.parameters.toString()\n                        )\n                    }\n                    .then()\n            }\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003E\u003C\u002Fp\u003E\u003C\u002Fdiv\u003E\u003C\u002Fdetails\u003E\u003Ch3\u003ECassandra\u003C\u002Fh3\u003E\u003Cp\u003EРепозитории Cassandra строились на основе взаимодействия со спарковой сессией. Переработать методы довольно просто. Так, метод получения датасета в базовом абстрактном репозитории:\u003C\u002Fp\u003E\u003Cdetails class=\"spoiler\"\u003E\u003Csummary\u003EcassandraDataset web\u003C\u002Fsummary\u003E\u003Cdiv class=\"spoiler__content\"\u003E\u003Cpre\u003E\u003Ccode class=\"kotlin\"\u003Efun cassandraDataset(keyspace: String, table: String): Dataset&lt;Row&gt; {\n    val cassandraDataset: Dataset&lt;Row&gt; = sparkSession.read()\n        .format(\"org.apache.spark.sql.cassandra\")\n        .option(\"keyspace\", keyspace)\n        .option(\"table\", table)\n        .load()\n\n    cassandraDataset.createOrReplaceTempView(table)\n    return cassandraDataset\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003E\u003C\u002Fp\u003E\u003C\u002Fdiv\u003E\u003C\u002Fdetails\u003E\u003Cp\u003Eмодифицируется до:\u003C\u002Fp\u003E\u003Cdetails class=\"spoiler\"\u003E\u003Csummary\u003EcassandraDataset webflux\u003C\u002Fsummary\u003E\u003Cdiv class=\"spoiler__content\"\u003E\u003Cpre\u003E\u003Ccode class=\"kotlin\"\u003Efun cassandraDataset(keyspace: String, table: String): Mono&lt;Dataset&lt;Row&gt;&gt; =\n    Mono.fromCallable {\n        val cassandraDataset: Dataset&lt;Row&gt; = sparkSession.read()\n            .format(\"org.apache.spark.sql.cassandra\")\n            .option(\"keyspace\", keyspace)\n            .option(\"table\", table)\n            .load()\n\n        cassandraDataset.createOrReplaceTempView(table)\n        cassandraDataset\n    }\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003E\u003C\u002Fp\u003E\u003C\u002Fdiv\u003E\u003C\u002Fdetails\u003E\u003Cp\u003Eметод сохранения датасета:\u003C\u002Fp\u003E\u003Cdetails class=\"spoiler\"\u003E\u003Csummary\u003EsaveDataSet web\u003C\u002Fsummary\u003E\u003Cdiv class=\"spoiler__content\"\u003E\u003Cpre\u003E\u003Ccode\u003Eopen fun saveDataSet(dataset: Dataset&lt;Row&gt;) {\n    dataset.write()\n        .format(\"org.apache.spark.sql.cassandra\")\n        .mode(\"append\")\n        .option(\"confirm.truncate\", \"false\")\n        .option(\"keyspace\", keyspace)\n        .option(\"table\", table)\n        .save();\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003E\u003C\u002Fp\u003E\u003C\u002Fdiv\u003E\u003C\u002Fdetails\u003E\u003Cp\u003Eмодифицируется до:\u003C\u002Fp\u003E\u003Cdetails class=\"spoiler\"\u003E\u003Csummary\u003EsaveDataSet webflux\u003C\u002Fsummary\u003E\u003Cdiv class=\"spoiler__content\"\u003E\u003Cpre\u003E\u003Ccode class=\"kotlin\"\u003Eopen fun saveDataSet(dataset: Dataset&lt;Row&gt;): Mono&lt;Void&gt; =\n    Mono.fromRunnable {\n        dataset.write()\n            .format(\"org.apache.spark.sql.cassandra\")\n            .mode(\"append\")\n            .option(\"confirm.truncate\", \"false\")\n            .option(\"keyspace\", keyspace)\n            .option(\"table\", table)\n            .save()\n    }\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003E\u003C\u002Fp\u003E\u003C\u002Fdiv\u003E\u003C\u002Fdetails\u003E\u003Cp\u003Eметод получения базового датасета с определенными оффсетами:\u003C\u002Fp\u003E\u003Cdetails class=\"spoiler\"\u003E\u003Csummary\u003EgetBaseDataSet web\u003C\u002Fsummary\u003E\u003Cdiv class=\"spoiler__content\"\u003E\u003Cpre\u003E\u003Ccode class=\"kotlin\"\u003Efun getBaseDataSet(\n    ticker: String,\n    taskNumber : UUID,\n    dateStart : LocalDate,\n    dateEnd : LocalDate,\n    currentOffset : Int,\n    batchSize : Int\n): Dataset&lt;Row&gt; {\n    val filteredDataset = cassandraDataset(table)\n        .filter(\n            functions.col(\"ticker\").equalTo(ticker)\n                .and(functions.col(\"task_number\").equalTo(taskNumber.toString()))\n                .and(functions.col(\"datetime\").between(dateStart, dateEnd))\n        )\n\n    val offsetDataset = filteredDataset.withColumn(\n        \"row_number\",\n        functions.row_number().over(orderBy(\"datetime\"))\n    )\n\n    return offsetDataset\n        .filter(functions.col(\"row_number\")\n            .between(currentOffset + 1, currentOffset + batchSize))\n        .drop(\"row_number\")\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003E\u003C\u002Fp\u003E\u003C\u002Fdiv\u003E\u003C\u002Fdetails\u003E\u003Cp\u003Eмодифицируется до:\u003C\u002Fp\u003E\u003Cdetails class=\"spoiler\"\u003E\u003Csummary\u003EgetBaseDataSet webflux\u003C\u002Fsummary\u003E\u003Cdiv class=\"spoiler__content\"\u003E\u003Cpre\u003E\u003Ccode class=\"kotlin\"\u003Efun getBaseDataSet(\n    ticker: String,\n    taskNumber: UUID,\n    dateStart: LocalDate,\n    dateEnd: LocalDate,\n    currentOffset: Int,\n    batchSize: Int\n): Mono&lt;Dataset&lt;Row&gt;&gt; =\n    cassandraDataset(table)\n        .map { dataset -&gt;\n            dataset\n                .filter(\n                    functions.col(\"ticker\").equalTo(ticker)\n                        .and(functions.col(\"task_number\").equalTo(taskNumber.toString()))\n                        .and(functions.col(\"datetime\").between(dateStart, dateEnd))\n                ).withColumn(\n                    \"row_number\",\n                    functions.row_number().over(orderBy(\"datetime\"))\n                )\n                .filter(\n                    functions.col(\"row_number\")\n                        .between(currentOffset + 1, currentOffset + batchSize)\n                )\n                .drop(\"row_number\")\n        }\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003E\u003C\u002Fp\u003E\u003C\u002Fdiv\u003E\u003C\u002Fdetails\u003E\u003Cp\u003EОстальные репозитории конкретных таблиц переписываются по такому же принципу.\u003C\u002Fp\u003E\u003Cp\u003EВ сервисе работы с данными следует упомянуть метод объединения датасетов (теперь же репозитории возвращают реактивные \u003Ccode\u003EMono&lt;Dataset&lt;Row&gt;&gt;\u003C\u002Fcode\u003E):\u003C\u002Fp\u003E\u003Cdetails class=\"spoiler\"\u003E\u003Csummary\u003EgetMainDataset web\u003C\u002Fsummary\u003E\u003Cdiv class=\"spoiler__content\"\u003E\u003Cpre\u003E\u003Ccode class=\"kotlin\"\u003Efun getMainDataset(\n    ticker : String,\n    taskNumber : UUID,\n    dateStart : LocalDate,\n    dateEnd : LocalDate\n) : Dataset&lt;Row&gt; {\n    val timeSeries = timeSeriesRepository.getDataset(ticker, taskNumber, dateStart, dateEnd).`as`(\"ts\")\n    val emaDataSet = emaRepository.getEmaDataSet(ticker, dateStart, dateEnd).`as`(\"ema\")\n    val stochasticDataset = stochasticRepository.getStochasticDataSet(ticker, dateStart, dateEnd).`as`(\"stoch\")\n    val bBandsDataset = bBandIndicatorRepository.getBBandsDataSet(ticker, dateStart, dateEnd).`as`(\"bb\")\n    val macdDataset = macdRepository.getMacdDataSet(ticker, dateStart, dateEnd).`as`(\"macd\")\n    val rsiDataset = rsiRepository.getRsiDataSet(ticker, dateStart, dateEnd).`as`(\"rsi\")\n    val smaDataset = smaRepository.getSmaDataSet(ticker, dateStart, dateEnd).`as`(\"sma\")\n    val willrDataset = willrRepository.getWillrDataSet(ticker, dateStart, dateEnd).`as`(\"willr\")\n\n    return combineDatasets(\n        timeSeries, emaDataSet, stochasticDataset, bBandsDataset, macdDataset, rsiDataset, smaDataset, willrDataset\n    )\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003E\u003C\u002Fp\u003E\u003C\u002Fdiv\u003E\u003C\u002Fdetails\u003E\u003Cp\u003Eмодифицируется до:\u003C\u002Fp\u003E\u003Cdetails class=\"spoiler\"\u003E\u003Csummary\u003EgetMainDataset webflux\u003C\u002Fsummary\u003E\u003Cdiv class=\"spoiler__content\"\u003E\u003Cpre\u003E\u003Ccode class=\"kotlin\"\u003Efun getMainDataset(\n    ticker: String,\n    taskNumber: UUID,\n    dateStart: LocalDate,\n    dateEnd: LocalDate\n): Mono&lt;Dataset&lt;Row&gt;&gt; {\n    val timeSeriesMono = timeSeriesRepository.getDataset(ticker, taskNumber, dateStart, dateEnd)\n        .map { dataset -&gt; dataset.alias(\"ts\") }\n    val emaDataSetMono = emaRepository.getEmaDataSet(ticker, dateStart, dateEnd)\n        .map { dataset -&gt; dataset.alias(\"ema\") }\n    val stochasticDatasetMono = stochasticRepository.getStochasticDataSet(ticker, dateStart, dateEnd)\n        .map { dataset -&gt; dataset.alias(\"stoch\") }\n    val bBandsDatasetMono = bBandIndicatorRepository.getBBandsDataSet(ticker, dateStart, dateEnd)\n        .map { dataset -&gt; dataset.alias(\"bb\") }\n    val macdDatasetMono = macdRepository.getMacdDataSet(ticker, dateStart, dateEnd)\n        .map { dataset -&gt; dataset.alias(\"macd\") }\n    val rsiDatasetMono = rsiRepository.getRsiDataSet(ticker, dateStart, dateEnd)\n        .map { dataset -&gt; dataset.alias(\"rsi\") }\n    val smaDatasetMono = smaRepository.getSmaDataSet(ticker, dateStart, dateEnd)\n        .map { dataset -&gt; dataset.alias(\"sma\") }\n    val willrDatasetMono = willrRepository.getWillrDataSet(ticker, dateStart, dateEnd)\n        .map { dataset -&gt; dataset.alias(\"willr\") }\n\n    return Mono.zip(\n        timeSeriesMono, emaDataSetMono, stochasticDatasetMono, bBandsDatasetMono,\n        macdDatasetMono, rsiDatasetMono, smaDatasetMono, willrDatasetMono\n    ).map { tuple -&gt;\n        combineDatasets(tuple.t1, tuple.t2, tuple.t3, tuple.t4, tuple.t5, tuple.t6, tuple.t7, tuple.t8)\n    }\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003E\u003C\u002Fp\u003E\u003C\u002Fdiv\u003E\u003C\u002Fdetails\u003E\u003Cp\u003Eздесь получаются 8 датасетов в Mono-обертках, обертки объединяются в один Mono посредством .zip() и передаются на исполнение в метод комбинации датасетов, который не менялся.\u003C\u002Fp\u003E\u003Ch3\u003EСервис StockAnalyticsService\u003C\u002Fh3\u003E\u003Cp\u003EМетод выполнения предикта с помощью сохраненной модели:\u003C\u002Fp\u003E\u003Cdetails class=\"spoiler\"\u003E\u003Csummary\u003EpredictWithExistingModel web\u003C\u002Fsummary\u003E\u003Cdiv class=\"spoiler__content\"\u003E\u003Cpre\u003E\u003Ccode class=\"kotlin\"\u003Efun predictWithExistingModel(\n    ticker : String,\n    taskNumber : UUID,\n    dateStart : LocalDate,\n    dateEnd : LocalDate,\n    modelId : Long\n): StockPredictDto {\n    val model: PredictionModel&lt;Vector, XGBoostRegressionModel&gt; = modelService.loadModel(modelId)\n    val data = dataReaderService.getMainDataset(ticker, taskNumber, dateStart, dateEnd)\n\n    var predictions = model.transform(data)\n    predictions = predictions.select(\"dateTime\", \"prediction\")\n    return StockPredictDto.fromDataset(predictions)\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003E\u003C\u002Fp\u003E\u003C\u002Fdiv\u003E\u003C\u002Fdetails\u003E\u003Cp\u003Eмодифицируется до:\u003C\u002Fp\u003E\u003Cdetails class=\"spoiler\"\u003E\u003Csummary\u003EpredictWithExistingModel webflux\u003C\u002Fsummary\u003E\u003Cdiv class=\"spoiler__content\"\u003E\u003Cpre\u003E\u003Ccode class=\"kotlin\"\u003Efun predictWithExistingModel(\n    ticker: String,\n    taskNumber: UUID,\n    dateStart: LocalDate,\n    dateEnd: LocalDate,\n    modelId: Long\n): Mono&lt;StockPredictDto&gt; =\n    modelService.loadModel&lt;PredictionModel&lt;Vector, XGBoostRegressionModel&gt;&gt;(modelId)\n        .flatMap { model -&gt;\n            dataReaderService.getMainDataset(ticker, taskNumber, dateStart, dateEnd)\n                .map { data -&gt;\n                    val predictions = model.transform(data)\n                        .select(\"dateTime\", \"prediction\")\n                    StockPredictDto.fromDataset(predictions)\n                }\n        }\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003E\u003C\u002Fp\u003E\u003C\u002Fdiv\u003E\u003C\u002Fdetails\u003E\u003Cp\u003EМетод обучения модели:\u003C\u002Fp\u003E\u003Cdetails class=\"spoiler\"\u003E\u003Csummary\u003EtrainModel web\u003C\u002Fsummary\u003E\u003Cdiv class=\"spoiler__content\"\u003E\u003Cpre\u003E\u003Ccode class=\"kotlin\"\u003Efun trainModel(\n    ticker : String,\n    taskNumber : UUID,\n    dateStart : LocalDate,\n    dateEnd : LocalDate,\n    evalPivotPoint : Long,\n    offset : Long,\n    modelParameters : AnalyticsRequest.ModelParameters\n) : ModelTrainResultResponse {\n    val pivot = dateEnd.minusDays(evalPivotPoint)\n\n    val tdf = dataReaderService.getDatasetWithLabel(ticker, taskNumber, dateStart, pivot, offset)\n    val edf = dataReaderService.getDatasetWithLabel(ticker, taskNumber, pivot, dateEnd, offset)\n        .selectExpr(*allColumns)\n\n    val modelParams = createModelParams(modelParameters)\n    val regressor = xgBoostRegressor(modelParams)\n\n    val model: PredictionModel&lt;Vector, XGBoostRegressionModel&gt; = regressor.fit(tdf)\n    val predictions = model.transform(edf)\n\n    combinedDataRepository.saveData(tdf.selectExpr(*allColumns).unionAll(edf), ticker, taskNumber)\n    modelService.saveModel(model, taskNumber, modelParameters)\n\n    val result = predictions.withColumn(\"error\", col(\"prediction\").minus(col(labelName)))\n    return ModelTrainResultResponse(ModelTrainResult.listFromDataset(result.selectExpr(*resultExp)))\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003E\u003C\u002Fp\u003E\u003C\u002Fdiv\u003E\u003C\u002Fdetails\u003E\u003Cp\u003Eмодифицируется до:\u003C\u002Fp\u003E\u003Cdetails class=\"spoiler\"\u003E\u003Csummary\u003EtrainModel webflux\u003C\u002Fsummary\u003E\u003Cdiv class=\"spoiler__content\"\u003E\u003Cpre\u003E\u003Ccode class=\"kotlin\"\u003Efun trainModel(\n        ticker: String,\n        taskNumber: UUID,\n        dateStart: LocalDate,\n        dateEnd: LocalDate,\n        evalPivotPoint: Long,\n        offset: Long,\n        modelParameters: AnalyticsRequest.ModelParameters\n    ): Mono&lt;ModelTrainResultResponse&gt; =\n        Mono.just(dateEnd.minusDays(evalPivotPoint))\n            .flatMap { pivot: LocalDate -&gt;\n                dataReaderService.getDatasetWithLabel(ticker, taskNumber, dateStart, pivot, offset)\n                    .zipWith(dataReaderService.getDatasetWithLabel(ticker, taskNumber, pivot, dateEnd, offset))\n            }\n            .flatMap { tuple: Tuple2&lt;Dataset&lt;Row&gt;, Dataset&lt;Row&gt;&gt; -&gt;\n                val tdf = tuple.t1\n                val edf = tuple.t2\n\n                val modelParams = createModelParams(modelParameters)\n                val regressor = xgBoostRegressor(modelParams)\n\n                Mono.fromCallable { regressor.fit(tdf) }\n                    .flatMap { model: XGBoostRegressionModel -&gt;\n                        val predictions = model.transform(edf)\n\n                        val saveDataMono = combinedDataRepository.saveData(\n                            tdf.selectExpr(*allColumns).unionAll(edf),\n                            ticker,\n                            taskNumber\n                        )\n\n                        modelService.saveModel(model, taskNumber, modelParameters)\n                            .then(saveDataMono)\n                            .thenReturn(predictions)\n                    }\n            }\n            .map { predictions: Dataset&lt;Row&gt; -&gt;\n                val result = predictions.withColumn(\"error\", col(\"prediction\").minus(col(labelName)))\n                ModelTrainResultResponse(ModelTrainResult.listFromDataset(result.selectExpr(*resultExp)))\n            }\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003E\u003C\u002Fp\u003E\u003C\u002Fdiv\u003E\u003C\u002Fdetails\u003E\u003Cp\u003Eздесь tdf и edf обернуты в Mono, поэтому объединяются в кортеж из двух элементов \u003Ccode\u003EMono&lt;Tuple2&gt;\u003C\u002Fcode\u003E, далее в оборачиваем в \u003Ccode\u003ECallable\u003C\u002Fcode\u003E функцию \u003Ccode\u003Eregressor.fit(tdf)\u003C\u002Fcode\u003E, которая будет выполнена асинхронно и вернет результат в виде \u003Ccode\u003Emodel: XGBoostRegressionModel\u003C\u002Fcode\u003E. В функции \u003Ccode\u003EflatMap\u003C\u002Fcode\u003E она используется с эвалюирующим датасетом для получения предиктов, затем сохраняется в БД с помощью описанного выше метода saveModel. Остальная логика очевидна.\u003C\u002Fp\u003E\u003Cp\u003EНаибольшую сложность вызывает метод инкрементального обучения (да, на данной модели инкремент не работает и требуется замена XGBoost на другую модель, но цель была трансформировать логику под реактивную среду и получить работающий пример, который далее можно использовать для инкрементального обучения модели). \u003C\u002Fp\u003E\u003Cp\u003EИсходный метод:\u003C\u002Fp\u003E\u003Cdetails class=\"spoiler\"\u003E\u003Csummary\u003EincrementTrainModel web\u003C\u002Fsummary\u003E\u003Cdiv class=\"spoiler__content\"\u003E\u003Cpre\u003E\u003Ccode class=\"kotlin\"\u003Efun incrementTrainModel(\n    ticker : String,\n    taskNumber : UUID,\n    dateStart : LocalDate,\n    dateEnd : LocalDate,\n    evalPivotPoint : Long,\n    offset : Long,\n    batchSize : Int,\n    modelParameters : AnalyticsRequest.ModelParameters\n) : ModelTrainResultResponse {\n    val pivot = dateEnd.minusDays(evalPivotPoint)\n    var currentBatchOffset = 0\n    var i = 0\n\n    val modelParams = createModelParams(modelParameters)\n    val regressor = xgBoostRegressor(modelParams)\n\n    var model: PredictionModel&lt;Vector, XGBoostRegressionModel&gt;? = null\n    var predictions: Dataset&lt;Row&gt;? = null\n\n    var tdf: Dataset&lt;Row&gt;?\n    do {\n        log.info(\"Iteration {}: currentOffset {}\", i, currentBatchOffset)\n        tdf = dataReaderService.getDatasetWithLabel(\n            ticker, taskNumber, dateStart, pivot, offset, currentBatchOffset, batchSize\n        )\n        if (tdf.isEmpty) break\n\n        model = regressor.fit(tdf)\n        combinedDataRepository.saveData(tdf.selectExpr(*allColumns), ticker, taskNumber)\n\n        currentBatchOffset += batchSize\n        i++\n    } while (tdf?.isEmpty == false)\n\n    val edf = dataReaderService.getDatasetWithLabel(\n        ticker, taskNumber, pivot, dateEnd, offset, 0, 100).selectExpr(*allColumns)\n    if (model != null) {\n        predictions = model.transform(edf)\n    }\n    combinedDataRepository.saveData(edf.selectExpr(*allColumns), ticker, taskNumber)\n    modelService.saveModel(model!!, taskNumber, modelParameters)\n\n    val result = predictions!!.withColumn(\"error\", col(\"prediction\").minus(col(labelName)))\n    return ModelTrainResultResponse(ModelTrainResult.listFromDataset(result.selectExpr(*resultExp)))\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003E\u003C\u002Fp\u003E\u003C\u002Fdiv\u003E\u003C\u002Fdetails\u003E\u003Cp\u003Eмодифицируется до:\u003C\u002Fp\u003E\u003Cdetails class=\"spoiler\"\u003E\u003Csummary\u003EincrementTrainModel webflux\u003C\u002Fsummary\u003E\u003Cdiv class=\"spoiler__content\"\u003E\u003Cpre\u003E\u003Ccode class=\"kotlin\"\u003Efun incrementTrainModel(\n        ticker: String,\n        taskNumber: UUID,\n        dateStart: LocalDate,\n        dateEnd: LocalDate,\n        evalPivotPoint: Long,\n        offset: Long,\n        batchSize: Int,\n        modelParameters: AnalyticsRequest.ModelParameters\n    ): Mono&lt;ModelTrainResultResponse&gt; {\n        val pivot = dateEnd.minusDays(evalPivotPoint)\n        var currentBatchOffset = 0\n        var i = 0\n\n        val modelParams = createModelParams(modelParameters)\n        val regressor = xgBoostRegressor(modelParams)\n\n        var model: PredictionModel&lt;Vector, XGBoostRegressionModel&gt;? = null\n        var tdf: Dataset&lt;Row&gt;? = null\n\n        return Mono.defer {\n            dataReaderService.getDatasetWithLabel(\n                ticker, taskNumber, dateStart, pivot, offset, currentBatchOffset, batchSize\n            )\n        }\n            .map { dataset -&gt;\n                tdf = dataset\n                log.info(\"Iteration {}: currentOffset {}\", i, currentBatchOffset)\n                if (tdf?.isEmpty == true) {\n                    log.warn(\n                        \"tdf is empty, no more data for learning, Iteration {}: currentOffset {}\",\n                        i, currentBatchOffset\n                    )\n                    Mono.empty()\n                } else {\n                    model = regressor.fit(tdf)\n                    log.info(\"model trained, Iteration {}: currentOffset {}\", i, currentBatchOffset)\n                    currentBatchOffset += batchSize\n                    i++\n                    combinedDataRepository.saveData(tdf!!.selectExpr(*allColumns), ticker, taskNumber)\n                        .thenReturn(currentBatchOffset + batchSize)\n                }\n            }\n            .repeat { tdf?.isEmpty == false }\n            .then(dataReaderService\n                .getDatasetWithLabel(ticker, taskNumber, pivot, dateEnd, offset, 0, 100)\n                .flatMap { edf -&gt;\n                    log.info(\"Got edf\")\n                    combinedDataRepository.saveData(edf.selectExpr(*allColumns), ticker, taskNumber)\n                        .then(modelService.saveModel(model!!, taskNumber, modelParameters))\n                        .thenReturn(model!!.transform(edf))\n                }.map { predictions -&gt;\n                    log.info(\"Predictions stage\")\n                    val result = predictions?.withColumn(\n                        \"error\", col(\"prediction\")\n                            .minus(col(labelName))\n                    )\n                    ModelTrainResultResponse(ModelTrainResult.listFromDataset(result!!.selectExpr(*resultExp)))\n                })\n            .doOnError { exception -&gt;\n                log.error(\"Error while increment learning; taskNumber = {}\", taskNumber, exception)\n                ModelTrainResultResponse()\n            }\n    }\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003E\u003C\u002Fp\u003E\u003C\u002Fdiv\u003E\u003C\u002Fdetails\u003E\u003Cp\u003EВ отличие от Java, лямбда-выражения в Kotlin не требуют от переменных, чтобы они были effectively final, поэтому переменные \u003Ccode\u003EcurrentBatchOffset\u003C\u002Fcode\u003E, i, model и tdf могут изменяться в ходе выполнения основного стрима.\u003C\u002Fp\u003E\u003Cp\u003EЗдесь функция получения датасета обертывается в \u003Ccode\u003EMono.defer()\u003C\u002Fcode\u003E. Особенность данного подхода в том, что выполнение функции откладывается до момента подписки на данный Mono. А подписка будет повторяться методом .repeat() до тех пор, пока не выполнится условие \u003Ccode\u003Etdf?.isEmpty == false\u003C\u002Fcode\u003E.\u003C\u002Fp\u003E\u003Cp\u003EКогда очередной tdf будет пустым, выполнится логика в \u003Ccode\u003Ethen\u003C\u002Fcode\u003E: из кассандры будет получен датасет edf, который сохранится в таблице скомбинированных данных, так же будут получены предикты модели и сохранена сама модель. Затем из предиктов подготовится результат метода. В случае ошибки вернется пустой результат метода.\u003C\u002Fp\u003E\u003Cp\u003EНе сказать, что это идеальное исполнение метода, но как пример сойдет.\u003C\u002Fp\u003E\u003Cp\u003EПодробно реализацию можно посмотреть \u003Ca href=\"https:\u002F\u002Fgitlab.com\u002FAlexPit\u002Fjava-ml-spark-example\u002F-\u002Ftree\u002Fkubernetes-java17-spark332-reactive\" rel=\"noopener noreferrer nofollow\"\u003Eв отдельной ветке репозитория\u003C\u002Fa\u003E.\u003C\u002Fp\u003E\u003Ch2\u003EСравнение двух реализаций\u003C\u002Fh2\u003E\u003Cp\u003EКак известно, реактивный стек отличается от сервлетного тем, что для выполнения одной и той же логики зачастую требуется меньше ресурсов. В некоторых случаях может возрасти скорость выполнения алгоритма.\u003C\u002Fp\u003E\u003Cp\u003EТестирование происходило по следующей методике: \u003C\u002Fp\u003E\u003Col\u003E\u003Cli\u003E\u003Cp\u003EСервис поднимается в Docker-контейнере с 4 CPU и 4 Gb памяти, использует Spark Executor (v. 3.3.2, JDK 17), так же в Docker контейнере, который подключается к Standalone-мастеру Spark в виртуальной машине. Все работает на одной машине под управлением Windows 10 Pro, задачи тренировки моделей выполняются на GPU NVidia 4090.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003EВ течении 10 минут производятся запросы методов: обучения новой модели (POST \u002Fanalytics - для сокращения “1 запрос”), получения предиктов с помощью сохраненной модели (GET \u002Fanalytics - для сокращения “2 запрос”) и инкрементального обучения (POST \u002Fanalytics\u002Fincrement - для сокращения “3 запрос”) с batch_size = 50 записей, во время которого делается 12 итераций над 6 сотнями записей в таблицах Cassandra. Первый цикл на “не прогретом” драйвере (первые запросы всегда выполняются дольше), далее два одинаковых цикла по одному запросу каждого метода на “прогретом драйвере” и в четвертом цикле запускаются одновременно 1, 2, 3 методы.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003EDriver работает в режиме Spark Cluster, используется одна Spark Session на все время работы приложения;\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003EИзначальные параметры запуска JVM одинаковые: первоначальный размер кучи 512 Мб, максимальный размер не указан, GC по умолчанию (G1).\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003C\u002Fol\u003E\u003Cp\u003EРезультаты потребления ресурсов:\u003C\u002Fp\u003E\u003Cdiv\u003E\u003Cdiv class=\"table\"\u003E\u003Ctable\u003E\u003Ctbody\u003E\u003Ctr\u003E\u003Ctd\u003E\u003Cp align=\"left\"\u003E\u003C\u002Fp\u003E\u003C\u002Ftd\u003E\u003Ctd data-colwidth=\"123\" width=\"123\"\u003E\u003Cp align=\"left\"\u003EМаксимальное потребление CPU\u003C\u002Fp\u003E\u003C\u002Ftd\u003E\u003Ctd\u003E\u003Cp align=\"left\"\u003EСреднее потребление CPU\u003C\u002Fp\u003E\u003C\u002Ftd\u003E\u003Ctd data-colwidth=\"122\" width=\"122\"\u003E\u003Cp align=\"left\"\u003EМаксимальное потребление памяти, Gb\u003C\u002Fp\u003E\u003C\u002Ftd\u003E\u003Ctd\u003E\u003Cp align=\"left\"\u003EСреднее потребление памяти, Gb\u003C\u002Fp\u003E\u003C\u002Ftd\u003E\u003Ctd\u003E\u003Cp align=\"left\"\u003EКоличество Stop the world за 10 минут\u003C\u002Fp\u003E\u003C\u002Ftd\u003E\u003C\u002Ftr\u003E\u003Ctr\u003E\u003Ctd\u003E\u003Cp align=\"left\"\u003ESpring Web\u003C\u002Fp\u003E\u003C\u002Ftd\u003E\u003Ctd data-colwidth=\"123\" width=\"123\"\u003E\u003Cp align=\"left\"\u003E3,4\u003C\u002Fp\u003E\u003C\u002Ftd\u003E\u003Ctd\u003E\u003Cp align=\"left\"\u003E1,5\u003C\u002Fp\u003E\u003C\u002Ftd\u003E\u003Ctd data-colwidth=\"122\" width=\"122\"\u003E\u003Cp align=\"left\"\u003E4\u003C\u002Fp\u003E\u003C\u002Ftd\u003E\u003Ctd\u003E\u003Cp align=\"left\"\u003E2\u003C\u002Fp\u003E\u003C\u002Ftd\u003E\u003Ctd\u003E\u003Cp align=\"left\"\u003E4\u003C\u002Fp\u003E\u003C\u002Ftd\u003E\u003C\u002Ftr\u003E\u003Ctr\u003E\u003Ctd\u003E\u003Cp align=\"left\"\u003ESpring Webflux\u003C\u002Fp\u003E\u003C\u002Ftd\u003E\u003Ctd data-colwidth=\"123\" width=\"123\"\u003E\u003Cp align=\"left\"\u003E3,4\u003C\u002Fp\u003E\u003C\u002Ftd\u003E\u003Ctd\u003E\u003Cp align=\"left\"\u003E1,1\u003C\u002Fp\u003E\u003C\u002Ftd\u003E\u003Ctd data-colwidth=\"122\" width=\"122\"\u003E\u003Cp align=\"left\"\u003E1\u003C\u002Fp\u003E\u003C\u002Ftd\u003E\u003Ctd\u003E\u003Cp align=\"left\"\u003E0,5\u003C\u002Fp\u003E\u003C\u002Ftd\u003E\u003Ctd\u003E\u003Cp align=\"left\"\u003E0\u003C\u002Fp\u003E\u003C\u002Ftd\u003E\u003C\u002Ftr\u003E\u003C\u002Ftbody\u003E\u003C\u002Ftable\u003E\u003C\u002Fdiv\u003E\u003C\u002Fdiv\u003E\u003Cp\u003EС указанными выше параметрами для сервлетного стека наблюдалось 4 stop the world от G1 GC, при этом один раз результатом выполнения предиктов из сохраненной модели стала ошибка сервера.\u003C\u002Fp\u003E\u003Cp\u003EНа графике видно, что потребление памяти растет линейно до момента, когда свободного места для кучи уже нет и ее необходимо чистить.\u003C\u002Fp\u003E\u003Cfigure class=\"full-width \"\u003E\u003Cimg src=\"https:\u002F\u002Fhabrastorage.org\u002Fr\u002Fw1560\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fe08\u002Ff3c\u002F48d\u002Fe08f3c48d26d8cce66809170930a50b7.png\" alt=\"График потребления ресурсов Web приложения с параметрами JVM -Xms512m\" title=\"График потребления ресурсов Web приложения с параметрами JVM -Xms512m\" width=\"2997\" height=\"1026\" data-src=\"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fe08\u002Ff3c\u002F48d\u002Fe08f3c48d26d8cce66809170930a50b7.png\"\u002F\u003E\u003Cdiv\u003E\u003Cfigcaption\u003EГрафик потребления ресурсов Web приложения с параметрами JVM -Xms512m\u003C\u002Ffigcaption\u003E\u003C\u002Fdiv\u003E\u003C\u002Ffigure\u003E\u003Cp\u003EУ реактивного стека другая картина: после первых запросов стабильные ~0.5 Гб памяти. По потреблению CPU разница не настолько большая.\u003C\u002Fp\u003E\u003Cfigure class=\"full-width \"\u003E\u003Cimg src=\"https:\u002F\u002Fhabrastorage.org\u002Fr\u002Fw1560\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F7e1\u002F064\u002Ff04\u002F7e1064f04404b72302373b5dd2866755.png\" alt=\"График потребления ресурсов WebFlux приложения с параметрами JVM -Xms512m\" title=\"График потребления ресурсов WebFlux приложения с параметрами JVM -Xms512m\" width=\"2985\" height=\"1010\" data-src=\"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F7e1\u002F064\u002Ff04\u002F7e1064f04404b72302373b5dd2866755.png\"\u002F\u003E\u003Cdiv\u003E\u003Cfigcaption\u003EГрафик потребления ресурсов WebFlux приложения с параметрами JVM -Xms512m\u003C\u002Ffigcaption\u003E\u003C\u002Fdiv\u003E\u003C\u002Ffigure\u003E\u003Cp\u003EСкорость выполнения запросов:\u003C\u002Fp\u003E\u003Cfigure class=\"full-width \"\u003E\u003Cimg src=\"https:\u002F\u002Fhabrastorage.org\u002Fr\u002Fw1560\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F8d5\u002Fd2e\u002F23c\u002F8d5d2e23c9a420c265176e3e538629a3.png\" alt=\"Сравнительная таблица Web и WebFlux версия приложения с параметрами JVM -Xms512m\" title=\"Сравнительная таблица Web и WebFlux версия приложения с параметрами JVM -Xms512m\" width=\"1774\" height=\"198\" data-src=\"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F8d5\u002Fd2e\u002F23c\u002F8d5d2e23c9a420c265176e3e538629a3.png\"\u002F\u003E\u003Cdiv\u003E\u003Cfigcaption\u003EСравнительная таблица Web и WebFlux версия приложения с параметрами JVM -Xms512m\u003C\u002Ffigcaption\u003E\u003C\u002Fdiv\u003E\u003C\u002Ffigure\u003E\u003Cp\u003EТоп-5 классов по потреблению памяти:  \u003C\u002Fp\u003E\u003Cfigure class=\"full-width \"\u003E\u003Cimg src=\"https:\u002F\u002Fhabrastorage.org\u002Fr\u002Fw1560\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Feb3\u002F7fa\u002Fe74\u002Feb37fae743e1bb4f63e556859398410c.png\" width=\"1150\" height=\"223\" data-src=\"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Feb3\u002F7fa\u002Fe74\u002Feb37fae743e1bb4f63e556859398410c.png\"\u002F\u003E\u003C\u002Ffigure\u003E\u003Cp\u003EУчитывая, что весь результирующий датасет занимает около 55 Мб, такой объем аллоцированной памяти вызывает вопросы. Анализ стектрейсов показал, что в большинстве случаев источником и причиной является Spark и Rapids, которые строят план запросов, обмениваются данными между БД, экзекуторами и драйвером, подготавливают массивы данных для загрузки в GPU и вычитывают результат из него. Потратив некоторое время на изучение вопроса оптимизации использования памяти, могу сделать вывод, что это штатное поведение системы в такой конфигурации, и надо научиться с этим жить при использовании сервлетного стека.\u003C\u002Fp\u003E\u003Cp\u003EПервые попытки жить с этим в привели к изменению параметров запуска JVM для сервлетного стека на следующие: -Xms512m -Xmx3g -XX:GCTimeRatio=19 (жесткое указание того, что система может потратить до 5% времени на сборку мусора - (1 \u002F (1+19))) -XX:+UseZGC. Учитывая, что реактивному стеку достаточно в среднем 512 Мб памяти, и что Z GC потребляет несколько больше памяти, чем G1 GC, планка максимального размера кучи снизилась до 3 Гб. \u003C\u002Fp\u003E\u003Cfigure class=\"full-width \"\u003E\u003Cimg src=\"https:\u002F\u002Fhabrastorage.org\u002Fr\u002Fw1560\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F0e1\u002Fed9\u002F277\u002F0e1ed92770b663be5470a9d0bd7de83f.png\" alt=\"График потребления ресурсов Web приложения с параметрами JVM -Xms512m -Xmx3g -XX:GCTimeRatio=19 -XX:+UseZGC\" title=\"График потребления ресурсов Web приложения с параметрами JVM -Xms512m -Xmx3g -XX:GCTimeRatio=19 -XX:+UseZGC\" width=\"2977\" height=\"1004\" data-src=\"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F0e1\u002Fed9\u002F277\u002F0e1ed92770b663be5470a9d0bd7de83f.png\"\u002F\u003E\u003Cdiv\u003E\u003Cfigcaption\u003EГрафик потребления ресурсов Web приложения с параметрами JVM -Xms512m -Xmx3g -XX:GCTimeRatio=19 -XX:+UseZGC\u003C\u002Ffigcaption\u003E\u003C\u002Fdiv\u003E\u003C\u002Ffigure\u003E\u003Cp\u003EПотребление CPU незначительно снизилось, наблюдается схожее потребление памяти, но stop the world уже не зафиксировано. Судя по графику, после завершения работы методов POST \u002Fanalytics и GET \u002Fanalytics куча очищается, но при работе POST \u002Fanalytics\u002Fincrement куча очищается только к моменту приближения к своему максимальному размеру. Логика, которая могла бы вести к утечке памяти, отсутствует, причина такого высокого потребления памяти остается не выясненной. \u003C\u002Fp\u003E\u003Cp\u003EРезультаты переключения GC в таблице потребления ресурсов:\u003C\u002Fp\u003E\u003Cdiv\u003E\u003Cdiv class=\"table\"\u003E\u003Ctable\u003E\u003Ctbody\u003E\u003Ctr\u003E\u003Ctd\u003E\u003Cp align=\"left\"\u003E\u003C\u002Fp\u003E\u003C\u002Ftd\u003E\u003Ctd data-colwidth=\"126\" width=\"126\"\u003E\u003Cp align=\"left\"\u003E\u003Cbr\u002F\u003EМаксимальное потребление CPU\u003C\u002Fp\u003E\u003C\u002Ftd\u003E\u003Ctd\u003E\u003Cp align=\"left\"\u003EСреднее потребление CPU\u003C\u002Fp\u003E\u003C\u002Ftd\u003E\u003Ctd data-colwidth=\"124\" width=\"124\"\u003E\u003Cp align=\"left\"\u003EМаксимальное потребление памяти, Gb\u003C\u002Fp\u003E\u003C\u002Ftd\u003E\u003Ctd\u003E\u003Cp align=\"left\"\u003EСреднее потребление памяти, Gb\u003C\u002Fp\u003E\u003C\u002Ftd\u003E\u003Ctd\u003E\u003Cp align=\"left\"\u003EКоличество Stop the world\u003C\u002Fp\u003E\u003C\u002Ftd\u003E\u003C\u002Ftr\u003E\u003Ctr\u003E\u003Ctd\u003E\u003Cp align=\"left\"\u003ESpring Web\u003C\u002Fp\u003E\u003C\u002Ftd\u003E\u003Ctd data-colwidth=\"126\" width=\"126\"\u003E\u003Cp align=\"left\"\u003E3,4\u003C\u002Fp\u003E\u003C\u002Ftd\u003E\u003Ctd\u003E\u003Cp align=\"left\"\u003E1,5\u003C\u002Fp\u003E\u003C\u002Ftd\u003E\u003Ctd data-colwidth=\"124\" width=\"124\"\u003E\u003Cp align=\"left\"\u003E3\u003C\u002Fp\u003E\u003C\u002Ftd\u003E\u003Ctd\u003E\u003Cp align=\"left\"\u003E1,5\u003C\u002Fp\u003E\u003C\u002Ftd\u003E\u003Ctd\u003E\u003Cp align=\"left\"\u003E0\u003C\u002Fp\u003E\u003C\u002Ftd\u003E\u003C\u002Ftr\u003E\u003Ctr\u003E\u003Ctd\u003E\u003Cp align=\"left\"\u003ESpring Webflux\u003C\u002Fp\u003E\u003C\u002Ftd\u003E\u003Ctd data-colwidth=\"126\" width=\"126\"\u003E\u003Cp align=\"left\"\u003E3,4\u003C\u002Fp\u003E\u003C\u002Ftd\u003E\u003Ctd\u003E\u003Cp align=\"left\"\u003E1,1\u003C\u002Fp\u003E\u003C\u002Ftd\u003E\u003Ctd data-colwidth=\"124\" width=\"124\"\u003E\u003Cp align=\"left\"\u003E1\u003C\u002Fp\u003E\u003C\u002Ftd\u003E\u003Ctd\u003E\u003Cp align=\"left\"\u003E0,5\u003C\u002Fp\u003E\u003C\u002Ftd\u003E\u003Ctd\u003E\u003Cp align=\"left\"\u003E0\u003C\u002Fp\u003E\u003C\u002Ftd\u003E\u003C\u002Ftr\u003E\u003C\u002Ftbody\u003E\u003C\u002Ftable\u003E\u003C\u002Fdiv\u003E\u003C\u002Fdiv\u003E\u003Cp\u003Eи скорости выполнения запросов:\u003C\u002Fp\u003E\u003Cfigure class=\"full-width \"\u003E\u003Cimg src=\"https:\u002F\u002Fhabrastorage.org\u002Fr\u002Fw1560\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F7c5\u002Ffbd\u002Fec8\u002F7c5fbdec89c06d57889dec93f531219c.png\" alt=\"Сравнительная таблица скорости выполнения запросов Web приложения с параметрами JVM -Xms512m -Xmx3g -XX:GCTimeRatio=19 -XX:+UseZGC относительно WebFlux приложения с G1 GC и параметрами JVM -Xms512m\" title=\"Сравнительная таблица скорости выполнения запросов Web приложения с параметрами JVM -Xms512m -Xmx3g -XX:GCTimeRatio=19 -XX:+UseZGC относительно WebFlux приложения с G1 GC и параметрами JVM -Xms512m\" width=\"1773\" height=\"246\" data-src=\"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F7c5\u002Ffbd\u002Fec8\u002F7c5fbdec89c06d57889dec93f531219c.png\"\u002F\u003E\u003Cdiv\u003E\u003Cfigcaption\u003EСравнительная таблица скорости выполнения запросов Web приложения с параметрами JVM -Xms512m -Xmx3g -XX:GCTimeRatio=19 -XX:+UseZGC относительно WebFlux приложения с G1 GC и параметрами JVM -Xms512m\u003C\u002Ffigcaption\u003E\u003C\u002Fdiv\u003E\u003C\u002Ffigure\u003E\u003Cp\u003EСтало интересно, что будет, если для G1 GC установить максимальный размер кучи как для Z GC и установить жесткий предел времени выполнения на сборку мусора. В этом случае оказалось, что память заполняется как и раньше, но stop the world стало больше, так как доступной памяти меньше, и, соответственно, заполняется она быстрее. Потребление ресурсов осталось примерно на том же уровне:\u003C\u002Fp\u003E\u003Cfigure class=\"full-width \"\u003E\u003Cimg src=\"https:\u002F\u002Fhabrastorage.org\u002Fr\u002Fw1560\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Ffd8\u002Fac6\u002F471\u002Ffd8ac6471e893d7b9c44a5b69718a8c6.png\" alt=\"График потребления ресурсов Web приложения с параметрами JVM -Xms512m -Xmx3g -XX:GCTimeRatio=19 -XX:+UseG1GC\" title=\"График потребления ресурсов Web приложения с параметрами JVM -Xms512m -Xmx3g -XX:GCTimeRatio=19 -XX:+UseG1GC\" width=\"2966\" height=\"1006\" data-src=\"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Ffd8\u002Fac6\u002F471\u002Ffd8ac6471e893d7b9c44a5b69718a8c6.png\"\u002F\u003E\u003Cdiv\u003E\u003Cfigcaption\u003EГрафик потребления ресурсов Web приложения с параметрами JVM -Xms512m -Xmx3g -XX:GCTimeRatio=19 -XX:+UseG1GC\u003C\u002Ffigcaption\u003E\u003C\u002Fdiv\u003E\u003C\u002Ffigure\u003E\u003Cdiv\u003E\u003Cdiv class=\"table\"\u003E\u003Ctable\u003E\u003Ctbody\u003E\u003Ctr\u003E\u003Ctd\u003E\u003Cp align=\"left\"\u003E\u003C\u002Fp\u003E\u003C\u002Ftd\u003E\u003Ctd data-colwidth=\"123\" width=\"123\"\u003E\u003Cp align=\"left\"\u003E\u003Cbr\u002F\u003EМаксимальное потребление CPU\u003C\u002Fp\u003E\u003C\u002Ftd\u003E\u003Ctd\u003E\u003Cp align=\"left\"\u003EСреднее потребление CPU\u003C\u002Fp\u003E\u003C\u002Ftd\u003E\u003Ctd data-colwidth=\"125\" width=\"125\"\u003E\u003Cp align=\"left\"\u003EМаксимальное потребление памяти, Gb\u003C\u002Fp\u003E\u003C\u002Ftd\u003E\u003Ctd\u003E\u003Cp align=\"left\"\u003EСреднее потребление памяти, Gb\u003C\u002Fp\u003E\u003C\u002Ftd\u003E\u003Ctd\u003E\u003Cp align=\"left\"\u003EКоличество Stop the world\u003C\u002Fp\u003E\u003C\u002Ftd\u003E\u003C\u002Ftr\u003E\u003Ctr\u003E\u003Ctd\u003E\u003Cp align=\"left\"\u003ESpring Web\u003C\u002Fp\u003E\u003C\u002Ftd\u003E\u003Ctd data-colwidth=\"123\" width=\"123\"\u003E\u003Cp align=\"left\"\u003E3,4\u003C\u002Fp\u003E\u003C\u002Ftd\u003E\u003Ctd\u003E\u003Cp align=\"left\"\u003E1,5\u003C\u002Fp\u003E\u003C\u002Ftd\u003E\u003Ctd data-colwidth=\"125\" width=\"125\"\u003E\u003Cp align=\"left\"\u003E3\u003C\u002Fp\u003E\u003C\u002Ftd\u003E\u003Ctd\u003E\u003Cp align=\"left\"\u003E1,5\u003C\u002Fp\u003E\u003C\u002Ftd\u003E\u003Ctd\u003E\u003Cp align=\"left\"\u003E6\u003C\u002Fp\u003E\u003C\u002Ftd\u003E\u003C\u002Ftr\u003E\u003Ctr\u003E\u003Ctd\u003E\u003Cp align=\"left\"\u003ESpring Webflux\u003C\u002Fp\u003E\u003C\u002Ftd\u003E\u003Ctd data-colwidth=\"123\" width=\"123\"\u003E\u003Cp align=\"left\"\u003E3,4\u003C\u002Fp\u003E\u003C\u002Ftd\u003E\u003Ctd\u003E\u003Cp align=\"left\"\u003E1,1\u003C\u002Fp\u003E\u003C\u002Ftd\u003E\u003Ctd data-colwidth=\"125\" width=\"125\"\u003E\u003Cp align=\"left\"\u003E1\u003C\u002Fp\u003E\u003C\u002Ftd\u003E\u003Ctd\u003E\u003Cp align=\"left\"\u003E0,5\u003C\u002Fp\u003E\u003C\u002Ftd\u003E\u003Ctd\u003E\u003Cp align=\"left\"\u003E0\u003C\u002Fp\u003E\u003C\u002Ftd\u003E\u003C\u002Ftr\u003E\u003C\u002Ftbody\u003E\u003C\u002Ftable\u003E\u003C\u002Fdiv\u003E\u003C\u002Fdiv\u003E\u003Cp\u003EСкорость выполнения запросов возросла, но не существенно.\u003C\u002Fp\u003E\u003Cfigure class=\"full-width \"\u003E\u003Cimg src=\"https:\u002F\u002Fhabrastorage.org\u002Fr\u002Fw1560\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F43c\u002F9a1\u002Ff77\u002F43c9a1f77e2ab983ecd185a569e79d29.png\" alt=\"Сравнительная таблица скорости выполнения запросов Web приложения с параметрами JVM -Xms512m -Xmx3g -XX:GCTimeRatio=19 -XX:+UseG1GC относительно WebFlux приложения с G1 GC и параметрами JVM -Xms512m\" title=\"Сравнительная таблица скорости выполнения запросов Web приложения с параметрами JVM -Xms512m -Xmx3g -XX:GCTimeRatio=19 -XX:+UseG1GC относительно WebFlux приложения с G1 GC и параметрами JVM -Xms512m\" width=\"1774\" height=\"246\" data-src=\"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F43c\u002F9a1\u002Ff77\u002F43c9a1f77e2ab983ecd185a569e79d29.png\"\u002F\u003E\u003Cdiv\u003E\u003Cfigcaption\u003EСравнительная таблица скорости выполнения запросов Web приложения с параметрами JVM -Xms512m -Xmx3g -XX:GCTimeRatio=19 -XX:+UseG1GC относительно WebFlux приложения с G1 GC и параметрами JVM -Xms512m\u003C\u002Ffigcaption\u003E\u003C\u002Fdiv\u003E\u003C\u002Ffigure\u003E\u003Cp\u003EТак же попробовал в сервлетном стеке использовать Parallel GC с параметрами -Xms512m -Xmx4g -XX:GCTimeRatio=19 -XX:+UseParallelGC. Результаты самые худшие, за 10 минут удалось прогнать только 2 цикла. Если первые два метода выполнялись примерно за то же время без отклонений, то метод инкрементального обучения выполнялся в первый раз 3мин 32с, что хуже примерно на 1,5 минуты среднего результата сервлетного стека, а второй запрос подвис и выполнялся 8мин 10с. Результаты в таблицах не фиксировал.\u003C\u002Fp\u003E\u003Cfigure class=\"full-width \"\u003E\u003Cimg src=\"https:\u002F\u002Fhabrastorage.org\u002Fr\u002Fw1560\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F0a5\u002F529\u002F1a5\u002F0a55291a5dd00b285a5a6d8b0dbb5019.png\" alt=\"График потребления ресурсов Web версии приложения с Pasrallel GC\" title=\"График потребления ресурсов Web версии приложения с Pasrallel GC\" width=\"1445\" height=\"882\" data-src=\"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F0a5\u002F529\u002F1a5\u002F0a55291a5dd00b285a5a6d8b0dbb5019.png\"\u002F\u003E\u003Cdiv\u003E\u003Cfigcaption\u003EГрафик потребления ресурсов Web версии приложения с Pasrallel GC\u003C\u002Ffigcaption\u003E\u003C\u002Fdiv\u003E\u003C\u002Ffigure\u003E\u003Cp\u003EНапоследок применил настройки JVM -Xms512m -Xmx3g -XX:GCTimeRatio=19 -XX:+UseZGC к версии WebFlux, которая оказалась на данный момент самой оптимальной по потреблению ресурсов и скорости обработки запросов. Сравнительные таблицы версии с дефолтными параметрами и G1 GC и версии с кастомными параметрами JVM с Z GC ниже.\u003C\u002Fp\u003E\u003Cp\u003EГрафик потребления ресурсов:\u003C\u002Fp\u003E\u003Cfigure class=\"full-width \"\u003E\u003Cimg src=\"https:\u002F\u002Fhabrastorage.org\u002Fr\u002Fw1560\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F6b8\u002F0b7\u002F6eb\u002F6b80b76eb36d769f28e798de98753e98.png\" alt=\"График потребления ресурсов WebFlux приложения с параметрами JVM -Xms512m -Xmx3g -XX:GCTimeRatio=19 -XX:+UseZGC\" title=\"График потребления ресурсов WebFlux приложения с параметрами JVM -Xms512m -Xmx3g -XX:GCTimeRatio=19 -XX:+UseZGC\" width=\"2965\" height=\"1007\" data-src=\"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F6b8\u002F0b7\u002F6eb\u002F6b80b76eb36d769f28e798de98753e98.png\"\u002F\u003E\u003Cdiv\u003E\u003Cfigcaption\u003EГрафик потребления ресурсов WebFlux приложения с параметрами JVM -Xms512m -Xmx3g -XX:GCTimeRatio=19 -XX:+UseZGC\u003C\u002Ffigcaption\u003E\u003C\u002Fdiv\u003E\u003C\u002Ffigure\u003E\u003Cp\u003EТаблица потребления ресурсов:\u003C\u002Fp\u003E\u003Cdiv\u003E\u003Cdiv class=\"table\"\u003E\u003Ctable\u003E\u003Ctbody\u003E\u003Ctr\u003E\u003Ctd\u003E\u003Cp align=\"left\"\u003E\u003C\u002Fp\u003E\u003C\u002Ftd\u003E\u003Ctd data-colwidth=\"124\" width=\"124\"\u003E\u003Cp align=\"left\"\u003E\u003Cbr\u002F\u003EМаксимальное потребление CPU\u003C\u002Fp\u003E\u003C\u002Ftd\u003E\u003Ctd\u003E\u003Cp align=\"left\"\u003EСреднее потребление CPU\u003C\u002Fp\u003E\u003C\u002Ftd\u003E\u003Ctd data-colwidth=\"122\" width=\"122\"\u003E\u003Cp align=\"left\"\u003EМаксимальное потребление памяти, Gb\u003C\u002Fp\u003E\u003C\u002Ftd\u003E\u003Ctd\u003E\u003Cp align=\"left\"\u003EСреднее потребление памяти, Gb\u003C\u002Fp\u003E\u003C\u002Ftd\u003E\u003Ctd\u003E\u003Cp align=\"left\"\u003EКоличество Stop the world\u003C\u002Fp\u003E\u003C\u002Ftd\u003E\u003C\u002Ftr\u003E\u003Ctr\u003E\u003Ctd\u003E\u003Cp align=\"left\"\u003ESpring Webflux G1 GC\u003C\u002Fp\u003E\u003C\u002Ftd\u003E\u003Ctd data-colwidth=\"124\" width=\"124\"\u003E\u003Cp align=\"left\"\u003E3,4\u003C\u002Fp\u003E\u003C\u002Ftd\u003E\u003Ctd\u003E\u003Cp align=\"left\"\u003E1,1\u003C\u002Fp\u003E\u003C\u002Ftd\u003E\u003Ctd data-colwidth=\"122\" width=\"122\"\u003E\u003Cp align=\"left\"\u003E1\u003C\u002Fp\u003E\u003C\u002Ftd\u003E\u003Ctd\u003E\u003Cp align=\"left\"\u003E0,5\u003C\u002Fp\u003E\u003C\u002Ftd\u003E\u003Ctd\u003E\u003Cp align=\"left\"\u003E0\u003C\u002Fp\u003E\u003C\u002Ftd\u003E\u003C\u002Ftr\u003E\u003Ctr\u003E\u003Ctd\u003E\u003Cp align=\"left\"\u003ESpring Webflux Z GC\u003C\u002Fp\u003E\u003C\u002Ftd\u003E\u003Ctd data-colwidth=\"124\" width=\"124\"\u003E\u003Cp align=\"left\"\u003E3,4\u003C\u002Fp\u003E\u003C\u002Ftd\u003E\u003Ctd\u003E\u003Cp align=\"left\"\u003E1,4\u003C\u002Fp\u003E\u003C\u002Ftd\u003E\u003Ctd data-colwidth=\"122\" width=\"122\"\u003E\u003Cp align=\"left\"\u003E2,84\u003C\u002Fp\u003E\u003C\u002Ftd\u003E\u003Ctd\u003E\u003Cp align=\"left\"\u003E1,5\u003C\u002Fp\u003E\u003C\u002Ftd\u003E\u003Ctd\u003E\u003Cp align=\"left\"\u003E0\u003C\u002Fp\u003E\u003C\u002Ftd\u003E\u003C\u002Ftr\u003E\u003C\u002Ftbody\u003E\u003C\u002Ftable\u003E\u003C\u002Fdiv\u003E\u003C\u002Fdiv\u003E\u003Cp\u003EТаблица скорости выполнения запросов:  \u003C\u002Fp\u003E\u003Cfigure class=\"full-width \"\u003E\u003Cimg src=\"https:\u002F\u002Fhabrastorage.org\u002Fr\u002Fw1560\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F98f\u002F2bd\u002Ffb3\u002F98f2bdfb3f7d10d28fea2cc7e56ce918.png\" alt=\"Сравнительная таблица скорости выполнения запросов WebFlux приложения с параметрами JVM -Xms512m -Xmx3g -XX:GCTimeRatio=19 -XX:+UseZGC относительно WebFlux приложения с G1 GC и параметрами JVM -Xms512m\" title=\"Сравнительная таблица скорости выполнения запросов WebFlux приложения с параметрами JVM -Xms512m -Xmx3g -XX:GCTimeRatio=19 -XX:+UseZGC относительно WebFlux приложения с G1 GC и параметрами JVM -Xms512m\" width=\"1773\" height=\"245\" data-src=\"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F98f\u002F2bd\u002Ffb3\u002F98f2bdfb3f7d10d28fea2cc7e56ce918.png\"\u002F\u003E\u003Cdiv\u003E\u003Cfigcaption\u003EСравнительная таблица скорости выполнения запросов WebFlux приложения с параметрами JVM -Xms512m -Xmx3g -XX:GCTimeRatio=19 -XX:+UseZGC относительно WebFlux приложения с G1 GC и параметрами JVM -Xms512m\u003C\u002Ffigcaption\u003E\u003C\u002Fdiv\u003E\u003C\u002Ffigure\u003E\u003Cp\u003EИтоговые таблицы со всеми версиями и различными значениями параметров конфигурации JVM представлены ниже. За основу взяты результаты для WebFlux на G1 GC с одним параметром JVM минимального размера хипа 512m.\u003C\u002Fp\u003E\u003Cfigure class=\"full-width \"\u003E\u003Cimg src=\"https:\u002F\u002Fhabrastorage.org\u002Fr\u002Fw1560\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fad5\u002Fb75\u002Fe4f\u002Fad5b75e4f9174de4db9df2c54e786ee9.png\" alt=\"Сводные таблицы по потреблению ресурсов\" title=\"Сводные таблицы по потреблению ресурсов\" width=\"1037\" height=\"737\" data-src=\"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fad5\u002Fb75\u002Fe4f\u002Fad5b75e4f9174de4db9df2c54e786ee9.png\"\u002F\u003E\u003Cdiv\u003E\u003Cfigcaption\u003EСводные таблицы по потреблению ресурсов\u003C\u002Ffigcaption\u003E\u003C\u002Fdiv\u003E\u003C\u002Ffigure\u003E\u003Cfigure class=\"full-width \"\u003E\u003Cimg src=\"https:\u002F\u002Fhabrastorage.org\u002Fr\u002Fw1560\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fa1c\u002F78f\u002Fd8d\u002Fa1c78fd8d21977140396f9080f9b9d0d.png\" alt=\"Сводные таблицы времени выполнения запросов\" title=\"Сводные таблицы времени выполнения запросов\" width=\"1477\" height=\"860\" data-src=\"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fa1c\u002F78f\u002Fd8d\u002Fa1c78fd8d21977140396f9080f9b9d0d.png\"\u002F\u003E\u003Cdiv\u003E\u003Cfigcaption\u003EСводные таблицы времени выполнения запросов\u003C\u002Ffigcaption\u003E\u003C\u002Fdiv\u003E\u003C\u002Ffigure\u003E\u003Ch2\u003EВывод\u003C\u002Fh2\u003E\u003Cp\u003EПодводя черту после написания третьей статьи на тему построения системы распределенного машинного обучения на Java и Kotlin, самый большой вывод, который напрашивается - построить подобную систему сложно, много неизвестных, необходимо выполнить много исследований, но добиться работающего решения вполне реально, было бы желание.\u003C\u002Fp\u003E\u003Cp\u003EЕсли так случилось, что нужно выполнять задачи ML на JVM стеке технологий, \u003Cs\u003Eучите Python и не занимайтесь фигней, а руководству продайте альтернативную систему\u003C\u002Fs\u003E отличным выбором в качестве основы будет Kotlin и Spring Webflux (как альтернатива - Web с Z GC), и, естественно, Apache Spark. По окончанию работ над любым приложением стоит провести проверку профилировщиком, так как с очень высокой вероятностью при дефолтных параметрах JVM работа приложения не будет оптимальной.\u003C\u002Fp\u003E\u003Cp\u003EДругой вопрос - является ли данная система эффективной с точки зрения производительности и потребления ресурсов? Без тестов на альтернативной системе (например, Python + Dask) объективно ответить на данный вопрос я затрудняюсь. Возможно, в будущем попробую поднять такую систему и написать альтернативную логику на питоне, тогда будет с чем сравнить и о чем написать очередную статью.\u003C\u002Fp\u003E\u003Cp\u003E\u003C\u002Fp\u003E\u003C\u002Fdiv\u003E","tags":[{"titleHtml":"java"},{"titleHtml":"kotlin"},{"titleHtml":"ml"},{"titleHtml":"cuda"},{"titleHtml":"gpu"},{"titleHtml":"spring"},{"titleHtml":"Сезон java one love"}],"metadata":{"stylesUrls":[],"scriptUrls":[],"shareImageUrl":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F534\u002F8ab\u002Fc24\u002F5348abc24b103b7cd01511262690a129.png","shareImageWidth":1200,"shareImageHeight":630,"vkShareImageUrl":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F534\u002F8ab\u002Fc24\u002F5348abc24b103b7cd01511262690a129.png","schemaJsonLd":"{\"@context\":\"http:\\\u002F\\\u002Fschema.org\",\"@type\":\"Article\",\"mainEntityOfPage\":{\"@type\":\"WebPage\",\"@id\":\"https:\\\u002F\\\u002Fhabr.com\\\u002Fru\\\u002Farticles\\\u002F752702\\\u002F\"},\"headline\":\"Использование Kotlin и WebFlux для выполнения задач ML в Apache Spark на GPU\",\"datePublished\":\"2023-08-05T20:40:07+03:00\",\"dateModified\":\"2023-08-18T21:29:05+03:00\",\"author\":{\"@type\":\"Person\",\"name\":\"Александр Питасов\"},\"publisher\":{\"@type\":\"Organization\",\"name\":\"Habr\",\"logo\":{\"@type\":\"ImageObject\",\"url\":\"https:\\\u002F\\\u002Fhabrastorage.org\\\u002Fwebt\\\u002Fa_\\\u002Flk\\\u002F9m\\\u002Fa_lk9mjkccjox-zccjrpfolmkmq.png\"}},\"description\":\"Это третья статья по теме реализации масштабируемой системы для выполнения задач распределенного машинного обучения на GPU с использованием Java, Kotlin, Spring...\",\"url\":\"https:\\\u002F\\\u002Fhabr.com\\\u002Fru\\\u002Farticles\\\u002F752702\\\u002F#post-content-body\",\"about\":[\"h_java\",\"h_kotlin\",\"f_develop\"],\"image\":[\"https:\\\u002F\\\u002Fhabr.com\\\u002Fshare\\\u002Fpublication\\\u002F752702\\\u002F343bdef8033f18bc49e84f962f0cf232\\\u002F\",\"https:\\\u002F\\\u002Fhabrastorage.org\\\u002Fgetpro\\\u002Fhabr\\\u002Fupload_files\\\u002F5c1\\\u002F63b\\\u002F20e\\\u002F5c163b20e6ab80ee4f28f0f2d8e28d7d.png\",\"https:\\\u002F\\\u002Fhabrastorage.org\\\u002Fgetpro\\\u002Fhabr\\\u002Fupload_files\\\u002Fe08\\\u002Ff3c\\\u002F48d\\\u002Fe08f3c48d26d8cce66809170930a50b7.png\",\"https:\\\u002F\\\u002Fhabrastorage.org\\\u002Fgetpro\\\u002Fhabr\\\u002Fupload_files\\\u002F7e1\\\u002F064\\\u002Ff04\\\u002F7e1064f04404b72302373b5dd2866755.png\",\"https:\\\u002F\\\u002Fhabrastorage.org\\\u002Fgetpro\\\u002Fhabr\\\u002Fupload_files\\\u002F8d5\\\u002Fd2e\\\u002F23c\\\u002F8d5d2e23c9a420c265176e3e538629a3.png\",\"https:\\\u002F\\\u002Fhabrastorage.org\\\u002Fgetpro\\\u002Fhabr\\\u002Fupload_files\\\u002Feb3\\\u002F7fa\\\u002Fe74\\\u002Feb37fae743e1bb4f63e556859398410c.png\",\"https:\\\u002F\\\u002Fhabrastorage.org\\\u002Fgetpro\\\u002Fhabr\\\u002Fupload_files\\\u002F0e1\\\u002Fed9\\\u002F277\\\u002F0e1ed92770b663be5470a9d0bd7de83f.png\",\"https:\\\u002F\\\u002Fhabrastorage.org\\\u002Fgetpro\\\u002Fhabr\\\u002Fupload_files\\\u002F7c5\\\u002Ffbd\\\u002Fec8\\\u002F7c5fbdec89c06d57889dec93f531219c.png\",\"https:\\\u002F\\\u002Fhabrastorage.org\\\u002Fgetpro\\\u002Fhabr\\\u002Fupload_files\\\u002Ffd8\\\u002Fac6\\\u002F471\\\u002Ffd8ac6471e893d7b9c44a5b69718a8c6.png\",\"https:\\\u002F\\\u002Fhabrastorage.org\\\u002Fgetpro\\\u002Fhabr\\\u002Fupload_files\\\u002F43c\\\u002F9a1\\\u002Ff77\\\u002F43c9a1f77e2ab983ecd185a569e79d29.png\",\"https:\\\u002F\\\u002Fhabrastorage.org\\\u002Fgetpro\\\u002Fhabr\\\u002Fupload_files\\\u002F0a5\\\u002F529\\\u002F1a5\\\u002F0a55291a5dd00b285a5a6d8b0dbb5019.png\",\"https:\\\u002F\\\u002Fhabrastorage.org\\\u002Fgetpro\\\u002Fhabr\\\u002Fupload_files\\\u002F6b8\\\u002F0b7\\\u002F6eb\\\u002F6b80b76eb36d769f28e798de98753e98.png\",\"https:\\\u002F\\\u002Fhabrastorage.org\\\u002Fgetpro\\\u002Fhabr\\\u002Fupload_files\\\u002F98f\\\u002F2bd\\\u002Ffb3\\\u002F98f2bdfb3f7d10d28fea2cc7e56ce918.png\",\"https:\\\u002F\\\u002Fhabrastorage.org\\\u002Fgetpro\\\u002Fhabr\\\u002Fupload_files\\\u002Fad5\\\u002Fb75\\\u002Fe4f\\\u002Fad5b75e4f9174de4db9df2c54e786ee9.png\",\"https:\\\u002F\\\u002Fhabrastorage.org\\\u002Fgetpro\\\u002Fhabr\\\u002Fupload_files\\\u002Fa1c\\\u002F78f\\\u002Fd8d\\\u002Fa1c78fd8d21977140396f9080f9b9d0d.png\"]}","metaDescription":"Это третья статья по теме реализации масштабируемой системы для выполнения задач распределенного машинного обучения на GPU с использованием Java, Kotlin, Spring и Spark. Список всех статей: Варианты...","mainImageUrl":null,"amp":true,"customTrackerLinks":[]},"polls":[],"commentsEnabled":{"status":true,"reason":null},"rulesRemindEnabled":false,"votesEnabled":true,"status":"published","plannedPublishTime":null,"checked":null,"hasPinnedComments":false,"format":null,"banner":null,"multiwidget":null,"multiwidgetUuid":null,"readingTime":32,"complexity":"medium","isEditorial":false}},"articlesIds":{},"isLoading":false,"pagesCount":{},"route":{},"reasonsList":null,"postReasonsList":null,"view":"list","lastVisitedRoute":{},"ssrCommentsArticleIds":[""],"viewedPosts":[],"myFeedFilter":{"complexity":"all","score":"all","types":["articles","posts","news"]},"myFeedIsApplyFilters":false,"myFeedIsForce":false,"karma":{"userReasonsList":null}},"authorContribution":{"authors":{}},"betaTest":{"currentAnnouncement":null,"announcements":{},"announcementCards":null,"announcementComments":{},"announcementCommentThreads":{},"announcementCommentingStatuses":{},"archivedList":[]},"authorStatistics":{"articleRefs":{},"articleIds":{},"pagesCount":{},"route":{},"viewsCount":[],"maxStatsCount":{}},"career":{"seoLandings":[{"title":"Java разработчик","vacanciesCount":211,"itemUrl":"https:\u002F\u002Fcareer.habr.com\u002Fvacancies\u002Fjava_developer","itemHubs":["java","javame_dev","gradle"]}],"hubs":"java,kotlin"},"comments":{"articleComments":{},"articlePinnedComments":{},"searchCommentsResults":null,"pagesCount":null,"commentAccess":{},"scrollParents":{},"pageArticleComments":{"lastViewedComment":0,"postId":null,"lastCommentTimestamp":"","moderated":[],"moderatedIds":[],"commentRoute":"","idempotenceKey":""}},"companies":{"companyRefs":{},"companyIds":{},"companyTopIds":{},"pagesCount":{},"companyProfiles":{},"companiesCategories":[],"companiesCategoriesTotalCount":0,"companiesWidgets":{},"companiesWorkers":{},"companiesFans":{},"multiwidgets":{},"route":{},"isLoading":false,"companyWorkersLoading":false,"companyFansLoading":false,"multiwidgetLoading":false,"vacancies":{},"companiesGalleries":{},"companiesBanners":{},"companiesLandingVacancies":{},"companiesTechnologies":{},"workplaceInfo":null},"companyAdmin":{"companyInfo":null,"companyInfoLoading":false,"faqArticles":null,"brandingPreviewImageUrl":null,"jivoStatus":0,"adminNotifications":null,"availableInvitesCount":{}},"companyAdd":{"currentStep":"","stepsData":{},"uncompletedSteps":[],"isStepLoading":true,"isStepCommitting":false,"isInitialized":false,"agreementContent":""},"companiesContribution":{"hubs":{},"flows":{},"companyRefs":{}},"companyHubsContribution":{"contributionRefs":{"hubRefs":{},"hubIds":{}}},"conversation":{"messages":[],"respondent":null,"isLoadMore":false},"conversations":{"conversations":[],"pagesCount":0},"docs":{"menu":{},"articles":{},"mainMenu":[],"loading":{"main":false,"dropdown":false,"article":false}},"feature":{"isProbablyVisible":true},"fixedBanner":{"isArticleStickyPanelVisible":false,"isArticleStickyPanelAtTheBottom":false,"isFixedBannerVisible":false,"isStickyPanelIconsHidden":false},"flows":{"flows":[{"id":"1","alias":"develop","title":"Разработка","titleHtml":"Разработка","route":{"name":"FLOW_PAGE","params":{"flowName":"develop"}}},{"id":"6","alias":"admin","title":"Администрирование","titleHtml":"Администрирование","route":{"name":"FLOW_PAGE","params":{"flowName":"admin"}}},{"id":"2","alias":"design","title":"Дизайн","titleHtml":"Дизайн","route":{"name":"FLOW_PAGE","params":{"flowName":"design"}}},{"id":"3","alias":"management","title":"Менеджмент","titleHtml":"Менеджмент","route":{"name":"FLOW_PAGE","params":{"flowName":"management"}}},{"id":"4","alias":"marketing","title":"Маркетинг","titleHtml":"Маркетинг","route":{"name":"FLOW_PAGE","params":{"flowName":"marketing"}}},{"id":"7","alias":"popsci","title":"Научпоп","titleHtml":"Научпоп","route":{"name":"FLOW_PAGE","params":{"flowName":"popsci"}}}],"updates":{}},"global":{"isPwa":false,"device":"mobile","isHabrCom":true,"requestId":"b0a28e1e7926e9ec666d6dcdf67ed9a8"},"hubs":{"hubRefs":{},"hubIds":{},"pagesCount":{},"isLoading":false,"route":{}},"hubsBlock":{"hubRefs":{},"hubIds":{}},"i18n":{"fl":"ru","hl":"ru"},"info":{"welcomePage":{},"isLoading":true},"location":{"urlStruct":{"protocol":null,"slashes":null,"auth":null,"host":null,"port":null,"hostname":null,"hash":null,"query":{},"pathname":"\u002Fru\u002Farticles\u002F752702\u002F","path":"\u002Fru\u002Farticles\u002F752702\u002F","href":"\u002Fru\u002Farticles\u002F752702\u002F"}},"me":{"user":null,"uuid":null,"ppgDemanded":false,"karmaResetInfo":{"canReincarnate":null,"wasReincarnated":null,"currentScore":null},"notes":null,"userUpdates":{"feeds":{"newPostsCount":null,"newThreadsCount":null,"newNewsCount":null,"newCount":null},"conversationUnreadCount":0}},"mostReadingList":{"mostReadingListIds":[],"mostReadingListRefs":null,"promoPost":null},"onboarding":{"currentStep":null,"stepsData":{},"stepsErrors":{},"completedSteps":[],"isStepCommitting":false,"isCommitDisabled":true},"ppa":{"articles":{},"card":null,"transactions":null,"totalTransactions":null,"isAccessible":null},"projectsBlocks":{"activeBlocks":{"courses":"project-block-article"}},"promoData":{"isLoading":false,"hasLoaded":false,"featurer":null,"megaposts":null,"promoLinks":null,"promoPosts":null,"sticker":null},"publicationStatistics":{"statsInfo":{},"statsFunnels":{},"statsGraph":{},"defaultSuggest":{},"suggest":{},"timeTracker":{},"isTrackingActivity":false,"isUserActive":true,"otherPublicationStats":{}},"pullRefresh":{"shouldRefresh":false},"sandbox":{"articleIds":[],"articleRefs":{},"pagesCount":null,"route":{},"lastVisitedRoute":{},"isLoading":false},"search":{"searchQueryError":null},"settingsOther":{"inputs":{"uiLang":{"errors":[],"ref":null,"value":""},"articlesLangEnglish":{"errors":[],"ref":null,"value":false},"articlesLangRussian":{"errors":[],"ref":null,"value":false},"agreement":{"errors":[],"ref":null,"value":false},"email":{"errors":[],"ref":null,"value":true},"digest":{"errors":[],"ref":null,"value":true}}},"similarList":{"similarListIds":[],"similarListRefs":null},"ssr":{"error":null,"isDataLoaded":true,"isDataLoading":false,"isHydrationFailed":false,"isServer":false},"stories":{"stories":[{"id":"story-998","author":{"logo":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F91a\u002F166\u002F49f\u002F91a16649f9ef89302a5a56cfa22a451d.png","title":"Яндекс Практикум","link":"https:\u002F\u002Fu.habr.com\u002Fstories_up"},"title":"Как расти на работе?","lang":"ru","startTime":"2025-03-18T18:45:00+03:00","finishTime":"2025-03-31T19:00:00+03:00","slides":[{"id":"story-998_1","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fbf4\u002F911\u002F7e6\u002Fbf49117e637ff2099b3944f8803cd7a3.png","button":null},{"id":"story-998_2","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F3e3\u002Fc84\u002Fe83\u002F3e3c84e8330ea1ddf72e9d310457ed2f.png","button":{"title":"Расти в карьере","link":"https:\u002F\u002Fu.habr.com\u002Fstories_up","colorType":"light"}},{"id":"story-998_3","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F84b\u002F533\u002F3c3\u002F84b5333c3e77e8dac62a8b50d042acb9.png","button":{"title":"Расти в карьере","link":"https:\u002F\u002Fu.habr.com\u002Fstories_up","colorType":"light"}},{"id":"story-998_4","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F257\u002Feb0\u002F2be\u002F257eb02bea1777e13f3e647cae6e06cd.png","button":{"title":"Расти в карьере","link":"https:\u002F\u002Fu.habr.com\u002Fstories_up","colorType":"light"}},{"id":"story-998_5","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F858\u002F086\u002F0ed\u002F8580860ed3497c043c04f9a42054d74f.png","button":{"title":"Расти в карьере","link":"https:\u002F\u002Fu.habr.com\u002Fstories_up","colorType":"light"}},{"id":"story-998_6","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fcdf\u002F32f\u002F387\u002Fcdf32f38777f046c063b5182f4125e14.png","button":{"title":"Расти в карьере","link":"https:\u002F\u002Fu.habr.com\u002Fstories_up","colorType":"light"}},{"id":"story-998_7","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fd48\u002Ff2d\u002F0e2\u002Fd48f2d0e2ecd7d746d738191bb913d8f.png","button":{"title":"Расти в карьере","link":"https:\u002F\u002Fu.habr.com\u002Fstories_up","colorType":"light"}},{"id":"story-998_8","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fb38\u002Ffd7\u002Fee0\u002Fb38fd7ee04848bf3b058be7403438bd1.png","button":{"title":"Расти в карьере","link":"https:\u002F\u002Fu.habr.com\u002Fstories_up","colorType":"light"}},{"id":"story-998_9","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F79e\u002Feaa\u002F9d8\u002F79eeaa9d8af5a288ad42bd9d63b5793a.png","button":{"title":"Расти в карьере","link":"https:\u002F\u002Fu.habr.com\u002Fstories_up","colorType":"light"}},{"id":"story-998_10","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fcdc\u002F17e\u002F385\u002Fcdc17e38582dc67838b9abfb200d982e.png","button":{"title":"Расти в карьере","link":"https:\u002F\u002Fu.habr.com\u002Fstories_up","colorType":"light"}}]},{"id":"story-996","author":{"logo":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fe63\u002F36d\u002Fa24\u002Fe6336da24460ab6b9fbc347d03eb263a.png","title":"Хабр","link":null},"title":"Здоровье айтишника","lang":"ru","startTime":"2025-03-17T10:22:00+03:00","finishTime":"2025-04-13T10:22:00+03:00","slides":[{"id":"story-996_1","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fb7c\u002F6de\u002F8ea\u002Fb7c6de8ea6789dbc30f071716172b6dd.jpg","button":null},{"id":"story-996_2","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F2e7\u002F88a\u002F0fe\u002F2e788a0fe61729ca8b23eb59069c844f.jpg","button":{"title":"Личный опыт","link":"https:\u002F\u002Fu.habr.com\u002Fzd-1","colorType":"light"}},{"id":"story-996_3","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fb93\u002F6f4\u002F256\u002Fb936f425653b84fa60ab00d09f78c543.jpg","button":{"title":"Как это было","link":"https:\u002F\u002Fu.habr.com\u002Fzd-2","colorType":"light"}},{"id":"story-996_4","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fc10\u002Fd14\u002Ff5a\u002Fc10d14f5a4859fe10baecbcc2bcb8828.jpg","button":{"title":"Шея в фокусе","link":"https:\u002F\u002Fu.habr.com\u002Fzd-3","colorType":"dark"}},{"id":"story-996_5","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F535\u002Fe1b\u002F77a\u002F535e1b77a9eb896262ad73321f2ad99f.jpg","button":{"title":"Фотоинструкция","link":"https:\u002F\u002Fu.habr.com\u002Fzd-4","colorType":"light"}},{"id":"story-996_6","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F569\u002Fc39\u002F49f\u002F569c3949f5b330ea85d4a1864f481c3d.jpg","button":{"title":"Сидите (не)правильно","link":"https:\u002F\u002Fu.habr.com\u002Fzd-5","colorType":"dark"}},{"id":"story-996_7","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F1f2\u002F1de\u002Fdbf\u002F1f21dedbf2902bc4061a75b839b63595.jpg","button":{"title":"Журнал изменений","link":"https:\u002F\u002Fu.habr.com\u002Fzd-6","colorType":"dark"}},{"id":"story-996_8","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F95a\u002F164\u002F21b\u002F95a16421badc3a9f1135309ab0c42c41.jpg","button":{"title":"Альтернатива","link":"https:\u002F\u002Fu.habr.com\u002Fzd-7","colorType":"light"}},{"id":"story-996_9","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F624\u002F027\u002F54d\u002F62402754d311798af44bcfe7f9abfedc.jpg","button":{"title":"Хроника поисков","link":"https:\u002F\u002Fu.habr.com\u002Fzd-8","colorType":"dark"}}]},{"id":"story-992","author":{"logo":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F3fe\u002F2fc\u002Fb05\u002F3fe2fcb05df852d7e1e00d44e54e39ae.png","title":"Сезоны Хабра","link":"https:\u002F\u002Fu.habr.com\u002Ffnstories"},"title":"Угадайте будущее в новом сезоне","lang":"ru","startTime":"2025-03-12T19:15:00+03:00","finishTime":"2025-03-31T23:56:00+03:00","slides":[{"id":"story-992_1","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fc56\u002Faf5\u002Fc43\u002Fc56af5c4377f7f7b94f7b6ad20fc92c3.png","button":{"title":"А что за сезон?","link":"https:\u002F\u002Fu.habr.com\u002Ffnstories","colorType":"light"}},{"id":"story-992_2","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F8fa\u002Fde7\u002F65d\u002F8fade765d99207f31c597283ae6ce912.png","button":{"title":"Какие темы нужны","link":"https:\u002F\u002Fu.habr.com\u002Ffnstories","colorType":"dark"}},{"id":"story-992_3","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F23e\u002F7b9\u002Fb24\u002F23e7b9b24cb056d1a42e8d31ccea16ce.png","button":{"title":"Сезон будущего ИИ","link":"https:\u002F\u002Fu.habr.com\u002Ffnstories","colorType":"dark"}},{"id":"story-992_4","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F27b\u002Fbfc\u002Fa18\u002F27bbfca18e656ee0122b5cb8eb2cb502.png","button":{"title":"Все правила сезона","link":"https:\u002F\u002Fu.habr.com\u002Ffnstories","colorType":"dark"}},{"id":"story-992_5","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F1e0\u002F6c6\u002Ff33\u002F1e06c6f33e703bbd2b2ae3baee3376fd.png","button":{"title":"Как участвовать","link":"https:\u002F\u002Fu.habr.com\u002Ffnstories","colorType":"dark"}}]},{"id":"story-990","author":{"logo":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F282\u002Fe80\u002Fbf1\u002F282e80bf1b73484126ed53c6f3e42692.png","title":"Aeza","link":"https:\u002F\u002Fu.habr.com\u002FI72qi"},"title":"С праздником весны!","lang":"ru","startTime":"2025-03-09T10:15:00+03:00","finishTime":"2025-03-30T23:59:00+03:00","slides":[{"id":"story-990_1","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F064\u002F9dd\u002Ff59\u002F0649ddf5949cae6c9342fb62034a36ac.png","button":null},{"id":"story-990_2","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F05f\u002F96b\u002F25e\u002F05f96b25e910c32256ee0b1916f21380.png","button":{"title":"Семейная история","link":"https:\u002F\u002Fu.habr.com\u002Fey2bY","colorType":"light"}},{"id":"story-990_3","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fcd1\u002Ff5d\u002F921\u002Fcd1f5d921bb9489ac11727272660bdb6.png","button":{"title":"Движущиеся картинки","link":"https:\u002F\u002Fu.habr.com\u002FWLKXU","colorType":"light"}},{"id":"story-990_4","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fb55\u002Fd45\u002Fec5\u002Fb55d45ec50e53275c60d16ea886a0672.png","button":{"title":"Личный опыт","link":"https:\u002F\u002Fu.habr.com\u002FSxrki","colorType":"light"}},{"id":"story-990_5","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Ffa7\u002F1ce\u002Ffca\u002Ffa71cefca5ed0a3fe8b50bd703b3605f.png","button":{"title":"Алгоритм","link":"https:\u002F\u002Fu.habr.com\u002Ftbz2p","colorType":"light"}},{"id":"story-990_6","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F435\u002F89d\u002Ff90\u002F43589df9018846cc6a8eed986226b252.png","button":{"title":"Выбрать сценарий","link":"https:\u002F\u002Fu.habr.com\u002F0RCPk","colorType":"light"}},{"id":"story-990_7","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F514\u002F5f8\u002F619\u002F5145f86194ad48dad48a846b42af0f93.png","button":{"title":"Jiraзамещение","link":"https:\u002F\u002Fu.habr.com\u002FEwhYq","colorType":"light"}},{"id":"story-990_8","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F439\u002Fa83\u002Fae7\u002F439a83ae78f7ef711e3b9bbed1ec26c5.png","button":{"title":"8 вещей","link":"https:\u002F\u002Fu.habr.com\u002FVTv2r","colorType":"light"}},{"id":"story-990_9","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F02d\u002F783\u002F2f7\u002F02d7832f7b1c95d88bff9f34209e204a.png","button":{"title":"Интерфейсы","link":"https:\u002F\u002Fu.habr.com\u002FUFOMZ","colorType":"light"}},{"id":"story-990_10","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F0cb\u002Ff7f\u002F0d9\u002F0cbf7f0d905d486ce4ff82bc939b21d5.png","button":{"title":"Стикеры ваши","link":"https:\u002F\u002Fu.habr.com\u002FoA1K7","colorType":"light"}}]},{"id":"story-984","author":{"logo":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F648\u002F61b\u002F9ae\u002F64861b9aecb7c474cd94063f98045541.png","title":"Хабр","link":null},"title":"Всегда котов!","lang":"ru","startTime":"2025-03-01T00:01:09+03:00","finishTime":"2025-03-23T16:21:00+03:00","slides":[{"id":"story-984_1","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fc06\u002Fc21\u002F93f\u002Fc06c2193ff34362ac2af782cf2571f55.png","button":null},{"id":"story-984_2","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fb68\u002F15f\u002F763\u002Fb6815f7630b9c015b1e67efb5bdf12d4.jpg","button":{"title":"Сделать purrrr","link":"https:\u002F\u002Fu.habr.com\u002Fj4DN1","colorType":"light"}},{"id":"story-984_3","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F550\u002F76e\u002Fd7a\u002F55076ed7a0954e243f944fc2f330623a.png","button":{"title":"Тыгыдык","link":"https:\u002F\u002Fu.habr.com\u002Fya360_kotov","colorType":"dark"}},{"id":"story-984_4","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F2fb\u002F23b\u002F06c\u002F2fb23b06cf294c2050104b2aef589788.jpg","button":{"title":"Исследование","link":"https:\u002F\u002Fu.habr.com\u002FbO3r0","colorType":"light"}},{"id":"story-984_5","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Ff50\u002F50f\u002F0ae\u002Ff5050f0aeea1335c4f0544c1863f8342.jpg","button":{"title":"Детали проекта","link":"https:\u002F\u002Fu.habr.com\u002FQJmhe","colorType":"light"}},{"id":"story-984_6","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F825\u002F3dd\u002F5f5\u002F8253dd5f5c19dd061578f1d09310a45f.jpg","button":{"title":"Эксперименты","link":"https:\u002F\u002Fu.habr.com\u002FVaOdo","colorType":"light"}},{"id":"story-984_7","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F3fb\u002Fc92\u002F0f9\u002F3fbc920f9ea81eca2c1c027ff77fc659.jpg","button":{"title":"Это не мем","link":"https:\u002F\u002Fu.habr.com\u002F0Wb3p","colorType":"light"}},{"id":"story-984_8","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F2b4\u002F794\u002Fc33\u002F2b4794c33844e60aad9468018fd132cd.jpg","button":{"title":"В засаде","link":"https:\u002F\u002Fu.habr.com\u002FnasCD","colorType":"dark"}}]}]},"technotext":{"years":[],"technotextDocForNominees":null,"technotextDocForWinners":null,"technotextInfo":{},"technotextInfoLoading":false,"technotextWinners":{},"technotextWinnersLoading":false},"userHubsContribution":{"contributionRefs":{"hubRefs":{},"hubIds":{}}},"userInvites":{"availableInvites":0,"usedInvitesIds":[],"usedInvitesRefs":{},"usedInvitesPagesCount":0,"unusedInvitesIds":[],"unusedInvitesRefs":{},"unusedInvitesPagesCount":0},"userVotes":{"karmaVotesList":[],"karmaVotesPagesCount":null,"karmaVotesListLoading":false,"commentsVotesList":[],"commentsVotesPagesCount":null,"commentsVotesListLoading":false,"postsVotesList":[],"postsVotesPagesCount":null,"postsVotesListLoading":false,"userVotesList":[],"userVotesPagesCount":null,"userVotesListLoading":false},"users":{"authorRefs":{},"authorIds":{},"pagesCount":{},"authorProfiles":{"dartya":{"alias":"Dartya","badgets":[{"title":"Захабренный","description":"Пользователь с кармой \u003E0","url":null,"isRemovable":false},{"title":"Участник сезона Java","description":"За участие в сезоне Java","url":"https:\u002F\u002Fhabr.com\u002Fru\u002Fspecials\u002F673202\u002F","isRemovable":true},{"title":"Техноавтор 2022","description":"Участник конкурса «Технотекст» 2022","url":null,"isRemovable":true},{"title":"Участник сезона Big Data","description":"За участие в сезоне Big Data","url":"https:\u002F\u002Fu.habr.com\u002Fseason_bd","isRemovable":true},{"title":"Участник сезона Java one love","description":"За участие в сезоне Java one love","url":"https:\u002F\u002Fu.habr.com\u002Fjava","isRemovable":true}],"aboutHtml":"","contacts":[],"invitedBy":{"issuerLogin":null,"timeCreated":"2022-07-26T22:37:38+00:00"},"careerProfile":null,"companies":{"pagesCount":1,"companyIds":[],"companyRefs":{}}}},"userHubs":{},"userInvitations":{},"authorFollowers":{},"authorFollowed":{},"userSpecialization":{},"karmaStats":[],"statistics":null,"isLoading":false,"authorFollowersLoading":false,"authorFollowedLoading":false,"userHubsLoading":false,"userInvitationsLoading":false,"route":{}},"viewport":{"prevScrollY":{},"scrollY":0,"width":0},"tracker":{"notificationsLoading":false,"notificationsList":[],"notificationsPageCount":0,"pendingMarkNotificationsRead":[],"publicationsLoading":true,"publicationsList":[],"publicationsPageCount":0,"pendingDeletePublications":false,"pendingMarkPublicationsRead":false},"events":{"eventRefs":{},"eventIds":[],"pagesCount":0,"categories":[],"cities":[],"actualEvents":[{"id":"588","titleHtml":"Конкурс «Снежный код» от Хекслета. Три гранта на бесплатное 10-месячное обучение","descriptionHtml":"\u003Cp\u003EУчаствуйте в конкурсе грантов от онлайн-школы программирования Хекслет. Три победителя пройдут 10-месячное обучение с наставником, освоив один из востребованных стеков: Java, Python, JavaScript, PHP или Node.js.\u003C\u002Fp\u003E\u003Cp\u003EЭто шанс без вложений освоить новый стек, систематизировать знания, восполнить пробелы и повысить свою ценность на рынке. Технологии развиваются быстро — обновляйте навыки, чтобы не отставать.\u003C\u002Fp\u003E\u003Cp\u003EПомимо грантов, можно выиграть доступ ко всем курсам Хекслета, полезные подписки, сертификаты и подарки от Хабра и партнеров.\u003C\u002Fp\u003E\u003Cp\u003EВ прошлом году три победителя успешно завершили программу и уже работают в IT.  Инвестируйте время в свое развитие — участвуйте! \u003C\u002Fp\u003E","imageUrl":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Ff79\u002F1fc\u002F79d\u002Ff791fc79d0d9fdda84397ed0c0717764.png","eventUrl":"https:\u002F\u002Fspecial.hexlet.io\u002Fgrant?utm_source=partners&utm_medium=referral&utm_campaign=grant&utm_content=link&utm_term=placement_habr","startDay":"2025-02-17","finishDay":"2025-03-24","isOnline":true,"geo":[],"isArchive":false,"categories":[{"id":"2","titleHtml":"Разработка"}],"tags":["гранты","конкурс","Хекслет","Java","Python","JavaScript","PHP","Node.js"],"metadata":null},{"id":"596","titleHtml":"Офлайн-конференция Хабр х K-team: как удерживать таланты в 2025 году","descriptionHtml":"\u003Cp\u003EМы — Хабр и K-Team — провели масштабное исследование, чтобы разобраться, что на самом деле мотивирует сотрудников оставаться в компании и быть лояльными\u003C\u002Fp\u003E\u003Cp\u003EВместе прошли по тернистому пути к лояльности, опросив&nbsp;3 000+ сотрудников, HR и руководителей из разных отраслей:&nbsp;от ретейла и логистики до IT и промышленности. Мы заботливо собрали самые разные мнения, чтобы понять, что по-настоящему важно для людей, которые остаются в компании надолго и любят свою работу. \u003C\u002Fp\u003E\u003Cp\u003EНаша цель проста — помочь бизнесу не сливать бюджет на бесполезные инициативы, а сотрудникам — получать то, что им действительно нужно. \u003C\u002Fp\u003E\u003Cp\u003EПриглашаем вас на офлайн-презентацию в Москве в марте. Обсудим результаты исследования, ключевые выводы и разберем, как строить эффективные Retention-стратегии в 2025 году.\u003C\u002Fp\u003E\u003Cp\u003EКоличество мест ограничено, заявки проходят модерацию. Если ваша заявка будет одобрена, вы получите письмо с подтверждением и адресом встречи.\u003C\u002Fp\u003E\u003Cp\u003EЕсли прийти не получится — после ивента отправим результаты исследования всем, кто зарегистрируется на лендинге.\u003C\u002Fp\u003E\u003Cp\u003EМентальное здоровье сотрудников — важная часть корпоративной культуры. В «Ясно для бизнеса» изучают, как забота о команде влияет на вовлечённость и эффективность. Они подготовили гайд о работе с молодыми специалистами, а для теста сервиса есть промокод CORP-HABRTLNT-DISC20 на скидку 20% для первых сессий: https:\u002F\u002Fu.habr.com\u002FPQP4b\u003C\u002Fp\u003E\u003Cp\u003E\u003C\u002Fp\u003E","imageUrl":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fb14\u002Fcd3\u002F772\u002Fb14cd3772bc67698c8fbfd846e23824a.png","eventUrl":"https:\u002F\u002Fevent.k-team.ru\u002Fexpectations_vs_reality?utm_source=habr","startDay":"2025-03-20","startTime":"10:00","finishDay":"2025-03-20","finishTime":"17:00","isOnline":false,"geo":["Москва"],"isArchive":false,"categories":[{"id":"16","titleHtml":"Другое"}],"tags":["HR","HRD","Удержание сотрудников"],"metadata":null},{"id":"604","titleHtml":"IX HappyWorkForum | Аутентичность и ментальное здоровье персонала","descriptionHtml":"\u003Cp\u003EБолее 250 HRD, первые лица компаний и владельцы крупного бизнеса обсудят лучшие практики благополучия и управление командой.\u003C\u002Fp\u003E\u003Cp\u003EПочему ментальное здоровье становится KPI бизнеса?\u003C\u002Fp\u003E\u003Cp\u003EГде граница ответственности за выгорание и стресс сотрудников?\u003C\u002Fp\u003E\u003Cp\u003EКак стать работодателем №1?\u003C\u002Fp\u003E\u003Cp\u003EКак управлять уставшими командами?\u003C\u002Fp\u003E\u003Cp\u003EКак справляться с выгоранием руководителей?\u003C\u002Fp\u003E\u003Cp\u003EЧем замотивировать сотрудников, когда деньги уже не работают?&nbsp;&nbsp;\u003C\u002Fp\u003E\u003Cp\u003EКак решать ценностные конфликты?\u003C\u002Fp\u003E\u003Cp\u003EУспешные корпоративные программы: что реально работает?&nbsp;&nbsp;\u003C\u002Fp\u003E\u003Cp\u003EВ программе презентация отчёта по развитию лидерства, батлы, практические кейсы и нетворкинг.\u003C\u002Fp\u003E\u003Cp\u003EСреди спикеров, представители компаний: Т-банк, Сравни.ру, Ростелеком, ТД Ренна, Спортмастер, ТрансТелеком, Оптиком, Норникель, Азбука вкуса, ЕВМ и другие.\u003C\u002Fp\u003E\u003Cp\u003EУчастие для HRD, руководителей и владельцев бизнеса без оплаты. Действует строгая модерация.\u003C\u002Fp\u003E\u003Cp\u003E\u003C\u002Fp\u003E","imageUrl":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F733\u002F9ef\u002F194\u002F7339ef1945f3ee6906daf89db79829d4.png","eventUrl":"https:\u002F\u002Fhappyforum.ru\u002F?utm_source=habr&utm_medium=email&utm_campaign=hwf","startDay":"2025-03-20","startTime":"10:00","finishDay":"2025-03-20","finishTime":"18:00","isOnline":true,"geo":["Москва"],"isArchive":false,"categories":[{"id":"16","titleHtml":"Другое"}],"tags":["HRD","HR"],"metadata":null},{"id":"612","titleHtml":"Вебинар «Мастерская бюджета: как управлять затратами на облачные ресурсы»","descriptionHtml":"\u003Cp\u003EРасскажем, как сэкономить на использовании облачных сервисов через возможности личного кабинета, сервисы с free tier и акции. Покажем, как оптимизировать потребление ресурсов и настроить лимиты бюджетов.\u003C\u002Fp\u003E\u003Cp\u003EПрограмма вебинара:\u003C\u002Fp\u003E\u003Cul\u003E\u003Cli\u003E\u003Cp\u003EАнализ текущей утилизации ресурсов: поиск ресурсов с низкой утилизацией и анализ возможной оптимизации.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003EКалькулятор затрат: демо-настройки параметров для точных прогнозов расходов.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003EАнализ детализированных данных: подходы к аналитике, включая метаданные.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003EОптимизация потребления: использование зарезервированных инстансов и спотовых экземпляров.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003EАнализ бесплатного потребления: как использовать free tier для сокращения затрат.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003EНастройка лимитов бюджетов: автоматизация и уведомления для контроля расходов.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003EИспользование Public API: тегирование ресурсов для лучшей аналитики затрат.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003C\u002Ful\u003E\u003Cp\u003EВебинар будет интересен менеджерам облачных ресурсов и IT-департаментов, DevOps-инженерам и сотрудникам, в чью зону ответственности входит контроль над облачными расходами.\u003C\u002Fp\u003E","imageUrl":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F38f\u002F10d\u002Ff4c\u002F38f10df4c7f9d7c5d4610fe426af0ab4.png","eventUrl":"https:\u002F\u002Fu.habr.com\u002Fcldr_cloudeventwebinar","startDay":"2025-03-20","startTime":"11:00","finishDay":"2025-03-20","isOnline":true,"geo":[],"isArchive":false,"categories":[{"id":"2","titleHtml":"Разработка"},{"id":"4","titleHtml":"Администрирование"}],"tags":["вебинар cloudru","вебинар для айтишников","вебинар про облака"],"metadata":null},{"id":"616","titleHtml":"Бизнес-конференция «Digital Brand Day 2025: Орбита 2025»","descriptionHtml":"\u003Cp\u003E21 марта конференция «Digital Brand Day 2025: Орбита 2025» в восьмой раз соберёт ведущих экспертов цифрового маркетинга и рекламы для обсуждения главных трендов digital-рынка и новых инструментов, которые определят стратегию брендов.\u003C\u002Fp\u003E\u003Cp\u003EВ основе темы Digital Brand Day 2025 лежит фундаментальный вопрос философии: что первично — материя или сознание? А что же первично в цифровой среде — технологии или идеи? Конференция станет эпицентром открытий, где мы вместе проложим путь сквозь бескрайние просторы рекламного космоса и наметим вектор развития цифрового маркетинга.\u003C\u002Fp\u003E\u003Cp\u003EГостей «Digital Brand Day: Орбита 2025» ждёт не только насыщенная программа, но и возможность завести полезные знакомства, увидеть, каким будет диджитал завтра.\u003C\u002Fp\u003E","imageUrl":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F523\u002F7fb\u002F13a\u002F5237fb13ad7fb6fb483c49691aaec836.png","eventUrl":"https:\u002F\u002Fu.habr.com\u002Fcldr_digitalbrandday","startDay":"2025-03-21","startTime":"10:00","isOnline":false,"geo":["Москва"],"isArchive":false,"categories":[{"id":"10","titleHtml":"Маркетинг"},{"id":"16","titleHtml":"Другое"}],"tags":["digital brand day","бизнес-конференция digital brand day","цифровой маркетинг","digital-рынок"],"metadata":null},{"id":"608","titleHtml":"Вебинар «Контент-маркетинг здорового человека: как привлечь внимание аудитории»","descriptionHtml":"\u003Cp\u003E27 марта в 16:00 МСК вместе с агентством Loft PR Studio проведем открытый вебинар о том, как писать про здоровье на Хабре. \u003C\u002Fp\u003E\u003Cp\u003EНа вебинаре разберем, что помогает удерживать внимание и превращает контент в работающий инструмент. Поделимся опытом брендов, которые ведут блоги и регулярно публикуют статьи.\u003C\u002Fp\u003E\u003Cp\u003EБудет интересно тем, кто продвигает товары и услуги для здоровья на аудиторию B2C и B2B. \u003C\u002Fp\u003E\u003Cp\u003E🔗 Участие бесплатное, но нужна предварительная регистрация.\u003C\u002Fp\u003E","imageUrl":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F8fd\u002Fe04\u002Fddd\u002F8fde04ddd9ba3f6bcd515aa6209f96b7.png","eventUrl":"https:\u002F\u002Fhabr.timepad.ru\u002Fevent\u002F3266126\u002F?utm_refcode=b5d44b4f1d5f2c06b5696586408b58e610baafd8","startDay":"2025-03-27","startTime":"16:00","finishDay":"2025-03-27","finishTime":"18:00","isOnline":true,"geo":[],"isArchive":false,"categories":[{"id":"10","titleHtml":"Маркетинг"},{"id":"16","titleHtml":"Другое"}],"tags":["Вебинар","Контент","Хабр"],"metadata":null},{"id":"606","titleHtml":"Серия вебинаров «DevOps Middle: AvitoTech vs ecom.tech»","descriptionHtml":"\u003Cp\u003EУчебный центр Слёрм запустил серию бесплатных вебинаров «Честные вакансии: DevOps Middle».\u003C\u002Fp\u003E\u003Cp\u003EДва раза в неделю Вячеслав Федосеев, TeamLead DevOps в «Честном знаке» и автор телеграм-канала «DevOps Bootcamp с Федосеевым» встречается в прямом эфире с экспертами из бигтеха, чтобы обсудить:\u003C\u002Fp\u003E\u003Col\u003E\u003Cli\u003E\u003Cp\u003EКакие задачи должен решать DevOps middle.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003EКакими основными и дополнительными инструментами и подходами должен владеть DevOps middle.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003EСтоп-факторы на собеседовании.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003EКак выглядит рабочий день DevOps middle.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003EКакие софт-скилы действительно важны.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003C\u002Fol\u003E\u003Cp\u003E31 марта состоится встреча с экспертами AvitoTech, 2 апреля — с ecom.tech. Кому подходите вы, а кто — вам? Разберёмся вместе на вебинарах.\u003C\u002Fp\u003E\u003Cp\u003EПодробности — в telegram-боте.\u003C\u002Fp\u003E\u003Cp\u003E\u003C\u002Fp\u003E","imageUrl":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fb99\u002F62a\u002Fb24\u002Fb9962ab2439c6edc80f96d7f0a847c72.png","eventUrl":"https:\u002F\u002Fu.habr.com\u002Fcldr_slermdevops","startDay":"2025-03-31","startTime":"17:00","isOnline":true,"geo":[],"isArchive":false,"categories":[{"id":"2","titleHtml":"Разработка"},{"id":"4","titleHtml":"Администрирование"}],"tags":["Вебинар Слерм","Вебинар Devops","Честные вакансии","Слерм","Честные вакансии Devops Middle"],"metadata":null},{"id":"618","titleHtml":"Реалити для разработчиков: узнайте, как строится новое публичное облако MWS","descriptionHtml":"\u003Cp\u003EBuilding the Cloud — это реалити-проект для разработчиков о новом облаке МТС Web Services. Каждый эпизод посвящён отдельному building-блоку новой облачной платформы.\u003C\u002Fp\u003E\u003Cp\u003EВ прямом эфире:\u003C\u002Fp\u003E\u003Cul\u003E\u003Cli\u003E\u003Cp\u003EПоказываем архитектуру сервисов облака ещё до релиза.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003EДелимся опытом на реальных кейсах из разработки.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003EОтвечаем на вопросы в прямом эфире.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003C\u002Ful\u003E\u003Cp\u003EВ новом выпуске проекта расскажем, как строим underlay-сеть нового облака.\u003C\u002Fp\u003E\u003Cp\u003EВы узнаете:\u003C\u002Fp\u003E\u003Cul\u003E\u003Cli\u003E\u003Cp\u003EКак мы поменяли подход к построению underlay-сети в новом облаке MWS.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003EКакую архитектуру строим и как реализовали изоляцию management и data plane.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003EКак обеспечиваем отказоустойчивость и производительность на уровне физической инфраструктуры.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003C\u002Ful\u003E\u003Cp\u003EНовый выпуск Building the Cloud будет интересен сетевым инженерам, backend-разработчикам, DevOps- и SRE-инженерам, а также всем, кто интересуется сетевыми или облачными технологиями.\u003C\u002Fp\u003E\u003Cp\u003EРегистрируйтесь по ссылке, подключайтесь к прямому эфиру и задавайте вопросы в чате.\u003C\u002Fp\u003E\u003Cp\u003EЗа самый интересный вопрос подарим фирменный мерч MWS.\u003C\u002Fp\u003E\u003Cp\u003EДо встречи в эфире.\u003C\u002Fp\u003E","imageUrl":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Ff76\u002F0f9\u002Fa82\u002Ff760f9a827b851a5eeca4802c643a91d.png","eventUrl":"https:\u002F\u002Fu.habr.com\u002Fcldr_buildingthecloud4","startDay":"2025-04-03","startTime":"11:00","isOnline":true,"geo":[],"isArchive":false,"categories":[{"id":"2","titleHtml":"Разработка"}],"tags":["реалити-проект для разработчиков","Реалити для разработчиков","облако","облако MWS"],"metadata":null},{"id":"620","titleHtml":"Открытая встреча «System Analysis Meetup SberHealth»","descriptionHtml":"\u003Cp\u003EВ программе:\u003C\u002Fp\u003E\u003Cul\u003E\u003Cli\u003E\u003Cp\u003EГоргоц Мария, старший системный аналитик, расскажет про описание требований для мобильных приложений.&nbsp;\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003EНижник Станислав, ведущий системный аналитик, расскажет про книжный клуб системных аналитиков: «Как мы создали сообщество для обмена знаниями».\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003EВ качестве приглашённого спикера Севостьянова Анастасия, ведущий системный аналитик в Альфа-Банке, расскажет про мидл слой без хаоса: «Как сделать документацию понятной и живой».&nbsp;\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003C\u002Ful\u003E\u003Cp\u003EПосле сессии с докладами проведём профессиональную игру для офлайн-участников «Искусство защиты абсурда».&nbsp;\u003C\u002Fp\u003E\u003Cp\u003EВедущая митапа Пашкова Ольга, руководитель направления методологии и системного анализа в СберЗдоровье.\u003C\u002Fp\u003E","imageUrl":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Feba\u002Fc37\u002F879\u002Febac378793b959ebce42f41713e7b67f.jpg","eventUrl":"https:\u002F\u002Fu.habr.com\u002Fcldr_sbermeetup","startDay":"2025-04-03","startTime":"17:00","finishDay":"2025-04-03","finishTime":"23:00","isOnline":true,"geo":["Москва"],"isArchive":false,"categories":[{"id":"12","titleHtml":"Аналитика"}],"tags":["Семинар аналитика","сбер митап","системная аналитика митап","системная аналитика"],"metadata":null},{"id":"590","titleHtml":"«GoCloud 2025» — масштабная IT-конференция про облака и AI","descriptionHtml":"\u003Cp\u003EПоговорим про глобальные тренды в AI, расскажем про широкий набор сценариев работы в облаке, поделимся последними релизами и нашими планами, чтобы показать, какой простор открывают облачные и AI-технологии для бизнеса и разработчиков.\u003C\u002Fp\u003E\u003Cp\u003EЧто ждёт участников в этом году:\u003C\u002Fp\u003E\u003Cul\u003E\u003Cli\u003E\u003Cp\u003EТри трека: инфраструктура и инструменты, AI и R&amp;D и сценарии работы в облаке.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003E30+ спикеров из Cloud.ru и ведущих российских компаний.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003ELive-демонстрации облачных платформ и нетворкинг с экспертами.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003EНе только доклады: интерактивные зоны, afterparty с музыкальной программой и кастомный мерч.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003C\u002Ful\u003E\u003Cp\u003EКому будет полезно: техническим лидерам, IT-директорам, бизнес-руководителям, разработчикам, DevOps-инженерам, архитекторам, дата-инженерам, AI\u002FML-инженерам, дата-сайентистам, SRE-инженерам, системным администраторам, специалистам по информационной безопасности.\u003C\u002Fp\u003E\u003Cp\u003EАдрес: Москва, Цифровое деловое пространство (ЦДП), ул. Покровка, 47.\u003C\u002Fp\u003E\u003Cp\u003E\u003C\u002Fp\u003E","imageUrl":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F31b\u002Fe68\u002F295\u002F31be6829578e7934fbc944396eb330b1.png","eventUrl":"https:\u002F\u002Fu.habr.com\u002Fcldr_gocloud","startDay":"2025-04-10","startTime":"10:00","finishDay":"2025-04-10","finishTime":"20:00","isOnline":true,"geo":["Москва"],"isArchive":false,"categories":[{"id":"2","titleHtml":"Разработка"},{"id":"4","titleHtml":"Администрирование"},{"id":"8","titleHtml":"Менеджмент"}],"tags":["конференция Cloud.ru","AI","ИИ","айти конференция","облачные хранилища"],"metadata":null},{"id":"516","titleHtml":"IT-конференция Merge Tatarstan 2025","descriptionHtml":"\u003Cp\u003EКрупнейшая региональная IT-конференция России собирает профессионалов со всей страны для нетворкинга, обмена опытом и поиска новых деловых контактов.\u003C\u002Fp\u003E\u003Cp\u003EMerge Tatarstan — это 7 тематических конференций на одной площадке, 2000 участников, более 170 спикеров-практиков, мастер-классы, воркшопы и BoF-сессии.\u003C\u002Fp\u003E\u003Cp\u003EК участию в конференции приглашаются разработчики, QA, тимлиды, Project\u002FProduct-менеджеры, маркетологи, аналитики, UI\u002FUX-дизайнеры, PR-специалисты, HR-менеджеры, владельцы бизнеса и начинающие специалисты.\u003C\u002Fp\u003E\u003Cp\u003E\u003C\u002Fp\u003E","imageUrl":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F0e9\u002F3a8\u002F3ec\u002F0e93a83ecea09f806d1df907ddb036a4.jpg","eventUrl":"https:\u002F\u002Fu.habr.com\u002Fcldr_tatarstan","startDay":"2025-04-25","startTime":"09:00","finishDay":"2025-04-26","finishTime":"19:30","isOnline":false,"geo":["Казань"],"isArchive":false,"categories":[{"id":"2","titleHtml":"Разработка"},{"id":"10","titleHtml":"Маркетинг"},{"id":"16","titleHtml":"Другое"}],"tags":["Разработка","IT","PR","UI\u002FUX","бизнес","маркетинг","аналитика"],"metadata":null},{"id":"610","titleHtml":"Летняя айти-тусовка Summer Merge","descriptionHtml":"\u003Cp\u003EЛетняя айти-тусовка возвращается.\u003C\u002Fp\u003E\u003Cp\u003EВырваться из рутины и сменить обстановку на несколько дней можно вместе с Summer Merge.&nbsp;\u003C\u002Fp\u003E\u003Cp\u003EСосновый лес, чистый воздух, живое общение с экспертами IT, спортивные состязания, мастер-классы, квесты, встречи с друзьями, новые знакомства, afterparty — забудьте про суету города и окунитесь в приятную атмосферу digital detox. В эти летние IT-выходные мы обещаем атмосферу ярких приключений.&nbsp;\u003C\u002Fp\u003E\u003Cp\u003EЖдём вас 20—22 июня в экопарке «Русский берег» на Summer Merge.\u003C\u002Fp\u003E","imageUrl":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F652\u002F12d\u002F998\u002F65212d998fb4939d9787bd9c726d2acb.png","eventUrl":"https:\u002F\u002Fu.habr.com\u002Fcldr_summermerge","startDay":"2025-06-20","finishDay":"2025-06-22","isOnline":false,"geo":["Ульяновская область"],"isArchive":false,"categories":[{"id":"2","titleHtml":"Разработка"},{"id":"16","titleHtml":"Другое"}],"tags":["летняя айти-тусовка","айти-кэмп","летний выезд для айтишников","Summer Merge"],"metadata":null}],"currentEvent":null,"eventsFilter":{"city":"all","timeStarted":null,"timeEnded":null}},"wysiwyg":{"WYSIWYGRulesRefs":null}};(function(){var s;(s=document.currentScript||document.scripts[document.scripts.length-1]).parentNode.removeChild(s);}());</script><script src="https://assets.habr.com/habr-web/js/chunk-vendors.3b11d41f.js" defer></script><script src="https://assets.habr.com/habr-web/js/app.7a97ea6d.js" defer></script></div>
    <div id="overlays"><!----><!--teleport anchor--><!----><!--teleport anchor--><!----><!--teleport anchor--><!----><!--teleport anchor--><!----><!--teleport anchor--><!----><!--teleport anchor--></div>
    
    
    <script async src="https://www.googletagmanager.com/gtag/js?id=G-S28W1WC23F"></script>
    <script>
      window.dataLayer = window.dataLayer || [];
      function gtag(){dataLayer.push(arguments);}
      gtag('js', new Date());
    </script>
  
  <script type="text/javascript" >
    (function(m,e,t,r,i,k,a){m[i]=m[i]||function(){(m[i].a=m[i].a||[]).push(arguments)};
    m[i].l=1*new Date();k=e.createElement(t),a=e.getElementsByTagName(t)[0],k.async=1,k.src=r,a.parentNode.insertBefore(k,a)})
    (window, document, "script", "https://mc.yandex.ru/metrika/tag.js", "ym");

  </script>
    <script type="text/javascript">
      window.addEventListener('load', function () {
        setTimeout(() => {
          const img = new Image();
          img.src = 'https://vk.com/rtrg?p=VK-RTRG-421343-57vKE';
        }, 0);
      });
    </script>
  
    </body>

    </html>
