<!DOCTYPE html>
<html lang="ru">

  <head>
    <title>Пишем MVP приложение на Kotlin под Android &#x2F; Хабр</title>
<meta property="fb:app_id" content="444736788986613">
<meta property="fb:pages" content="472597926099084">
<meta name="twitter:card" content="summary_large_image">
<meta name="twitter:site" content="@habr_com">
<meta property="og:site_name" content="Хабр">
<link href="https://habr.com/ru/rss/post/275255/?fl=ru" type="application/rss+xml" title rel="alternate" name="rss">
<link href="https://habr.com/ru/articles/275255/" rel="canonical" data-hid="e3fa780">
<link rel="image_src" href="https://habr.com/share/publication/275255/32f8ada416654c58d7ce262b91ef0d77/" data-hid="2a79c45">
<meta property="og:title" content="Пишем MVP приложение на Kotlin под Android">
<meta name="twitter:title" content="Пишем MVP приложение на Kotlin под Android">
<meta name="aiturec:title" content="Пишем MVP приложение на Kotlin под Android">
<meta name="description" content="Разработка приложений на Kotlin под Android набирает популярность среди разработчиков, однако статей в русскоязычном сегменте Интернета довольно мало. Я решил немного подправить ситуацию, и написать...">
<meta itemprop="description" content="Разработка приложений на Kotlin под Android набирает популярность среди разработчиков, однако статей в русскоязычном сегменте Интернета довольно мало. Я решил немного подправить ситуацию, и написать...">
<meta property="og:description" content="Разработка приложений на Kotlin под Android набирает популярность среди разработчиков, однако статей в русскоязычном сегменте Интернета довольно мало. Я решил немного подправить ситуацию, и написать...">
<meta name="twitter:description" content="Разработка приложений на Kotlin под Android набирает популярность среди разработчиков, однако статей в русскоязычном сегменте Интернета довольно мало. Я решил немного подправить ситуацию, и написать...">
<meta property="aiturec:description" content="Разработка приложений на Kotlin под Android набирает популярность среди разработчиков, однако статей в русскоязычном сегменте Интернета довольно мало. Я решил немного подправить ситуацию, и написать...">
<meta itemprop="image" content="https://habr.com/share/publication/275255/32f8ada416654c58d7ce262b91ef0d77/">
<meta property="og:image" content="https://habr.com/share/publication/275255/32f8ada416654c58d7ce262b91ef0d77/">
<meta property="og:image:width" content="1200">
<meta property="og:image:height" content="630">
<meta property="aiturec:image" content="https://habr.com/share/publication/275255/32f8ada416654c58d7ce262b91ef0d77/">
<meta name="twitter:image" content="https://habr.com/share/publication/275255/32f8ada416654c58d7ce262b91ef0d77/">
<meta property="vk:image" content="https://habr.com/share/publication/275255/32f8ada416654c58d7ce262b91ef0d77/?format=vk">
<meta property="vk:image" content="https://habr.com/share/publication/275255/32f8ada416654c58d7ce262b91ef0d77/?format=vk?format=vk">
<meta property="aiturec:item_id" content="275255">
<meta property="aiturec:datetime" content="2016-04-26T15:31:41.000Z">
<meta content="https://habr.com/ru/articles/275255/" property="og:url">
<meta property="og:type" content="article">
<meta property="og:locale" content="ru_RU">
<meta property="og:image:width" content="1200">
<meta property="og:image:height" content="630">
<meta name="keywords" content="kotlin, android, мобильные приложения">
<script type="application/ld+json" data-hid="1e0f0a2">{"@context":"http:\/\/schema.org","@type":"Article","mainEntityOfPage":{"@type":"WebPage","@id":"https:\/\/habr.com\/ru\/articles\/275255\/"},"headline":"Пишем MVP приложение на Kotlin под Android","datePublished":"2016-04-26T18:31:41+03:00","dateModified":"2017-08-11T09:00:22+03:00","author":{"@type":"Person","name":"Махач Имангазалиев"},"publisher":{"@type":"Organization","name":"Habr","logo":{"@type":"ImageObject","url":"https:\/\/habrastorage.org\/webt\/a_\/lk\/9m\/a_lk9mjkccjox-zccjrpfolmkmq.png"}},"description":"Разработка приложений на Kotlin под Android набирает популярность среди разработчиков, однако статей в русскоязычном сегменте Интернета довольно мало. Я решил...","url":"https:\/\/habr.com\/ru\/articles\/275255\/#post-content-body","about":["h_kotlin","h_mobile_dev","h_android_dev","f_develop"],"image":["https:\/\/habrastorage.org\/files\/ad1\/e16\/e49\/ad1e16e4935a4ca487ccd75f7aa277fe.png","https:\/\/habrastorage.org\/files\/d9d\/739\/b13\/d9d739b131b74d4d807d6a62e35dd674.png","https:\/\/habrastorage.org\/files\/10b\/d1e\/6b8\/10bd1e6b8e08489abc94a0c89c9c74c4.png","https:\/\/habrastorage.org\/files\/3db\/047\/107\/3db047107fe4480aa862a4325e011750.png","https:\/\/habrastorage.org\/files\/b15\/984\/b7a\/b15984b7aa4a405fb5495ac25dc51f88.png"]}</script>
    <meta charset="UTF-8">
    <meta name="viewport"
      content="width=device-width,initial-scale=1.0,viewport-fit=cover,maximum-scale=1,user-scalable=0">
    <meta name="referrer" content="unsafe-url">
    <style>
      /* cyrillic-ext */
      @font-face {
        font-family: 'Fira Sans';
        font-style: normal;
        font-weight: 400;
        font-display: swap;
        src: url(https://fonts.gstatic.com/s/firasans/v17/va9E4kDNxMZdWfMOD5VvmojLazX3dGTP.woff2) format('woff2');
        unicode-range: U+0460-052F, U+1C80-1C88, U+20B4, U+2DE0-2DFF, U+A640-A69F, U+FE2E-FE2F;
      }

      /* cyrillic */
      @font-face {
        font-family: 'Fira Sans';
        font-style: normal;
        font-weight: 400;
        font-display: swap;
        src: url(https://fonts.gstatic.com/s/firasans/v17/va9E4kDNxMZdWfMOD5Vvk4jLazX3dGTP.woff2) format('woff2');
        unicode-range: U+0301, U+0400-045F, U+0490-0491, U+04B0-04B1, U+2116;
      }

      /* latin-ext */
      @font-face {
        font-family: 'Fira Sans';
        font-style: normal;
        font-weight: 400;
        font-display: swap;
        src: url(https://fonts.gstatic.com/s/firasans/v17/va9E4kDNxMZdWfMOD5VvmYjLazX3dGTP.woff2) format('woff2');
        unicode-range: U+0100-02AF, U+0304, U+0308, U+0329, U+1E00-1E9F, U+1EF2-1EFF, U+2020, U+20A0-20AB, U+20AD-20C0, U+2113, U+2C60-2C7F, U+A720-A7FF;
      }

      /* latin */
      @font-face {
        font-family: 'Fira Sans';
        font-style: normal;
        font-weight: 400;
        font-display: swap;
        src: url(https://fonts.gstatic.com/s/firasans/v17/va9E4kDNxMZdWfMOD5Vvl4jLazX3dA.woff2) format('woff2');
        unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+0304, U+0308, U+0329, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;
      }

      /* cyrillic-ext */
      @font-face {
        font-family: 'Fira Sans';
        font-style: normal;
        font-weight: 500;
        font-display: swap;
        src: url(https://fonts.gstatic.com/s/firasans/v17/va9B4kDNxMZdWfMOD5VnZKveSxf6Xl7Gl3LX.woff2) format('woff2');
        unicode-range: U+0460-052F, U+1C80-1C88, U+20B4, U+2DE0-2DFF, U+A640-A69F, U+FE2E-FE2F;
      }

      /* cyrillic */
      @font-face {
        font-family: 'Fira Sans';
        font-style: normal;
        font-weight: 500;
        font-display: swap;
        src: url(https://fonts.gstatic.com/s/firasans/v17/va9B4kDNxMZdWfMOD5VnZKveQhf6Xl7Gl3LX.woff2) format('woff2');
        unicode-range: U+0301, U+0400-045F, U+0490-0491, U+04B0-04B1, U+2116;
      }

      /* latin-ext */
      @font-face {
        font-family: 'Fira Sans';
        font-style: normal;
        font-weight: 500;
        font-display: swap;
        src: url(https://fonts.gstatic.com/s/firasans/v17/va9B4kDNxMZdWfMOD5VnZKveSBf6Xl7Gl3LX.woff2) format('woff2');
        unicode-range: U+0100-02AF, U+0304, U+0308, U+0329, U+1E00-1E9F, U+1EF2-1EFF, U+2020, U+20A0-20AB, U+20AD-20C0, U+2113, U+2C60-2C7F, U+A720-A7FF;
      }

      /* latin */
      @font-face {
        font-family: 'Fira Sans';
        font-style: normal;
        font-weight: 500;
        font-display: swap;
        src: url(https://fonts.gstatic.com/s/firasans/v17/va9B4kDNxMZdWfMOD5VnZKveRhf6Xl7Glw.woff2) format('woff2');
        unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+0304, U+0308, U+0329, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;
      }

      /* cyrillic-ext */
      @font-face {
        font-family: 'Fira Sans';
        font-style: normal;
        font-weight: 700;
        font-display: swap;
        src: url(https://fonts.gstatic.com/s/firasans/v17/va9B4kDNxMZdWfMOD5VnLK3eSxf6Xl7Gl3LX.woff2) format('woff2');
        unicode-range: U+0460-052F, U+1C80-1C88, U+20B4, U+2DE0-2DFF, U+A640-A69F, U+FE2E-FE2F;
      }

      /* cyrillic */
      @font-face {
        font-family: 'Fira Sans';
        font-style: normal;
        font-weight: 700;
        font-display: swap;
        src: url(https://fonts.gstatic.com/s/firasans/v17/va9B4kDNxMZdWfMOD5VnLK3eQhf6Xl7Gl3LX.woff2) format('woff2');
        unicode-range: U+0301, U+0400-045F, U+0490-0491, U+04B0-04B1, U+2116;
      }

      /* latin-ext */
      @font-face {
        font-family: 'Fira Sans';
        font-style: normal;
        font-weight: 700;
        font-display: swap;
        src: url(https://fonts.gstatic.com/s/firasans/v17/va9B4kDNxMZdWfMOD5VnLK3eSBf6Xl7Gl3LX.woff2) format('woff2');
        unicode-range: U+0100-02AF, U+0304, U+0308, U+0329, U+1E00-1E9F, U+1EF2-1EFF, U+2020, U+20A0-20AB, U+20AD-20C0, U+2113, U+2C60-2C7F, U+A720-A7FF;
      }

      /* latin */
      @font-face {
        font-family: 'Fira Sans';
        font-style: normal;
        font-weight: 700;
        font-display: swap;
        src: url(https://fonts.gstatic.com/s/firasans/v17/va9B4kDNxMZdWfMOD5VnLK3eRhf6Xl7Glw.woff2) format('woff2');
        unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+0304, U+0308, U+0329, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;
      }
    </style>
    <link rel="preload" href="https://assets.habr.com/habr-web/css/theme/light-v1.css" as="style" media="(prefers-color-scheme: light)" /><link rel="preload" href="https://assets.habr.com/habr-web/css/theme/dark-v1.css" as="style" media="(prefers-color-scheme: dark)" /><link id="light-colors" rel="stylesheet" href="https://assets.habr.com/habr-web/css/theme/light-v1.css" media="(prefers-color-scheme: light)" /><link id="dark-colors" rel="stylesheet" href="https://assets.habr.com/habr-web/css/theme/dark-v1.css" media="(prefers-color-scheme: dark)" />
    <script>window.i18nFetch = new Promise((res, rej) => {
          const xhr = new XMLHttpRequest();
          xhr.open('GET', '/js/i18n/ru-compiled.35b2fec11bb79a62419ab67779c2dd82.json');
          xhr.responseType = 'json';
          xhr.onload = function(e) {
            if (this.status === 200) {
              res({ru: xhr.response});
            } else {
              rej(e);
            }
          };
          xhr.send();
        });</script>
    <style>
      .grecaptcha-badge {
        visibility: hidden;
      }
    </style>
    <meta name="habr-version" content="2.233.0">
    
    <meta name="apple-mobile-web-app-status-bar-style" content="#303b44">
    <meta name="msapplication-TileColor" content="#629FBC">
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="mobile-web-app-capable" content="yes">
    <link rel="shortcut icon" type="image/png" sizes="16x16" href="https://assets.habr.com/habr-web/img/favicons/favicon-16.png">
    <link rel="shortcut icon" type="image/png" sizes="32x32" href="https://assets.habr.com/habr-web/img/favicons/favicon-32.png">
    <link rel="apple-touch-icon" type="image/png" sizes="76x76" href="https://assets.habr.com/habr-web/img/favicons/apple-touch-icon-76.png">
    <link rel="apple-touch-icon" type="image/png" sizes="120x120" href="https://assets.habr.com/habr-web/img/favicons/apple-touch-icon-120.png">
    <link rel="apple-touch-icon" type="image/png" sizes="152x152" href="https://assets.habr.com/habr-web/img/favicons/apple-touch-icon-152.png">
    <link rel="apple-touch-icon" type="image/png" sizes="180x180" href="https://assets.habr.com/habr-web/img/favicons/apple-touch-icon-180.png">
    <link rel="apple-touch-icon" type="image/png" sizes="256x256" href="https://assets.habr.com/habr-web/img/favicons/apple-touch-icon-256.png">
    <link rel="apple-touch-startup-image"
      media="screen and (device-width: 320px) and (device-height: 568px) and (-webkit-device-pixel-ratio: 2) and (orientation: landscape)"
      href="https://assets.habr.com/habr-web/img/splashes/splash_1136x640.png">
    <link rel="apple-touch-startup-image"
      media="screen and (device-width: 375px) and (device-height: 812px) and (-webkit-device-pixel-ratio: 3) and (orientation: landscape)"
      href="https://assets.habr.com/habr-web/img/splashes/splash_2436x1125.png">
    <link rel="apple-touch-startup-image"
      media="screen and (device-width: 414px) and (device-height: 896px) and (-webkit-device-pixel-ratio: 2) and (orientation: landscape)"
      href="https://assets.habr.com/habr-web/img/splashes/splash_1792x828.png">
    <link rel="apple-touch-startup-image"
      media="screen and (device-width: 414px) and (device-height: 896px) and (-webkit-device-pixel-ratio: 2) and (orientation: portrait)"
      href="https://assets.habr.com/habr-web/img/splashes/splash_828x1792.png">
    <link rel="apple-touch-startup-image"
      media="screen and (device-width: 375px) and (device-height: 667px) and (-webkit-device-pixel-ratio: 2) and (orientation: landscape)"
      href="https://assets.habr.com/habr-web/img/splashes/splash_1334x750.png">
    <link rel="apple-touch-startup-image"
      media="screen and (device-width: 414px) and (device-height: 896px) and (-webkit-device-pixel-ratio: 3) and (orientation: portrait)"
      href="https://assets.habr.com/habr-web/img/splashes/splash_1242x2668.png">
    <link rel="apple-touch-startup-image"
      media="screen and (device-width: 414px) and (device-height: 736px) and (-webkit-device-pixel-ratio: 3) and (orientation: landscape)"
      href="https://assets.habr.com/habr-web/img/splashes/splash_2208x1242.png">
    <link rel="apple-touch-startup-image"
      media="screen and (device-width: 375px) and (device-height: 812px) and (-webkit-device-pixel-ratio: 3) and (orientation: portrait)"
      href="https://assets.habr.com/habr-web/img/splashes/splash_1125x2436.png">
    <link rel="apple-touch-startup-image"
      media="screen and (device-width: 414px) and (device-height: 736px) and (-webkit-device-pixel-ratio: 3) and (orientation: portrait)"
      href="https://assets.habr.com/habr-web/img/splashes/splash_1242x2208.png">
    <link rel="apple-touch-startup-image"
      media="screen and (device-width: 1024px) and (device-height: 1366px) and (-webkit-device-pixel-ratio: 2) and (orientation: landscape)"
      href="https://assets.habr.com/habr-web/img/splashes/splash_2732x2048.png">
    <link rel="apple-touch-startup-image"
      media="screen and (device-width: 414px) and (device-height: 896px) and (-webkit-device-pixel-ratio: 3) and (orientation: landscape)"
      href="https://assets.habr.com/habr-web/img/splashes/splash_2688x1242.png">
    <link rel="apple-touch-startup-image"
      media="screen and (device-width: 834px) and (device-height: 1112px) and (-webkit-device-pixel-ratio: 2) and (orientation: landscape)"
      href="https://assets.habr.com/habr-web/img/splashes/splash_2224x1668.png">
    <link rel="apple-touch-startup-image"
      media="screen and (device-width: 375px) and (device-height: 667px) and (-webkit-device-pixel-ratio: 2) and (orientation: portrait)"
      href="https://assets.habr.com/habr-web/img/splashes/splash_750x1334.png">
    <link rel="apple-touch-startup-image"
      media="screen and (device-width: 1024px) and (device-height: 1366px) and (-webkit-device-pixel-ratio: 2) and (orientation: portrait)"
      href="https://assets.habr.com/habr-web/img/splashes/splash_2048x2732.png">
    <link rel="apple-touch-startup-image"
      media="screen and (device-width: 834px) and (device-height: 1194px) and (-webkit-device-pixel-ratio: 2) and (orientation: landscape)"
      href="https://assets.habr.com/habr-web/img/splashes/splash_2388x1668.png">
    <link rel="apple-touch-startup-image"
      media="screen and (device-width: 834px) and (device-height: 1112px) and (-webkit-device-pixel-ratio: 2) and (orientation: portrait)"
      href="https://assets.habr.com/habr-web/img/splashes/splash_1668x2224.png">
    <link rel="apple-touch-startup-image"
      media="screen and (device-width: 320px) and (device-height: 568px) and (-webkit-device-pixel-ratio: 2) and (orientation: portrait)"
      href="https://assets.habr.com/habr-web/img/splashes/splash_640x1136.png">
    <link rel="apple-touch-startup-image"
      media="screen and (device-width: 834px) and (device-height: 1194px) and (-webkit-device-pixel-ratio: 2) and (orientation: portrait)"
      href="https://assets.habr.com/habr-web/img/splashes/splash_1668x2388.png">
    <link rel="apple-touch-startup-image"
      media="screen and (device-width: 768px) and (device-height: 1024px) and (-webkit-device-pixel-ratio: 2) and (orientation: landscape)"
      href="https://assets.habr.com/habr-web/img/splashes/splash_2048x1536.png">
    <link rel="apple-touch-startup-image"
      media="screen and (device-width: 768px) and (device-height: 1024px) and (-webkit-device-pixel-ratio: 2) and (orientation: portrait)"
      href="https://assets.habr.com/habr-web/img/splashes/splash_1536x2048.png">
    <link rel="mask-icon" color="#77a2b6" href="https://assets.habr.com/habr-web/img/favicons/apple-touch-icon-120.svg">
    <link crossorigin="use-credentials" href="/manifest.webmanifest" rel="manifest">
    <script async src="https://unpkg.com/pwacompat" crossorigin="anonymous"></script>
    <script>window.yaContextCb = window.yaContextCb || []</script>
    <script src="https://yandex.ru/ads/system/context.js" async></script>
  <link rel="preload" href="https://assets.habr.com/habr-web/css/chunk-vendors.04465f7c.css" as="style"><link rel="preload" href="https://assets.habr.com/habr-web/js/chunk-vendors.3b11d41f.js" as="script"><link rel="preload" href="https://assets.habr.com/habr-web/css/app.20959a76.css" as="style"><link rel="preload" href="https://assets.habr.com/habr-web/js/app.7a97ea6d.js" as="script"><link rel="stylesheet" href="https://assets.habr.com/habr-web/css/chunk-vendors.04465f7c.css"><link rel="stylesheet" href="https://assets.habr.com/habr-web/css/app.20959a76.css"></head>
  <body>
    
    <div id="mount"><div id="app" data-async-called="true"><div class="tm-layout__wrapper"><!--[--><!----><div></div><div class="tm-feature tm-feature"><!----></div><header class="tm-header" data-test-id="header"><div class="tm-page-width"><!--[--><div class="tm-header__container"><div class="tm-header__burger-nav" data-test-id="burger-nav"><button class="tm-header__button tm-header__button_burger" type="button"><svg class="tm-svg-img tm-header__icon tm-header__icon-burger" height="16" width="16"><title>Меню</title><use xlink:href="/img/megazord-v28.371b7fa3..svg#header-burger"></use></svg></button></div><span class="tm-header__logo-wrap"><a class="tm-header__logo tm-header__logo_hl-ru tm-header__logo" href="/ru/"><svg class="tm-svg-img tm-header__icon" height="16" width="16"><title>Хабр</title><use xlink:href="/img/habr-logo-ru.svg#logo"></use></svg></a><span style="display:none;" class="tm-header__beta-sign">β</span></span><!----><div class="tm-header-user-menu tm-header_user-menu"><a href="/ru/search/" class="tm-header-user-menu__item tm-header-user-menu__search" data-test-id="search-button"><svg class="tm-svg-img tm-header-user-menu__icon tm-header-user-menu__icon_search" height="24" width="24"><title>Поиск</title><use xlink:href="/img/megazord-v28.371b7fa3..svg#search"></use></svg></a><!----><!----><div class="tm-header-user-menu__item tm-header-user-menu__write"><div><svg class="tm-svg-img tm-header-user-menu__icon tm-header-user-menu__icon_write" height="24" width="24"><title>Написать публикацию</title><use xlink:href="/img/megazord-v28.371b7fa3..svg#write"></use></svg></div><!----></div><!--[--><div class="tm-header-user-menu__item"><button class="tm-header-user-menu__toggle" data-test-id="user-menu-settings"><svg class="tm-svg-img tm-header-user-menu__icon" height="24" width="24"><title>Настройки</title><use xlink:href="/img/megazord-v28.371b7fa3..svg#page-settings"></use></svg></button></div><a href="https://habr.com/kek/v1/auth/habrahabr/?back=/ru/articles/275255/&amp;hl=ru" rel="nofollow" class="tm-header-user-menu__item"><!--[--><button class="btn btn_solid btn_small tm-header-user-menu__login" type="button"><!--[-->Войти<!--]--></button><!--]--></a><!--]--><!----><!--teleport start--><!--teleport end--><!----></div></div><!--]--></div></header><div class="tm-layout"><div class="tm-page-progress-bar"></div><!----><!----><div class="tm-page-width"><!--[--><!--]--></div><main class="tm-layout__container"><div class="tm-page" hl="ru" data-async-called="true" style="--0c809c5a:16px;--a086013e:100%;--7c457026:0;"><div class="tm-page-width"><!--[--><!----><div class="tm-page__wrapper"><div class="tm-page__main_has-sidebar tm-page__main"><div class="pull-down"><!----><div class="pull-down__header" style="height:0px;"><div class="pull-down__content" style="bottom:10px;"><svg class="tm-svg-img pull-down__icon pull-down__arrow" height="24" width="24"><title>Обновить</title><use xlink:href="/img/megazord-v28.371b7fa3..svg#pull-arrow"></use></svg></div></div><!--[--><!--[--><div class="banner-wrapper narrow" style="--467224fc:100px;--58ff5eba:auto;" data-v-ad758baa><!--[--><div class="placeholder-wrapper placeholder" data-v-ad758baa><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><div class="adfox-banner-placeholder narrow" data-v-12f7bcca><div class="image loads" data-v-12f7bcca></div><div class="lines" data-v-12f7bcca><div class="line loads" data-v-12f7bcca></div><div class="line loads" data-v-12f7bcca></div><div class="line loads" data-v-12f7bcca></div></div></div><!----></div><div id="adfox_169815559787254866" class="tm-adfox-banner" data-v-ad758baa></div><!--]--></div><div class="tm-article-presenter"><!--[--><!--]--><div class="tm-article-presenter__body" data-test-id="article-body"><div class="tm-misprint-area"><div class="tm-misprint-area__wrapper"><!--[--><article class="tm-article-presenter__content tm-article-presenter__content_narrow"><!--[--><div class="tm-article-presenter__header"><!--[--><!--]--><div class="tm-article-snippet tm-article-snippet tm-article-presenter__snippet"><!--[--><!--]--><div class="tm-article-snippet__meta-container"><div class="tm-article-snippet__meta"><span class="tm-user-info tm-article-snippet__author"><a href="/ru/users/ImangazalievM/" class="tm-user-info__userpic" data-test-id="user-info-pic" title="ImangazalievM"><div class="tm-entity-image"><img alt="" class="tm-entity-image__pic" height="32" src="//habrastorage.org/r/w64/getpro/habr/avatars/00f/735/f8e/00f735f8e8901eb06fa51ceff1292656.png" width="32"></div></a><span class="tm-user-info__user tm-user-info__user_appearance-default" data-test-id="user-info-description"><a href="/ru/users/ImangazalievM/" class="tm-user-info__username">ImangazalievM <!----></a><!--[--><span class="tm-article-datetime-published"><time datetime="2016-04-26T15:31:41.000Z" title="2016-04-26, 18:31">26  апр  2016 в 18:31</time></span><!--]--></span></span></div><!----></div><h1 class="tm-title tm-title_h1" lang="ru" data-test-id="articleTitle"><span>Пишем MVP приложение на Kotlin под Android</span></h1><div class="tm-article-snippet__stats" data-test-id="articleStats"><!----><div class="tm-article-reading-time"><span class="tm-svg-icon__wrapper tm-article-reading-time__icon"><svg class="tm-svg-img tm-svg-icon" height="24" width="24"><title>Время на прочтение</title><use xlink:href="/img/megazord-v28.371b7fa3..svg#clock"></use></svg></span><span class="tm-article-reading-time__label">19 мин</span></div><span class="tm-icon-counter tm-data-icons__item"><svg class="tm-svg-img tm-icon-counter__icon" height="24" width="24"><title>Количество просмотров</title><use xlink:href="/img/megazord-v28.371b7fa3..svg#counter-views"></use></svg><span class="tm-icon-counter__value" title="113118">113K</span></span></div><div class="tm-publication-hubs__container" data-test-id="articleHubsList"><div class="tm-publication-hubs"><!--[--><span class="tm-publication-hub__link-container"><a href="/ru/hubs/kotlin/" class="tm-publication-hub__link"><!--[--><span>Kotlin</span><span class="tm-article-snippet__profiled-hub" title="Профильный хаб">*</span><!--]--></a></span><span class="tm-publication-hub__link-container"><a href="/ru/hubs/mobile_dev/" class="tm-publication-hub__link"><!--[--><span>Разработка мобильных приложений</span><span class="tm-article-snippet__profiled-hub" title="Профильный хаб">*</span><!--]--></a></span><span class="tm-publication-hub__link-container"><a href="/ru/hubs/android_dev/" class="tm-publication-hub__link"><!--[--><span>Разработка под Android</span><span class="tm-article-snippet__profiled-hub" title="Профильный хаб">*</span><!--]--></a></span><!--]--></div></div><!----><!----><!----></div></div><!--[--><!----><div class="tm-article-body" data-gallery-root lang="ru"><div><!--[--><!--]--></div><div id="post-content-body"><div><div class="article-formatted-body article-formatted-body article-formatted-body_version-1"><div xmlns="http://www.w3.org/1999/xhtml"><div style="text-align:center;"><img src="https://habrastorage.org/r/w1560/files/ad1/e16/e49/ad1e16e4935a4ca487ccd75f7aa277fe.png" data-src="https://habrastorage.org/files/ad1/e16/e49/ad1e16e4935a4ca487ccd75f7aa277fe.png"/></div><br/>
<br/>
Разработка приложений на Kotlin под Android набирает популярность среди разработчиков, однако статей в русскоязычном сегменте Интернета довольно мало. Я решил немного подправить ситуацию, и написать туториал по разработке приложения на Kotlin. Мы напишем полноценное приложение с использованием всех трендовых библиотек (кроме RxJava) в мире Android-разработки. В конце у нас должно получиться расширяемое и легко тестируемое приложение (сами тесты мы писать не будем).<a name="habracut"></a><br/>
<br/>
<b>Внимание!</b> В статье описывается создание приложения версии <a href="https://github.com/ImangazalievM/Notelin/tree/1.0">1.0</a>. Текущий код в репозитории может отличаться от описываемого в статье.<br/>
<br/>
Наверное, некоторые из вас знают, что помимо языка программирования Kotlin JetBrains также разрабатывает библиотеку <a href="https://github.com/Kotlin/anko">Anko</a>, для создания UI приложения, в качестве замены обычным XML-файлам. Мы не будем использовать его в нашем проекте, дабы не ставить в затруднительное положение людей не знакомых с Anko.<br/>
<br/>
Содержание:<br/>
<ul>
<li><a href="#ide-configuring">Настройка Android Studio</a></li>
<li><a href="#what-will-write">Что будем писать?</a></li>
<li><a href="#application-structure">Структура приложения</a></li>
<li><a href="#creating-model">Создаем Model</a></li>
<li><a href="#main-screen">Экран с заметками</a><br/>
 <ul>
<li><a href="#creating-main-vp">Создаем MainView и MainPresenter</a></li>
<li><a href="#notes-search">Реализуем поиск по заметкам</a></li>
<li><a href="#notes-sorting">Реализуем сортировку заметок</a></li>
</ul></li>
<li><a href="#note-screen">Экран с содержанием заметки</a><br/>
 <ul>
<li><a href="#creating-note-vp">Создаем NoteView и NotePresenter</a></li>
<li><a href="#note-saving">Реализуем сохранение заметки</a></li>
</ul></li>
<li><a href="#thanks">Благодарности</a></li>
<li><a href="#conclusion">Заключение</a></li>
</ul><br/>
<br/>
<br/>
<h1>Настройка Android Studio</h1><br/>
<br/>
Для написания приложений на языке Kotlin, Android Studio нужен специальный плагин. Инструкцию по установке плагина можно найти <a href="http://java-help.ru/kotlin-introduction/">здесь</a>. Также не забудьте отключить функцию «Instant Run» в настройках Android Studio, т. к. на данный момент она не поддерживается плагином Kotlin.<br/>
<br/>
Для корректной работы генерации кода нужно использовать версию плагина не ниже 1.0.1. Я использовал версию <a href="https://discuss.kotlinlang.org/t/kotlin-1-0-2-eap/1581/1">Kotlin 1.0.2 EAP</a>. Вот так выглядит файл build.gradle приложения в моем проекте:<br/>
<br/>
<pre><code class="java">apply plugin: 'com.android.application'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-android'

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.2"

    defaultConfig {
        applicationId "imangazaliev.notelin"
        minSdkVersion 15
        targetSdkVersion 23
        versionCode 1
        versionName "1.0"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        androidTest.java.srcDirs += 'src/androidTest/kotlin'
    }
}

dependencies {
    ...
}

kapt {
    generateStubs = true
}

buildscript {
    ext.kotlin_version = '1.0.2-eap-15'
    repositories {
        mavenCentral()
        maven { url 'https://dl.bintray.com/kotlin/kotlin-eap' }
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}
repositories {
    mavenCentral()
}
</code></pre><br/>
<br/>
<br/>
<h1>Что будем писать?</h1><br/>
<br/>
Итак, для начала нам нужно определиться что же мы будем писать? Недолго думая я остановился на приложении-заметках. Название тоже придумалось легко — Notelin. Приложение очень простое и состоит из двух экранов:<br/>
<br/>
 — Главный экран — содержит в себе список с заметками<br/>
 — Экран заметки — здесь можно смотреть/редактировать содержание выбранной заметки<br/>
<br/>
Требования к приложению небольшие: <br/>
<br/>
 — Добавление/просмотр/удаление заметки<br/>
 — Просмотр информации о заметке<br/>
 — Сортировка заметок по заголовку и по дате<br/>
 — Поиск по заголовкам заметок<br/>
<br/>
<h1>Используемые библиотеки</h1><br/>
<br/>
Для работы с базой данных я буду использовать библиотеку <b>Android Active</b>. Урок по работе с ней можно найти по этой <a href="http://java-help.ru/activeandroid-orm-review/">ссылке</a>. Для реализации Depency Injection была использована библиотека Dagger 2. На Хабре есть много статей по работе с ней. Основой всего приложения будет библиотека <a href="https://habrahabr.ru/post/276189/">Moxy</a>. С ее помощью мы реализуем паттерн MVP в нашем проекте. Она полностью решает проблемы жизненного цикла, благодаря чему вы можете не переживать о пересоздании компонентов вашего приложения. Также мы воспользуемся набором расширений для языка Kotlin в Android — <a href="https://github.com/pawegio/KAndroid">KAndroid</a>. Про остальные библиотеки я буду рассказывать по ходу дела. <br/>
<br/>
Ниже приведен список зависимостей проекта:<br/>
<br/>
<pre><code class="java">allprojects {
    repositories {
        jcenter()
        mavenCentral()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        maven { url "https://mvn.arello-mobile.com/" }
        maven { url "https://jitpack.io" }
        maven { url 'https://dl.bintray.com/kotlin/kotlin-eap' }
    }
}
</code></pre><br/>
<br/>
А вот так выглядит список зависимостей приложения:<br/>
<br/>
<pre><code class="java">dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    compile "com.android.support:appcompat-v7:23.1.1"
    compile 'com.android.support:recyclerview-v7:23.1.1'
    compile 'com.android.support:cardview-v7:23.1.1'
    //дополнительные возможности для Android Kotlin
    compile 'com.pawegio.kandroid:kandroid:0.5.0@aar'
    //ActiveAndroid DB
    compile 'com.michaelpardo:activeandroid:3.1.0-SNAPSHOT'
    //FAB
    compile 'com.melnykov:floatingactionbutton:1.3.0'
    //MaterialDialog
    compile 'com.github.afollestad.material-dialogs:core:0.8.5.6@aar'
    //MVP
    compile 'com.arello-mobile:moxy:0.4.2'
    compile 'com.arello-mobile:moxy-android:0.4.2'
    kapt 'com.arello-mobile:moxy-compiler:0.4.2'
    //RX
    compile 'io.reactivex:rxjava:1.1.0'
    compile 'io.reactivex:rxandroid:1.1.0'
    //Depency Injection
    kapt 'com.google.dagger:dagger-compiler:2.0.2'
    compile 'com.google.dagger:dagger:2.0.2'
    provided 'org.glassfish:javax.annotation:10.0-b28'
    //EventBus
    compile 'org.greenrobot:eventbus:3.0.0'
}
</code></pre><br/>
<br/>
Обратите внимание, что вместо apt я использую <a href="http://blog.jetbrains.com/kotlin/2015/06/better-annotation-processing-supporting-stubs-in-kapt/">kapt</a>. Это плагин для Gradle, позволяющий аннотировать Kotlin-элементы.<br/>
<br/>
<h1>Структура приложения</h1><br/>
<br/>
Вот так выглядит структура нашего проекта в конечном варианте:<br/>
<br/>
<img src="https://habrastorage.org/r/w1560/files/d9d/739/b13/d9d739b131b74d4d807d6a62e35dd674.png" data-src="https://habrastorage.org/files/d9d/739/b13/d9d739b131b74d4d807d6a62e35dd674.png"/><br/>
<br/>
<h1>Создаем Model</h1><br/>
<br/>
У заметок будет четыре поля:<br/>
<br/>
<ul>
<li>Дата создания</li>
<li>Дата изменения</li>
<li>Заголовок</li>
<li>Текст</li>
</ul><br/>
<br/>
Реализуем все это в коде:<br/>
<br/>
<pre><code class="java">class Note : Model {

    @Column(name = "title")
    public var title: String? = null
    @Column(name = "text")
    public var text: String? = null
    @Column(name = "create_date")
    public var createDate: Date? = null
    @Column(name = "change_date")
    public var changeDate: Date? = null

    constructor(title: String, createDate: Date, changeDate: Date) {
        this.title = title
        this.createDate = createDate
        this.changeDate = changeDate
    }

    constructor()

    fun getInfo(): String = "Название:\n$title\n" +
                                       "Время создания:\n${formatDate(createDate)}\n" +
                                       "Время изменения:\n${formatDate(changeDate)}";
}
</code></pre><br/>
<br/>
По этой модели библиотекой ActiveAndroid будет создана БД, в которой будут храниться наши заметки. Если вы заметили, у нас есть два конструктора: пустой и с параметрами. Первый конструктор будем использовать мы, а второй — ActiveAndroid. Наша модель наследуется от класса Model, благодаря чему мы можем сохранять и удалять наши заметки просто вызывая методы <b>save()</b> и <b>delete()</b>, например:<br/>
<br/>
<pre><code class="java">var note = Note("Новая заметка", Date())
note.save()
...
note.delete()
</code></pre><br/>
<br/>
Но прежде чем использовать нашу модель, нам нужно прописать кое-какие мета-данные в Manifest-файле:<br/>
<br/>
<pre><code class="xml">&lt;meta-data android:name="AA_DB_NAME" android:value="Notelin.db" /&gt;
&lt;meta-data android:name="AA_DB_VERSION" android:value="1" /&gt;
</code></pre><br/>
<br/>
Думаю, все понятно без комментариев. Осталось унаследовать класс Application от com.activeandroid.app.Application:<br/>
<br/>
<pre><code class="java">class NotelinApplication : Application() {
...
}
</code></pre><br/>
<br/>
Чтобы приложение было менее зависимо от БД я создал обертку <a href="https://github.com/ImangazalievM/Notelin/blob/1.0/master/app/src/main/kotlin/imangazaliev/notelin/mvp/models/NoteDao.kt">NoteDao</a> над нашей моделью, в которой будут происходить все операции по созданию, сохранению, обновлению и удалению заметок:<br/>
<br/>
<pre><code class="java">class NoteDao {

    /**
     * Создает новую заметку
     */
    fun createNote(): Note {
        var note = Note("Новая заметка", Date())
        note.save()
        return note
    }

    /**
     * Сохраняет заметку в БД
     */
    fun saveNote(note: Note) = note.save()

    /**
     * Загружает все существующие заметки и передает во View
     */
    fun loadAllNotes() = Select().from(Note::class.java).execute&lt;Note&gt;()

    /**
     * Ищет заметку по id и возвращает ее
     */
    fun getNoteById(noteId: Long) = Select().from(Note::class.java).where("id = ?", noteId).executeSingle&lt;Note&gt;()

    /**
     * Удаляет все существующие заметки
     */
    fun deleteAllNotes() {
        Delete().from(Note::class.java).execute&lt;Note&gt;();
    }

    /**
     * Удаляет заметку по id
     */
    fun deleteNote(note: Note) {
        note.delete()
    }

}

</code></pre><br/>
<br/>
Наверное, вы заметили, что для создания объектов мы не использовали ключевое слово <b>new</b> — это отличие Kotlin от Java. <br/>
<br/>
<br/>
<h1>Экран с заметками</h1><br/>
<br/>
Также является главным экраном приложения. На нем пользователь может добавить/удалить заметку, просмотреть информацию о заметке, отсортировать их по дате или названию, а также произвести поиск по заголовкам.<br/>
<br/>
<br/>
<h3>Создаем MainView и MainPresenter</h3><br/>
<br/>
<img width="40%" src="https://habrastorage.org/r/w1560/files/10b/d1e/6b8/10bd1e6b8e08489abc94a0c89c9c74c4.png" data-src="https://habrastorage.org/files/10b/d1e/6b8/10bd1e6b8e08489abc94a0c89c9c74c4.png"/><br/>
<br/>
Теперь нам нужно перевести все это в код. Для начала создадим интерфейс нашей View:<br/>
<br/>
<pre><code class="java">@StateStrategyType(value = AddToEndSingleStrategy::class)
interface MainView : MvpView {

    fun onNotesLoaded(notes: List&lt;Note&gt;)

    fun updateView()

    fun onSearchResult(notes: List&lt;Note&gt;)

    fun onAllNotesDeleted()

    fun onNoteDeleted()

    fun showNoteInfoDialog(noteInfo: String)

    fun hideNoteInfoDialog()

    fun showNoteDeleteDialog(notePosition: Int)

    fun hideNoteDeleteDialog()

    fun showNoteContextDialog(notePosition: Int)

    fun hideNoteContextDialog()

}
</code></pre><br/>
<br/>
Далее мы реализуем созданный интерфейс в нашей активити:<br/>
<br/>
<pre><code class="java">class MainActivity : MvpAppCompatActivity(), MainView {
</code></pre><br/>
<br/>
Одной из особенностей Kotlin, является то, что наследование и реализация интерфейсов указывается через двоеточие после имени класса. Также не имеет разницы идет название родительского класса перед интерфейсами, после или даже между ними, главное, чтобы класс в списке был один. Т. е. запись выше могла бы выглядеть так:<br/>
<br/>
<pre><code class="java">class MainActivity : MainView, MvpAppCompatActivity() {
</code></pre><br/>
<br/>
Если же вы попытаетесь добавить через запятую название еще одного класса, то IDE выдаст ошибку и подчеркнет красной линией название класса, который идет вторым.<br/>
<br/>
Пока оставим методы пустыми. Как видите, активити наследуется от <a href="https://github.com/ImangazalievM/Notelin/blob/1.0/master/app/src/main/kotlin/imangazaliev/notelin/mvp/common/MvpAppCompatActivity.java">MvpAppCompatActivity</a>. Это нужно для того, чтобы активити могла восстанавливать состояние при повороте экрана. <br/>
<br/>
Создадим класс презентер:<br/>
<br/>
<pre><code class="java">@InjectViewState
class MainPresenter: MvpPresenter&lt;MainView&gt;() {

}
</code></pre><br/>
<br/>
Презентер также наследуется от MvpPresenter, которому мы указываем с какой View мы будем работать.Осталось инжектировать нашу модель в презентер. Для этого мы создаем модуль — поставщика NoteDao:<br/>
<br/>
<pre><code class="java">@Module
class NoteDaoModule {

    @Provides
    @Singleton
    fun provideNoteDao() : NoteDao= NoteDao()

}
</code></pre><br/>
<br/>
Создадим Component для инжектирования презентера:<br/>
<br/>
<pre><code class="java">@Singleton
@Component(modules = arrayOf(NoteDaoModule::class))
interface AppComponent {

    fun inject(mainPresenter : MainPresenter)

}
</code></pre><br/>
<br/>
Теперь нам нужно создать статический экземпляр класса AppComponent в классе Application:<br/>
<br/>
<pre><code class="java">class NotelinApplication : Application() {

    companion object {
        lateinit var graph: AppComponent
    }

    override fun onCreate() {
        super.onCreate()

        graph = DaggerAppComponent.builder().noteDaoModule(NoteDaoModule()).build()
    }

}
</code></pre><br/>
<br/>
Теперь мы можем инжектировать нашу модель в презентере:<br/>
<br/>
<pre><code class="java">@InjectViewState
class MainPresenter : MvpPresenter&lt;MainView&gt;() {

    @Inject
    lateinit var mNoteDao: NoteDao

    init {
        NotelinApplication.graph.inject(this)
    }

}
</code></pre><br/>
<br/>
Для взаимодействия MainView и MainPresenter нам нужно создать переменную в MainActivity:<br/>
<br/>
<pre><code class="java">@InjectPresenter
lateinit var mPresenter: MainPresenter
</code></pre><br/>
<br/>
Плагин Moxy сам привяжет View к фрагменту и произведет другие необходимые действия.<br/>
<br/>
Создадим разметку экрана со списком и плавающей кнопкой. Файл <b>activity_main.xml</b>:<br/>
<br/>
<pre><code class="xml">&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;FrameLayout
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context=".ui.activities.MainActivity"&gt;
    &lt;TextView
        android:id="@+id/tvNotesIsEmpty"
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        android:text="@string/notes_is_empty"
        android:gravity="center"
        /&gt;
    &lt;android.support.v7.widget.RecyclerView
        android:id="@+id/rvNotesList"
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        android:scrollbars="vertical"
        app:layoutManager="android.support.v7.widget.LinearLayoutManager"
        /&gt;
    &lt;com.melnykov.fab.FloatingActionButton
        android:id="@+id/fabButton"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_gravity="bottom|right"
        android:layout_margin="16dp"
        android:src="@mipmap/ic_add"
        app:fab_colorNormal="@color/colorPrimary"
        app:fab_colorPressed="@color/colorPrimaryDark" /&gt;
&lt;/FrameLayout&gt;
</code></pre> <br/>
<br/>
Для реализации летающей кнопки я использовал библиотеку <a href="https://github.com/makovkastar/FloatingActionButton">FloatingActionButton</a>. Google уже добавили FAB в support-библиотеку, поэтому вы можете воспользоваться их решением.<br/>
<br/>
Укажем нашей Activity, какой макет она должна показывать:<br/>
<br/>
<pre><code class="java">override fun onCreate(savedInstanceState: Bundle?) {
    super.onCreate(savedInstanceState)
    setContentView(R.layout.activity_main)
}
</code></pre><br/>
<br/>
Далее нам нужно связать FAB и список, чтобы при прокручивании списка вверх кнопка исчезала:<br/>
<br/>
<pre><code class="java">fabButon.attachToRecyclerView(rvNotesList)
</code></pre><br/>
<br/>
Нам не нужно писать порядком надоевший <b>findViewById</b>, нужно лишь прописать одну строчку в блоке с import'ами:<br/>
<br/>
<pre><code class="java">import kotlinx.android.synthetic.main.activity_main.*
</code></pre><br/>
<br/>
Как видите, последний пакет совпадает с названием нашего xml-файла. IDE автоматически инициализирует свойства (property) наших View и их имена совпадают с ID, которые мы указали в разметке.<br/>
<br/>
Давайте реализуем загрузку заметок из БД. Заметки нужно загружать только один раз и использовать их в последующем. В этом нам поможет метод onFirstViewAttach класса MvpPresenter, который вызывается единожды при первой привязке View к презентеру. Далее, сколько бы мы не крутили и вертели нашу Activity, данные будут закешированы в презентере.<br/>
<br/>
<pre><code class="java">override fun onFirstViewAttach() {
    super.onFirstViewAttach()
    loadAllNotes()
}

/**
* Загружает все существующие заметки и передает во View
*/
fun loadAllNotes() {
    mNotesList = mNoteDao.loadAllNotes()
    viewState.onNotesLoaded(mNotesList)
}
</code></pre><br/>
<br/>
Создадим адаптер для нашего списка: <br/>
<br/>
<div class="spoiler"><b class="spoiler_title">Код адаптера</b><div class="spoiler_text"><pre><code class="java">class NotesAdapter : RecyclerView.Adapter&lt;NotesAdapter.ViewHolder&gt; {

    private var mNotesList: List&lt;Note&gt; = ArrayList()

    constructor(notesList: List&lt;Note&gt;) {
        mNotesList = notesList
    }

    /**
     * Создание новых View и ViewHolder элемента списка, которые впоследствии могут переиспользоваться.
     */
    override fun onCreateViewHolder(viewGroup: ViewGroup, i: Int): ViewHolder {
        var v = LayoutInflater.from(viewGroup.context).inflate(R.layout.note_item_layout, viewGroup, false);
        return ViewHolder(v);
    }

    /**
     * Заполнение виджетов View данными из элемента списка с номером i
     */
    override
    fun onBindViewHolder(viewHolder: ViewHolder, i: Int) {
        var note = mNotesList[i];
        viewHolder.mNoteTitle.text = note.title;

        viewHolder.mNoteDate.text = formatDate(note.changeDate);
    }

    override fun getItemCount(): Int {
        return mNotesList.size
    }

    /**
     * Реализация класса ViewHolder, хранящего ссылки на виджеты.
     */

    class ViewHolder : RecyclerView.ViewHolder {

        var mNoteTitle: TextView
        var mNoteDate: TextView

        constructor(itemView: View) : super(itemView) {
            mNoteTitle = itemView.findViewById(R.id.tvItemNoteTitle) as TextView
            mNoteDate = itemView.findViewById(R.id.tvItemNoteDate) as TextView
        }

    }

}
</code></pre><br/>
</div></div><br/>
<br/>
В адаптере мы используем метод formatDate. Он служит для форматирования даты в строку:<br/>
<br/>
<pre><code class="java">@file:JvmName("DateUtils")

package imangazaliev.notelin.utils

import java.text.SimpleDateFormat
import java.util.*

fun formatDate(date: Date?): String {
    var dateFormat = SimpleDateFormat("yyyy-MM-dd HH:mm");
    return dateFormat.format(date)
}
</code></pre><br/>
<br/>
Данный метод находится в файле DateUtils.kt и мы можем использовать как обычный статический метод. Отличие от статического метода здесь в том, что метод принадлежит не классу, а пакету и нам не нужно писать имя класса перед названием метода. В аннотации мы указываем название класса, через который мы будем обращаться к методу из Java. Например в Java дынный метод будет вызываться так:<br/>
<br/>
<pre><code class="java">String formattedDate = DateUtils.formatDate(date);
</code></pre><br/>
<br/>
В методе onNotesLoaded нашей Activity мы показываем наши заметки: <br/>
<br/>
<pre><code class="java">override fun onNotesLoaded(notes: List&lt;Note&gt;) {
    rvNotesList.adapter = NotesAdapter(notes)
    updateView()
}

override fun updateView() {
    rvNotesList.adapter.notifyDataSetChanged()
    if (rvNotesList.adapter.itemCount == 0) {
        rvNotesList.visibility = View.GONE
        tvNotesIsEmpty.visibility = View.VISIBLE
    } else {
        rvNotesList.visibility = View.VISIBLE
        tvNotesIsEmpty.visibility = View.GONE
    }
}
</code></pre><br/>
<br/>
Если заметок нет, то мы показываем сообщение «Нет заметок» в TextView.<br/>
<br/>
Насколько я знаю, для обработки клика по элементам RecycleView не существует «официального» OnItemClickListener. Поэтому мы воспользуемся своим решением:<br/>
<br/>
<div class="spoiler"><b class="spoiler_title">ItemClickSupport.kt</b><div class="spoiler_text"><pre><code class="java">class ItemClickSupport private constructor(private val recyclerView: RecyclerView) {
    companion object {
        fun addTo(view: RecyclerView) =
                view.getTag(R.id.item_click_support) as? ItemClickSupport ?: ItemClickSupport(view)

        fun removeFrom(view: RecyclerView): ItemClickSupport? {
            val support = view.getTag(R.id.item_click_support) as? ItemClickSupport
            support?.detach(view)
            return support
        }
    }

    interface ItemClickListener {
        fun onClick(recyclerView: RecyclerView, position: Int, view: View)
    }

    interface ItemLongClickListener {
        fun onLongClick(recyclerView: RecyclerView, position: Int, view: View): Boolean
    }

    private var itemClickListener: ItemClickListener? = null
    private var itemLongClickListener: ItemLongClickListener? = null
    private val onClickListener = View.OnClickListener {
        val holder = recyclerView.getChildViewHolder(it)
        itemClickListener?.onClick(recyclerView, holder.adapterPosition, it)
    }
    private val onLongClickListener = View.OnLongClickListener listener@{
        val position = recyclerView.getChildViewHolder(it).adapterPosition
        return@listener itemLongClickListener?.onLongClick(recyclerView, position, it) ?: false
    }
    private val attachListener = object : RecyclerView.OnChildAttachStateChangeListener {
        override fun onChildViewAttachedToWindow(view: View) {
            if (itemClickListener != null) {
                view.setOnClickListener(onClickListener)
            }

            if (itemLongClickListener != null) {
                view.setOnLongClickListener(onLongClickListener)
            }
        }

        override fun onChildViewDetachedFromWindow(view: View) = Unit
    }

    init {
        recyclerView.setTag(R.id.item_click_support, this)
        recyclerView.addOnChildAttachStateChangeListener(attachListener)
    }

    fun setOnItemClickListener(listener: ItemClickListener): ItemClickSupport {
        itemClickListener = listener
        return this
    }

    fun setOnItemClickListener(listener: (RecyclerView, Int, View) -&gt; Unit) =
            setOnItemClickListener(object : ItemClickListener {
                override fun onClick(recyclerView: RecyclerView, position: Int, view: View) {
                    listener(recyclerView, position, view)
                }
            })

    fun setOnItemLongClickListener(listener: ItemLongClickListener): ItemClickSupport {
        itemLongClickListener = listener
        return this
    }

    fun setOnItemLongClickListener(block: (RecyclerView, Int, View) -&gt; Boolean): ItemClickSupport =
            setOnItemLongClickListener(object : ItemLongClickListener {
                override fun onLongClick(recyclerView: RecyclerView, position: Int, view: View): Boolean {
                    return block (recyclerView, position, view)
                }
            })

    private fun detach(view: RecyclerView) {
        view.removeOnChildAttachStateChangeListener(attachListener)
        view.setTag(R.id.item_click_support, null)
    }
}
</code></pre><br/>
</div></div><br/>
<br/>
В методе onCreate нашей Activity пишем: <br/>
<br/>
<pre><code class="java">        with(ItemClickSupport.addTo(rvNotesList)) {
            setOnItemClickListener { recyclerView, position, v -&gt; mPresenter.openNote(this@MainActivity, position) }
            setOnItemLongClickListener { recyclerView, position, v -&gt; mPresenter.showNoteContextDialog(position); true }
        }
</code></pre><br/>
<br/>
Функция <b>with</b> позволяет не писать каждый раз имя переменной, а только лишь вызывать методы у объекта, который мы передали в нее. Обратите внимание, что для получения Activity я использовал не просто <b>this</b>, а <a href="https://kotlinlang.org/docs/reference/this-expressions.html">this@MainActivity</a>. Это связано с тем, что при использовании this в блоке with, возвращается объект, который мы передали в функцию with. При обычном клике по пункту мы переходим на Activity, где мы можем просмотреть текст нашей заметки. При долгом нажатии появляется контекстное меню. Если вы заметили, перед закрывающей скобкой я не написал слово <b>return</b>. Это не ошибка, а особенность языка Kotlin.<br/>
<br/>
Вот что происходит при нажатии на пункт меню в презентере:<br/>
<br/>
<pre><code class="java">/**
* Открывает активити с заметкой по позиции
*/
fun openNote(activity: Activity, position: Int) {
    val intent = Intent(activity, NoteActivity::class.java)
    intent.putExtra("note_id", mNotesList[position].id)
    activity.startActivity(intent)
}
</code></pre><br/>
<br/>
Мы еще не создали класс NoteActivity, поэтому компилятор будет выдавать ошибку. Для решения этой проблемы можно создать класс NoteActivity или вовсе закомментировать код внутри метода openNote. Запись NoteActivity::class.java аналогична NoteActivity.class в Java. Также заметьте, что мы обращаемся к списку не через метод get(position), а через квадратные скобки, как к обычному массиву.<br/>
<br/>
При использовании MVP-библиотеки Moxy в своем приложении, нам нужно привыкать, что все действия с View, такие как показ/закрытие диалога и другие, должны проходить через презентер. Изначально это не очень привычно и неудобно, но пользы от этого гораздо больше, т. к. мы можем быть уверены, что при пересоздании Activity наше диалоговое окно никуда не пропадет.<br/>
<br/>
<pre><code class="java">/**
* Показывает контекстное меню заметки
*/
fun showNoteContextDialog(position: Int) {
    viewState.showNoteContextDialog(position)
}

/**
 * Прячет контекстное меню заметки
*/
fun hideNoteContextDialog() {
    viewState.hideNoteContextDialog()
}
</code></pre><br/>
<br/>
Я не буду показывать код контекстного меню, удаления и показа информации о заметке т. к. статья получается очень большой. Но, думаю, общий смысл вы уловили. Также следует отметить, что метод hideNoteContextDialog у презентера должен вызываться даже при закрытии диалога через кнопку назад или при нажатии на область за границами диалога.<br/>
<br/>
При нажатии на FAB должна создаваться новая заметка: <br/>
<br/>
<pre><code class="java">fabButton.setOnClickListener {
            mPresenter.openNewNote(this)
}
</code></pre><br/>
<br/>
Для создания новой заметки мы вызываем у презентера функция openNewNote:<br/>
<br/>
<pre><code class="java">fun openNewNote(activity: Activity) {
        val newNote = mNoteDao.createNote()
        mNotesList.add(newNote)
        sortNotesBy(getCurrentSortMethod())
        openNote(activity, mNotesList.indexOf(newNote))
}
</code></pre><br/>
<br/>
Метод openNewNote использует созданный нами ранее openNote, в который мы передаем Context и позицию заметки в списке.<br/>
<br/>
<br/>
<h3>Реализуем поиск по заметкам</h3><br/>
<br/>
<img width="40%" src="https://habrastorage.org/r/w1560/files/3db/047/107/3db047107fe4480aa862a4325e011750.png" data-src="https://habrastorage.org/files/3db/047/107/3db047107fe4480aa862a4325e011750.png"/><br/>
<br/>
Давайте добавим поиск по заметкам. Создайте в папке res/menu файл main.xml:<br/>
<br/>
<pre><code class="xml">&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;menu xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"&gt;

    &lt;item
        android:id="@+id/action_search"
        android:icon="@android:drawable/ic_menu_search"
        android:title="@string/search"
        app:actionViewClass="android.support.v7.widget.SearchView"
        app:showAsAction="always" /&gt;

&lt;/menu&gt;
</code></pre><br/>
<br/>
В MainActivity пишем:<br/>
<br/>
<pre><code class="java">override fun onCreateOptionsMenu(menu: Menu): Boolean {
    menuInflater.inflate(R.menu.main, menu)

    initSearchView(menu)
    return true
}

private fun initSearchView(menu: Menu) {
    var searchViewMenuItem = menu.findItem(R.id.action_search);
    var searchView = searchViewMenuItem.actionView as SearchView;
    searchView.onQueryChange { query -&gt; mPresenter.search(query) }
    searchView.setOnCloseListener { mPresenter.search(""); false }
}
</code></pre><br/>
<br/>
При изменении текста в поле поиска мы передаем строку из поля в презентер, после чего показываем результаты в списке. На самом деле, у SearchView нет метода onQueryChange, его добавила библиотека KAndroid.<br/>
<br/>
Реализуем поиск в презентере:<br/>
<br/>
<pre><code class="java">/**
* Ищет заметку по имени
*/
fun search(query: String) {
    if (query.equals("")) {
        viewState.onSearchResult(mNotesList)
    } else {
        val searchResults = mNotesList.filter { it.title!!.startsWith(query, ignoreCase = true) }
        viewState.onSearchResult(searchResults)
    }
}
</code></pre><br/>
<br/>
Обратите внимание, как красиво, в одну строчку мы реализовали поиск по списку с помощью метода filter и лямбд. В Java тот же функционал занял бы 6-7строк. Осталось отобразить результаты поиска:<br/>
<br/>
<pre><code class="java">override fun onSearchResult(notes: List&lt;Note&gt;) {
    rvNotesList.adapter = NotesAdapter(notes)
}
</code></pre><br/>
<br/>
<br/>
<h3>Реализуем сортировку заметок</h3><br/>
<br/>
И последний этап в создании главного экрана, это сортировка заметок. Добавим в res/menu/main.xml следующие строки:<br/>
<br/>
<pre><code class="xml">&lt;item android:title="@string/sort_by"&gt;
    &lt;menu&gt;
        &lt;item
            android:id="@+id/menuSortByName"
            android:title="@string/sort_by_title" /&gt;
        &lt;item
            android:id="@+id/menuSortByDate"
            android:title="@string/sort_by_date" /&gt;
    &lt;/menu&gt;
&lt;/item&gt;
</code></pre><br/>
<br/>
Теперь нам нужно обработать нажатие на пункты меню:<br/>
<br/>
<pre><code class="java">override fun onOptionsItemSelected(item: MenuItem): Boolean {
        when (item.itemId) {
            R.id.menuSortByName -&gt; mPresenter.sortNotesBy(MainPresenter.SortNotesBy.NAME)
            R.id.menuSortByDate -&gt; mPresenter.sortNotesBy(MainPresenter.SortNotesBy.DATE)
        }
    return super.onOptionsItemSelected(item)
}
</code></pre><br/>
<br/>
Оператор <b>when </b>является более функциональным аналогом switch-case в Java. Код сортировки в MainPresenter:<br/>
<pre><code class="java">/**
* Сортирует заметки
*/
fun sortNotesBy(sortMethod: SortNotesBy) {
    mNotesList.sortWith(sortMethod)
    viewState.updateView()
}
</code></pre><br/>
<br/>
<br/>
<h1>Экран с содержанием заметки</h1><br/>
<br/>
Теперь нам нужно создать экран с содержанием заметки. Здесь пользователь может просмотреть/отредактировать заголовок и текст заметки, сохранить или удалить ее, а также просмотреть информацию о заметке.<br/>
<br/>
<br/>
<h3>Создаем NoteView и NotePresenter</h3><br/>
<br/>
<img width="40%" src="https://habrastorage.org/r/w1560/files/b15/984/b7a/b15984b7aa4a405fb5495ac25dc51f88.png" data-src="https://habrastorage.org/files/b15/984/b7a/b15984b7aa4a405fb5495ac25dc51f88.png"/><br/>
<br/>
Экран содержит всего лишь три View:<br/>
<br/>
-Заголовок<br/>
-Дата последнего изменения<br/>
-Текст заметки<br/>
<br/>
А вот и сама разметка:<br/>
<br/>
<pre><code class="xml">&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:orientation="vertical"&gt;


    &lt;EditText
        android:id="@+id/etTitle"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:singleLine="true"
        android:background="#EEEEEE"
        android:textColor="#212121"
        android:paddingLeft="10dp"
        android:paddingTop="10dp"
        android:paddingBottom="5dp"
        android:hint="Заголовок"
        /&gt;

    &lt;TextView
        android:id="@+id/tvNoteDate"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:singleLine="true"
        android:background="#EEEEEE"
        android:textColor="#212121"
        android:paddingLeft="10dp"
        android:paddingBottom="10dp"
        /&gt;

    &lt;EditText
        android:id="@+id/etText"
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        android:textColor="#000000"
        android:gravity="start"
        android:hint="Текст"
        android:background="@null"
        android:paddingLeft="10dp"
        /&gt;

&lt;/LinearLayout&gt;
</code></pre><br/>
<br/>
В начале статьи я мельком упомянул об Anko. Библиотека позволяет существенно сократить код, не теряя при этом в удобочитаемости. Вот так, например, выглядела бы наша разметка при использовании Anko:<br/>
<br/>
<pre><code class="java">class MyActivity : AppCompatActivity() {
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        MyActivityUI().setContentView(this)
    }
}

class MyActivityUI : AnkoComponent {

    companion object {
        val ET_TITLE_ID = View.generateViewId()
        val TV_NOTE_DATE_ID = View.generateViewId()
        val ET_TEXT_ID = View.generateViewId()
    }
    
    override fun createView(ui: AnkoContext&lt;MainActivit&gt;) = with(ui) {
        verticalLayout { 
            editText { 
                id = ET_TITLE_ID
                singleLine = true
                backgroundColor = 0xEE.gray.opaque
                textColor = 0x21.gray.opaque
                leftPadding = dip(10)
                topPadding = dip(10)
                bottomPadding = dip(5)
                hint = "Заголовок"
            }.lparams(matchParent, wrapContent)
            
            textView {
                id = TV_NOTE_DATE_ID
                singleLine = true
                backgroundColor = 0xEE.gray.opaque
                textColor = 0x21.gray.opaque
                leftPadding = dip(10)
                bottomPadding = dip(10)
            }.lparams(matchParent, wrapContent)
            
            editText { 
                id = ET_TEXT_ID
                textColor = Color.BLACK
                gravity = Gravity.START
                hint = "Текст"
                background = null
                leftPadding = dip(10)
            }
        }
    }
}
</code></pre><br/>
<br/>
Но не будем отвлекаться и приступим к написанию кода. Первым делом нам нужно создать View:<br/>
<br/>
<pre><code class="java">interface NoteView : MvpView {

    fun showNote(note: Note)

    fun onNoteSaved()

    fun onNoteDeleted()

    fun showNoteInfoDialog(noteInfo: String)

    fun hideNoteInfoDialog()

    fun showNoteDeleteDialog()

    fun hideNoteDeleteDialog()

}
</code></pre><br/>
<br/>
Имплементируем NoteView в NoteActivity:<br/>
<br/>
<pre><code class="java">class NoteActivity : MvpAppCompatActivity(), NoteView {

    @InjectPresenter
    lateinit var mPresenter: NotePresenter

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_note)

        val noteId = intent.extras.getLong("note_id", -1)
        mPresenter.showNote(noteId)
    }

}
</code></pre><br/>
<br/>
В onCreate мы извлекаем id заметки, чтобы презентер достал заметку из БД и передал данные во View. Создадим презентер:<br/>
<br/>
<pre><code class="java">@InjectViewState
class NotePresenter : MvpPresenter&lt;NoteView&gt;() {

    @Inject
    lateinit var mNoteDao: NoteDao
    lateinit var mNote: Note

    init {
        NotelinApplication.graph.inject(this)
    }

    fun showNote(noteId: Long) {
        mNote = mNoteDao.getNoteById(noteId)
        viewState.showNote(mNote)
    }

}
</code></pre><br/>
<br/>
Не забудьте добавить в класс AppComponent строку:<br/>
<br/>
<pre><code class="java">fun inject(notePresenter: NotePresenter)
</code></pre><br/>
<br/>
Покажем нашу заметку:<br/>
<br/>
<pre><code class="java">override fun showNote(note: Note) {
    tvNoteDate.text = DateUtils.formatDate(note.changeDate)
    etTitle.setText(note.title)
    etText.setText(note.text)
}
</code></pre><br/>
<br/>
<br/>
<h3>Реализуем сохранение заметки</h3><br/>
<br/>
Для сохранения заметки нам нужно выбрать соответствующий пункт в меню. Создайте файл <b>res/menu/note.xml</b>:<br/>
<br/>
<pre><code class="java">&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;menu xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    &gt;
    &lt;item
        android:id="@+id/menuSaveNote"
        android:title="@string/save"
        app:showAsAction="never"
        /&gt;
&lt;/menu&gt;
</code></pre><br/>
<br/>
<pre><code class="java">override fun onCreateOptionsMenu(menu: Menu): Boolean {
    menuInflater.inflate(R.menu.note, menu)
    return true
}

Покажем меню в Activity:

override fun onOptionsItemSelected(item: MenuItem): Boolean {
    when (item.itemId) {
        R.id.menuSaveNote -&gt; mPresenter.saveNote(etTitle.text.toString(), etText.text.toString())
    }
    return super.onOptionsItemSelected(item)
}
</code></pre><br/>
<br/>
Опять же, я не стал приводить код удаления и вывода информации о заметке. При просмотре исходного кода, вы можете заметить, что помимо идентификатора заметки я передал в NoteActivity позицию заметки в списке. Это нужно для того, чтобы при удалении заметки на экране просмотра заметки, она также удалялась из списка. Для реализации этого функционала я использовал EventBus. И опять, я не стал приводить код.<br/>
<br/>
На этом все: заметки добавляются, редактируются и удаляются. Также мы можем осуществить поиск и сортировку заметок. Обязательно посмотрите полный исходный код, ссылку на который я привел в конце статьи, чтобы лучше понять как все устроено.<br/>
<br/>
<br/>
<h1>Благодарности</h1><br/>
<br/>
Конечно же, нельзя забывать о людях, которые помогли мне при написании статьи. Хотел бы выразить благодарность хабраюзерам Юрию Шмакову (@senneco) за помощь с его библиотекой Moxy и за помощь по другим вопросам. Также, хочу сказать спаcибо сотруднику JetBrains Роману Белову (@belovrv) за ревью статьи и за предоставленный код на Anko.<br/>
<br/>
<b>UPD:</b> Еще хотел сказать спасибо <a href="https://habrahabr.ru/users/sirikid/" class="user_link">Sirikid</a> за EPIC COMMIT, благодаря которому я переделал внушительную часть кода с использованием фич Kotlin'а.<br/>
<br/>
<br/>
<h1>Заключение</h1><br/>
<br/>
Надеюсь, эта статья смогла убедить вас в том, что писать приложения на Kotlin не трудно, а может даже и легче, чем на Java. Конечно же, могут встречаться и баги, которые сотрудники JetBrains достаточно быстро фиксят. Если у вас появились какие-либо вопросы, вы можете задать их напрямую разработчикам на <a href="https://kotlinlang.slack.com/">Slack-канале</a>. Также вы можете почитать статьи о разработке на Kotlin <a href="http://java-help.ru/category/android-kotlin/">здесь</a>.<br/>
<br/>
Исходный код проекта: <a href="https://github.com/ImangazalievM/Notelin">Notelin</a>.</div></div></div><!----><!----></div><!----><div class="tm-article-poll-container"><!--[--><div class="tm-article-poll tm-article-poll_variant-bordered"><div class="tm-notice tm-notice_positive tm-article-poll__notice"><!----><div class="tm-notice__inner"><!----><div class="tm-notice__content" data-test-id="notice-content"><!--[--><span>Только зарегистрированные пользователи могут участвовать в опросе. <a rel="nofollow" href="/kek/v1/auth/habrahabr/?back=/ru/articles/275255/&hl=ru">Войдите</a>, пожалуйста.</span><!--]--></div></div></div><!--[--><div class="tm-article-poll__header">А вы используете Kotlin в своих проектах?</div><div class="tm-article-poll__answers"><!--[--><div class="tm-article-poll__answer"><div class="tm-article-poll__answer-data"><span class="tm-article-poll__answer-percent">30.49% </span><span class="tm-article-poll__answer-label">Да</span><span class="tm-article-poll__answer-votes">50</span></div><div class="tm-article-poll__answer-bar"><div class="tm-article-poll__answer-progress" style="width: 30.49%"></div></div></div><div class="tm-article-poll__answer"><div class="tm-article-poll__answer-data"><span class="tm-article-poll__answer-percent">31.71% </span><span class="tm-article-poll__answer-label">Нет, но теперь начну</span><span class="tm-article-poll__answer-votes">52</span></div><div class="tm-article-poll__answer-bar"><div class="tm-article-poll__answer-progress" style="width: 31.71%"></div></div></div><div class="tm-article-poll__answer"><div class="tm-article-poll__answer-data"><span class="tm-article-poll__answer-percent tm-article-poll__answer-percent_winning">37.8% </span><span class="tm-article-poll__answer-label">Нет, и не буду</span><span class="tm-article-poll__answer-votes">62</span></div><div class="tm-article-poll__answer-bar"><div class="tm-article-poll__answer-progress tm-article-poll__answer-progress_winning" style="width: 37.8%"></div></div></div><!--]--></div><div class="tm-article-poll__stats"> Проголосовали 164 пользователя.    Воздержались 92 пользователя. </div><!--]--></div><!--]--></div></div><!--]--><!----><div class="tm-article-presenter__meta" data-test-id="article-meta-links"><div class="tm-separated-list tm-article-presenter__meta-list"><span class="tm-separated-list__title">Теги:</span><ul class="tm-separated-list__list"><!--[--><li class="tm-separated-list__item"><!--[--><a href="/ru/search/?target_type=posts&amp;order=relevance&amp;q=[kotlin]" class="tm-tags-list__link"><span>kotlin</span></a><!--]--></li><li class="tm-separated-list__item"><!--[--><a href="/ru/search/?target_type=posts&amp;order=relevance&amp;q=[android]" class="tm-tags-list__link"><span>android</span></a><!--]--></li><li class="tm-separated-list__item"><!--[--><a href="/ru/search/?target_type=posts&amp;order=relevance&amp;q=[%D0%BC%D0%BE%D0%B1%D0%B8%D0%BB%D1%8C%D0%BD%D1%8B%D0%B5+%D0%BF%D1%80%D0%B8%D0%BB%D0%BE%D0%B6%D0%B5%D0%BD%D0%B8%D1%8F]" class="tm-tags-list__link"><span>мобильные приложения</span></a><!--]--></li><!--]--><!----></ul></div><div class="tm-separated-list tm-article-presenter__meta-list"><span class="tm-separated-list__title">Хабы:</span><ul class="tm-separated-list__list"><!--[--><li class="tm-separated-list__item"><!--[--><a href="/ru/hubs/kotlin/" class="tm-hubs-list__link"><!--[--><span>Kotlin</span><!--]--></a><!--]--></li><li class="tm-separated-list__item"><!--[--><a href="/ru/hubs/mobile_dev/" class="tm-hubs-list__link"><!--[--><span>Разработка мобильных приложений</span><!--]--></a><!--]--></li><li class="tm-separated-list__item"><!--[--><a href="/ru/hubs/android_dev/" class="tm-hubs-list__link"><!--[--><span>Разработка под Android</span><!--]--></a><!--]--></li><!--]--><!----></ul></div></div><!----><!--]--></article><!--]--></div><!----></div><div style="" class="tm-article-sticky-panel" data-test-id="article-sticky-panel"><div class="tm-data-icons tm-data-icons tm-data-icons_space-big tm-article-sticky-panel__icons" data-test-id="article-stats-icons"><div class="tm-article-rating tm-data-icons__item"><div class="tm-votes-meter tm-article-rating__votes-switcher"><svg class="tm-svg-img tm-votes-meter__icon tm-votes-meter__icon tm-votes-meter__icon_appearance-article" height="24" width="24"><title>Всего голосов 20: ↑19 и ↓1</title><use xlink:href="/img/megazord-v28.371b7fa3..svg#counter-rating"></use></svg><span class="tm-votes-meter__value tm-votes-meter__value_positive tm-votes-meter__value_appearance-article tm-votes-meter__value_rating tm-votes-meter__value" data-test-id="votes-meter-value" title="Всего голосов 20: ↑19 и ↓1">+18</span></div><!--teleport start--><!--teleport end--><!----></div><!----><!----><button class="bookmarks-button tm-data-icons__item" title="Добавить в закладки" type="button"><span class="tm-svg-icon__wrapper bookmarks-button__icon"><svg class="tm-svg-img tm-svg-icon" height="24" width="24"><title>Добавить в закладки</title><use xlink:href="/img/megazord-v28.371b7fa3..svg#counter-favorite"></use></svg></span><span class="bookmarks-button__counter" title="Количество пользователей, добавивших публикацию в закладки">303</span></button><div class="tm-sharing tm-data-icons__item" title="Поделиться"><button class="tm-sharing__button" type="button"><svg viewbox="0 0 24 24" xmlns="http://www.w3.org/2000/svg" class="tm-sharing__icon"><path fill="currentColor" d="M13.8 13.8V18l7.2-6.6L13.8 5v3.9C5 8.9 3 18.6 3 18.6c2.5-4.4 6-4.8 10.8-4.8z"></path></svg></button><!--teleport start--><!--teleport end--></div><div class="tm-article-comments-counter-link tm-data-icons__item" title="Читать комментарии"><a href="/ru/articles/275255/comments/" class="tm-article-comments-counter-link__link" data-test-id="counter-comments"><!--[--><svg class="tm-svg-img tm-article-comments-counter-link__icon" height="24" width="24"><title>Комментарии</title><use xlink:href="/img/megazord-v28.371b7fa3..svg#counter-comments"></use></svg><span class="tm-article-comments-counter-link__value">24</span><!--]--></a><!----></div><!--[--><!--[--><!--[--><!----><!--]--><!--]--><!--]--><!--teleport start--><!--teleport end--><!----></div></div></div><!--[--><!--]--><div class="tm-article-presenter__footer"><!--[--><!--[--><div class="tm-article-blocks"><!----><!--[--><section class="tm-block tm-block tm-block_spacing-bottom"><!----><!--[--><div class="tm-block__body tm-block__body tm-block__body_variant-balanced"><!--[--><div class="tm-article-author" data-test-id="article-author-info" data-async-called="true"><!--[--><!--]--><div class="tm-user-card tm-user-card tm-user-card_variant-article tm-article-author__user-card" data-async-called="true"><div class="tm-user-card__info-container"><div class="tm-user-card__header"><div class="tm-user-card__header-data"><a href="/ru/users/ImangazalievM/" class="tm-user-card__userpic tm-user-card__userpic_size-40"><div class="tm-entity-image"><img alt="" class="tm-entity-image__pic" src="//habrastorage.org/getpro/habr/avatars/00f/735/f8e/00f735f8e8901eb06fa51ceff1292656.png"></div></a><div class="tm-user-card__meta"><div class="tm-counter-container tm-karma tm-karma" title=" 28 голосов "><div class="tm-counter-container__header"><!--[--><div class="karma-display positive" data-v-7635202e>12</div><!----><!--]--></div><div class="tm-counter-container__footer"><!--[--><div class="tm-karma__text">Карма</div><!--teleport start--><!--teleport end--><!--]--></div></div><div class="tm-counter-container" title="Рейтинг пользователя"><div class="tm-counter-container__header"><!--[--><!--[--><!--]--><div class="tm-votes-lever tm-votes-lever tm-votes-lever_appearance-rating"><!----><div class="tm-votes-lever__score tm-votes-lever__score_appearance-rating tm-votes-lever__score"><!--[--><span><span class="tm-votes-lever__score-counter tm-votes-lever__score-counter_rating tm-votes-lever__score-counter" data-test-id="votes-score-counter">0</span></span><!--]--></div><!----></div><!--]--></div><div class="tm-counter-container__footer"><!--[--><span class="tm-rating__text tm-rating__text">Рейтинг</span><!--]--></div></div></div></div></div><div class="tm-user-card__info tm-user-card__info_variant-article tm-user-card__info"><div class="tm-user-card__title tm-user-card__title_variant-article tm-user-card__title"><span class="tm-user-card__name tm-user-card__name_variant-article tm-user-card__name">Махач Имангазалиев</span><a href="/ru/users/ImangazalievM/" class="tm-user-card__nickname tm-user-card__nickname tm-user-card__nickname_variant-article"> @ImangazalievM</a><!----></div><p class="tm-user-card__short-info tm-user-card__short-info_variant-article tm-user-card__short-info" data-test-id="user-card-speciality">Android-программист</p></div></div><!----><div class="tm-user-card__buttons tm-user-card__buttons_variant-article tm-user-card__buttons"><!----><div class="tm-user-card__button"><div class="tm-button-follow tm-user-card__button-follow"><!----><button class="tm-button-follow__button tm-button-follow__button_big" data-test-id="follow-button" type="button">Подписаться</button></div></div><!----><div class="tm-user-card__button tm-user-card__button_write" data-test-id="user-card-conversations"><svg class="tm-svg-img tm-user-card__button-icon" height="16" width="16"><title>Отправить сообщение</title><use xlink:href="/img/megazord-v28.371b7fa3..svg#mail"></use></svg></div><!----></div><!----></div><div class="tm-article-author__user-contacts" data-test-id="author-contacts"><!----><!----><!----></div></div><!--]--></div><!--]--><!----></section><!----><!--[--><div class="banner-wrapper leaderboard tm-page-article__banner" style="--467224fc:200px;--58ff5eba:auto;" data-v-ad758baa><!--[--><div class="placeholder-wrapper placeholder" data-v-ad758baa><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><div class="adfox-banner-placeholder leaderboard" data-v-12f7bcca><div class="image loads" data-v-12f7bcca></div><div class="lines" data-v-12f7bcca><div class="line loads" data-v-12f7bcca></div><div class="line loads" data-v-12f7bcca></div><div class="line loads" data-v-12f7bcca></div></div></div><!----></div><div id="adfox_164725660339535756" class="tm-adfox-banner" data-v-ad758baa></div><!--]--></div><!--]--><!--]--><div class="tm-article-blocks__comments"><div id="publication-comments" class="tm-article-page-comments"><div><!--[--><div class="tm-article-comments-counter-link tm-article-comments-counter-button"><a href="/ru/articles/275255/comments/" class="tm-article-comments-counter-link__link tm-article-comments-counter-link__link_button-style" data-test-id="counter-comments"><!--[--><svg class="tm-svg-img tm-article-comments-counter-link__icon tm-article-comments-counter-link__icon_contrasted" height="24" width="24"><title>Комментарии</title><use xlink:href="/img/megazord-v28.371b7fa3..svg#counter-comments"></use></svg><span class="tm-article-comments-counter-link__value tm-article-comments-counter-link__value_contrasted"> Комментарии 24 </span><!--]--></a><!----></div><!--]--></div></div></div><!--[--><!--[--><!--]--><section class="tm-block tm-block tm-block_spacing-bottom"><header class="tm-block__header tm-block__header tm-block__header_variant-borderless"><div class="tm-block__header-container"><h2 class="tm-block__title tm-block__title tm-block__title_variant-large">Публикации</h2><!--[--><!--]--></div><!----></header><!--[--><div class="tm-block__body tm-block__body tm-block__body_variant-condensed-slim"><!--[--><!--[--><div class="tm-tabs tm-tabs"><div class=""><!--[--><span class="tm-tabs__tab-item"><button class="tm-tabs__tab-link tm-tabs__tab-link_active tm-tabs__tab-link_slim tm-tabs__tab-link">Лучшие за сутки</button></span><span class="tm-tabs__tab-item"><button class="tm-tabs__tab-link tm-tabs__tab-link_slim tm-tabs__tab-link">Похожие</button></span><!--]--></div><!----></div><div class="similar-and-daily__tab-view"><div class="daily-articles-list"><ul class="tm-article-card-list"><!--[--><!--]--><div class="tm-bordered-card"><!----><!--[--><!--]--></div></ul><div class="daily-articles-block__button-container"><button class="btn btn_transparent btn_small tm-button tm-button_color-horizon" type="button"><!--[--><!--[-->Показать лучшие за всё время<!--]--><!--]--></button></div></div><!----></div><!--]--><!--]--></div><!--]--><!----></section><!--[--><section class="tm-block tm-block tm-block_spacing-around tm-stories-block" data-navigatable tabindex="0" data-async-called="true"><header class="tm-block__header tm-block__header"><div class="tm-block__header-container"><h2 class="tm-block__title tm-block__title">Истории</h2><!--[--><!--]--></div><!----></header><!--[--><div class="tm-block__body tm-block__body tm-block__body_variant-equal"><!--[--><div class="tm-stories-empty"><!--[--><div class="tm-stories-card-empty"><div class="tm-stories-card-empty__image"></div><div class="tm-stories-card-empty__title"><div class="tm-stories-card-empty__title-block"></div><div class="tm-stories-card-empty__title-block"></div><div class="tm-stories-card-empty__title-block"></div></div></div><div class="tm-stories-card-empty"><div class="tm-stories-card-empty__image"></div><div class="tm-stories-card-empty__title"><div class="tm-stories-card-empty__title-block"></div><div class="tm-stories-card-empty__title-block"></div><div class="tm-stories-card-empty__title-block"></div></div></div><div class="tm-stories-card-empty"><div class="tm-stories-card-empty__image"></div><div class="tm-stories-card-empty__title"><div class="tm-stories-card-empty__title-block"></div><div class="tm-stories-card-empty__title-block"></div><div class="tm-stories-card-empty__title-block"></div></div></div><div class="tm-stories-card-empty"><div class="tm-stories-card-empty__image"></div><div class="tm-stories-card-empty__title"><div class="tm-stories-card-empty__title-block"></div><div class="tm-stories-card-empty__title-block"></div><div class="tm-stories-card-empty__title-block"></div></div></div><div class="tm-stories-card-empty"><div class="tm-stories-card-empty__image"></div><div class="tm-stories-card-empty__title"><div class="tm-stories-card-empty__title-block"></div><div class="tm-stories-card-empty__title-block"></div><div class="tm-stories-card-empty__title-block"></div></div></div><div class="tm-stories-card-empty"><div class="tm-stories-card-empty__image"></div><div class="tm-stories-card-empty__title"><div class="tm-stories-card-empty__title-block"></div><div class="tm-stories-card-empty__title-block"></div><div class="tm-stories-card-empty__title-block"></div></div></div><!--]--></div><!----><!--]--></div><!--]--><!----></section><div><div class="placeholder-wrapper"><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><div class="tm-placeholder-inset tm-placeholder-salary"><div class="tm-placeholder-inset__header"><div class="tm-placeholder__line tm-placeholder__line_inset-header loads"></div></div><div class="tm-placeholder-salary__body"><div class="tm-placeholder-salary__text"><div class="tm-placeholder__line tm-placeholder__line_salary_average"></div><div class="tm-placeholder-salary__description"><div class="tm-placeholder__line loads"></div><div class="tm-placeholder__line loads"></div><div class="tm-placeholder__line loads"></div><div class="tm-placeholder__line loads"></div></div></div><div class="tm-placeholder-salary__image loads"></div></div><div class="tm-placeholder-inset__footer tm-placeholder-inset__footer_salary"><div class="tm-placeholder__line tm-placeholder__line_inset-footer loads"></div></div></div><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----></div></div><!--]--><!----><!--[--><div><div class="placeholder-wrapper"><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><div class="tm-placeholder-promo"><div class="tm-placeholder-promo__header"><div class="tm-placeholder__line tm-placeholder__line_promo-title"></div></div><div class="tm-placeholder-promo__body"><div class="tm-placeholder-promo__posts"><div class="tm-placeholder-promo__post"><div class="tm-placeholder-promo__image"></div><div class="tm-placeholder__line tm-placeholder__line_post-title"></div></div><div class="tm-placeholder-promo__post"><div class="tm-placeholder-promo__image"></div><div class="tm-placeholder__line tm-placeholder__line_post-title"></div></div><div class="tm-placeholder-promo__post"><div class="tm-placeholder-promo__image"></div><div class="tm-placeholder__line tm-placeholder__line_post-title"></div></div></div><div class="tm-placeholder-promo__dots"><div class="tm-placeholder-promo__dot"></div><div class="tm-placeholder-promo__dot"></div><div class="tm-placeholder-promo__dot"></div></div></div></div><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----></div></div><section class="tm-block tm-block tm-block_spacing-top" data-async-called="true"><header class="tm-block__header tm-block__header"><div class="tm-block__header-container"><h2 class="tm-block__title tm-block__title">Работа</h2><!--[--><!--]--></div><!----></header><!--[--><div class="tm-block__body tm-block__body"><!--[--><!--[--><div class="tm-vacancies-block__item"><a class="tm-vacancies-block__vacancy-title" href="https://career.habr.com/vacancies/android_developer" target="_blank">Android разработчик </a><div class="tm-vacancies-block__vacancies-count">10
    вакансий</div></div><div class="tm-vacancies-block__item"><a class="tm-vacancies-block__vacancy-title" href="https://career.habr.com/vacancies/ios_razrabotchik" target="_blank">iOS разработчик</a><div class="tm-vacancies-block__vacancies-count">13
    вакансий</div></div><div class="tm-vacancies-block__item"><a class="tm-vacancies-block__vacancy-title" href="https://career.habr.com/vacancies/ios_razrabotchik_swift" target="_blank">Swift разработчик</a><div class="tm-vacancies-block__vacancies-count">13
    вакансий</div></div><!--]--><!--]--></div><!--]--><footer class="tm-block__footer"><!--[--><a class="tm-block-extralink" href="https://career.habr.com/catalog">Все вакансии</a><!--]--></footer></section><section class="tm-block tm-block tm-block_spacing-around tm-events-block" data-navigatable tabindex="0" data-async-called="true"><header class="tm-block__header tm-block__header tm-block__header_variant-borderless-large"><div class="tm-block__header-container"><h2 class="tm-block__title tm-block__title">Ближайшие события</h2><!--[--><!--]--></div><!----></header><!--[--><div class="tm-block__body tm-block__body tm-block__body_variant-equal"><!--[--><div class="swiper-container tm-events-widget" style="--swiper-space-between:22px;"><div class="swiper-wrapper"><!--[--><!--[--><div class="swiper-slide"><!--[--><section class="tm-block tm-block tm-block_spacing-none" id="588" tabindex="-1"><!----><!--[--><div class="tm-event-card tm-event-card_is-widget tm-event-card_responsive"><a href="/ru/events/588/" class=""><img alt class="tm-event-card__image" data-src="https://habrastorage.org/getpro/habr/upload_files/f79/1fc/79d/f791fc79d0d9fdda84397ed0c0717764.png" loading="lazy" src="https://habrastorage.org/r/w390/getpro/habr/upload_files/f79/1fc/79d/f791fc79d0d9fdda84397ed0c0717764.png" srcset="https://habrastorage.org/r/w390/getpro/habr/upload_files/f79/1fc/79d/f791fc79d0d9fdda84397ed0c0717764.png, https://habrastorage.org/getpro/habr/upload_files/f79/1fc/79d/f791fc79d0d9fdda84397ed0c0717764.png 2x"></a><!----><div class="tm-event-card__info"><div class="tm-event-card__date"><!----><div class="tm-event-card__day"><span>17  февраля   – 24  марта  </span></div></div><a href="/ru/events/588/" class="tm-event-card__title-link"><span>Конкурс «Снежный код» от Хекслета. Три гранта на бесплатное 10-месячное обучение</span></a><div class="tm-event-card__places"><div class="tm-event-card__places-list"><!--[--><span class="tm-event-card__places-item"><span>Онлайн</span><!----></span><!--]--></div></div></div><div class="tm-event-card__footer tm-event-card__footer_widget"><a href="/ru/events/#588" class="tm-event-card__link">Больше событий в календаре</a><div class="tm-event-card__categories"><!--[--><div class="event-category__label event-category__label_type-development"><span>Разработка</span></div><!--]--></div></div></div><!--]--><!----></section><!--]--></div><div class="swiper-slide"><!--[--><section class="tm-block tm-block tm-block_spacing-none" id="596" tabindex="-1"><!----><!--[--><div class="tm-event-card tm-event-card_is-widget tm-event-card_responsive"><a href="/ru/events/596/" class=""><img alt class="tm-event-card__image" data-src="https://habrastorage.org/getpro/habr/upload_files/b14/cd3/772/b14cd3772bc67698c8fbfd846e23824a.png" loading="lazy" src="https://habrastorage.org/r/w390/getpro/habr/upload_files/b14/cd3/772/b14cd3772bc67698c8fbfd846e23824a.png" srcset="https://habrastorage.org/r/w390/getpro/habr/upload_files/b14/cd3/772/b14cd3772bc67698c8fbfd846e23824a.png, https://habrastorage.org/getpro/habr/upload_files/b14/cd3/772/b14cd3772bc67698c8fbfd846e23824a.png 2x"></a><!----><div class="tm-event-card__info"><div class="tm-event-card__date"><!----><div class="tm-event-card__day"><span>20  марта  </span></div></div><a href="/ru/events/596/" class="tm-event-card__title-link"><span>Офлайн-конференция Хабр х K-team: как удерживать таланты в 2025 году</span></a><div class="tm-event-card__places"><div class="tm-event-card__places-list"><!--[--><span class="tm-event-card__places-item"><span>Москва</span><!----></span><!--]--></div></div></div><div class="tm-event-card__footer tm-event-card__footer_widget"><a href="/ru/events/#596" class="tm-event-card__link">Больше событий в календаре</a><div class="tm-event-card__categories"><!--[--><div class="event-category__label event-category__label_type-other"><span>Другое</span></div><!--]--></div></div></div><!--]--><!----></section><!--]--></div><div class="swiper-slide"><!--[--><section class="tm-block tm-block tm-block_spacing-none" id="604" tabindex="-1"><!----><!--[--><div class="tm-event-card tm-event-card_is-widget tm-event-card_responsive"><a href="/ru/events/604/" class=""><img alt class="tm-event-card__image" data-src="https://habrastorage.org/getpro/habr/upload_files/733/9ef/194/7339ef1945f3ee6906daf89db79829d4.png" loading="lazy" src="https://habrastorage.org/r/w390/getpro/habr/upload_files/733/9ef/194/7339ef1945f3ee6906daf89db79829d4.png" srcset="https://habrastorage.org/r/w390/getpro/habr/upload_files/733/9ef/194/7339ef1945f3ee6906daf89db79829d4.png, https://habrastorage.org/getpro/habr/upload_files/733/9ef/194/7339ef1945f3ee6906daf89db79829d4.png 2x"></a><!----><div class="tm-event-card__info"><div class="tm-event-card__date"><!----><div class="tm-event-card__day"><span>20  марта  </span></div></div><a href="/ru/events/604/" class="tm-event-card__title-link"><span>IX HappyWorkForum | Аутентичность и ментальное здоровье персонала</span></a><div class="tm-event-card__places"><div class="tm-event-card__places-list"><!--[--><span class="tm-event-card__places-item"><span>Москва</span><span class="tm-event-card__places-separator"> • </span></span><span class="tm-event-card__places-item"><span>Онлайн</span><!----></span><!--]--></div></div></div><div class="tm-event-card__footer tm-event-card__footer_widget"><a href="/ru/events/#604" class="tm-event-card__link">Больше событий в календаре</a><div class="tm-event-card__categories"><!--[--><div class="event-category__label event-category__label_type-other"><span>Другое</span></div><!--]--></div></div></div><!--]--><!----></section><!--]--></div><div class="swiper-slide"><!--[--><section class="tm-block tm-block tm-block_spacing-none" id="612" tabindex="-1"><!----><!--[--><div class="tm-event-card tm-event-card_is-widget tm-event-card_responsive"><a href="/ru/events/612/" class=""><img alt class="tm-event-card__image" data-src="https://habrastorage.org/getpro/habr/upload_files/38f/10d/f4c/38f10df4c7f9d7c5d4610fe426af0ab4.png" loading="lazy" src="https://habrastorage.org/r/w390/getpro/habr/upload_files/38f/10d/f4c/38f10df4c7f9d7c5d4610fe426af0ab4.png" srcset="https://habrastorage.org/r/w390/getpro/habr/upload_files/38f/10d/f4c/38f10df4c7f9d7c5d4610fe426af0ab4.png, https://habrastorage.org/getpro/habr/upload_files/38f/10d/f4c/38f10df4c7f9d7c5d4610fe426af0ab4.png 2x"></a><!----><div class="tm-event-card__info"><div class="tm-event-card__date"><!----><div class="tm-event-card__day"><span>20  марта  </span></div></div><a href="/ru/events/612/" class="tm-event-card__title-link"><span>Вебинар «Мастерская бюджета: как управлять затратами на облачные ресурсы»</span></a><div class="tm-event-card__places"><div class="tm-event-card__places-list"><!--[--><span class="tm-event-card__places-item"><span>Онлайн</span><!----></span><!--]--></div></div></div><div class="tm-event-card__footer tm-event-card__footer_widget"><a href="/ru/events/#612" class="tm-event-card__link">Больше событий в календаре</a><div class="tm-event-card__categories"><!--[--><div class="event-category__label event-category__label_type-development"><span>Разработка</span></div><div class="event-category__label event-category__label_type-admin"><span>Администрирование</span></div><!--]--></div></div></div><!--]--><!----></section><!--]--></div><div class="swiper-slide"><!--[--><section class="tm-block tm-block tm-block_spacing-none" id="616" tabindex="-1"><!----><!--[--><div class="tm-event-card tm-event-card_is-widget tm-event-card_responsive"><a href="/ru/events/616/" class=""><img alt class="tm-event-card__image" data-src="https://habrastorage.org/getpro/habr/upload_files/523/7fb/13a/5237fb13ad7fb6fb483c49691aaec836.png" loading="lazy" src="https://habrastorage.org/r/w390/getpro/habr/upload_files/523/7fb/13a/5237fb13ad7fb6fb483c49691aaec836.png" srcset="https://habrastorage.org/r/w390/getpro/habr/upload_files/523/7fb/13a/5237fb13ad7fb6fb483c49691aaec836.png, https://habrastorage.org/getpro/habr/upload_files/523/7fb/13a/5237fb13ad7fb6fb483c49691aaec836.png 2x"></a><!----><div class="tm-event-card__info"><div class="tm-event-card__date"><!----><div class="tm-event-card__day"><span>21  марта  </span></div></div><a href="/ru/events/616/" class="tm-event-card__title-link"><span>Бизнес-конференция «Digital Brand Day 2025: Орбита 2025»</span></a><div class="tm-event-card__places"><div class="tm-event-card__places-list"><!--[--><span class="tm-event-card__places-item"><span>Москва</span><!----></span><!--]--></div></div></div><div class="tm-event-card__footer tm-event-card__footer_widget"><a href="/ru/events/#616" class="tm-event-card__link">Больше событий в календаре</a><div class="tm-event-card__categories"><!--[--><div class="event-category__label event-category__label_type-marketing"><span>Маркетинг</span></div><div class="event-category__label event-category__label_type-other"><span>Другое</span></div><!--]--></div></div></div><!--]--><!----></section><!--]--></div><div class="swiper-slide"><!--[--><section class="tm-block tm-block tm-block_spacing-none" id="608" tabindex="-1"><!----><!--[--><div class="tm-event-card tm-event-card_is-widget tm-event-card_responsive"><a href="/ru/events/608/" class=""><img alt class="tm-event-card__image" data-src="https://habrastorage.org/getpro/habr/upload_files/8fd/e04/ddd/8fde04ddd9ba3f6bcd515aa6209f96b7.png" loading="lazy" src="https://habrastorage.org/r/w390/getpro/habr/upload_files/8fd/e04/ddd/8fde04ddd9ba3f6bcd515aa6209f96b7.png" srcset="https://habrastorage.org/r/w390/getpro/habr/upload_files/8fd/e04/ddd/8fde04ddd9ba3f6bcd515aa6209f96b7.png, https://habrastorage.org/getpro/habr/upload_files/8fd/e04/ddd/8fde04ddd9ba3f6bcd515aa6209f96b7.png 2x"></a><!----><div class="tm-event-card__info"><div class="tm-event-card__date"><!----><div class="tm-event-card__day"><span>27  марта  </span></div></div><a href="/ru/events/608/" class="tm-event-card__title-link"><span>Вебинар «Контент-маркетинг здорового человека: как привлечь внимание аудитории»</span></a><div class="tm-event-card__places"><div class="tm-event-card__places-list"><!--[--><span class="tm-event-card__places-item"><span>Онлайн</span><!----></span><!--]--></div></div></div><div class="tm-event-card__footer tm-event-card__footer_widget"><a href="/ru/events/#608" class="tm-event-card__link">Больше событий в календаре</a><div class="tm-event-card__categories"><!--[--><div class="event-category__label event-category__label_type-marketing"><span>Маркетинг</span></div><div class="event-category__label event-category__label_type-other"><span>Другое</span></div><!--]--></div></div></div><!--]--><!----></section><!--]--></div><div class="swiper-slide"><!--[--><section class="tm-block tm-block tm-block_spacing-none" id="606" tabindex="-1"><!----><!--[--><div class="tm-event-card tm-event-card_is-widget tm-event-card_responsive"><a href="/ru/events/606/" class=""><img alt class="tm-event-card__image" data-src="https://habrastorage.org/getpro/habr/upload_files/b99/62a/b24/b9962ab2439c6edc80f96d7f0a847c72.png" loading="lazy" src="https://habrastorage.org/r/w390/getpro/habr/upload_files/b99/62a/b24/b9962ab2439c6edc80f96d7f0a847c72.png" srcset="https://habrastorage.org/r/w390/getpro/habr/upload_files/b99/62a/b24/b9962ab2439c6edc80f96d7f0a847c72.png, https://habrastorage.org/getpro/habr/upload_files/b99/62a/b24/b9962ab2439c6edc80f96d7f0a847c72.png 2x"></a><!----><div class="tm-event-card__info"><div class="tm-event-card__date"><!----><div class="tm-event-card__day"><span>31  марта  </span></div></div><a href="/ru/events/606/" class="tm-event-card__title-link"><span>Серия вебинаров «DevOps Middle: AvitoTech vs ecom.tech»</span></a><div class="tm-event-card__places"><div class="tm-event-card__places-list"><!--[--><span class="tm-event-card__places-item"><span>Онлайн</span><!----></span><!--]--></div></div></div><div class="tm-event-card__footer tm-event-card__footer_widget"><a href="/ru/events/#606" class="tm-event-card__link">Больше событий в календаре</a><div class="tm-event-card__categories"><!--[--><div class="event-category__label event-category__label_type-development"><span>Разработка</span></div><div class="event-category__label event-category__label_type-admin"><span>Администрирование</span></div><!--]--></div></div></div><!--]--><!----></section><!--]--></div><div class="swiper-slide"><!--[--><section class="tm-block tm-block tm-block_spacing-none" id="618" tabindex="-1"><!----><!--[--><div class="tm-event-card tm-event-card_is-widget tm-event-card_responsive"><a href="/ru/events/618/" class=""><img alt class="tm-event-card__image" data-src="https://habrastorage.org/getpro/habr/upload_files/f76/0f9/a82/f760f9a827b851a5eeca4802c643a91d.png" loading="lazy" src="https://habrastorage.org/r/w390/getpro/habr/upload_files/f76/0f9/a82/f760f9a827b851a5eeca4802c643a91d.png" srcset="https://habrastorage.org/r/w390/getpro/habr/upload_files/f76/0f9/a82/f760f9a827b851a5eeca4802c643a91d.png, https://habrastorage.org/getpro/habr/upload_files/f76/0f9/a82/f760f9a827b851a5eeca4802c643a91d.png 2x"></a><!----><div class="tm-event-card__info"><div class="tm-event-card__date"><!----><div class="tm-event-card__day"><span>3  апреля  </span></div></div><a href="/ru/events/618/" class="tm-event-card__title-link"><span>Реалити для разработчиков: узнайте, как строится новое публичное облако MWS</span></a><div class="tm-event-card__places"><div class="tm-event-card__places-list"><!--[--><span class="tm-event-card__places-item"><span>Онлайн</span><!----></span><!--]--></div></div></div><div class="tm-event-card__footer tm-event-card__footer_widget"><a href="/ru/events/#618" class="tm-event-card__link">Больше событий в календаре</a><div class="tm-event-card__categories"><!--[--><div class="event-category__label event-category__label_type-development"><span>Разработка</span></div><!--]--></div></div></div><!--]--><!----></section><!--]--></div><div class="swiper-slide"><!--[--><section class="tm-block tm-block tm-block_spacing-none" id="620" tabindex="-1"><!----><!--[--><div class="tm-event-card tm-event-card_is-widget tm-event-card_responsive"><a href="/ru/events/620/" class=""><img alt class="tm-event-card__image" data-src="https://habrastorage.org/getpro/habr/upload_files/eba/c37/879/ebac378793b959ebce42f41713e7b67f.jpg" loading="lazy" src="https://habrastorage.org/r/w390/getpro/habr/upload_files/eba/c37/879/ebac378793b959ebce42f41713e7b67f.jpg" srcset="https://habrastorage.org/r/w390/getpro/habr/upload_files/eba/c37/879/ebac378793b959ebce42f41713e7b67f.jpg, https://habrastorage.org/getpro/habr/upload_files/eba/c37/879/ebac378793b959ebce42f41713e7b67f.jpg 2x"></a><!----><div class="tm-event-card__info"><div class="tm-event-card__date"><!----><div class="tm-event-card__day"><span>3  апреля  </span></div></div><a href="/ru/events/620/" class="tm-event-card__title-link"><span>Открытая встреча «System Analysis Meetup SberHealth»</span></a><div class="tm-event-card__places"><div class="tm-event-card__places-list"><!--[--><span class="tm-event-card__places-item"><span>Москва</span><span class="tm-event-card__places-separator"> • </span></span><span class="tm-event-card__places-item"><span>Онлайн</span><!----></span><!--]--></div></div></div><div class="tm-event-card__footer tm-event-card__footer_widget"><a href="/ru/events/#620" class="tm-event-card__link">Больше событий в календаре</a><div class="tm-event-card__categories"><!--[--><div class="event-category__label event-category__label_type-analytics"><span>Аналитика</span></div><!--]--></div></div></div><!--]--><!----></section><!--]--></div><div class="swiper-slide"><!--[--><section class="tm-block tm-block tm-block_spacing-none" id="590" tabindex="-1"><!----><!--[--><div class="tm-event-card tm-event-card_is-widget tm-event-card_responsive"><a href="/ru/events/590/" class=""><img alt class="tm-event-card__image" data-src="https://habrastorage.org/getpro/habr/upload_files/31b/e68/295/31be6829578e7934fbc944396eb330b1.png" loading="lazy" src="https://habrastorage.org/r/w390/getpro/habr/upload_files/31b/e68/295/31be6829578e7934fbc944396eb330b1.png" srcset="https://habrastorage.org/r/w390/getpro/habr/upload_files/31b/e68/295/31be6829578e7934fbc944396eb330b1.png, https://habrastorage.org/getpro/habr/upload_files/31b/e68/295/31be6829578e7934fbc944396eb330b1.png 2x"></a><!----><div class="tm-event-card__info"><div class="tm-event-card__date"><!----><div class="tm-event-card__day"><span>10  апреля  </span></div></div><a href="/ru/events/590/" class="tm-event-card__title-link"><span>«GoCloud 2025» — масштабная IT-конференция про облака и AI</span></a><div class="tm-event-card__places"><div class="tm-event-card__places-list"><!--[--><span class="tm-event-card__places-item"><span>Москва</span><span class="tm-event-card__places-separator"> • </span></span><span class="tm-event-card__places-item"><span>Онлайн</span><!----></span><!--]--></div></div></div><div class="tm-event-card__footer tm-event-card__footer_widget"><a href="/ru/events/#590" class="tm-event-card__link">Больше событий в календаре</a><div class="tm-event-card__categories"><!--[--><div class="event-category__label event-category__label_type-development"><span>Разработка</span></div><div class="event-category__label event-category__label_type-admin"><span>Администрирование</span></div><div class="event-category__label event-category__label_type-management"><span>Менеджмент</span></div><!--]--></div></div></div><!--]--><!----></section><!--]--></div><div class="swiper-slide"><!--[--><section class="tm-block tm-block tm-block_spacing-none" id="516" tabindex="-1"><!----><!--[--><div class="tm-event-card tm-event-card_is-widget tm-event-card_responsive"><a href="/ru/events/516/" class=""><img alt class="tm-event-card__image" data-src="https://habrastorage.org/getpro/habr/upload_files/0e9/3a8/3ec/0e93a83ecea09f806d1df907ddb036a4.jpg" loading="lazy" src="https://habrastorage.org/r/w390/getpro/habr/upload_files/0e9/3a8/3ec/0e93a83ecea09f806d1df907ddb036a4.jpg" srcset="https://habrastorage.org/r/w390/getpro/habr/upload_files/0e9/3a8/3ec/0e93a83ecea09f806d1df907ddb036a4.jpg, https://habrastorage.org/getpro/habr/upload_files/0e9/3a8/3ec/0e93a83ecea09f806d1df907ddb036a4.jpg 2x"></a><!----><div class="tm-event-card__info"><div class="tm-event-card__date"><!----><div class="tm-event-card__day"><span>25 – 26  апреля  </span></div></div><a href="/ru/events/516/" class="tm-event-card__title-link"><span>IT-конференция Merge Tatarstan 2025</span></a><div class="tm-event-card__places"><div class="tm-event-card__places-list"><!--[--><span class="tm-event-card__places-item"><span>Казань</span><!----></span><!--]--></div></div></div><div class="tm-event-card__footer tm-event-card__footer_widget"><a href="/ru/events/#516" class="tm-event-card__link">Больше событий в календаре</a><div class="tm-event-card__categories"><!--[--><div class="event-category__label event-category__label_type-development"><span>Разработка</span></div><div class="event-category__label event-category__label_type-marketing"><span>Маркетинг</span></div><div class="event-category__label event-category__label_type-other"><span>Другое</span></div><!--]--></div></div></div><!--]--><!----></section><!--]--></div><div class="swiper-slide"><!--[--><section class="tm-block tm-block tm-block_spacing-none" id="610" tabindex="-1"><!----><!--[--><div class="tm-event-card tm-event-card_is-widget tm-event-card_responsive"><a href="/ru/events/610/" class=""><img alt class="tm-event-card__image" data-src="https://habrastorage.org/getpro/habr/upload_files/652/12d/998/65212d998fb4939d9787bd9c726d2acb.png" loading="lazy" src="https://habrastorage.org/r/w390/getpro/habr/upload_files/652/12d/998/65212d998fb4939d9787bd9c726d2acb.png" srcset="https://habrastorage.org/r/w390/getpro/habr/upload_files/652/12d/998/65212d998fb4939d9787bd9c726d2acb.png, https://habrastorage.org/getpro/habr/upload_files/652/12d/998/65212d998fb4939d9787bd9c726d2acb.png 2x"></a><!----><div class="tm-event-card__info"><div class="tm-event-card__date"><!----><div class="tm-event-card__day"><span>20 – 22  июня  </span></div></div><a href="/ru/events/610/" class="tm-event-card__title-link"><span>Летняя айти-тусовка Summer Merge</span></a><div class="tm-event-card__places"><div class="tm-event-card__places-list"><!--[--><span class="tm-event-card__places-item"><span>Ульяновская область</span><!----></span><!--]--></div></div></div><div class="tm-event-card__footer tm-event-card__footer_widget"><a href="/ru/events/#610" class="tm-event-card__link">Больше событий в календаре</a><div class="tm-event-card__categories"><!--[--><div class="event-category__label event-category__label_type-development"><span>Разработка</span></div><div class="event-category__label event-category__label_type-other"><span>Другое</span></div><!--]--></div></div></div><!--]--><!----></section><!--]--></div><!--]--><!--]--></div><!----><!--[--><button class="swiper-button-prev"><span class="tm-svg-icon__wrapper swiper-button-icon"><svg class="tm-svg-img tm-svg-icon" height="24" width="24"><title>Влево</title><use xlink:href="/img/megazord-v28.371b7fa3..svg#arrow-back"></use></svg></span></button><button class="swiper-button-next"><span class="tm-svg-icon__wrapper swiper-button-icon"><svg class="tm-svg-img tm-svg-icon" height="24" width="24"><title>Вправо</title><use xlink:href="/img/megazord-v28.371b7fa3..svg#arrow-back"></use></svg></span></button><!--]--></div><!--]--></div><!--]--><!----></section><!--]--><!--]--></div><!--]--><!--]--></div></div><!--]--><!--]--></div></div><div class="tm-page__sidebar"><!--[--><!----><!--]--></div></div><!----><!--]--></div></div></main><!----></div><!----><div class="tm-footer"><div class="tm-page-width"><!--[--><div class="tm-footer__container"><div class="tm-footer__title"><a class="tm-svg-icon__wrapper tm-footer__title-link" href="/ru/"><svg class="tm-svg-img tm-svg-icon" height="16" width="16"><title>Хабр</title><use xlink:href="/img/habr-logo-ru.svg#logo"></use></svg></a></div><div class="tm-footer__social"><!--[--><a class="tm-svg-icon__wrapper tm-social-icons__icon" href="https://www.facebook.com/habrahabr.ru" rel="nofollow noopener noreferrer" target="_blank"><svg class="tm-svg-img tm-svg-icon" height="36" width="36"><title>Facebook</title><use xlink:href="/img/new-social-icons-sprite.svg#social-logo-facebook"></use></svg></a><a class="tm-svg-icon__wrapper tm-social-icons__icon" href="https://twitter.com/habr_com" rel="nofollow noopener noreferrer" target="_blank"><svg class="tm-svg-img tm-svg-icon" height="36" width="36"><title>Twitter</title><use xlink:href="/img/new-social-icons-sprite.svg#social-logo-twitter"></use></svg></a><a class="tm-svg-icon__wrapper tm-social-icons__icon" href="https://vk.com/habr" rel="nofollow noopener noreferrer" target="_blank"><svg class="tm-svg-img tm-svg-icon" height="36" width="36"><title>VK</title><use xlink:href="/img/new-social-icons-sprite.svg#social-logo-vk"></use></svg></a><a class="tm-svg-icon__wrapper tm-social-icons__icon" href="https://telegram.me/habr_com" rel="nofollow noopener noreferrer" target="_blank"><svg class="tm-svg-img tm-svg-icon" height="36" width="36"><title>Telegram</title><use xlink:href="/img/new-social-icons-sprite.svg#social-logo-telegram"></use></svg></a><a class="tm-svg-icon__wrapper tm-social-icons__icon" href="https://www.youtube.com/channel/UCd_sTwKqVrweTt4oAKY5y4w" rel="nofollow noopener noreferrer" target="_blank"><svg class="tm-svg-img tm-svg-icon" height="36" width="36"><title>Youtube</title><use xlink:href="/img/new-social-icons-sprite.svg#social-logo-youtube"></use></svg></a><a class="tm-svg-icon__wrapper tm-social-icons__icon" href="https://dzen.ru/habr" rel="nofollow noopener noreferrer" target="_blank"><svg class="tm-svg-img tm-svg-icon" height="36" width="36"><title>Яндекс Дзен</title><use xlink:href="/img/new-social-icons-sprite.svg#social-logo-dzen"></use></svg></a><!--]--></div><!--teleport start--><!--teleport end--><button class="tm-footer__link"><svg class="tm-svg-img tm-footer__icon" height="16" width="16"><title>Язык</title><use xlink:href="/img/megazord-v28.371b7fa3..svg#lang"></use></svg> Настройка языка</button><a href="/ru/feedback/" class="tm-footer__link">Техническая поддержка</a><div class="tm-footer-copyright"><span class="tm-copyright"><span class="tm-copyright__years">© 2006–2025, </span><span class="tm-copyright__name"><a class="tm-copyright__link" href="https://company.habr.com/" rel="noopener" target="_blank">Habr</a></span></span></div></div><!--]--></div></div><!----><!--]--></div><!----></div><script>window.__INITIAL_STATE__={"adblock":{"hasAcceptableAdsFilter":false,"hasAdblock":false},"articlesList":{"articlesList":{"275255":{"id":"275255","timePublished":"2016-04-26T15:31:41+00:00","isCorporative":false,"lang":"ru","titleHtml":"Пишем MVP приложение на Kotlin под Android","leadData":{"textHtml":"\u003Cdiv style=\"text-align:center;\"\u003E\u003Cimg src=\"https:\u002F\u002Fhabrastorage.org\u002Ffiles\u002Fad1\u002Fe16\u002Fe49\u002Fad1e16e4935a4ca487ccd75f7aa277fe.png\"\u003E\u003C\u002Fdiv\u003E\u003Cbr\u003E\r\n\u003Cbr\u003E\r\nРазработка приложений на Kotlin под Android набирает популярность среди разработчиков, однако статей в русскоязычном сегменте Интернета довольно мало. Я решил немного подправить ситуацию, и написать туториал по разработке приложения на Kotlin. Мы напишем полноценное приложение с использованием всех трендовых библиотек (кроме RxJava) в мире Android-разработки. В конце у нас должно получиться расширяемое и легко тестируемое приложение (сами тесты мы писать не будем).","imageUrl":null,"buttonTextHtml":"Читать дальше →","image":null},"editorVersion":"1.0","postType":"article","postLabels":[],"author":{"id":"1165872","alias":"ImangazalievM","fullname":"Махач Имангазалиев","avatarUrl":"\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Favatars\u002F00f\u002F735\u002Ff8e\u002F00f735f8e8901eb06fa51ceff1292656.png","speciality":"Android-программист","scoreStats":{"score":12,"votesCount":28},"rating":0,"relatedData":null,"contacts":[],"authorContacts":[],"paymentDetails":{"paymentYandexMoney":null,"paymentPayPalMe":null,"paymentWebmoney":null},"donationsMethod":null,"isInBlacklist":null,"careerProfile":null},"statistics":{"commentsCount":24,"favoritesCount":303,"readingCount":113118,"score":18,"votesCount":20,"votesCountPlus":19,"votesCountMinus":1},"hubs":[{"id":"19441","alias":"kotlin","type":"collective","title":"Kotlin","titleHtml":"Kotlin","isProfiled":true,"relatedData":null},{"id":"6345","alias":"mobile_dev","type":"collective","title":"Разработка мобильных приложений","titleHtml":"Разработка мобильных приложений","isProfiled":true,"relatedData":null},{"id":"17107","alias":"android_dev","type":"collective","title":"Разработка под Android","titleHtml":"Разработка под Android","isProfiled":true,"relatedData":null}],"flows":[{"id":"1","alias":"develop","title":"Разработка","titleHtml":"Разработка"}],"relatedData":{"vote":null,"unreadCommentsCount":0,"bookmarked":false,"canComment":false,"canEdit":false,"canViewVotes":false,"votePlus":{"canVote":false,"isChargeEnough":false,"isKarmaEnough":false,"isVotingOver":true,"isPublicationLimitEnough":false},"voteMinus":{"canVote":false,"isChargeEnough":false,"isKarmaEnough":false,"isVotingOver":true,"isPublicationLimitEnough":false},"canModerateComments":false,"trackerSubscribed":false,"emailSubscribed":false},"textHtml":"\u003Cdiv xmlns=\"http:\u002F\u002Fwww.w3.org\u002F1999\u002Fxhtml\"\u003E\u003Cdiv style=\"text-align:center;\"\u003E\u003Cimg src=\"https:\u002F\u002Fhabrastorage.org\u002Fr\u002Fw1560\u002Ffiles\u002Fad1\u002Fe16\u002Fe49\u002Fad1e16e4935a4ca487ccd75f7aa277fe.png\" data-src=\"https:\u002F\u002Fhabrastorage.org\u002Ffiles\u002Fad1\u002Fe16\u002Fe49\u002Fad1e16e4935a4ca487ccd75f7aa277fe.png\"\u002F\u003E\u003C\u002Fdiv\u003E\u003Cbr\u002F\u003E\n\u003Cbr\u002F\u003E\nРазработка приложений на Kotlin под Android набирает популярность среди разработчиков, однако статей в русскоязычном сегменте Интернета довольно мало. Я решил немного подправить ситуацию, и написать туториал по разработке приложения на Kotlin. Мы напишем полноценное приложение с использованием всех трендовых библиотек (кроме RxJava) в мире Android-разработки. В конце у нас должно получиться расширяемое и легко тестируемое приложение (сами тесты мы писать не будем).\u003Ca name=\"habracut\"\u003E\u003C\u002Fa\u003E\u003Cbr\u002F\u003E\n\u003Cbr\u002F\u003E\n\u003Cb\u003EВнимание!\u003C\u002Fb\u003E В статье описывается создание приложения версии \u003Ca href=\"https:\u002F\u002Fgithub.com\u002FImangazalievM\u002FNotelin\u002Ftree\u002F1.0\"\u003E1.0\u003C\u002Fa\u003E. Текущий код в репозитории может отличаться от описываемого в статье.\u003Cbr\u002F\u003E\n\u003Cbr\u002F\u003E\nНаверное, некоторые из вас знают, что помимо языка программирования Kotlin JetBrains также разрабатывает библиотеку \u003Ca href=\"https:\u002F\u002Fgithub.com\u002FKotlin\u002Fanko\"\u003EAnko\u003C\u002Fa\u003E, для создания UI приложения, в качестве замены обычным XML-файлам. Мы не будем использовать его в нашем проекте, дабы не ставить в затруднительное положение людей не знакомых с Anko.\u003Cbr\u002F\u003E\n\u003Cbr\u002F\u003E\nСодержание:\u003Cbr\u002F\u003E\n\u003Cul\u003E\n\u003Cli\u003E\u003Ca href=\"#ide-configuring\"\u003EНастройка Android Studio\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#what-will-write\"\u003EЧто будем писать?\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#application-structure\"\u003EСтруктура приложения\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#creating-model\"\u003EСоздаем Model\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#main-screen\"\u003EЭкран с заметками\u003C\u002Fa\u003E\u003Cbr\u002F\u003E\n \u003Cul\u003E\n\u003Cli\u003E\u003Ca href=\"#creating-main-vp\"\u003EСоздаем MainView и MainPresenter\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#notes-search\"\u003EРеализуем поиск по заметкам\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#notes-sorting\"\u003EРеализуем сортировку заметок\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#note-screen\"\u003EЭкран с содержанием заметки\u003C\u002Fa\u003E\u003Cbr\u002F\u003E\n \u003Cul\u003E\n\u003Cli\u003E\u003Ca href=\"#creating-note-vp\"\u003EСоздаем NoteView и NotePresenter\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#note-saving\"\u003EРеализуем сохранение заметки\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#thanks\"\u003EБлагодарности\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#conclusion\"\u003EЗаключение\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\u003Cbr\u002F\u003E\n\u003Cbr\u002F\u003E\n\u003Cbr\u002F\u003E\n\u003Ch1\u003EНастройка Android Studio\u003C\u002Fh1\u003E\u003Cbr\u002F\u003E\n\u003Cbr\u002F\u003E\nДля написания приложений на языке Kotlin, Android Studio нужен специальный плагин. Инструкцию по установке плагина можно найти \u003Ca href=\"http:\u002F\u002Fjava-help.ru\u002Fkotlin-introduction\u002F\"\u003Eздесь\u003C\u002Fa\u003E. Также не забудьте отключить функцию «Instant Run» в настройках Android Studio, т. к. на данный момент она не поддерживается плагином Kotlin.\u003Cbr\u002F\u003E\n\u003Cbr\u002F\u003E\nДля корректной работы генерации кода нужно использовать версию плагина не ниже 1.0.1. Я использовал версию \u003Ca href=\"https:\u002F\u002Fdiscuss.kotlinlang.org\u002Ft\u002Fkotlin-1-0-2-eap\u002F1581\u002F1\"\u003EKotlin 1.0.2 EAP\u003C\u002Fa\u003E. Вот так выглядит файл build.gradle приложения в моем проекте:\u003Cbr\u002F\u003E\n\u003Cbr\u002F\u003E\n\u003Cpre\u003E\u003Ccode class=\"java\"\u003Eapply plugin: 'com.android.application'\napply plugin: 'kotlin-android-extensions'\napply plugin: 'kotlin-android'\n\nandroid {\n    compileSdkVersion 23\n    buildToolsVersion \"23.0.2\"\n\n    defaultConfig {\n        applicationId \"imangazaliev.notelin\"\n        minSdkVersion 15\n        targetSdkVersion 23\n        versionCode 1\n        versionName \"1.0\"\n    }\n\n    buildTypes {\n        release {\n            minifyEnabled false\n            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'\n        }\n    }\n    sourceSets {\n        main.java.srcDirs += 'src\u002Fmain\u002Fkotlin'\n        androidTest.java.srcDirs += 'src\u002FandroidTest\u002Fkotlin'\n    }\n}\n\ndependencies {\n    ...\n}\n\nkapt {\n    generateStubs = true\n}\n\nbuildscript {\n    ext.kotlin_version = '1.0.2-eap-15'\n    repositories {\n        mavenCentral()\n        maven { url 'https:\u002F\u002Fdl.bintray.com\u002Fkotlin\u002Fkotlin-eap' }\n    }\n    dependencies {\n        classpath \"org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version\"\n    }\n}\nrepositories {\n    mavenCentral()\n}\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cbr\u002F\u003E\n\u003Cbr\u002F\u003E\n\u003Cbr\u002F\u003E\n\u003Ch1\u003EЧто будем писать?\u003C\u002Fh1\u003E\u003Cbr\u002F\u003E\n\u003Cbr\u002F\u003E\nИтак, для начала нам нужно определиться что же мы будем писать? Недолго думая я остановился на приложении-заметках. Название тоже придумалось легко — Notelin. Приложение очень простое и состоит из двух экранов:\u003Cbr\u002F\u003E\n\u003Cbr\u002F\u003E\n — Главный экран — содержит в себе список с заметками\u003Cbr\u002F\u003E\n — Экран заметки — здесь можно смотреть\u002Fредактировать содержание выбранной заметки\u003Cbr\u002F\u003E\n\u003Cbr\u002F\u003E\nТребования к приложению небольшие: \u003Cbr\u002F\u003E\n\u003Cbr\u002F\u003E\n — Добавление\u002Fпросмотр\u002Fудаление заметки\u003Cbr\u002F\u003E\n — Просмотр информации о заметке\u003Cbr\u002F\u003E\n — Сортировка заметок по заголовку и по дате\u003Cbr\u002F\u003E\n — Поиск по заголовкам заметок\u003Cbr\u002F\u003E\n\u003Cbr\u002F\u003E\n\u003Ch1\u003EИспользуемые библиотеки\u003C\u002Fh1\u003E\u003Cbr\u002F\u003E\n\u003Cbr\u002F\u003E\nДля работы с базой данных я буду использовать библиотеку \u003Cb\u003EAndroid Active\u003C\u002Fb\u003E. Урок по работе с ней можно найти по этой \u003Ca href=\"http:\u002F\u002Fjava-help.ru\u002Factiveandroid-orm-review\u002F\"\u003Eссылке\u003C\u002Fa\u003E. Для реализации Depency Injection была использована библиотека Dagger 2. На Хабре есть много статей по работе с ней. Основой всего приложения будет библиотека \u003Ca href=\"https:\u002F\u002Fhabrahabr.ru\u002Fpost\u002F276189\u002F\"\u003EMoxy\u003C\u002Fa\u003E. С ее помощью мы реализуем паттерн MVP в нашем проекте. Она полностью решает проблемы жизненного цикла, благодаря чему вы можете не переживать о пересоздании компонентов вашего приложения. Также мы воспользуемся набором расширений для языка Kotlin в Android — \u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fpawegio\u002FKAndroid\"\u003EKAndroid\u003C\u002Fa\u003E. Про остальные библиотеки я буду рассказывать по ходу дела. \u003Cbr\u002F\u003E\n\u003Cbr\u002F\u003E\nНиже приведен список зависимостей проекта:\u003Cbr\u002F\u003E\n\u003Cbr\u002F\u003E\n\u003Cpre\u003E\u003Ccode class=\"java\"\u003Eallprojects {\n    repositories {\n        jcenter()\n        mavenCentral()\n        maven { url \"https:\u002F\u002Foss.sonatype.org\u002Fcontent\u002Frepositories\u002Fsnapshots\u002F\" }\n        maven { url \"https:\u002F\u002Fmvn.arello-mobile.com\u002F\" }\n        maven { url \"https:\u002F\u002Fjitpack.io\" }\n        maven { url 'https:\u002F\u002Fdl.bintray.com\u002Fkotlin\u002Fkotlin-eap' }\n    }\n}\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cbr\u002F\u003E\n\u003Cbr\u002F\u003E\nА вот так выглядит список зависимостей приложения:\u003Cbr\u002F\u003E\n\u003Cbr\u002F\u003E\n\u003Cpre\u003E\u003Ccode class=\"java\"\u003Edependencies {\n    compile \"org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version\"\n    compile \"com.android.support:appcompat-v7:23.1.1\"\n    compile 'com.android.support:recyclerview-v7:23.1.1'\n    compile 'com.android.support:cardview-v7:23.1.1'\n    \u002F\u002Fдополнительные возможности для Android Kotlin\n    compile 'com.pawegio.kandroid:kandroid:0.5.0@aar'\n    \u002F\u002FActiveAndroid DB\n    compile 'com.michaelpardo:activeandroid:3.1.0-SNAPSHOT'\n    \u002F\u002FFAB\n    compile 'com.melnykov:floatingactionbutton:1.3.0'\n    \u002F\u002FMaterialDialog\n    compile 'com.github.afollestad.material-dialogs:core:0.8.5.6@aar'\n    \u002F\u002FMVP\n    compile 'com.arello-mobile:moxy:0.4.2'\n    compile 'com.arello-mobile:moxy-android:0.4.2'\n    kapt 'com.arello-mobile:moxy-compiler:0.4.2'\n    \u002F\u002FRX\n    compile 'io.reactivex:rxjava:1.1.0'\n    compile 'io.reactivex:rxandroid:1.1.0'\n    \u002F\u002FDepency Injection\n    kapt 'com.google.dagger:dagger-compiler:2.0.2'\n    compile 'com.google.dagger:dagger:2.0.2'\n    provided 'org.glassfish:javax.annotation:10.0-b28'\n    \u002F\u002FEventBus\n    compile 'org.greenrobot:eventbus:3.0.0'\n}\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cbr\u002F\u003E\n\u003Cbr\u002F\u003E\nОбратите внимание, что вместо apt я использую \u003Ca href=\"http:\u002F\u002Fblog.jetbrains.com\u002Fkotlin\u002F2015\u002F06\u002Fbetter-annotation-processing-supporting-stubs-in-kapt\u002F\"\u003Ekapt\u003C\u002Fa\u003E. Это плагин для Gradle, позволяющий аннотировать Kotlin-элементы.\u003Cbr\u002F\u003E\n\u003Cbr\u002F\u003E\n\u003Ch1\u003EСтруктура приложения\u003C\u002Fh1\u003E\u003Cbr\u002F\u003E\n\u003Cbr\u002F\u003E\nВот так выглядит структура нашего проекта в конечном варианте:\u003Cbr\u002F\u003E\n\u003Cbr\u002F\u003E\n\u003Cimg src=\"https:\u002F\u002Fhabrastorage.org\u002Fr\u002Fw1560\u002Ffiles\u002Fd9d\u002F739\u002Fb13\u002Fd9d739b131b74d4d807d6a62e35dd674.png\" data-src=\"https:\u002F\u002Fhabrastorage.org\u002Ffiles\u002Fd9d\u002F739\u002Fb13\u002Fd9d739b131b74d4d807d6a62e35dd674.png\"\u002F\u003E\u003Cbr\u002F\u003E\n\u003Cbr\u002F\u003E\n\u003Ch1\u003EСоздаем Model\u003C\u002Fh1\u003E\u003Cbr\u002F\u003E\n\u003Cbr\u002F\u003E\nУ заметок будет четыре поля:\u003Cbr\u002F\u003E\n\u003Cbr\u002F\u003E\n\u003Cul\u003E\n\u003Cli\u003EДата создания\u003C\u002Fli\u003E\n\u003Cli\u003EДата изменения\u003C\u002Fli\u003E\n\u003Cli\u003EЗаголовок\u003C\u002Fli\u003E\n\u003Cli\u003EТекст\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\u003Cbr\u002F\u003E\n\u003Cbr\u002F\u003E\nРеализуем все это в коде:\u003Cbr\u002F\u003E\n\u003Cbr\u002F\u003E\n\u003Cpre\u003E\u003Ccode class=\"java\"\u003Eclass Note : Model {\n\n    @Column(name = \"title\")\n    public var title: String? = null\n    @Column(name = \"text\")\n    public var text: String? = null\n    @Column(name = \"create_date\")\n    public var createDate: Date? = null\n    @Column(name = \"change_date\")\n    public var changeDate: Date? = null\n\n    constructor(title: String, createDate: Date, changeDate: Date) {\n        this.title = title\n        this.createDate = createDate\n        this.changeDate = changeDate\n    }\n\n    constructor()\n\n    fun getInfo(): String = \"Название:\\n$title\\n\" +\n                                       \"Время создания:\\n${formatDate(createDate)}\\n\" +\n                                       \"Время изменения:\\n${formatDate(changeDate)}\";\n}\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cbr\u002F\u003E\n\u003Cbr\u002F\u003E\nПо этой модели библиотекой ActiveAndroid будет создана БД, в которой будут храниться наши заметки. Если вы заметили, у нас есть два конструктора: пустой и с параметрами. Первый конструктор будем использовать мы, а второй — ActiveAndroid. Наша модель наследуется от класса Model, благодаря чему мы можем сохранять и удалять наши заметки просто вызывая методы \u003Cb\u003Esave()\u003C\u002Fb\u003E и \u003Cb\u003Edelete()\u003C\u002Fb\u003E, например:\u003Cbr\u002F\u003E\n\u003Cbr\u002F\u003E\n\u003Cpre\u003E\u003Ccode class=\"java\"\u003Evar note = Note(\"Новая заметка\", Date())\nnote.save()\n...\nnote.delete()\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cbr\u002F\u003E\n\u003Cbr\u002F\u003E\nНо прежде чем использовать нашу модель, нам нужно прописать кое-какие мета-данные в Manifest-файле:\u003Cbr\u002F\u003E\n\u003Cbr\u002F\u003E\n\u003Cpre\u003E\u003Ccode class=\"xml\"\u003E&lt;meta-data android:name=\"AA_DB_NAME\" android:value=\"Notelin.db\" \u002F&gt;\n&lt;meta-data android:name=\"AA_DB_VERSION\" android:value=\"1\" \u002F&gt;\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cbr\u002F\u003E\n\u003Cbr\u002F\u003E\nДумаю, все понятно без комментариев. Осталось унаследовать класс Application от com.activeandroid.app.Application:\u003Cbr\u002F\u003E\n\u003Cbr\u002F\u003E\n\u003Cpre\u003E\u003Ccode class=\"java\"\u003Eclass NotelinApplication : Application() {\n...\n}\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cbr\u002F\u003E\n\u003Cbr\u002F\u003E\nЧтобы приложение было менее зависимо от БД я создал обертку \u003Ca href=\"https:\u002F\u002Fgithub.com\u002FImangazalievM\u002FNotelin\u002Fblob\u002F1.0\u002Fmaster\u002Fapp\u002Fsrc\u002Fmain\u002Fkotlin\u002Fimangazaliev\u002Fnotelin\u002Fmvp\u002Fmodels\u002FNoteDao.kt\"\u003ENoteDao\u003C\u002Fa\u003E над нашей моделью, в которой будут происходить все операции по созданию, сохранению, обновлению и удалению заметок:\u003Cbr\u002F\u003E\n\u003Cbr\u002F\u003E\n\u003Cpre\u003E\u003Ccode class=\"java\"\u003Eclass NoteDao {\n\n    \u002F**\n     * Создает новую заметку\n     *\u002F\n    fun createNote(): Note {\n        var note = Note(\"Новая заметка\", Date())\n        note.save()\n        return note\n    }\n\n    \u002F**\n     * Сохраняет заметку в БД\n     *\u002F\n    fun saveNote(note: Note) = note.save()\n\n    \u002F**\n     * Загружает все существующие заметки и передает во View\n     *\u002F\n    fun loadAllNotes() = Select().from(Note::class.java).execute&lt;Note&gt;()\n\n    \u002F**\n     * Ищет заметку по id и возвращает ее\n     *\u002F\n    fun getNoteById(noteId: Long) = Select().from(Note::class.java).where(\"id = ?\", noteId).executeSingle&lt;Note&gt;()\n\n    \u002F**\n     * Удаляет все существующие заметки\n     *\u002F\n    fun deleteAllNotes() {\n        Delete().from(Note::class.java).execute&lt;Note&gt;();\n    }\n\n    \u002F**\n     * Удаляет заметку по id\n     *\u002F\n    fun deleteNote(note: Note) {\n        note.delete()\n    }\n\n}\n\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cbr\u002F\u003E\n\u003Cbr\u002F\u003E\nНаверное, вы заметили, что для создания объектов мы не использовали ключевое слово \u003Cb\u003Enew\u003C\u002Fb\u003E — это отличие Kotlin от Java. \u003Cbr\u002F\u003E\n\u003Cbr\u002F\u003E\n\u003Cbr\u002F\u003E\n\u003Ch1\u003EЭкран с заметками\u003C\u002Fh1\u003E\u003Cbr\u002F\u003E\n\u003Cbr\u002F\u003E\nТакже является главным экраном приложения. На нем пользователь может добавить\u002Fудалить заметку, просмотреть информацию о заметке, отсортировать их по дате или названию, а также произвести поиск по заголовкам.\u003Cbr\u002F\u003E\n\u003Cbr\u002F\u003E\n\u003Cbr\u002F\u003E\n\u003Ch3\u003EСоздаем MainView и MainPresenter\u003C\u002Fh3\u003E\u003Cbr\u002F\u003E\n\u003Cbr\u002F\u003E\n\u003Cimg width=\"40%\" src=\"https:\u002F\u002Fhabrastorage.org\u002Fr\u002Fw1560\u002Ffiles\u002F10b\u002Fd1e\u002F6b8\u002F10bd1e6b8e08489abc94a0c89c9c74c4.png\" data-src=\"https:\u002F\u002Fhabrastorage.org\u002Ffiles\u002F10b\u002Fd1e\u002F6b8\u002F10bd1e6b8e08489abc94a0c89c9c74c4.png\"\u002F\u003E\u003Cbr\u002F\u003E\n\u003Cbr\u002F\u003E\nТеперь нам нужно перевести все это в код. Для начала создадим интерфейс нашей View:\u003Cbr\u002F\u003E\n\u003Cbr\u002F\u003E\n\u003Cpre\u003E\u003Ccode class=\"java\"\u003E@StateStrategyType(value = AddToEndSingleStrategy::class)\ninterface MainView : MvpView {\n\n    fun onNotesLoaded(notes: List&lt;Note&gt;)\n\n    fun updateView()\n\n    fun onSearchResult(notes: List&lt;Note&gt;)\n\n    fun onAllNotesDeleted()\n\n    fun onNoteDeleted()\n\n    fun showNoteInfoDialog(noteInfo: String)\n\n    fun hideNoteInfoDialog()\n\n    fun showNoteDeleteDialog(notePosition: Int)\n\n    fun hideNoteDeleteDialog()\n\n    fun showNoteContextDialog(notePosition: Int)\n\n    fun hideNoteContextDialog()\n\n}\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cbr\u002F\u003E\n\u003Cbr\u002F\u003E\nДалее мы реализуем созданный интерфейс в нашей активити:\u003Cbr\u002F\u003E\n\u003Cbr\u002F\u003E\n\u003Cpre\u003E\u003Ccode class=\"java\"\u003Eclass MainActivity : MvpAppCompatActivity(), MainView {\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cbr\u002F\u003E\n\u003Cbr\u002F\u003E\nОдной из особенностей Kotlin, является то, что наследование и реализация интерфейсов указывается через двоеточие после имени класса. Также не имеет разницы идет название родительского класса перед интерфейсами, после или даже между ними, главное, чтобы класс в списке был один. Т. е. запись выше могла бы выглядеть так:\u003Cbr\u002F\u003E\n\u003Cbr\u002F\u003E\n\u003Cpre\u003E\u003Ccode class=\"java\"\u003Eclass MainActivity : MainView, MvpAppCompatActivity() {\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cbr\u002F\u003E\n\u003Cbr\u002F\u003E\nЕсли же вы попытаетесь добавить через запятую название еще одного класса, то IDE выдаст ошибку и подчеркнет красной линией название класса, который идет вторым.\u003Cbr\u002F\u003E\n\u003Cbr\u002F\u003E\nПока оставим методы пустыми. Как видите, активити наследуется от \u003Ca href=\"https:\u002F\u002Fgithub.com\u002FImangazalievM\u002FNotelin\u002Fblob\u002F1.0\u002Fmaster\u002Fapp\u002Fsrc\u002Fmain\u002Fkotlin\u002Fimangazaliev\u002Fnotelin\u002Fmvp\u002Fcommon\u002FMvpAppCompatActivity.java\"\u003EMvpAppCompatActivity\u003C\u002Fa\u003E. Это нужно для того, чтобы активити могла восстанавливать состояние при повороте экрана. \u003Cbr\u002F\u003E\n\u003Cbr\u002F\u003E\nСоздадим класс презентер:\u003Cbr\u002F\u003E\n\u003Cbr\u002F\u003E\n\u003Cpre\u003E\u003Ccode class=\"java\"\u003E@InjectViewState\nclass MainPresenter: MvpPresenter&lt;MainView&gt;() {\n\n}\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cbr\u002F\u003E\n\u003Cbr\u002F\u003E\nПрезентер также наследуется от MvpPresenter, которому мы указываем с какой View мы будем работать.Осталось инжектировать нашу модель в презентер. Для этого мы создаем модуль — поставщика NoteDao:\u003Cbr\u002F\u003E\n\u003Cbr\u002F\u003E\n\u003Cpre\u003E\u003Ccode class=\"java\"\u003E@Module\nclass NoteDaoModule {\n\n    @Provides\n    @Singleton\n    fun provideNoteDao() : NoteDao= NoteDao()\n\n}\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cbr\u002F\u003E\n\u003Cbr\u002F\u003E\nСоздадим Component для инжектирования презентера:\u003Cbr\u002F\u003E\n\u003Cbr\u002F\u003E\n\u003Cpre\u003E\u003Ccode class=\"java\"\u003E@Singleton\n@Component(modules = arrayOf(NoteDaoModule::class))\ninterface AppComponent {\n\n    fun inject(mainPresenter : MainPresenter)\n\n}\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cbr\u002F\u003E\n\u003Cbr\u002F\u003E\nТеперь нам нужно создать статический экземпляр класса AppComponent в классе Application:\u003Cbr\u002F\u003E\n\u003Cbr\u002F\u003E\n\u003Cpre\u003E\u003Ccode class=\"java\"\u003Eclass NotelinApplication : Application() {\n\n    companion object {\n        lateinit var graph: AppComponent\n    }\n\n    override fun onCreate() {\n        super.onCreate()\n\n        graph = DaggerAppComponent.builder().noteDaoModule(NoteDaoModule()).build()\n    }\n\n}\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cbr\u002F\u003E\n\u003Cbr\u002F\u003E\nТеперь мы можем инжектировать нашу модель в презентере:\u003Cbr\u002F\u003E\n\u003Cbr\u002F\u003E\n\u003Cpre\u003E\u003Ccode class=\"java\"\u003E@InjectViewState\nclass MainPresenter : MvpPresenter&lt;MainView&gt;() {\n\n    @Inject\n    lateinit var mNoteDao: NoteDao\n\n    init {\n        NotelinApplication.graph.inject(this)\n    }\n\n}\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cbr\u002F\u003E\n\u003Cbr\u002F\u003E\nДля взаимодействия MainView и MainPresenter нам нужно создать переменную в MainActivity:\u003Cbr\u002F\u003E\n\u003Cbr\u002F\u003E\n\u003Cpre\u003E\u003Ccode class=\"java\"\u003E@InjectPresenter\nlateinit var mPresenter: MainPresenter\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cbr\u002F\u003E\n\u003Cbr\u002F\u003E\nПлагин Moxy сам привяжет View к фрагменту и произведет другие необходимые действия.\u003Cbr\u002F\u003E\n\u003Cbr\u002F\u003E\nСоздадим разметку экрана со списком и плавающей кнопкой. Файл \u003Cb\u003Eactivity_main.xml\u003C\u002Fb\u003E:\u003Cbr\u002F\u003E\n\u003Cbr\u002F\u003E\n\u003Cpre\u003E\u003Ccode class=\"xml\"\u003E&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;\n&lt;FrameLayout\n    xmlns:app=\"http:\u002F\u002Fschemas.android.com\u002Fapk\u002Fres-auto\"\n    xmlns:android=\"http:\u002F\u002Fschemas.android.com\u002Fapk\u002Fres\u002Fandroid\"\n    xmlns:tools=\"http:\u002F\u002Fschemas.android.com\u002Ftools\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    tools:context=\".ui.activities.MainActivity\"&gt;\n    &lt;TextView\n        android:id=\"@+id\u002FtvNotesIsEmpty\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\"\n        android:text=\"@string\u002Fnotes_is_empty\"\n        android:gravity=\"center\"\n        \u002F&gt;\n    &lt;android.support.v7.widget.RecyclerView\n        android:id=\"@+id\u002FrvNotesList\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\"\n        android:scrollbars=\"vertical\"\n        app:layoutManager=\"android.support.v7.widget.LinearLayoutManager\"\n        \u002F&gt;\n    &lt;com.melnykov.fab.FloatingActionButton\n        android:id=\"@+id\u002FfabButton\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_gravity=\"bottom|right\"\n        android:layout_margin=\"16dp\"\n        android:src=\"@mipmap\u002Fic_add\"\n        app:fab_colorNormal=\"@color\u002FcolorPrimary\"\n        app:fab_colorPressed=\"@color\u002FcolorPrimaryDark\" \u002F&gt;\n&lt;\u002FFrameLayout&gt;\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E \u003Cbr\u002F\u003E\n\u003Cbr\u002F\u003E\nДля реализации летающей кнопки я использовал библиотеку \u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fmakovkastar\u002FFloatingActionButton\"\u003EFloatingActionButton\u003C\u002Fa\u003E. Google уже добавили FAB в support-библиотеку, поэтому вы можете воспользоваться их решением.\u003Cbr\u002F\u003E\n\u003Cbr\u002F\u003E\nУкажем нашей Activity, какой макет она должна показывать:\u003Cbr\u002F\u003E\n\u003Cbr\u002F\u003E\n\u003Cpre\u003E\u003Ccode class=\"java\"\u003Eoverride fun onCreate(savedInstanceState: Bundle?) {\n    super.onCreate(savedInstanceState)\n    setContentView(R.layout.activity_main)\n}\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cbr\u002F\u003E\n\u003Cbr\u002F\u003E\nДалее нам нужно связать FAB и список, чтобы при прокручивании списка вверх кнопка исчезала:\u003Cbr\u002F\u003E\n\u003Cbr\u002F\u003E\n\u003Cpre\u003E\u003Ccode class=\"java\"\u003EfabButon.attachToRecyclerView(rvNotesList)\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cbr\u002F\u003E\n\u003Cbr\u002F\u003E\nНам не нужно писать порядком надоевший \u003Cb\u003EfindViewById\u003C\u002Fb\u003E, нужно лишь прописать одну строчку в блоке с import'ами:\u003Cbr\u002F\u003E\n\u003Cbr\u002F\u003E\n\u003Cpre\u003E\u003Ccode class=\"java\"\u003Eimport kotlinx.android.synthetic.main.activity_main.*\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cbr\u002F\u003E\n\u003Cbr\u002F\u003E\nКак видите, последний пакет совпадает с названием нашего xml-файла. IDE автоматически инициализирует свойства (property) наших View и их имена совпадают с ID, которые мы указали в разметке.\u003Cbr\u002F\u003E\n\u003Cbr\u002F\u003E\nДавайте реализуем загрузку заметок из БД. Заметки нужно загружать только один раз и использовать их в последующем. В этом нам поможет метод onFirstViewAttach класса MvpPresenter, который вызывается единожды при первой привязке View к презентеру. Далее, сколько бы мы не крутили и вертели нашу Activity, данные будут закешированы в презентере.\u003Cbr\u002F\u003E\n\u003Cbr\u002F\u003E\n\u003Cpre\u003E\u003Ccode class=\"java\"\u003Eoverride fun onFirstViewAttach() {\n    super.onFirstViewAttach()\n    loadAllNotes()\n}\n\n\u002F**\n* Загружает все существующие заметки и передает во View\n*\u002F\nfun loadAllNotes() {\n    mNotesList = mNoteDao.loadAllNotes()\n    viewState.onNotesLoaded(mNotesList)\n}\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cbr\u002F\u003E\n\u003Cbr\u002F\u003E\nСоздадим адаптер для нашего списка: \u003Cbr\u002F\u003E\n\u003Cbr\u002F\u003E\n\u003Cdiv class=\"spoiler\"\u003E\u003Cb class=\"spoiler_title\"\u003EКод адаптера\u003C\u002Fb\u003E\u003Cdiv class=\"spoiler_text\"\u003E\u003Cpre\u003E\u003Ccode class=\"java\"\u003Eclass NotesAdapter : RecyclerView.Adapter&lt;NotesAdapter.ViewHolder&gt; {\n\n    private var mNotesList: List&lt;Note&gt; = ArrayList()\n\n    constructor(notesList: List&lt;Note&gt;) {\n        mNotesList = notesList\n    }\n\n    \u002F**\n     * Создание новых View и ViewHolder элемента списка, которые впоследствии могут переиспользоваться.\n     *\u002F\n    override fun onCreateViewHolder(viewGroup: ViewGroup, i: Int): ViewHolder {\n        var v = LayoutInflater.from(viewGroup.context).inflate(R.layout.note_item_layout, viewGroup, false);\n        return ViewHolder(v);\n    }\n\n    \u002F**\n     * Заполнение виджетов View данными из элемента списка с номером i\n     *\u002F\n    override\n    fun onBindViewHolder(viewHolder: ViewHolder, i: Int) {\n        var note = mNotesList[i];\n        viewHolder.mNoteTitle.text = note.title;\n\n        viewHolder.mNoteDate.text = formatDate(note.changeDate);\n    }\n\n    override fun getItemCount(): Int {\n        return mNotesList.size\n    }\n\n    \u002F**\n     * Реализация класса ViewHolder, хранящего ссылки на виджеты.\n     *\u002F\n\n    class ViewHolder : RecyclerView.ViewHolder {\n\n        var mNoteTitle: TextView\n        var mNoteDate: TextView\n\n        constructor(itemView: View) : super(itemView) {\n            mNoteTitle = itemView.findViewById(R.id.tvItemNoteTitle) as TextView\n            mNoteDate = itemView.findViewById(R.id.tvItemNoteDate) as TextView\n        }\n\n    }\n\n}\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cbr\u002F\u003E\n\u003C\u002Fdiv\u003E\u003C\u002Fdiv\u003E\u003Cbr\u002F\u003E\n\u003Cbr\u002F\u003E\nВ адаптере мы используем метод formatDate. Он служит для форматирования даты в строку:\u003Cbr\u002F\u003E\n\u003Cbr\u002F\u003E\n\u003Cpre\u003E\u003Ccode class=\"java\"\u003E@file:JvmName(\"DateUtils\")\n\npackage imangazaliev.notelin.utils\n\nimport java.text.SimpleDateFormat\nimport java.util.*\n\nfun formatDate(date: Date?): String {\n    var dateFormat = SimpleDateFormat(\"yyyy-MM-dd HH:mm\");\n    return dateFormat.format(date)\n}\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cbr\u002F\u003E\n\u003Cbr\u002F\u003E\nДанный метод находится в файле DateUtils.kt и мы можем использовать как обычный статический метод. Отличие от статического метода здесь в том, что метод принадлежит не классу, а пакету и нам не нужно писать имя класса перед названием метода. В аннотации мы указываем название класса, через который мы будем обращаться к методу из Java. Например в Java дынный метод будет вызываться так:\u003Cbr\u002F\u003E\n\u003Cbr\u002F\u003E\n\u003Cpre\u003E\u003Ccode class=\"java\"\u003EString formattedDate = DateUtils.formatDate(date);\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cbr\u002F\u003E\n\u003Cbr\u002F\u003E\nВ методе onNotesLoaded нашей Activity мы показываем наши заметки: \u003Cbr\u002F\u003E\n\u003Cbr\u002F\u003E\n\u003Cpre\u003E\u003Ccode class=\"java\"\u003Eoverride fun onNotesLoaded(notes: List&lt;Note&gt;) {\n    rvNotesList.adapter = NotesAdapter(notes)\n    updateView()\n}\n\noverride fun updateView() {\n    rvNotesList.adapter.notifyDataSetChanged()\n    if (rvNotesList.adapter.itemCount == 0) {\n        rvNotesList.visibility = View.GONE\n        tvNotesIsEmpty.visibility = View.VISIBLE\n    } else {\n        rvNotesList.visibility = View.VISIBLE\n        tvNotesIsEmpty.visibility = View.GONE\n    }\n}\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cbr\u002F\u003E\n\u003Cbr\u002F\u003E\nЕсли заметок нет, то мы показываем сообщение «Нет заметок» в TextView.\u003Cbr\u002F\u003E\n\u003Cbr\u002F\u003E\nНасколько я знаю, для обработки клика по элементам RecycleView не существует «официального» OnItemClickListener. Поэтому мы воспользуемся своим решением:\u003Cbr\u002F\u003E\n\u003Cbr\u002F\u003E\n\u003Cdiv class=\"spoiler\"\u003E\u003Cb class=\"spoiler_title\"\u003EItemClickSupport.kt\u003C\u002Fb\u003E\u003Cdiv class=\"spoiler_text\"\u003E\u003Cpre\u003E\u003Ccode class=\"java\"\u003Eclass ItemClickSupport private constructor(private val recyclerView: RecyclerView) {\n    companion object {\n        fun addTo(view: RecyclerView) =\n                view.getTag(R.id.item_click_support) as? ItemClickSupport ?: ItemClickSupport(view)\n\n        fun removeFrom(view: RecyclerView): ItemClickSupport? {\n            val support = view.getTag(R.id.item_click_support) as? ItemClickSupport\n            support?.detach(view)\n            return support\n        }\n    }\n\n    interface ItemClickListener {\n        fun onClick(recyclerView: RecyclerView, position: Int, view: View)\n    }\n\n    interface ItemLongClickListener {\n        fun onLongClick(recyclerView: RecyclerView, position: Int, view: View): Boolean\n    }\n\n    private var itemClickListener: ItemClickListener? = null\n    private var itemLongClickListener: ItemLongClickListener? = null\n    private val onClickListener = View.OnClickListener {\n        val holder = recyclerView.getChildViewHolder(it)\n        itemClickListener?.onClick(recyclerView, holder.adapterPosition, it)\n    }\n    private val onLongClickListener = View.OnLongClickListener listener@{\n        val position = recyclerView.getChildViewHolder(it).adapterPosition\n        return@listener itemLongClickListener?.onLongClick(recyclerView, position, it) ?: false\n    }\n    private val attachListener = object : RecyclerView.OnChildAttachStateChangeListener {\n        override fun onChildViewAttachedToWindow(view: View) {\n            if (itemClickListener != null) {\n                view.setOnClickListener(onClickListener)\n            }\n\n            if (itemLongClickListener != null) {\n                view.setOnLongClickListener(onLongClickListener)\n            }\n        }\n\n        override fun onChildViewDetachedFromWindow(view: View) = Unit\n    }\n\n    init {\n        recyclerView.setTag(R.id.item_click_support, this)\n        recyclerView.addOnChildAttachStateChangeListener(attachListener)\n    }\n\n    fun setOnItemClickListener(listener: ItemClickListener): ItemClickSupport {\n        itemClickListener = listener\n        return this\n    }\n\n    fun setOnItemClickListener(listener: (RecyclerView, Int, View) -&gt; Unit) =\n            setOnItemClickListener(object : ItemClickListener {\n                override fun onClick(recyclerView: RecyclerView, position: Int, view: View) {\n                    listener(recyclerView, position, view)\n                }\n            })\n\n    fun setOnItemLongClickListener(listener: ItemLongClickListener): ItemClickSupport {\n        itemLongClickListener = listener\n        return this\n    }\n\n    fun setOnItemLongClickListener(block: (RecyclerView, Int, View) -&gt; Boolean): ItemClickSupport =\n            setOnItemLongClickListener(object : ItemLongClickListener {\n                override fun onLongClick(recyclerView: RecyclerView, position: Int, view: View): Boolean {\n                    return block (recyclerView, position, view)\n                }\n            })\n\n    private fun detach(view: RecyclerView) {\n        view.removeOnChildAttachStateChangeListener(attachListener)\n        view.setTag(R.id.item_click_support, null)\n    }\n}\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cbr\u002F\u003E\n\u003C\u002Fdiv\u003E\u003C\u002Fdiv\u003E\u003Cbr\u002F\u003E\n\u003Cbr\u002F\u003E\nВ методе onCreate нашей Activity пишем: \u003Cbr\u002F\u003E\n\u003Cbr\u002F\u003E\n\u003Cpre\u003E\u003Ccode class=\"java\"\u003E        with(ItemClickSupport.addTo(rvNotesList)) {\n            setOnItemClickListener { recyclerView, position, v -&gt; mPresenter.openNote(this@MainActivity, position) }\n            setOnItemLongClickListener { recyclerView, position, v -&gt; mPresenter.showNoteContextDialog(position); true }\n        }\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cbr\u002F\u003E\n\u003Cbr\u002F\u003E\nФункция \u003Cb\u003Ewith\u003C\u002Fb\u003E позволяет не писать каждый раз имя переменной, а только лишь вызывать методы у объекта, который мы передали в нее. Обратите внимание, что для получения Activity я использовал не просто \u003Cb\u003Ethis\u003C\u002Fb\u003E, а \u003Ca href=\"https:\u002F\u002Fkotlinlang.org\u002Fdocs\u002Freference\u002Fthis-expressions.html\"\u003Ethis@MainActivity\u003C\u002Fa\u003E. Это связано с тем, что при использовании this в блоке with, возвращается объект, который мы передали в функцию with. При обычном клике по пункту мы переходим на Activity, где мы можем просмотреть текст нашей заметки. При долгом нажатии появляется контекстное меню. Если вы заметили, перед закрывающей скобкой я не написал слово \u003Cb\u003Ereturn\u003C\u002Fb\u003E. Это не ошибка, а особенность языка Kotlin.\u003Cbr\u002F\u003E\n\u003Cbr\u002F\u003E\nВот что происходит при нажатии на пункт меню в презентере:\u003Cbr\u002F\u003E\n\u003Cbr\u002F\u003E\n\u003Cpre\u003E\u003Ccode class=\"java\"\u003E\u002F**\n* Открывает активити с заметкой по позиции\n*\u002F\nfun openNote(activity: Activity, position: Int) {\n    val intent = Intent(activity, NoteActivity::class.java)\n    intent.putExtra(\"note_id\", mNotesList[position].id)\n    activity.startActivity(intent)\n}\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cbr\u002F\u003E\n\u003Cbr\u002F\u003E\nМы еще не создали класс NoteActivity, поэтому компилятор будет выдавать ошибку. Для решения этой проблемы можно создать класс NoteActivity или вовсе закомментировать код внутри метода openNote. Запись NoteActivity::class.java аналогична NoteActivity.class в Java. Также заметьте, что мы обращаемся к списку не через метод get(position), а через квадратные скобки, как к обычному массиву.\u003Cbr\u002F\u003E\n\u003Cbr\u002F\u003E\nПри использовании MVP-библиотеки Moxy в своем приложении, нам нужно привыкать, что все действия с View, такие как показ\u002Fзакрытие диалога и другие, должны проходить через презентер. Изначально это не очень привычно и неудобно, но пользы от этого гораздо больше, т. к. мы можем быть уверены, что при пересоздании Activity наше диалоговое окно никуда не пропадет.\u003Cbr\u002F\u003E\n\u003Cbr\u002F\u003E\n\u003Cpre\u003E\u003Ccode class=\"java\"\u003E\u002F**\n* Показывает контекстное меню заметки\n*\u002F\nfun showNoteContextDialog(position: Int) {\n    viewState.showNoteContextDialog(position)\n}\n\n\u002F**\n * Прячет контекстное меню заметки\n*\u002F\nfun hideNoteContextDialog() {\n    viewState.hideNoteContextDialog()\n}\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cbr\u002F\u003E\n\u003Cbr\u002F\u003E\nЯ не буду показывать код контекстного меню, удаления и показа информации о заметке т. к. статья получается очень большой. Но, думаю, общий смысл вы уловили. Также следует отметить, что метод hideNoteContextDialog у презентера должен вызываться даже при закрытии диалога через кнопку назад или при нажатии на область за границами диалога.\u003Cbr\u002F\u003E\n\u003Cbr\u002F\u003E\nПри нажатии на FAB должна создаваться новая заметка: \u003Cbr\u002F\u003E\n\u003Cbr\u002F\u003E\n\u003Cpre\u003E\u003Ccode class=\"java\"\u003EfabButton.setOnClickListener {\n            mPresenter.openNewNote(this)\n}\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cbr\u002F\u003E\n\u003Cbr\u002F\u003E\nДля создания новой заметки мы вызываем у презентера функция openNewNote:\u003Cbr\u002F\u003E\n\u003Cbr\u002F\u003E\n\u003Cpre\u003E\u003Ccode class=\"java\"\u003Efun openNewNote(activity: Activity) {\n        val newNote = mNoteDao.createNote()\n        mNotesList.add(newNote)\n        sortNotesBy(getCurrentSortMethod())\n        openNote(activity, mNotesList.indexOf(newNote))\n}\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cbr\u002F\u003E\n\u003Cbr\u002F\u003E\nМетод openNewNote использует созданный нами ранее openNote, в который мы передаем Context и позицию заметки в списке.\u003Cbr\u002F\u003E\n\u003Cbr\u002F\u003E\n\u003Cbr\u002F\u003E\n\u003Ch3\u003EРеализуем поиск по заметкам\u003C\u002Fh3\u003E\u003Cbr\u002F\u003E\n\u003Cbr\u002F\u003E\n\u003Cimg width=\"40%\" src=\"https:\u002F\u002Fhabrastorage.org\u002Fr\u002Fw1560\u002Ffiles\u002F3db\u002F047\u002F107\u002F3db047107fe4480aa862a4325e011750.png\" data-src=\"https:\u002F\u002Fhabrastorage.org\u002Ffiles\u002F3db\u002F047\u002F107\u002F3db047107fe4480aa862a4325e011750.png\"\u002F\u003E\u003Cbr\u002F\u003E\n\u003Cbr\u002F\u003E\nДавайте добавим поиск по заметкам. Создайте в папке res\u002Fmenu файл main.xml:\u003Cbr\u002F\u003E\n\u003Cbr\u002F\u003E\n\u003Cpre\u003E\u003Ccode class=\"xml\"\u003E&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;\n&lt;menu xmlns:android=\"http:\u002F\u002Fschemas.android.com\u002Fapk\u002Fres\u002Fandroid\"\n    xmlns:app=\"http:\u002F\u002Fschemas.android.com\u002Fapk\u002Fres-auto\"&gt;\n\n    &lt;item\n        android:id=\"@+id\u002Faction_search\"\n        android:icon=\"@android:drawable\u002Fic_menu_search\"\n        android:title=\"@string\u002Fsearch\"\n        app:actionViewClass=\"android.support.v7.widget.SearchView\"\n        app:showAsAction=\"always\" \u002F&gt;\n\n&lt;\u002Fmenu&gt;\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cbr\u002F\u003E\n\u003Cbr\u002F\u003E\nВ MainActivity пишем:\u003Cbr\u002F\u003E\n\u003Cbr\u002F\u003E\n\u003Cpre\u003E\u003Ccode class=\"java\"\u003Eoverride fun onCreateOptionsMenu(menu: Menu): Boolean {\n    menuInflater.inflate(R.menu.main, menu)\n\n    initSearchView(menu)\n    return true\n}\n\nprivate fun initSearchView(menu: Menu) {\n    var searchViewMenuItem = menu.findItem(R.id.action_search);\n    var searchView = searchViewMenuItem.actionView as SearchView;\n    searchView.onQueryChange { query -&gt; mPresenter.search(query) }\n    searchView.setOnCloseListener { mPresenter.search(\"\"); false }\n}\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cbr\u002F\u003E\n\u003Cbr\u002F\u003E\nПри изменении текста в поле поиска мы передаем строку из поля в презентер, после чего показываем результаты в списке. На самом деле, у SearchView нет метода onQueryChange, его добавила библиотека KAndroid.\u003Cbr\u002F\u003E\n\u003Cbr\u002F\u003E\nРеализуем поиск в презентере:\u003Cbr\u002F\u003E\n\u003Cbr\u002F\u003E\n\u003Cpre\u003E\u003Ccode class=\"java\"\u003E\u002F**\n* Ищет заметку по имени\n*\u002F\nfun search(query: String) {\n    if (query.equals(\"\")) {\n        viewState.onSearchResult(mNotesList)\n    } else {\n        val searchResults = mNotesList.filter { it.title!!.startsWith(query, ignoreCase = true) }\n        viewState.onSearchResult(searchResults)\n    }\n}\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cbr\u002F\u003E\n\u003Cbr\u002F\u003E\nОбратите внимание, как красиво, в одну строчку мы реализовали поиск по списку с помощью метода filter и лямбд. В Java тот же функционал занял бы 6-7строк. Осталось отобразить результаты поиска:\u003Cbr\u002F\u003E\n\u003Cbr\u002F\u003E\n\u003Cpre\u003E\u003Ccode class=\"java\"\u003Eoverride fun onSearchResult(notes: List&lt;Note&gt;) {\n    rvNotesList.adapter = NotesAdapter(notes)\n}\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cbr\u002F\u003E\n\u003Cbr\u002F\u003E\n\u003Cbr\u002F\u003E\n\u003Ch3\u003EРеализуем сортировку заметок\u003C\u002Fh3\u003E\u003Cbr\u002F\u003E\n\u003Cbr\u002F\u003E\nИ последний этап в создании главного экрана, это сортировка заметок. Добавим в res\u002Fmenu\u002Fmain.xml следующие строки:\u003Cbr\u002F\u003E\n\u003Cbr\u002F\u003E\n\u003Cpre\u003E\u003Ccode class=\"xml\"\u003E&lt;item android:title=\"@string\u002Fsort_by\"&gt;\n    &lt;menu&gt;\n        &lt;item\n            android:id=\"@+id\u002FmenuSortByName\"\n            android:title=\"@string\u002Fsort_by_title\" \u002F&gt;\n        &lt;item\n            android:id=\"@+id\u002FmenuSortByDate\"\n            android:title=\"@string\u002Fsort_by_date\" \u002F&gt;\n    &lt;\u002Fmenu&gt;\n&lt;\u002Fitem&gt;\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cbr\u002F\u003E\n\u003Cbr\u002F\u003E\nТеперь нам нужно обработать нажатие на пункты меню:\u003Cbr\u002F\u003E\n\u003Cbr\u002F\u003E\n\u003Cpre\u003E\u003Ccode class=\"java\"\u003Eoverride fun onOptionsItemSelected(item: MenuItem): Boolean {\n        when (item.itemId) {\n            R.id.menuSortByName -&gt; mPresenter.sortNotesBy(MainPresenter.SortNotesBy.NAME)\n            R.id.menuSortByDate -&gt; mPresenter.sortNotesBy(MainPresenter.SortNotesBy.DATE)\n        }\n    return super.onOptionsItemSelected(item)\n}\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cbr\u002F\u003E\n\u003Cbr\u002F\u003E\nОператор \u003Cb\u003Ewhen \u003C\u002Fb\u003Eявляется более функциональным аналогом switch-case в Java. Код сортировки в MainPresenter:\u003Cbr\u002F\u003E\n\u003Cpre\u003E\u003Ccode class=\"java\"\u003E\u002F**\n* Сортирует заметки\n*\u002F\nfun sortNotesBy(sortMethod: SortNotesBy) {\n    mNotesList.sortWith(sortMethod)\n    viewState.updateView()\n}\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cbr\u002F\u003E\n\u003Cbr\u002F\u003E\n\u003Cbr\u002F\u003E\n\u003Ch1\u003EЭкран с содержанием заметки\u003C\u002Fh1\u003E\u003Cbr\u002F\u003E\n\u003Cbr\u002F\u003E\nТеперь нам нужно создать экран с содержанием заметки. Здесь пользователь может просмотреть\u002Fотредактировать заголовок и текст заметки, сохранить или удалить ее, а также просмотреть информацию о заметке.\u003Cbr\u002F\u003E\n\u003Cbr\u002F\u003E\n\u003Cbr\u002F\u003E\n\u003Ch3\u003EСоздаем NoteView и NotePresenter\u003C\u002Fh3\u003E\u003Cbr\u002F\u003E\n\u003Cbr\u002F\u003E\n\u003Cimg width=\"40%\" src=\"https:\u002F\u002Fhabrastorage.org\u002Fr\u002Fw1560\u002Ffiles\u002Fb15\u002F984\u002Fb7a\u002Fb15984b7aa4a405fb5495ac25dc51f88.png\" data-src=\"https:\u002F\u002Fhabrastorage.org\u002Ffiles\u002Fb15\u002F984\u002Fb7a\u002Fb15984b7aa4a405fb5495ac25dc51f88.png\"\u002F\u003E\u003Cbr\u002F\u003E\n\u003Cbr\u002F\u003E\nЭкран содержит всего лишь три View:\u003Cbr\u002F\u003E\n\u003Cbr\u002F\u003E\n-Заголовок\u003Cbr\u002F\u003E\n-Дата последнего изменения\u003Cbr\u002F\u003E\n-Текст заметки\u003Cbr\u002F\u003E\n\u003Cbr\u002F\u003E\nА вот и сама разметка:\u003Cbr\u002F\u003E\n\u003Cbr\u002F\u003E\n\u003Cpre\u003E\u003Ccode class=\"xml\"\u003E&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;\n&lt;LinearLayout xmlns:android=\"http:\u002F\u002Fschemas.android.com\u002Fapk\u002Fres\u002Fandroid\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:orientation=\"vertical\"&gt;\n\n\n    &lt;EditText\n        android:id=\"@+id\u002FetTitle\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:singleLine=\"true\"\n        android:background=\"#EEEEEE\"\n        android:textColor=\"#212121\"\n        android:paddingLeft=\"10dp\"\n        android:paddingTop=\"10dp\"\n        android:paddingBottom=\"5dp\"\n        android:hint=\"Заголовок\"\n        \u002F&gt;\n\n    &lt;TextView\n        android:id=\"@+id\u002FtvNoteDate\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:singleLine=\"true\"\n        android:background=\"#EEEEEE\"\n        android:textColor=\"#212121\"\n        android:paddingLeft=\"10dp\"\n        android:paddingBottom=\"10dp\"\n        \u002F&gt;\n\n    &lt;EditText\n        android:id=\"@+id\u002FetText\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\"\n        android:textColor=\"#000000\"\n        android:gravity=\"start\"\n        android:hint=\"Текст\"\n        android:background=\"@null\"\n        android:paddingLeft=\"10dp\"\n        \u002F&gt;\n\n&lt;\u002FLinearLayout&gt;\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cbr\u002F\u003E\n\u003Cbr\u002F\u003E\nВ начале статьи я мельком упомянул об Anko. Библиотека позволяет существенно сократить код, не теряя при этом в удобочитаемости. Вот так, например, выглядела бы наша разметка при использовании Anko:\u003Cbr\u002F\u003E\n\u003Cbr\u002F\u003E\n\u003Cpre\u003E\u003Ccode class=\"java\"\u003Eclass MyActivity : AppCompatActivity() {\n    override fun onCreate(savedInstanceState: Bundle?) {\n        super.onCreate(savedInstanceState)\n        MyActivityUI().setContentView(this)\n    }\n}\n\nclass MyActivityUI : AnkoComponent {\n\n    companion object {\n        val ET_TITLE_ID = View.generateViewId()\n        val TV_NOTE_DATE_ID = View.generateViewId()\n        val ET_TEXT_ID = View.generateViewId()\n    }\n    \n    override fun createView(ui: AnkoContext&lt;MainActivit&gt;) = with(ui) {\n        verticalLayout { \n            editText { \n                id = ET_TITLE_ID\n                singleLine = true\n                backgroundColor = 0xEE.gray.opaque\n                textColor = 0x21.gray.opaque\n                leftPadding = dip(10)\n                topPadding = dip(10)\n                bottomPadding = dip(5)\n                hint = \"Заголовок\"\n            }.lparams(matchParent, wrapContent)\n            \n            textView {\n                id = TV_NOTE_DATE_ID\n                singleLine = true\n                backgroundColor = 0xEE.gray.opaque\n                textColor = 0x21.gray.opaque\n                leftPadding = dip(10)\n                bottomPadding = dip(10)\n            }.lparams(matchParent, wrapContent)\n            \n            editText { \n                id = ET_TEXT_ID\n                textColor = Color.BLACK\n                gravity = Gravity.START\n                hint = \"Текст\"\n                background = null\n                leftPadding = dip(10)\n            }\n        }\n    }\n}\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cbr\u002F\u003E\n\u003Cbr\u002F\u003E\nНо не будем отвлекаться и приступим к написанию кода. Первым делом нам нужно создать View:\u003Cbr\u002F\u003E\n\u003Cbr\u002F\u003E\n\u003Cpre\u003E\u003Ccode class=\"java\"\u003Einterface NoteView : MvpView {\n\n    fun showNote(note: Note)\n\n    fun onNoteSaved()\n\n    fun onNoteDeleted()\n\n    fun showNoteInfoDialog(noteInfo: String)\n\n    fun hideNoteInfoDialog()\n\n    fun showNoteDeleteDialog()\n\n    fun hideNoteDeleteDialog()\n\n}\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cbr\u002F\u003E\n\u003Cbr\u002F\u003E\nИмплементируем NoteView в NoteActivity:\u003Cbr\u002F\u003E\n\u003Cbr\u002F\u003E\n\u003Cpre\u003E\u003Ccode class=\"java\"\u003Eclass NoteActivity : MvpAppCompatActivity(), NoteView {\n\n    @InjectPresenter\n    lateinit var mPresenter: NotePresenter\n\n    override fun onCreate(savedInstanceState: Bundle?) {\n        super.onCreate(savedInstanceState)\n        setContentView(R.layout.activity_note)\n\n        val noteId = intent.extras.getLong(\"note_id\", -1)\n        mPresenter.showNote(noteId)\n    }\n\n}\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cbr\u002F\u003E\n\u003Cbr\u002F\u003E\nВ onCreate мы извлекаем id заметки, чтобы презентер достал заметку из БД и передал данные во View. Создадим презентер:\u003Cbr\u002F\u003E\n\u003Cbr\u002F\u003E\n\u003Cpre\u003E\u003Ccode class=\"java\"\u003E@InjectViewState\nclass NotePresenter : MvpPresenter&lt;NoteView&gt;() {\n\n    @Inject\n    lateinit var mNoteDao: NoteDao\n    lateinit var mNote: Note\n\n    init {\n        NotelinApplication.graph.inject(this)\n    }\n\n    fun showNote(noteId: Long) {\n        mNote = mNoteDao.getNoteById(noteId)\n        viewState.showNote(mNote)\n    }\n\n}\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cbr\u002F\u003E\n\u003Cbr\u002F\u003E\nНе забудьте добавить в класс AppComponent строку:\u003Cbr\u002F\u003E\n\u003Cbr\u002F\u003E\n\u003Cpre\u003E\u003Ccode class=\"java\"\u003Efun inject(notePresenter: NotePresenter)\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cbr\u002F\u003E\n\u003Cbr\u002F\u003E\nПокажем нашу заметку:\u003Cbr\u002F\u003E\n\u003Cbr\u002F\u003E\n\u003Cpre\u003E\u003Ccode class=\"java\"\u003Eoverride fun showNote(note: Note) {\n    tvNoteDate.text = DateUtils.formatDate(note.changeDate)\n    etTitle.setText(note.title)\n    etText.setText(note.text)\n}\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cbr\u002F\u003E\n\u003Cbr\u002F\u003E\n\u003Cbr\u002F\u003E\n\u003Ch3\u003EРеализуем сохранение заметки\u003C\u002Fh3\u003E\u003Cbr\u002F\u003E\n\u003Cbr\u002F\u003E\nДля сохранения заметки нам нужно выбрать соответствующий пункт в меню. Создайте файл \u003Cb\u003Eres\u002Fmenu\u002Fnote.xml\u003C\u002Fb\u003E:\u003Cbr\u002F\u003E\n\u003Cbr\u002F\u003E\n\u003Cpre\u003E\u003Ccode class=\"java\"\u003E&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;\n&lt;menu xmlns:android=\"http:\u002F\u002Fschemas.android.com\u002Fapk\u002Fres\u002Fandroid\"\n    xmlns:app=\"http:\u002F\u002Fschemas.android.com\u002Fapk\u002Fres-auto\"\n    &gt;\n    &lt;item\n        android:id=\"@+id\u002FmenuSaveNote\"\n        android:title=\"@string\u002Fsave\"\n        app:showAsAction=\"never\"\n        \u002F&gt;\n&lt;\u002Fmenu&gt;\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cbr\u002F\u003E\n\u003Cbr\u002F\u003E\n\u003Cpre\u003E\u003Ccode class=\"java\"\u003Eoverride fun onCreateOptionsMenu(menu: Menu): Boolean {\n    menuInflater.inflate(R.menu.note, menu)\n    return true\n}\n\nПокажем меню в Activity:\n\noverride fun onOptionsItemSelected(item: MenuItem): Boolean {\n    when (item.itemId) {\n        R.id.menuSaveNote -&gt; mPresenter.saveNote(etTitle.text.toString(), etText.text.toString())\n    }\n    return super.onOptionsItemSelected(item)\n}\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cbr\u002F\u003E\n\u003Cbr\u002F\u003E\nОпять же, я не стал приводить код удаления и вывода информации о заметке. При просмотре исходного кода, вы можете заметить, что помимо идентификатора заметки я передал в NoteActivity позицию заметки в списке. Это нужно для того, чтобы при удалении заметки на экране просмотра заметки, она также удалялась из списка. Для реализации этого функционала я использовал EventBus. И опять, я не стал приводить код.\u003Cbr\u002F\u003E\n\u003Cbr\u002F\u003E\nНа этом все: заметки добавляются, редактируются и удаляются. Также мы можем осуществить поиск и сортировку заметок. Обязательно посмотрите полный исходный код, ссылку на который я привел в конце статьи, чтобы лучше понять как все устроено.\u003Cbr\u002F\u003E\n\u003Cbr\u002F\u003E\n\u003Cbr\u002F\u003E\n\u003Ch1\u003EБлагодарности\u003C\u002Fh1\u003E\u003Cbr\u002F\u003E\n\u003Cbr\u002F\u003E\nКонечно же, нельзя забывать о людях, которые помогли мне при написании статьи. Хотел бы выразить благодарность хабраюзерам Юрию Шмакову (@senneco) за помощь с его библиотекой Moxy и за помощь по другим вопросам. Также, хочу сказать спаcибо сотруднику JetBrains Роману Белову (@belovrv) за ревью статьи и за предоставленный код на Anko.\u003Cbr\u002F\u003E\n\u003Cbr\u002F\u003E\n\u003Cb\u003EUPD:\u003C\u002Fb\u003E Еще хотел сказать спасибо \u003Ca href=\"https:\u002F\u002Fhabrahabr.ru\u002Fusers\u002Fsirikid\u002F\" class=\"user_link\"\u003ESirikid\u003C\u002Fa\u003E за EPIC COMMIT, благодаря которому я переделал внушительную часть кода с использованием фич Kotlin'а.\u003Cbr\u002F\u003E\n\u003Cbr\u002F\u003E\n\u003Cbr\u002F\u003E\n\u003Ch1\u003EЗаключение\u003C\u002Fh1\u003E\u003Cbr\u002F\u003E\n\u003Cbr\u002F\u003E\nНадеюсь, эта статья смогла убедить вас в том, что писать приложения на Kotlin не трудно, а может даже и легче, чем на Java. Конечно же, могут встречаться и баги, которые сотрудники JetBrains достаточно быстро фиксят. Если у вас появились какие-либо вопросы, вы можете задать их напрямую разработчикам на \u003Ca href=\"https:\u002F\u002Fkotlinlang.slack.com\u002F\"\u003ESlack-канале\u003C\u002Fa\u003E. Также вы можете почитать статьи о разработке на Kotlin \u003Ca href=\"http:\u002F\u002Fjava-help.ru\u002Fcategory\u002Fandroid-kotlin\u002F\"\u003Eздесь\u003C\u002Fa\u003E.\u003Cbr\u002F\u003E\n\u003Cbr\u002F\u003E\nИсходный код проекта: \u003Ca href=\"https:\u002F\u002Fgithub.com\u002FImangazalievM\u002FNotelin\"\u003ENotelin\u003C\u002Fa\u003E.\u003C\u002Fdiv\u003E","tags":[{"titleHtml":"kotlin"},{"titleHtml":"android"},{"titleHtml":"мобильные приложения"}],"metadata":{"stylesUrls":[],"scriptUrls":[],"shareImageUrl":"https:\u002F\u002Fhabr.com\u002Fshare\u002Fpublication\u002F275255\u002F32f8ada416654c58d7ce262b91ef0d77\u002F","shareImageWidth":1200,"shareImageHeight":630,"vkShareImageUrl":"https:\u002F\u002Fhabr.com\u002Fshare\u002Fpublication\u002F275255\u002F32f8ada416654c58d7ce262b91ef0d77\u002F?format=vk","schemaJsonLd":"{\"@context\":\"http:\\\u002F\\\u002Fschema.org\",\"@type\":\"Article\",\"mainEntityOfPage\":{\"@type\":\"WebPage\",\"@id\":\"https:\\\u002F\\\u002Fhabr.com\\\u002Fru\\\u002Farticles\\\u002F275255\\\u002F\"},\"headline\":\"Пишем MVP приложение на Kotlin под Android\",\"datePublished\":\"2016-04-26T18:31:41+03:00\",\"dateModified\":\"2017-08-11T09:00:22+03:00\",\"author\":{\"@type\":\"Person\",\"name\":\"Махач Имангазалиев\"},\"publisher\":{\"@type\":\"Organization\",\"name\":\"Habr\",\"logo\":{\"@type\":\"ImageObject\",\"url\":\"https:\\\u002F\\\u002Fhabrastorage.org\\\u002Fwebt\\\u002Fa_\\\u002Flk\\\u002F9m\\\u002Fa_lk9mjkccjox-zccjrpfolmkmq.png\"}},\"description\":\"Разработка приложений на Kotlin под Android набирает популярность среди разработчиков, однако статей в русскоязычном сегменте Интернета довольно мало. Я решил...\",\"url\":\"https:\\\u002F\\\u002Fhabr.com\\\u002Fru\\\u002Farticles\\\u002F275255\\\u002F#post-content-body\",\"about\":[\"h_kotlin\",\"h_mobile_dev\",\"h_android_dev\",\"f_develop\"],\"image\":[\"https:\\\u002F\\\u002Fhabrastorage.org\\\u002Ffiles\\\u002Fad1\\\u002Fe16\\\u002Fe49\\\u002Fad1e16e4935a4ca487ccd75f7aa277fe.png\",\"https:\\\u002F\\\u002Fhabrastorage.org\\\u002Ffiles\\\u002Fd9d\\\u002F739\\\u002Fb13\\\u002Fd9d739b131b74d4d807d6a62e35dd674.png\",\"https:\\\u002F\\\u002Fhabrastorage.org\\\u002Ffiles\\\u002F10b\\\u002Fd1e\\\u002F6b8\\\u002F10bd1e6b8e08489abc94a0c89c9c74c4.png\",\"https:\\\u002F\\\u002Fhabrastorage.org\\\u002Ffiles\\\u002F3db\\\u002F047\\\u002F107\\\u002F3db047107fe4480aa862a4325e011750.png\",\"https:\\\u002F\\\u002Fhabrastorage.org\\\u002Ffiles\\\u002Fb15\\\u002F984\\\u002Fb7a\\\u002Fb15984b7aa4a405fb5495ac25dc51f88.png\"]}","metaDescription":"Разработка приложений на Kotlin под Android набирает популярность среди разработчиков, однако статей в русскоязычном сегменте Интернета довольно мало. Я решил немного подправить ситуацию, и написать...","mainImageUrl":null,"amp":false,"customTrackerLinks":[]},"polls":[{"id":"14939","timeElapsed":"2017-05-19T07:00:00+00:00","answersType":"radio","votesCount":164,"passCount":92,"textHtml":"А вы используете Kotlin в своих проектах?","relatedData":null,"variants":[{"id":"72903","textHtml":"Да","votesCount":50,"percent":30.49,"selected":false},{"id":"72905","textHtml":"Нет, но теперь начну","votesCount":52,"percent":31.71,"selected":false},{"id":"72907","textHtml":"Нет, и не буду","votesCount":62,"percent":37.8,"selected":false}]}],"commentsEnabled":{"status":true,"reason":null},"rulesRemindEnabled":false,"votesEnabled":true,"status":"published","plannedPublishTime":null,"checked":null,"hasPinnedComments":false,"format":null,"banner":null,"multiwidget":null,"multiwidgetUuid":null,"readingTime":19,"complexity":null,"isEditorial":false}},"articlesIds":{},"isLoading":false,"pagesCount":{},"route":{},"reasonsList":null,"postReasonsList":null,"view":"list","lastVisitedRoute":{},"ssrCommentsArticleIds":[""],"viewedPosts":[],"myFeedFilter":{"complexity":"all","score":"all","types":["articles","posts","news"]},"myFeedIsApplyFilters":false,"myFeedIsForce":false,"karma":{"userReasonsList":null}},"authorContribution":{"authors":{}},"betaTest":{"currentAnnouncement":null,"announcements":{},"announcementCards":null,"announcementComments":{},"announcementCommentThreads":{},"announcementCommentingStatuses":{},"archivedList":[]},"authorStatistics":{"articleRefs":{},"articleIds":{},"pagesCount":{},"route":{},"viewsCount":[],"maxStatsCount":{}},"career":{"seoLandings":[{"title":"Android разработчик ","vacanciesCount":10,"itemUrl":"https:\u002F\u002Fcareer.habr.com\u002Fvacancies\u002Fandroid_developer","itemHubs":["android_dev","mobile_dev","flutter"]},{"title":"iOS разработчик","vacanciesCount":13,"itemUrl":"https:\u002F\u002Fcareer.habr.com\u002Fvacancies\u002Fios_razrabotchik","itemHubs":["swift","xcode","mobile_dev","flutter","cocoa","ios_dev"]},{"title":"Swift разработчик","vacanciesCount":13,"itemUrl":"https:\u002F\u002Fcareer.habr.com\u002Fvacancies\u002Fios_razrabotchik_swift","itemHubs":["swift","xcode","mobile_dev","flutter","cocoa","ios_dev"]}],"hubs":"kotlin,mobile_dev,android_dev"},"comments":{"articleComments":{},"articlePinnedComments":{},"searchCommentsResults":null,"pagesCount":null,"commentAccess":{},"scrollParents":{},"pageArticleComments":{"lastViewedComment":0,"postId":null,"lastCommentTimestamp":"","moderated":[],"moderatedIds":[],"commentRoute":"","idempotenceKey":""}},"companies":{"companyRefs":{},"companyIds":{},"companyTopIds":{},"pagesCount":{},"companyProfiles":{},"companiesCategories":[],"companiesCategoriesTotalCount":0,"companiesWidgets":{},"companiesWorkers":{},"companiesFans":{},"multiwidgets":{},"route":{},"isLoading":false,"companyWorkersLoading":false,"companyFansLoading":false,"multiwidgetLoading":false,"vacancies":{},"companiesGalleries":{},"companiesBanners":{},"companiesLandingVacancies":{},"companiesTechnologies":{},"workplaceInfo":null},"companyAdmin":{"companyInfo":null,"companyInfoLoading":false,"faqArticles":null,"brandingPreviewImageUrl":null,"jivoStatus":0,"adminNotifications":null,"availableInvitesCount":{}},"companyAdd":{"currentStep":"","stepsData":{},"uncompletedSteps":[],"isStepLoading":true,"isStepCommitting":false,"isInitialized":false,"agreementContent":""},"companiesContribution":{"hubs":{},"flows":{},"companyRefs":{}},"companyHubsContribution":{"contributionRefs":{"hubRefs":{},"hubIds":{}}},"conversation":{"messages":[],"respondent":null,"isLoadMore":false},"conversations":{"conversations":[],"pagesCount":0},"docs":{"menu":{},"articles":{},"mainMenu":[],"loading":{"main":false,"dropdown":false,"article":false}},"feature":{"isProbablyVisible":true},"fixedBanner":{"isArticleStickyPanelVisible":false,"isArticleStickyPanelAtTheBottom":false,"isFixedBannerVisible":false,"isStickyPanelIconsHidden":false},"flows":{"flows":[{"id":"1","alias":"develop","title":"Разработка","titleHtml":"Разработка","route":{"name":"FLOW_PAGE","params":{"flowName":"develop"}}},{"id":"6","alias":"admin","title":"Администрирование","titleHtml":"Администрирование","route":{"name":"FLOW_PAGE","params":{"flowName":"admin"}}},{"id":"2","alias":"design","title":"Дизайн","titleHtml":"Дизайн","route":{"name":"FLOW_PAGE","params":{"flowName":"design"}}},{"id":"3","alias":"management","title":"Менеджмент","titleHtml":"Менеджмент","route":{"name":"FLOW_PAGE","params":{"flowName":"management"}}},{"id":"4","alias":"marketing","title":"Маркетинг","titleHtml":"Маркетинг","route":{"name":"FLOW_PAGE","params":{"flowName":"marketing"}}},{"id":"7","alias":"popsci","title":"Научпоп","titleHtml":"Научпоп","route":{"name":"FLOW_PAGE","params":{"flowName":"popsci"}}}],"updates":{}},"global":{"isPwa":false,"device":"mobile","isHabrCom":true,"requestId":"f59567e85ddceb92d477622d9857a89a"},"hubs":{"hubRefs":{},"hubIds":{},"pagesCount":{},"isLoading":false,"route":{}},"hubsBlock":{"hubRefs":{},"hubIds":{}},"i18n":{"fl":"ru","hl":"ru"},"info":{"welcomePage":{},"isLoading":true},"location":{"urlStruct":{"protocol":null,"slashes":null,"auth":null,"host":null,"port":null,"hostname":null,"hash":null,"query":{},"pathname":"\u002Fru\u002Farticles\u002F275255\u002F","path":"\u002Fru\u002Farticles\u002F275255\u002F","href":"\u002Fru\u002Farticles\u002F275255\u002F"}},"me":{"user":null,"uuid":null,"ppgDemanded":false,"karmaResetInfo":{"canReincarnate":null,"wasReincarnated":null,"currentScore":null},"notes":null,"userUpdates":{"feeds":{"newPostsCount":null,"newThreadsCount":null,"newNewsCount":null,"newCount":null},"conversationUnreadCount":0}},"mostReadingList":{"mostReadingListIds":[],"mostReadingListRefs":null,"promoPost":null},"onboarding":{"currentStep":null,"stepsData":{},"stepsErrors":{},"completedSteps":[],"isStepCommitting":false,"isCommitDisabled":true},"ppa":{"articles":{},"card":null,"transactions":null,"totalTransactions":null,"isAccessible":null},"projectsBlocks":{"activeBlocks":{"salary":"project-block-article"}},"promoData":{"isLoading":false,"hasLoaded":false,"featurer":null,"megaposts":null,"promoLinks":null,"promoPosts":null,"sticker":null},"publicationStatistics":{"statsInfo":{},"statsFunnels":{},"statsGraph":{},"defaultSuggest":{},"suggest":{},"timeTracker":{},"isTrackingActivity":false,"isUserActive":true,"otherPublicationStats":{}},"pullRefresh":{"shouldRefresh":false},"sandbox":{"articleIds":[],"articleRefs":{},"pagesCount":null,"route":{},"lastVisitedRoute":{},"isLoading":false},"search":{"searchQueryError":null},"settingsOther":{"inputs":{"uiLang":{"errors":[],"ref":null,"value":""},"articlesLangEnglish":{"errors":[],"ref":null,"value":false},"articlesLangRussian":{"errors":[],"ref":null,"value":false},"agreement":{"errors":[],"ref":null,"value":false},"email":{"errors":[],"ref":null,"value":true},"digest":{"errors":[],"ref":null,"value":true}}},"similarList":{"similarListIds":[],"similarListRefs":null},"ssr":{"error":null,"isDataLoaded":true,"isDataLoading":false,"isHydrationFailed":false,"isServer":false},"stories":{"stories":[{"id":"story-998","author":{"logo":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F91a\u002F166\u002F49f\u002F91a16649f9ef89302a5a56cfa22a451d.png","title":"Яндекс Практикум","link":"https:\u002F\u002Fu.habr.com\u002Fstories_up"},"title":"Как расти на работе?","lang":"ru","startTime":"2025-03-18T18:45:00+03:00","finishTime":"2025-03-31T19:00:00+03:00","slides":[{"id":"story-998_1","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fbf4\u002F911\u002F7e6\u002Fbf49117e637ff2099b3944f8803cd7a3.png","button":null},{"id":"story-998_2","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F3e3\u002Fc84\u002Fe83\u002F3e3c84e8330ea1ddf72e9d310457ed2f.png","button":{"title":"Расти в карьере","link":"https:\u002F\u002Fu.habr.com\u002Fstories_up","colorType":"light"}},{"id":"story-998_3","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F84b\u002F533\u002F3c3\u002F84b5333c3e77e8dac62a8b50d042acb9.png","button":{"title":"Расти в карьере","link":"https:\u002F\u002Fu.habr.com\u002Fstories_up","colorType":"light"}},{"id":"story-998_4","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F257\u002Feb0\u002F2be\u002F257eb02bea1777e13f3e647cae6e06cd.png","button":{"title":"Расти в карьере","link":"https:\u002F\u002Fu.habr.com\u002Fstories_up","colorType":"light"}},{"id":"story-998_5","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F858\u002F086\u002F0ed\u002F8580860ed3497c043c04f9a42054d74f.png","button":{"title":"Расти в карьере","link":"https:\u002F\u002Fu.habr.com\u002Fstories_up","colorType":"light"}},{"id":"story-998_6","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fcdf\u002F32f\u002F387\u002Fcdf32f38777f046c063b5182f4125e14.png","button":{"title":"Расти в карьере","link":"https:\u002F\u002Fu.habr.com\u002Fstories_up","colorType":"light"}},{"id":"story-998_7","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fd48\u002Ff2d\u002F0e2\u002Fd48f2d0e2ecd7d746d738191bb913d8f.png","button":{"title":"Расти в карьере","link":"https:\u002F\u002Fu.habr.com\u002Fstories_up","colorType":"light"}},{"id":"story-998_8","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fb38\u002Ffd7\u002Fee0\u002Fb38fd7ee04848bf3b058be7403438bd1.png","button":{"title":"Расти в карьере","link":"https:\u002F\u002Fu.habr.com\u002Fstories_up","colorType":"light"}},{"id":"story-998_9","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F79e\u002Feaa\u002F9d8\u002F79eeaa9d8af5a288ad42bd9d63b5793a.png","button":{"title":"Расти в карьере","link":"https:\u002F\u002Fu.habr.com\u002Fstories_up","colorType":"light"}},{"id":"story-998_10","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fcdc\u002F17e\u002F385\u002Fcdc17e38582dc67838b9abfb200d982e.png","button":{"title":"Расти в карьере","link":"https:\u002F\u002Fu.habr.com\u002Fstories_up","colorType":"light"}}]},{"id":"story-996","author":{"logo":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fe63\u002F36d\u002Fa24\u002Fe6336da24460ab6b9fbc347d03eb263a.png","title":"Хабр","link":null},"title":"Здоровье айтишника","lang":"ru","startTime":"2025-03-17T10:22:00+03:00","finishTime":"2025-04-13T10:22:00+03:00","slides":[{"id":"story-996_1","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fb7c\u002F6de\u002F8ea\u002Fb7c6de8ea6789dbc30f071716172b6dd.jpg","button":null},{"id":"story-996_2","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F2e7\u002F88a\u002F0fe\u002F2e788a0fe61729ca8b23eb59069c844f.jpg","button":{"title":"Личный опыт","link":"https:\u002F\u002Fu.habr.com\u002Fzd-1","colorType":"light"}},{"id":"story-996_3","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fb93\u002F6f4\u002F256\u002Fb936f425653b84fa60ab00d09f78c543.jpg","button":{"title":"Как это было","link":"https:\u002F\u002Fu.habr.com\u002Fzd-2","colorType":"light"}},{"id":"story-996_4","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fc10\u002Fd14\u002Ff5a\u002Fc10d14f5a4859fe10baecbcc2bcb8828.jpg","button":{"title":"Шея в фокусе","link":"https:\u002F\u002Fu.habr.com\u002Fzd-3","colorType":"dark"}},{"id":"story-996_5","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F535\u002Fe1b\u002F77a\u002F535e1b77a9eb896262ad73321f2ad99f.jpg","button":{"title":"Фотоинструкция","link":"https:\u002F\u002Fu.habr.com\u002Fzd-4","colorType":"light"}},{"id":"story-996_6","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F569\u002Fc39\u002F49f\u002F569c3949f5b330ea85d4a1864f481c3d.jpg","button":{"title":"Сидите (не)правильно","link":"https:\u002F\u002Fu.habr.com\u002Fzd-5","colorType":"dark"}},{"id":"story-996_7","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F1f2\u002F1de\u002Fdbf\u002F1f21dedbf2902bc4061a75b839b63595.jpg","button":{"title":"Журнал изменений","link":"https:\u002F\u002Fu.habr.com\u002Fzd-6","colorType":"dark"}},{"id":"story-996_8","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F95a\u002F164\u002F21b\u002F95a16421badc3a9f1135309ab0c42c41.jpg","button":{"title":"Альтернатива","link":"https:\u002F\u002Fu.habr.com\u002Fzd-7","colorType":"light"}},{"id":"story-996_9","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F624\u002F027\u002F54d\u002F62402754d311798af44bcfe7f9abfedc.jpg","button":{"title":"Хроника поисков","link":"https:\u002F\u002Fu.habr.com\u002Fzd-8","colorType":"dark"}}]},{"id":"story-992","author":{"logo":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F3fe\u002F2fc\u002Fb05\u002F3fe2fcb05df852d7e1e00d44e54e39ae.png","title":"Сезоны Хабра","link":"https:\u002F\u002Fu.habr.com\u002Ffnstories"},"title":"Угадайте будущее в новом сезоне","lang":"ru","startTime":"2025-03-12T19:15:00+03:00","finishTime":"2025-03-31T23:56:00+03:00","slides":[{"id":"story-992_1","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fc56\u002Faf5\u002Fc43\u002Fc56af5c4377f7f7b94f7b6ad20fc92c3.png","button":{"title":"А что за сезон?","link":"https:\u002F\u002Fu.habr.com\u002Ffnstories","colorType":"light"}},{"id":"story-992_2","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F8fa\u002Fde7\u002F65d\u002F8fade765d99207f31c597283ae6ce912.png","button":{"title":"Какие темы нужны","link":"https:\u002F\u002Fu.habr.com\u002Ffnstories","colorType":"dark"}},{"id":"story-992_3","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F23e\u002F7b9\u002Fb24\u002F23e7b9b24cb056d1a42e8d31ccea16ce.png","button":{"title":"Сезон будущего ИИ","link":"https:\u002F\u002Fu.habr.com\u002Ffnstories","colorType":"dark"}},{"id":"story-992_4","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F27b\u002Fbfc\u002Fa18\u002F27bbfca18e656ee0122b5cb8eb2cb502.png","button":{"title":"Все правила сезона","link":"https:\u002F\u002Fu.habr.com\u002Ffnstories","colorType":"dark"}},{"id":"story-992_5","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F1e0\u002F6c6\u002Ff33\u002F1e06c6f33e703bbd2b2ae3baee3376fd.png","button":{"title":"Как участвовать","link":"https:\u002F\u002Fu.habr.com\u002Ffnstories","colorType":"dark"}}]},{"id":"story-990","author":{"logo":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F282\u002Fe80\u002Fbf1\u002F282e80bf1b73484126ed53c6f3e42692.png","title":"Aeza","link":"https:\u002F\u002Fu.habr.com\u002FI72qi"},"title":"С праздником весны!","lang":"ru","startTime":"2025-03-09T10:15:00+03:00","finishTime":"2025-03-30T23:59:00+03:00","slides":[{"id":"story-990_1","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F064\u002F9dd\u002Ff59\u002F0649ddf5949cae6c9342fb62034a36ac.png","button":null},{"id":"story-990_2","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F05f\u002F96b\u002F25e\u002F05f96b25e910c32256ee0b1916f21380.png","button":{"title":"Семейная история","link":"https:\u002F\u002Fu.habr.com\u002Fey2bY","colorType":"light"}},{"id":"story-990_3","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fcd1\u002Ff5d\u002F921\u002Fcd1f5d921bb9489ac11727272660bdb6.png","button":{"title":"Движущиеся картинки","link":"https:\u002F\u002Fu.habr.com\u002FWLKXU","colorType":"light"}},{"id":"story-990_4","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fb55\u002Fd45\u002Fec5\u002Fb55d45ec50e53275c60d16ea886a0672.png","button":{"title":"Личный опыт","link":"https:\u002F\u002Fu.habr.com\u002FSxrki","colorType":"light"}},{"id":"story-990_5","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Ffa7\u002F1ce\u002Ffca\u002Ffa71cefca5ed0a3fe8b50bd703b3605f.png","button":{"title":"Алгоритм","link":"https:\u002F\u002Fu.habr.com\u002Ftbz2p","colorType":"light"}},{"id":"story-990_6","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F435\u002F89d\u002Ff90\u002F43589df9018846cc6a8eed986226b252.png","button":{"title":"Выбрать сценарий","link":"https:\u002F\u002Fu.habr.com\u002F0RCPk","colorType":"light"}},{"id":"story-990_7","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F514\u002F5f8\u002F619\u002F5145f86194ad48dad48a846b42af0f93.png","button":{"title":"Jiraзамещение","link":"https:\u002F\u002Fu.habr.com\u002FEwhYq","colorType":"light"}},{"id":"story-990_8","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F439\u002Fa83\u002Fae7\u002F439a83ae78f7ef711e3b9bbed1ec26c5.png","button":{"title":"8 вещей","link":"https:\u002F\u002Fu.habr.com\u002FVTv2r","colorType":"light"}},{"id":"story-990_9","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F02d\u002F783\u002F2f7\u002F02d7832f7b1c95d88bff9f34209e204a.png","button":{"title":"Интерфейсы","link":"https:\u002F\u002Fu.habr.com\u002FUFOMZ","colorType":"light"}},{"id":"story-990_10","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F0cb\u002Ff7f\u002F0d9\u002F0cbf7f0d905d486ce4ff82bc939b21d5.png","button":{"title":"Стикеры ваши","link":"https:\u002F\u002Fu.habr.com\u002FoA1K7","colorType":"light"}}]},{"id":"story-984","author":{"logo":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F648\u002F61b\u002F9ae\u002F64861b9aecb7c474cd94063f98045541.png","title":"Хабр","link":null},"title":"Всегда котов!","lang":"ru","startTime":"2025-03-01T00:01:09+03:00","finishTime":"2025-03-23T16:21:00+03:00","slides":[{"id":"story-984_1","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fc06\u002Fc21\u002F93f\u002Fc06c2193ff34362ac2af782cf2571f55.png","button":null},{"id":"story-984_2","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fb68\u002F15f\u002F763\u002Fb6815f7630b9c015b1e67efb5bdf12d4.jpg","button":{"title":"Сделать purrrr","link":"https:\u002F\u002Fu.habr.com\u002Fj4DN1","colorType":"light"}},{"id":"story-984_3","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F550\u002F76e\u002Fd7a\u002F55076ed7a0954e243f944fc2f330623a.png","button":{"title":"Тыгыдык","link":"https:\u002F\u002Fu.habr.com\u002Fya360_kotov","colorType":"dark"}},{"id":"story-984_4","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F2fb\u002F23b\u002F06c\u002F2fb23b06cf294c2050104b2aef589788.jpg","button":{"title":"Исследование","link":"https:\u002F\u002Fu.habr.com\u002FbO3r0","colorType":"light"}},{"id":"story-984_5","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Ff50\u002F50f\u002F0ae\u002Ff5050f0aeea1335c4f0544c1863f8342.jpg","button":{"title":"Детали проекта","link":"https:\u002F\u002Fu.habr.com\u002FQJmhe","colorType":"light"}},{"id":"story-984_6","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F825\u002F3dd\u002F5f5\u002F8253dd5f5c19dd061578f1d09310a45f.jpg","button":{"title":"Эксперименты","link":"https:\u002F\u002Fu.habr.com\u002FVaOdo","colorType":"light"}},{"id":"story-984_7","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F3fb\u002Fc92\u002F0f9\u002F3fbc920f9ea81eca2c1c027ff77fc659.jpg","button":{"title":"Это не мем","link":"https:\u002F\u002Fu.habr.com\u002F0Wb3p","colorType":"light"}},{"id":"story-984_8","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F2b4\u002F794\u002Fc33\u002F2b4794c33844e60aad9468018fd132cd.jpg","button":{"title":"В засаде","link":"https:\u002F\u002Fu.habr.com\u002FnasCD","colorType":"dark"}}]}]},"technotext":{"years":[],"technotextDocForNominees":null,"technotextDocForWinners":null,"technotextInfo":{},"technotextInfoLoading":false,"technotextWinners":{},"technotextWinnersLoading":false},"userHubsContribution":{"contributionRefs":{"hubRefs":{},"hubIds":{}}},"userInvites":{"availableInvites":0,"usedInvitesIds":[],"usedInvitesRefs":{},"usedInvitesPagesCount":0,"unusedInvitesIds":[],"unusedInvitesRefs":{},"unusedInvitesPagesCount":0},"userVotes":{"karmaVotesList":[],"karmaVotesPagesCount":null,"karmaVotesListLoading":false,"commentsVotesList":[],"commentsVotesPagesCount":null,"commentsVotesListLoading":false,"postsVotesList":[],"postsVotesPagesCount":null,"postsVotesListLoading":false,"userVotesList":[],"userVotesPagesCount":null,"userVotesListLoading":false},"users":{"authorRefs":{},"authorIds":{},"pagesCount":{},"authorProfiles":{"imangazalievm":{"alias":"ImangazalievM","badgets":[{"title":"Захабренный","description":"Пользователь с кармой \u003E0","url":null,"isRemovable":false}],"aboutHtml":"Программирую, пишу статьи на сайт java-help.ru","contacts":[],"invitedBy":{"issuerLogin":"Shoohurt","timeCreated":"2016-01-14T10:10:18+00:00"},"careerProfile":null,"companies":{"pagesCount":1,"companyIds":[],"companyRefs":{}}}},"userHubs":{},"userInvitations":{},"authorFollowers":{},"authorFollowed":{},"userSpecialization":{},"karmaStats":[],"statistics":null,"isLoading":false,"authorFollowersLoading":false,"authorFollowedLoading":false,"userHubsLoading":false,"userInvitationsLoading":false,"route":{}},"viewport":{"prevScrollY":{},"scrollY":0,"width":0},"tracker":{"notificationsLoading":false,"notificationsList":[],"notificationsPageCount":0,"pendingMarkNotificationsRead":[],"publicationsLoading":true,"publicationsList":[],"publicationsPageCount":0,"pendingDeletePublications":false,"pendingMarkPublicationsRead":false},"events":{"eventRefs":{},"eventIds":[],"pagesCount":0,"categories":[],"cities":[],"actualEvents":[{"id":"588","titleHtml":"Конкурс «Снежный код» от Хекслета. Три гранта на бесплатное 10-месячное обучение","descriptionHtml":"\u003Cp\u003EУчаствуйте в конкурсе грантов от онлайн-школы программирования Хекслет. Три победителя пройдут 10-месячное обучение с наставником, освоив один из востребованных стеков: Java, Python, JavaScript, PHP или Node.js.\u003C\u002Fp\u003E\u003Cp\u003EЭто шанс без вложений освоить новый стек, систематизировать знания, восполнить пробелы и повысить свою ценность на рынке. Технологии развиваются быстро — обновляйте навыки, чтобы не отставать.\u003C\u002Fp\u003E\u003Cp\u003EПомимо грантов, можно выиграть доступ ко всем курсам Хекслета, полезные подписки, сертификаты и подарки от Хабра и партнеров.\u003C\u002Fp\u003E\u003Cp\u003EВ прошлом году три победителя успешно завершили программу и уже работают в IT.  Инвестируйте время в свое развитие — участвуйте! \u003C\u002Fp\u003E","imageUrl":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Ff79\u002F1fc\u002F79d\u002Ff791fc79d0d9fdda84397ed0c0717764.png","eventUrl":"https:\u002F\u002Fspecial.hexlet.io\u002Fgrant?utm_source=partners&utm_medium=referral&utm_campaign=grant&utm_content=link&utm_term=placement_habr","startDay":"2025-02-17","finishDay":"2025-03-24","isOnline":true,"geo":[],"isArchive":false,"categories":[{"id":"2","titleHtml":"Разработка"}],"tags":["гранты","конкурс","Хекслет","Java","Python","JavaScript","PHP","Node.js"],"metadata":null},{"id":"596","titleHtml":"Офлайн-конференция Хабр х K-team: как удерживать таланты в 2025 году","descriptionHtml":"\u003Cp\u003EМы — Хабр и K-Team — провели масштабное исследование, чтобы разобраться, что на самом деле мотивирует сотрудников оставаться в компании и быть лояльными\u003C\u002Fp\u003E\u003Cp\u003EВместе прошли по тернистому пути к лояльности, опросив&nbsp;3 000+ сотрудников, HR и руководителей из разных отраслей:&nbsp;от ретейла и логистики до IT и промышленности. Мы заботливо собрали самые разные мнения, чтобы понять, что по-настоящему важно для людей, которые остаются в компании надолго и любят свою работу. \u003C\u002Fp\u003E\u003Cp\u003EНаша цель проста — помочь бизнесу не сливать бюджет на бесполезные инициативы, а сотрудникам — получать то, что им действительно нужно. \u003C\u002Fp\u003E\u003Cp\u003EПриглашаем вас на офлайн-презентацию в Москве в марте. Обсудим результаты исследования, ключевые выводы и разберем, как строить эффективные Retention-стратегии в 2025 году.\u003C\u002Fp\u003E\u003Cp\u003EКоличество мест ограничено, заявки проходят модерацию. Если ваша заявка будет одобрена, вы получите письмо с подтверждением и адресом встречи.\u003C\u002Fp\u003E\u003Cp\u003EЕсли прийти не получится — после ивента отправим результаты исследования всем, кто зарегистрируется на лендинге.\u003C\u002Fp\u003E\u003Cp\u003EМентальное здоровье сотрудников — важная часть корпоративной культуры. В «Ясно для бизнеса» изучают, как забота о команде влияет на вовлечённость и эффективность. Они подготовили гайд о работе с молодыми специалистами, а для теста сервиса есть промокод CORP-HABRTLNT-DISC20 на скидку 20% для первых сессий: https:\u002F\u002Fu.habr.com\u002FPQP4b\u003C\u002Fp\u003E\u003Cp\u003E\u003C\u002Fp\u003E","imageUrl":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fb14\u002Fcd3\u002F772\u002Fb14cd3772bc67698c8fbfd846e23824a.png","eventUrl":"https:\u002F\u002Fevent.k-team.ru\u002Fexpectations_vs_reality?utm_source=habr","startDay":"2025-03-20","startTime":"10:00","finishDay":"2025-03-20","finishTime":"17:00","isOnline":false,"geo":["Москва"],"isArchive":false,"categories":[{"id":"16","titleHtml":"Другое"}],"tags":["HR","HRD","Удержание сотрудников"],"metadata":null},{"id":"604","titleHtml":"IX HappyWorkForum | Аутентичность и ментальное здоровье персонала","descriptionHtml":"\u003Cp\u003EБолее 250 HRD, первые лица компаний и владельцы крупного бизнеса обсудят лучшие практики благополучия и управление командой.\u003C\u002Fp\u003E\u003Cp\u003EПочему ментальное здоровье становится KPI бизнеса?\u003C\u002Fp\u003E\u003Cp\u003EГде граница ответственности за выгорание и стресс сотрудников?\u003C\u002Fp\u003E\u003Cp\u003EКак стать работодателем №1?\u003C\u002Fp\u003E\u003Cp\u003EКак управлять уставшими командами?\u003C\u002Fp\u003E\u003Cp\u003EКак справляться с выгоранием руководителей?\u003C\u002Fp\u003E\u003Cp\u003EЧем замотивировать сотрудников, когда деньги уже не работают?&nbsp;&nbsp;\u003C\u002Fp\u003E\u003Cp\u003EКак решать ценностные конфликты?\u003C\u002Fp\u003E\u003Cp\u003EУспешные корпоративные программы: что реально работает?&nbsp;&nbsp;\u003C\u002Fp\u003E\u003Cp\u003EВ программе презентация отчёта по развитию лидерства, батлы, практические кейсы и нетворкинг.\u003C\u002Fp\u003E\u003Cp\u003EСреди спикеров, представители компаний: Т-банк, Сравни.ру, Ростелеком, ТД Ренна, Спортмастер, ТрансТелеком, Оптиком, Норникель, Азбука вкуса, ЕВМ и другие.\u003C\u002Fp\u003E\u003Cp\u003EУчастие для HRD, руководителей и владельцев бизнеса без оплаты. Действует строгая модерация.\u003C\u002Fp\u003E\u003Cp\u003E\u003C\u002Fp\u003E","imageUrl":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F733\u002F9ef\u002F194\u002F7339ef1945f3ee6906daf89db79829d4.png","eventUrl":"https:\u002F\u002Fhappyforum.ru\u002F?utm_source=habr&utm_medium=email&utm_campaign=hwf","startDay":"2025-03-20","startTime":"10:00","finishDay":"2025-03-20","finishTime":"18:00","isOnline":true,"geo":["Москва"],"isArchive":false,"categories":[{"id":"16","titleHtml":"Другое"}],"tags":["HRD","HR"],"metadata":null},{"id":"612","titleHtml":"Вебинар «Мастерская бюджета: как управлять затратами на облачные ресурсы»","descriptionHtml":"\u003Cp\u003EРасскажем, как сэкономить на использовании облачных сервисов через возможности личного кабинета, сервисы с free tier и акции. Покажем, как оптимизировать потребление ресурсов и настроить лимиты бюджетов.\u003C\u002Fp\u003E\u003Cp\u003EПрограмма вебинара:\u003C\u002Fp\u003E\u003Cul\u003E\u003Cli\u003E\u003Cp\u003EАнализ текущей утилизации ресурсов: поиск ресурсов с низкой утилизацией и анализ возможной оптимизации.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003EКалькулятор затрат: демо-настройки параметров для точных прогнозов расходов.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003EАнализ детализированных данных: подходы к аналитике, включая метаданные.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003EОптимизация потребления: использование зарезервированных инстансов и спотовых экземпляров.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003EАнализ бесплатного потребления: как использовать free tier для сокращения затрат.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003EНастройка лимитов бюджетов: автоматизация и уведомления для контроля расходов.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003EИспользование Public API: тегирование ресурсов для лучшей аналитики затрат.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003C\u002Ful\u003E\u003Cp\u003EВебинар будет интересен менеджерам облачных ресурсов и IT-департаментов, DevOps-инженерам и сотрудникам, в чью зону ответственности входит контроль над облачными расходами.\u003C\u002Fp\u003E","imageUrl":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F38f\u002F10d\u002Ff4c\u002F38f10df4c7f9d7c5d4610fe426af0ab4.png","eventUrl":"https:\u002F\u002Fu.habr.com\u002Fcldr_cloudeventwebinar","startDay":"2025-03-20","startTime":"11:00","finishDay":"2025-03-20","isOnline":true,"geo":[],"isArchive":false,"categories":[{"id":"2","titleHtml":"Разработка"},{"id":"4","titleHtml":"Администрирование"}],"tags":["вебинар cloudru","вебинар для айтишников","вебинар про облака"],"metadata":null},{"id":"616","titleHtml":"Бизнес-конференция «Digital Brand Day 2025: Орбита 2025»","descriptionHtml":"\u003Cp\u003E21 марта конференция «Digital Brand Day 2025: Орбита 2025» в восьмой раз соберёт ведущих экспертов цифрового маркетинга и рекламы для обсуждения главных трендов digital-рынка и новых инструментов, которые определят стратегию брендов.\u003C\u002Fp\u003E\u003Cp\u003EВ основе темы Digital Brand Day 2025 лежит фундаментальный вопрос философии: что первично — материя или сознание? А что же первично в цифровой среде — технологии или идеи? Конференция станет эпицентром открытий, где мы вместе проложим путь сквозь бескрайние просторы рекламного космоса и наметим вектор развития цифрового маркетинга.\u003C\u002Fp\u003E\u003Cp\u003EГостей «Digital Brand Day: Орбита 2025» ждёт не только насыщенная программа, но и возможность завести полезные знакомства, увидеть, каким будет диджитал завтра.\u003C\u002Fp\u003E","imageUrl":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F523\u002F7fb\u002F13a\u002F5237fb13ad7fb6fb483c49691aaec836.png","eventUrl":"https:\u002F\u002Fu.habr.com\u002Fcldr_digitalbrandday","startDay":"2025-03-21","startTime":"10:00","isOnline":false,"geo":["Москва"],"isArchive":false,"categories":[{"id":"10","titleHtml":"Маркетинг"},{"id":"16","titleHtml":"Другое"}],"tags":["digital brand day","бизнес-конференция digital brand day","цифровой маркетинг","digital-рынок"],"metadata":null},{"id":"608","titleHtml":"Вебинар «Контент-маркетинг здорового человека: как привлечь внимание аудитории»","descriptionHtml":"\u003Cp\u003E27 марта в 16:00 МСК вместе с агентством Loft PR Studio проведем открытый вебинар о том, как писать про здоровье на Хабре. \u003C\u002Fp\u003E\u003Cp\u003EНа вебинаре разберем, что помогает удерживать внимание и превращает контент в работающий инструмент. Поделимся опытом брендов, которые ведут блоги и регулярно публикуют статьи.\u003C\u002Fp\u003E\u003Cp\u003EБудет интересно тем, кто продвигает товары и услуги для здоровья на аудиторию B2C и B2B. \u003C\u002Fp\u003E\u003Cp\u003E🔗 Участие бесплатное, но нужна предварительная регистрация.\u003C\u002Fp\u003E","imageUrl":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F8fd\u002Fe04\u002Fddd\u002F8fde04ddd9ba3f6bcd515aa6209f96b7.png","eventUrl":"https:\u002F\u002Fhabr.timepad.ru\u002Fevent\u002F3266126\u002F?utm_refcode=b5d44b4f1d5f2c06b5696586408b58e610baafd8","startDay":"2025-03-27","startTime":"16:00","finishDay":"2025-03-27","finishTime":"18:00","isOnline":true,"geo":[],"isArchive":false,"categories":[{"id":"10","titleHtml":"Маркетинг"},{"id":"16","titleHtml":"Другое"}],"tags":["Вебинар","Контент","Хабр"],"metadata":null},{"id":"606","titleHtml":"Серия вебинаров «DevOps Middle: AvitoTech vs ecom.tech»","descriptionHtml":"\u003Cp\u003EУчебный центр Слёрм запустил серию бесплатных вебинаров «Честные вакансии: DevOps Middle».\u003C\u002Fp\u003E\u003Cp\u003EДва раза в неделю Вячеслав Федосеев, TeamLead DevOps в «Честном знаке» и автор телеграм-канала «DevOps Bootcamp с Федосеевым» встречается в прямом эфире с экспертами из бигтеха, чтобы обсудить:\u003C\u002Fp\u003E\u003Col\u003E\u003Cli\u003E\u003Cp\u003EКакие задачи должен решать DevOps middle.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003EКакими основными и дополнительными инструментами и подходами должен владеть DevOps middle.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003EСтоп-факторы на собеседовании.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003EКак выглядит рабочий день DevOps middle.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003EКакие софт-скилы действительно важны.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003C\u002Fol\u003E\u003Cp\u003E31 марта состоится встреча с экспертами AvitoTech, 2 апреля — с ecom.tech. Кому подходите вы, а кто — вам? Разберёмся вместе на вебинарах.\u003C\u002Fp\u003E\u003Cp\u003EПодробности — в telegram-боте.\u003C\u002Fp\u003E\u003Cp\u003E\u003C\u002Fp\u003E","imageUrl":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fb99\u002F62a\u002Fb24\u002Fb9962ab2439c6edc80f96d7f0a847c72.png","eventUrl":"https:\u002F\u002Fu.habr.com\u002Fcldr_slermdevops","startDay":"2025-03-31","startTime":"17:00","isOnline":true,"geo":[],"isArchive":false,"categories":[{"id":"2","titleHtml":"Разработка"},{"id":"4","titleHtml":"Администрирование"}],"tags":["Вебинар Слерм","Вебинар Devops","Честные вакансии","Слерм","Честные вакансии Devops Middle"],"metadata":null},{"id":"618","titleHtml":"Реалити для разработчиков: узнайте, как строится новое публичное облако MWS","descriptionHtml":"\u003Cp\u003EBuilding the Cloud — это реалити-проект для разработчиков о новом облаке МТС Web Services. Каждый эпизод посвящён отдельному building-блоку новой облачной платформы.\u003C\u002Fp\u003E\u003Cp\u003EВ прямом эфире:\u003C\u002Fp\u003E\u003Cul\u003E\u003Cli\u003E\u003Cp\u003EПоказываем архитектуру сервисов облака ещё до релиза.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003EДелимся опытом на реальных кейсах из разработки.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003EОтвечаем на вопросы в прямом эфире.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003C\u002Ful\u003E\u003Cp\u003EВ новом выпуске проекта расскажем, как строим underlay-сеть нового облака.\u003C\u002Fp\u003E\u003Cp\u003EВы узнаете:\u003C\u002Fp\u003E\u003Cul\u003E\u003Cli\u003E\u003Cp\u003EКак мы поменяли подход к построению underlay-сети в новом облаке MWS.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003EКакую архитектуру строим и как реализовали изоляцию management и data plane.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003EКак обеспечиваем отказоустойчивость и производительность на уровне физической инфраструктуры.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003C\u002Ful\u003E\u003Cp\u003EНовый выпуск Building the Cloud будет интересен сетевым инженерам, backend-разработчикам, DevOps- и SRE-инженерам, а также всем, кто интересуется сетевыми или облачными технологиями.\u003C\u002Fp\u003E\u003Cp\u003EРегистрируйтесь по ссылке, подключайтесь к прямому эфиру и задавайте вопросы в чате.\u003C\u002Fp\u003E\u003Cp\u003EЗа самый интересный вопрос подарим фирменный мерч MWS.\u003C\u002Fp\u003E\u003Cp\u003EДо встречи в эфире.\u003C\u002Fp\u003E","imageUrl":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Ff76\u002F0f9\u002Fa82\u002Ff760f9a827b851a5eeca4802c643a91d.png","eventUrl":"https:\u002F\u002Fu.habr.com\u002Fcldr_buildingthecloud4","startDay":"2025-04-03","startTime":"11:00","isOnline":true,"geo":[],"isArchive":false,"categories":[{"id":"2","titleHtml":"Разработка"}],"tags":["реалити-проект для разработчиков","Реалити для разработчиков","облако","облако MWS"],"metadata":null},{"id":"620","titleHtml":"Открытая встреча «System Analysis Meetup SberHealth»","descriptionHtml":"\u003Cp\u003EВ программе:\u003C\u002Fp\u003E\u003Cul\u003E\u003Cli\u003E\u003Cp\u003EГоргоц Мария, старший системный аналитик, расскажет про описание требований для мобильных приложений.&nbsp;\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003EНижник Станислав, ведущий системный аналитик, расскажет про книжный клуб системных аналитиков: «Как мы создали сообщество для обмена знаниями».\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003EВ качестве приглашённого спикера Севостьянова Анастасия, ведущий системный аналитик в Альфа-Банке, расскажет про мидл слой без хаоса: «Как сделать документацию понятной и живой».&nbsp;\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003C\u002Ful\u003E\u003Cp\u003EПосле сессии с докладами проведём профессиональную игру для офлайн-участников «Искусство защиты абсурда».&nbsp;\u003C\u002Fp\u003E\u003Cp\u003EВедущая митапа Пашкова Ольга, руководитель направления методологии и системного анализа в СберЗдоровье.\u003C\u002Fp\u003E","imageUrl":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Feba\u002Fc37\u002F879\u002Febac378793b959ebce42f41713e7b67f.jpg","eventUrl":"https:\u002F\u002Fu.habr.com\u002Fcldr_sbermeetup","startDay":"2025-04-03","startTime":"17:00","finishDay":"2025-04-03","finishTime":"23:00","isOnline":true,"geo":["Москва"],"isArchive":false,"categories":[{"id":"12","titleHtml":"Аналитика"}],"tags":["Семинар аналитика","сбер митап","системная аналитика митап","системная аналитика"],"metadata":null},{"id":"590","titleHtml":"«GoCloud 2025» — масштабная IT-конференция про облака и AI","descriptionHtml":"\u003Cp\u003EПоговорим про глобальные тренды в AI, расскажем про широкий набор сценариев работы в облаке, поделимся последними релизами и нашими планами, чтобы показать, какой простор открывают облачные и AI-технологии для бизнеса и разработчиков.\u003C\u002Fp\u003E\u003Cp\u003EЧто ждёт участников в этом году:\u003C\u002Fp\u003E\u003Cul\u003E\u003Cli\u003E\u003Cp\u003EТри трека: инфраструктура и инструменты, AI и R&amp;D и сценарии работы в облаке.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003E30+ спикеров из Cloud.ru и ведущих российских компаний.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003ELive-демонстрации облачных платформ и нетворкинг с экспертами.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003EНе только доклады: интерактивные зоны, afterparty с музыкальной программой и кастомный мерч.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003C\u002Ful\u003E\u003Cp\u003EКому будет полезно: техническим лидерам, IT-директорам, бизнес-руководителям, разработчикам, DevOps-инженерам, архитекторам, дата-инженерам, AI\u002FML-инженерам, дата-сайентистам, SRE-инженерам, системным администраторам, специалистам по информационной безопасности.\u003C\u002Fp\u003E\u003Cp\u003EАдрес: Москва, Цифровое деловое пространство (ЦДП), ул. Покровка, 47.\u003C\u002Fp\u003E\u003Cp\u003E\u003C\u002Fp\u003E","imageUrl":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F31b\u002Fe68\u002F295\u002F31be6829578e7934fbc944396eb330b1.png","eventUrl":"https:\u002F\u002Fu.habr.com\u002Fcldr_gocloud","startDay":"2025-04-10","startTime":"10:00","finishDay":"2025-04-10","finishTime":"20:00","isOnline":true,"geo":["Москва"],"isArchive":false,"categories":[{"id":"2","titleHtml":"Разработка"},{"id":"4","titleHtml":"Администрирование"},{"id":"8","titleHtml":"Менеджмент"}],"tags":["конференция Cloud.ru","AI","ИИ","айти конференция","облачные хранилища"],"metadata":null},{"id":"516","titleHtml":"IT-конференция Merge Tatarstan 2025","descriptionHtml":"\u003Cp\u003EКрупнейшая региональная IT-конференция России собирает профессионалов со всей страны для нетворкинга, обмена опытом и поиска новых деловых контактов.\u003C\u002Fp\u003E\u003Cp\u003EMerge Tatarstan — это 7 тематических конференций на одной площадке, 2000 участников, более 170 спикеров-практиков, мастер-классы, воркшопы и BoF-сессии.\u003C\u002Fp\u003E\u003Cp\u003EК участию в конференции приглашаются разработчики, QA, тимлиды, Project\u002FProduct-менеджеры, маркетологи, аналитики, UI\u002FUX-дизайнеры, PR-специалисты, HR-менеджеры, владельцы бизнеса и начинающие специалисты.\u003C\u002Fp\u003E\u003Cp\u003E\u003C\u002Fp\u003E","imageUrl":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F0e9\u002F3a8\u002F3ec\u002F0e93a83ecea09f806d1df907ddb036a4.jpg","eventUrl":"https:\u002F\u002Fu.habr.com\u002Fcldr_tatarstan","startDay":"2025-04-25","startTime":"09:00","finishDay":"2025-04-26","finishTime":"19:30","isOnline":false,"geo":["Казань"],"isArchive":false,"categories":[{"id":"2","titleHtml":"Разработка"},{"id":"10","titleHtml":"Маркетинг"},{"id":"16","titleHtml":"Другое"}],"tags":["Разработка","IT","PR","UI\u002FUX","бизнес","маркетинг","аналитика"],"metadata":null},{"id":"610","titleHtml":"Летняя айти-тусовка Summer Merge","descriptionHtml":"\u003Cp\u003EЛетняя айти-тусовка возвращается.\u003C\u002Fp\u003E\u003Cp\u003EВырваться из рутины и сменить обстановку на несколько дней можно вместе с Summer Merge.&nbsp;\u003C\u002Fp\u003E\u003Cp\u003EСосновый лес, чистый воздух, живое общение с экспертами IT, спортивные состязания, мастер-классы, квесты, встречи с друзьями, новые знакомства, afterparty — забудьте про суету города и окунитесь в приятную атмосферу digital detox. В эти летние IT-выходные мы обещаем атмосферу ярких приключений.&nbsp;\u003C\u002Fp\u003E\u003Cp\u003EЖдём вас 20—22 июня в экопарке «Русский берег» на Summer Merge.\u003C\u002Fp\u003E","imageUrl":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F652\u002F12d\u002F998\u002F65212d998fb4939d9787bd9c726d2acb.png","eventUrl":"https:\u002F\u002Fu.habr.com\u002Fcldr_summermerge","startDay":"2025-06-20","finishDay":"2025-06-22","isOnline":false,"geo":["Ульяновская область"],"isArchive":false,"categories":[{"id":"2","titleHtml":"Разработка"},{"id":"16","titleHtml":"Другое"}],"tags":["летняя айти-тусовка","айти-кэмп","летний выезд для айтишников","Summer Merge"],"metadata":null}],"currentEvent":null,"eventsFilter":{"city":"all","timeStarted":null,"timeEnded":null}},"wysiwyg":{"WYSIWYGRulesRefs":null}};(function(){var s;(s=document.currentScript||document.scripts[document.scripts.length-1]).parentNode.removeChild(s);}());</script><script src="https://assets.habr.com/habr-web/js/chunk-vendors.3b11d41f.js" defer></script><script src="https://assets.habr.com/habr-web/js/app.7a97ea6d.js" defer></script></div>
    <div id="overlays"><!----><!--teleport anchor--><!----><!--teleport anchor--><!----><!--teleport anchor--><!----><!--teleport anchor--><!----><!--teleport anchor--><!----><!--teleport anchor--></div>
    
    
    <script async src="https://www.googletagmanager.com/gtag/js?id=G-S28W1WC23F"></script>
    <script>
      window.dataLayer = window.dataLayer || [];
      function gtag(){dataLayer.push(arguments);}
      gtag('js', new Date());
    </script>
  
  <script type="text/javascript" >
    (function(m,e,t,r,i,k,a){m[i]=m[i]||function(){(m[i].a=m[i].a||[]).push(arguments)};
    m[i].l=1*new Date();k=e.createElement(t),a=e.getElementsByTagName(t)[0],k.async=1,k.src=r,a.parentNode.insertBefore(k,a)})
    (window, document, "script", "https://mc.yandex.ru/metrika/tag.js", "ym");

  </script>
    <script type="text/javascript">
      window.addEventListener('load', function () {
        setTimeout(() => {
          const img = new Image();
          img.src = 'https://vk.com/rtrg?p=VK-RTRG-421343-57vKE';
        }, 0);
      });
    </script>
  
    </body>

    </html>
