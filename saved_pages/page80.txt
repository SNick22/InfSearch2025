<!DOCTYPE html>
<html lang="ru">

  <head>
    <title>Вопросы и ответы для собеседования по Kotlin. Часть 4 &#x2F; Хабр</title>
<meta property="fb:app_id" content="444736788986613">
<meta property="fb:pages" content="472597926099084">
<meta name="twitter:card" content="summary_large_image">
<meta name="twitter:site" content="@habr_com">
<meta property="og:site_name" content="Хабр">
<link href="https://habr.com/ru/rss/post/736392/?fl=ru" type="application/rss+xml" title rel="alternate" name="rss">
<link href="https://habr.com/ru/articles/736392/" rel="canonical" data-hid="e3fa780">
<link rel="image_src" href="https://habrastorage.org/getpro/habr/upload_files/54d/f96/12c/54df9612c50967db75beb93320269e93.png" data-hid="2a79c45">
<link rel="amphtml" href="https://habr.com/ru/amp/publications/736392/">
<meta property="og:title" content="Вопросы и ответы для собеседования по Kotlin. Часть 4">
<meta name="twitter:title" content="Вопросы и ответы для собеседования по Kotlin. Часть 4">
<meta name="aiturec:title" content="Вопросы и ответы для собеседования по Kotlin. Часть 4">
<meta name="description" content="Вопросы и ответы для собеседования по Kotlin. Часть 1 Вопросы и ответы для собеседования по Kotlin. Часть 2 &nbsp; Вопросы и ответы для собеседования по Kotlin. Часть 3 Вопросы и ответы для...">
<meta itemprop="description" content="Вопросы и ответы для собеседования по Kotlin. Часть 1 Вопросы и ответы для собеседования по Kotlin. Часть 2 &nbsp; Вопросы и ответы для собеседования по Kotlin. Часть 3 Вопросы и ответы для...">
<meta property="og:description" content="Вопросы и ответы для собеседования по Kotlin. Часть 1 Вопросы и ответы для собеседования по Kotlin. Часть 2 &nbsp; Вопросы и ответы для собеседования по Kotlin. Часть 3 Вопросы и ответы для...">
<meta name="twitter:description" content="Вопросы и ответы для собеседования по Kotlin. Часть 1 Вопросы и ответы для собеседования по Kotlin. Часть 2 &nbsp; Вопросы и ответы для собеседования по Kotlin. Часть 3 Вопросы и ответы для...">
<meta property="aiturec:description" content="Вопросы и ответы для собеседования по Kotlin. Часть 1 Вопросы и ответы для собеседования по Kotlin. Часть 2 &nbsp; Вопросы и ответы для собеседования по Kotlin. Часть 3 Вопросы и ответы для...">
<meta itemprop="image" content="https://habrastorage.org/getpro/habr/upload_files/54d/f96/12c/54df9612c50967db75beb93320269e93.png">
<meta property="og:image" content="https://habrastorage.org/getpro/habr/upload_files/54d/f96/12c/54df9612c50967db75beb93320269e93.png">
<meta property="og:image:width" content="1200">
<meta property="og:image:height" content="630">
<meta property="aiturec:image" content="https://habrastorage.org/getpro/habr/upload_files/54d/f96/12c/54df9612c50967db75beb93320269e93.png">
<meta name="twitter:image" content="https://habrastorage.org/getpro/habr/upload_files/54d/f96/12c/54df9612c50967db75beb93320269e93.png">
<meta property="vk:image" content="https://habrastorage.org/getpro/habr/upload_files/54d/f96/12c/54df9612c50967db75beb93320269e93.png?format=vk">
<meta property="vk:image" content="https://habrastorage.org/getpro/habr/upload_files/54d/f96/12c/54df9612c50967db75beb93320269e93.png?format=vk">
<meta property="aiturec:item_id" content="736392">
<meta property="aiturec:datetime" content="2023-05-20T19:08:36.000Z">
<meta content="https://habr.com/ru/articles/736392/" property="og:url">
<meta property="og:type" content="article">
<meta property="og:locale" content="ru_RU">
<meta property="og:image:width" content="1200">
<meta property="og:image:height" content="630">
<meta name="keywords" content="kotlin, собеседование, faq, андроид, подготовка к собеседованию, котлин, учебные материалы, android, вопросы для собеседования, kotlin уроки">
<script type="application/ld+json" data-hid="1e0f0a2">{"@context":"http:\/\/schema.org","@type":"Article","mainEntityOfPage":{"@type":"WebPage","@id":"https:\/\/habr.com\/ru\/articles\/736392\/"},"headline":"Вопросы и ответы для собеседования по Kotlin. Часть 4","datePublished":"2023-05-20T22:08:36+03:00","dateModified":"2024-01-25T12:34:18+03:00","author":{"@type":"Person","name":"Дмитрий"},"publisher":{"@type":"Organization","name":"Habr","logo":{"@type":"ImageObject","url":"https:\/\/habrastorage.org\/webt\/a_\/lk\/9m\/a_lk9mjkccjox-zccjrpfolmkmq.png"}},"description":"Вопросы и ответы для собеседования по Kotlin. Часть 1Вопросы и ответы для собеседования по Kotlin. Часть 2&nbsp;Вопросы и ответы для собеседования по Kotlin. Часть 3...","url":"https:\/\/habr.com\/ru\/articles\/736392\/#post-content-body","about":["h_programming","h_java","h_android_dev","h_kotlin","h_study","f_develop","f_management"],"image":["https:\/\/habr.com\/share\/publication\/736392\/6e9043a646dab62ad9ac8c8accc07648\/","https:\/\/habrastorage.org\/getpro\/habr\/upload_files\/b4c\/080\/506\/b4c080506274ba29a65c7dde6ce1cdfd.png"]}</script>
    <meta charset="UTF-8">
    <meta name="viewport"
      content="width=device-width,initial-scale=1.0,viewport-fit=cover,maximum-scale=1,user-scalable=0">
    <meta name="referrer" content="unsafe-url">
    <style>
      /* cyrillic-ext */
      @font-face {
        font-family: 'Fira Sans';
        font-style: normal;
        font-weight: 400;
        font-display: swap;
        src: url(https://fonts.gstatic.com/s/firasans/v17/va9E4kDNxMZdWfMOD5VvmojLazX3dGTP.woff2) format('woff2');
        unicode-range: U+0460-052F, U+1C80-1C88, U+20B4, U+2DE0-2DFF, U+A640-A69F, U+FE2E-FE2F;
      }

      /* cyrillic */
      @font-face {
        font-family: 'Fira Sans';
        font-style: normal;
        font-weight: 400;
        font-display: swap;
        src: url(https://fonts.gstatic.com/s/firasans/v17/va9E4kDNxMZdWfMOD5Vvk4jLazX3dGTP.woff2) format('woff2');
        unicode-range: U+0301, U+0400-045F, U+0490-0491, U+04B0-04B1, U+2116;
      }

      /* latin-ext */
      @font-face {
        font-family: 'Fira Sans';
        font-style: normal;
        font-weight: 400;
        font-display: swap;
        src: url(https://fonts.gstatic.com/s/firasans/v17/va9E4kDNxMZdWfMOD5VvmYjLazX3dGTP.woff2) format('woff2');
        unicode-range: U+0100-02AF, U+0304, U+0308, U+0329, U+1E00-1E9F, U+1EF2-1EFF, U+2020, U+20A0-20AB, U+20AD-20C0, U+2113, U+2C60-2C7F, U+A720-A7FF;
      }

      /* latin */
      @font-face {
        font-family: 'Fira Sans';
        font-style: normal;
        font-weight: 400;
        font-display: swap;
        src: url(https://fonts.gstatic.com/s/firasans/v17/va9E4kDNxMZdWfMOD5Vvl4jLazX3dA.woff2) format('woff2');
        unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+0304, U+0308, U+0329, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;
      }

      /* cyrillic-ext */
      @font-face {
        font-family: 'Fira Sans';
        font-style: normal;
        font-weight: 500;
        font-display: swap;
        src: url(https://fonts.gstatic.com/s/firasans/v17/va9B4kDNxMZdWfMOD5VnZKveSxf6Xl7Gl3LX.woff2) format('woff2');
        unicode-range: U+0460-052F, U+1C80-1C88, U+20B4, U+2DE0-2DFF, U+A640-A69F, U+FE2E-FE2F;
      }

      /* cyrillic */
      @font-face {
        font-family: 'Fira Sans';
        font-style: normal;
        font-weight: 500;
        font-display: swap;
        src: url(https://fonts.gstatic.com/s/firasans/v17/va9B4kDNxMZdWfMOD5VnZKveQhf6Xl7Gl3LX.woff2) format('woff2');
        unicode-range: U+0301, U+0400-045F, U+0490-0491, U+04B0-04B1, U+2116;
      }

      /* latin-ext */
      @font-face {
        font-family: 'Fira Sans';
        font-style: normal;
        font-weight: 500;
        font-display: swap;
        src: url(https://fonts.gstatic.com/s/firasans/v17/va9B4kDNxMZdWfMOD5VnZKveSBf6Xl7Gl3LX.woff2) format('woff2');
        unicode-range: U+0100-02AF, U+0304, U+0308, U+0329, U+1E00-1E9F, U+1EF2-1EFF, U+2020, U+20A0-20AB, U+20AD-20C0, U+2113, U+2C60-2C7F, U+A720-A7FF;
      }

      /* latin */
      @font-face {
        font-family: 'Fira Sans';
        font-style: normal;
        font-weight: 500;
        font-display: swap;
        src: url(https://fonts.gstatic.com/s/firasans/v17/va9B4kDNxMZdWfMOD5VnZKveRhf6Xl7Glw.woff2) format('woff2');
        unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+0304, U+0308, U+0329, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;
      }

      /* cyrillic-ext */
      @font-face {
        font-family: 'Fira Sans';
        font-style: normal;
        font-weight: 700;
        font-display: swap;
        src: url(https://fonts.gstatic.com/s/firasans/v17/va9B4kDNxMZdWfMOD5VnLK3eSxf6Xl7Gl3LX.woff2) format('woff2');
        unicode-range: U+0460-052F, U+1C80-1C88, U+20B4, U+2DE0-2DFF, U+A640-A69F, U+FE2E-FE2F;
      }

      /* cyrillic */
      @font-face {
        font-family: 'Fira Sans';
        font-style: normal;
        font-weight: 700;
        font-display: swap;
        src: url(https://fonts.gstatic.com/s/firasans/v17/va9B4kDNxMZdWfMOD5VnLK3eQhf6Xl7Gl3LX.woff2) format('woff2');
        unicode-range: U+0301, U+0400-045F, U+0490-0491, U+04B0-04B1, U+2116;
      }

      /* latin-ext */
      @font-face {
        font-family: 'Fira Sans';
        font-style: normal;
        font-weight: 700;
        font-display: swap;
        src: url(https://fonts.gstatic.com/s/firasans/v17/va9B4kDNxMZdWfMOD5VnLK3eSBf6Xl7Gl3LX.woff2) format('woff2');
        unicode-range: U+0100-02AF, U+0304, U+0308, U+0329, U+1E00-1E9F, U+1EF2-1EFF, U+2020, U+20A0-20AB, U+20AD-20C0, U+2113, U+2C60-2C7F, U+A720-A7FF;
      }

      /* latin */
      @font-face {
        font-family: 'Fira Sans';
        font-style: normal;
        font-weight: 700;
        font-display: swap;
        src: url(https://fonts.gstatic.com/s/firasans/v17/va9B4kDNxMZdWfMOD5VnLK3eRhf6Xl7Glw.woff2) format('woff2');
        unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+0304, U+0308, U+0329, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;
      }
    </style>
    <link rel="preload" href="https://assets.habr.com/habr-web/css/theme/light-v1.css" as="style" media="(prefers-color-scheme: light)" /><link rel="preload" href="https://assets.habr.com/habr-web/css/theme/dark-v1.css" as="style" media="(prefers-color-scheme: dark)" /><link id="light-colors" rel="stylesheet" href="https://assets.habr.com/habr-web/css/theme/light-v1.css" media="(prefers-color-scheme: light)" /><link id="dark-colors" rel="stylesheet" href="https://assets.habr.com/habr-web/css/theme/dark-v1.css" media="(prefers-color-scheme: dark)" />
    <script>window.i18nFetch = new Promise((res, rej) => {
          const xhr = new XMLHttpRequest();
          xhr.open('GET', '/js/i18n/ru-compiled.35b2fec11bb79a62419ab67779c2dd82.json');
          xhr.responseType = 'json';
          xhr.onload = function(e) {
            if (this.status === 200) {
              res({ru: xhr.response});
            } else {
              rej(e);
            }
          };
          xhr.send();
        });</script>
    <style>
      .grecaptcha-badge {
        visibility: hidden;
      }
    </style>
    <meta name="habr-version" content="2.233.0">
    
    <meta name="apple-mobile-web-app-status-bar-style" content="#303b44">
    <meta name="msapplication-TileColor" content="#629FBC">
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="mobile-web-app-capable" content="yes">
    <link rel="shortcut icon" type="image/png" sizes="16x16" href="https://assets.habr.com/habr-web/img/favicons/favicon-16.png">
    <link rel="shortcut icon" type="image/png" sizes="32x32" href="https://assets.habr.com/habr-web/img/favicons/favicon-32.png">
    <link rel="apple-touch-icon" type="image/png" sizes="76x76" href="https://assets.habr.com/habr-web/img/favicons/apple-touch-icon-76.png">
    <link rel="apple-touch-icon" type="image/png" sizes="120x120" href="https://assets.habr.com/habr-web/img/favicons/apple-touch-icon-120.png">
    <link rel="apple-touch-icon" type="image/png" sizes="152x152" href="https://assets.habr.com/habr-web/img/favicons/apple-touch-icon-152.png">
    <link rel="apple-touch-icon" type="image/png" sizes="180x180" href="https://assets.habr.com/habr-web/img/favicons/apple-touch-icon-180.png">
    <link rel="apple-touch-icon" type="image/png" sizes="256x256" href="https://assets.habr.com/habr-web/img/favicons/apple-touch-icon-256.png">
    <link rel="apple-touch-startup-image"
      media="screen and (device-width: 320px) and (device-height: 568px) and (-webkit-device-pixel-ratio: 2) and (orientation: landscape)"
      href="https://assets.habr.com/habr-web/img/splashes/splash_1136x640.png">
    <link rel="apple-touch-startup-image"
      media="screen and (device-width: 375px) and (device-height: 812px) and (-webkit-device-pixel-ratio: 3) and (orientation: landscape)"
      href="https://assets.habr.com/habr-web/img/splashes/splash_2436x1125.png">
    <link rel="apple-touch-startup-image"
      media="screen and (device-width: 414px) and (device-height: 896px) and (-webkit-device-pixel-ratio: 2) and (orientation: landscape)"
      href="https://assets.habr.com/habr-web/img/splashes/splash_1792x828.png">
    <link rel="apple-touch-startup-image"
      media="screen and (device-width: 414px) and (device-height: 896px) and (-webkit-device-pixel-ratio: 2) and (orientation: portrait)"
      href="https://assets.habr.com/habr-web/img/splashes/splash_828x1792.png">
    <link rel="apple-touch-startup-image"
      media="screen and (device-width: 375px) and (device-height: 667px) and (-webkit-device-pixel-ratio: 2) and (orientation: landscape)"
      href="https://assets.habr.com/habr-web/img/splashes/splash_1334x750.png">
    <link rel="apple-touch-startup-image"
      media="screen and (device-width: 414px) and (device-height: 896px) and (-webkit-device-pixel-ratio: 3) and (orientation: portrait)"
      href="https://assets.habr.com/habr-web/img/splashes/splash_1242x2668.png">
    <link rel="apple-touch-startup-image"
      media="screen and (device-width: 414px) and (device-height: 736px) and (-webkit-device-pixel-ratio: 3) and (orientation: landscape)"
      href="https://assets.habr.com/habr-web/img/splashes/splash_2208x1242.png">
    <link rel="apple-touch-startup-image"
      media="screen and (device-width: 375px) and (device-height: 812px) and (-webkit-device-pixel-ratio: 3) and (orientation: portrait)"
      href="https://assets.habr.com/habr-web/img/splashes/splash_1125x2436.png">
    <link rel="apple-touch-startup-image"
      media="screen and (device-width: 414px) and (device-height: 736px) and (-webkit-device-pixel-ratio: 3) and (orientation: portrait)"
      href="https://assets.habr.com/habr-web/img/splashes/splash_1242x2208.png">
    <link rel="apple-touch-startup-image"
      media="screen and (device-width: 1024px) and (device-height: 1366px) and (-webkit-device-pixel-ratio: 2) and (orientation: landscape)"
      href="https://assets.habr.com/habr-web/img/splashes/splash_2732x2048.png">
    <link rel="apple-touch-startup-image"
      media="screen and (device-width: 414px) and (device-height: 896px) and (-webkit-device-pixel-ratio: 3) and (orientation: landscape)"
      href="https://assets.habr.com/habr-web/img/splashes/splash_2688x1242.png">
    <link rel="apple-touch-startup-image"
      media="screen and (device-width: 834px) and (device-height: 1112px) and (-webkit-device-pixel-ratio: 2) and (orientation: landscape)"
      href="https://assets.habr.com/habr-web/img/splashes/splash_2224x1668.png">
    <link rel="apple-touch-startup-image"
      media="screen and (device-width: 375px) and (device-height: 667px) and (-webkit-device-pixel-ratio: 2) and (orientation: portrait)"
      href="https://assets.habr.com/habr-web/img/splashes/splash_750x1334.png">
    <link rel="apple-touch-startup-image"
      media="screen and (device-width: 1024px) and (device-height: 1366px) and (-webkit-device-pixel-ratio: 2) and (orientation: portrait)"
      href="https://assets.habr.com/habr-web/img/splashes/splash_2048x2732.png">
    <link rel="apple-touch-startup-image"
      media="screen and (device-width: 834px) and (device-height: 1194px) and (-webkit-device-pixel-ratio: 2) and (orientation: landscape)"
      href="https://assets.habr.com/habr-web/img/splashes/splash_2388x1668.png">
    <link rel="apple-touch-startup-image"
      media="screen and (device-width: 834px) and (device-height: 1112px) and (-webkit-device-pixel-ratio: 2) and (orientation: portrait)"
      href="https://assets.habr.com/habr-web/img/splashes/splash_1668x2224.png">
    <link rel="apple-touch-startup-image"
      media="screen and (device-width: 320px) and (device-height: 568px) and (-webkit-device-pixel-ratio: 2) and (orientation: portrait)"
      href="https://assets.habr.com/habr-web/img/splashes/splash_640x1136.png">
    <link rel="apple-touch-startup-image"
      media="screen and (device-width: 834px) and (device-height: 1194px) and (-webkit-device-pixel-ratio: 2) and (orientation: portrait)"
      href="https://assets.habr.com/habr-web/img/splashes/splash_1668x2388.png">
    <link rel="apple-touch-startup-image"
      media="screen and (device-width: 768px) and (device-height: 1024px) and (-webkit-device-pixel-ratio: 2) and (orientation: landscape)"
      href="https://assets.habr.com/habr-web/img/splashes/splash_2048x1536.png">
    <link rel="apple-touch-startup-image"
      media="screen and (device-width: 768px) and (device-height: 1024px) and (-webkit-device-pixel-ratio: 2) and (orientation: portrait)"
      href="https://assets.habr.com/habr-web/img/splashes/splash_1536x2048.png">
    <link rel="mask-icon" color="#77a2b6" href="https://assets.habr.com/habr-web/img/favicons/apple-touch-icon-120.svg">
    <link crossorigin="use-credentials" href="/manifest.webmanifest" rel="manifest">
    <script async src="https://unpkg.com/pwacompat" crossorigin="anonymous"></script>
    <script>window.yaContextCb = window.yaContextCb || []</script>
    <script src="https://yandex.ru/ads/system/context.js" async></script>
  <link rel="preload" href="https://assets.habr.com/habr-web/css/chunk-vendors.04465f7c.css" as="style"><link rel="preload" href="https://assets.habr.com/habr-web/js/chunk-vendors.3b11d41f.js" as="script"><link rel="preload" href="https://assets.habr.com/habr-web/css/app.20959a76.css" as="style"><link rel="preload" href="https://assets.habr.com/habr-web/js/app.7a97ea6d.js" as="script"><link rel="stylesheet" href="https://assets.habr.com/habr-web/css/chunk-vendors.04465f7c.css"><link rel="stylesheet" href="https://assets.habr.com/habr-web/css/app.20959a76.css"></head>
  <body>
    
    <div id="mount"><div id="app" data-async-called="true"><div class="tm-layout__wrapper"><!--[--><!----><div></div><div class="tm-feature tm-feature"><!----></div><header class="tm-header" data-test-id="header"><div class="tm-page-width"><!--[--><div class="tm-header__container"><div class="tm-header__burger-nav" data-test-id="burger-nav"><button class="tm-header__button tm-header__button_burger" type="button"><svg class="tm-svg-img tm-header__icon tm-header__icon-burger" height="16" width="16"><title>Меню</title><use xlink:href="/img/megazord-v28.371b7fa3..svg#header-burger"></use></svg></button></div><span class="tm-header__logo-wrap"><a class="tm-header__logo tm-header__logo_hl-ru tm-header__logo" href="/ru/"><svg class="tm-svg-img tm-header__icon" height="16" width="16"><title>Хабр</title><use xlink:href="/img/habr-logo-ru.svg#logo"></use></svg></a><span style="display:none;" class="tm-header__beta-sign">β</span></span><!----><div class="tm-header-user-menu tm-header_user-menu"><a href="/ru/search/" class="tm-header-user-menu__item tm-header-user-menu__search" data-test-id="search-button"><svg class="tm-svg-img tm-header-user-menu__icon tm-header-user-menu__icon_search" height="24" width="24"><title>Поиск</title><use xlink:href="/img/megazord-v28.371b7fa3..svg#search"></use></svg></a><!----><!----><div class="tm-header-user-menu__item tm-header-user-menu__write"><div><svg class="tm-svg-img tm-header-user-menu__icon tm-header-user-menu__icon_write" height="24" width="24"><title>Написать публикацию</title><use xlink:href="/img/megazord-v28.371b7fa3..svg#write"></use></svg></div><!----></div><!--[--><div class="tm-header-user-menu__item"><button class="tm-header-user-menu__toggle" data-test-id="user-menu-settings"><svg class="tm-svg-img tm-header-user-menu__icon" height="24" width="24"><title>Настройки</title><use xlink:href="/img/megazord-v28.371b7fa3..svg#page-settings"></use></svg></button></div><a href="https://habr.com/kek/v1/auth/habrahabr/?back=/ru/articles/736392/&amp;hl=ru" rel="nofollow" class="tm-header-user-menu__item"><!--[--><button class="btn btn_solid btn_small tm-header-user-menu__login" type="button"><!--[-->Войти<!--]--></button><!--]--></a><!--]--><!----><!--teleport start--><!--teleport end--><!----></div></div><!--]--></div></header><div class="tm-layout"><div class="tm-page-progress-bar"></div><!----><!----><div class="tm-page-width"><!--[--><!--]--></div><main class="tm-layout__container"><div class="tm-page" hl="ru" data-async-called="true" style="--0c809c5a:16px;--a086013e:100%;--7c457026:0;"><div class="tm-page-width"><!--[--><!----><div class="tm-page__wrapper"><div class="tm-page__main_has-sidebar tm-page__main"><div class="pull-down"><!----><div class="pull-down__header" style="height:0px;"><div class="pull-down__content" style="bottom:10px;"><svg class="tm-svg-img pull-down__icon pull-down__arrow" height="24" width="24"><title>Обновить</title><use xlink:href="/img/megazord-v28.371b7fa3..svg#pull-arrow"></use></svg></div></div><!--[--><!--[--><div class="banner-wrapper narrow" style="--467224fc:100px;--58ff5eba:auto;" data-v-ad758baa><!--[--><div class="placeholder-wrapper placeholder" data-v-ad758baa><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><div class="adfox-banner-placeholder narrow" data-v-12f7bcca><div class="image loads" data-v-12f7bcca></div><div class="lines" data-v-12f7bcca><div class="line loads" data-v-12f7bcca></div><div class="line loads" data-v-12f7bcca></div><div class="line loads" data-v-12f7bcca></div></div></div><!----></div><div id="adfox_169815559787254866" class="tm-adfox-banner" data-v-ad758baa></div><!--]--></div><div class="tm-article-presenter"><!--[--><!--]--><div class="tm-article-presenter__body" data-test-id="article-body"><div class="tm-misprint-area"><div class="tm-misprint-area__wrapper"><!--[--><article class="tm-article-presenter__content tm-article-presenter__content_narrow"><!--[--><div class="tm-article-presenter__header"><!--[--><!--]--><div class="tm-article-snippet tm-article-snippet tm-article-presenter__snippet"><!--[--><!--]--><div class="tm-article-snippet__meta-container"><div class="tm-article-snippet__meta"><span class="tm-user-info tm-article-snippet__author"><a href="/ru/users/dmt_ovs/" class="tm-user-info__userpic" data-test-id="user-info-pic" title="dmt_ovs"><div class="tm-entity-image"><img alt="" class="tm-entity-image__pic" height="32" src="//habrastorage.org/r/w64/getpro/habr/avatars/84b/afb/1c1/84bafb1c17208f6b124be4429e2a8104.png" width="32"></div></a><span class="tm-user-info__user tm-user-info__user_appearance-default" data-test-id="user-info-description"><a href="/ru/users/dmt_ovs/" class="tm-user-info__username">dmt_ovs <!----></a><!--[--><span class="tm-article-datetime-published"><time datetime="2023-05-20T19:08:36.000Z" title="2023-05-20, 22:08">20  мая  2023 в 22:08</time></span><!--]--></span></span></div><!----></div><h1 class="tm-title tm-title_h1" lang="ru" data-test-id="articleTitle"><span>Вопросы и ответы для собеседования по Kotlin. Часть 4</span></h1><div class="tm-article-snippet__stats" data-test-id="articleStats"><div class="tm-article-complexity tm-article-complexity_complexity-medium"><span class="tm-svg-icon__wrapper tm-article-complexity__icon"><svg class="tm-svg-img tm-svg-icon" height="24" width="24"><title>Уровень сложности</title><use xlink:href="/img/megazord-v28.371b7fa3..svg#complexity-medium"></use></svg></span><span class="tm-article-complexity__label">Средний</span></div><div class="tm-article-reading-time"><span class="tm-svg-icon__wrapper tm-article-reading-time__icon"><svg class="tm-svg-img tm-svg-icon" height="24" width="24"><title>Время на прочтение</title><use xlink:href="/img/megazord-v28.371b7fa3..svg#clock"></use></svg></span><span class="tm-article-reading-time__label">18 мин</span></div><span class="tm-icon-counter tm-data-icons__item"><svg class="tm-svg-img tm-icon-counter__icon" height="24" width="24"><title>Количество просмотров</title><use xlink:href="/img/megazord-v28.371b7fa3..svg#counter-views"></use></svg><span class="tm-icon-counter__value" title="52209">52K</span></span></div><div class="tm-publication-hubs__container" data-test-id="articleHubsList"><div class="tm-publication-hubs"><!--[--><span class="tm-publication-hub__link-container"><a href="/ru/hubs/programming/" class="tm-publication-hub__link"><!--[--><span>Программирование</span><span class="tm-article-snippet__profiled-hub" title="Профильный хаб">*</span><!--]--></a></span><span class="tm-publication-hub__link-container"><a href="/ru/hubs/java/" class="tm-publication-hub__link"><!--[--><span>Java</span><span class="tm-article-snippet__profiled-hub" title="Профильный хаб">*</span><!--]--></a></span><span class="tm-publication-hub__link-container"><a href="/ru/hubs/android_dev/" class="tm-publication-hub__link"><!--[--><span>Разработка под Android</span><span class="tm-article-snippet__profiled-hub" title="Профильный хаб">*</span><!--]--></a></span><span class="tm-publication-hub__link-container"><a href="/ru/hubs/kotlin/" class="tm-publication-hub__link"><!--[--><span>Kotlin</span><span class="tm-article-snippet__profiled-hub" title="Профильный хаб">*</span><!--]--></a></span><span class="tm-publication-hub__link-container"><a href="/ru/hubs/study/" class="tm-publication-hub__link"><!--[--><span>Учебный процесс в IT</span><!----><!--]--></a></span><!--]--></div></div><div class="tm-article-labels" data-test-id="articleLabels"><div class="tm-article-labels__container"><div class="tm-publication-label tm-publication-label_variant-faq"><span>FAQ</span></div><!--[--><!--]--></div></div><!----><!----></div></div><!--[--><!----><div class="tm-article-body" data-gallery-root lang="ru"><div><!--[--><!--]--></div><div id="post-content-body"><div><div class="article-formatted-body article-formatted-body article-formatted-body_version-2"><div xmlns="http://www.w3.org/1999/xhtml"><p><a href="https://habr.com/ru/post/721084/" rel="noopener noreferrer nofollow">Вопросы и ответы для собеседования по Kotlin. Часть 1</a><br/><a href="https://habr.com/ru/post/722686/" rel="noopener noreferrer nofollow">Вопросы и ответы для собеседования по Kotlin. Часть 2</a> <br/><a href="https://habr.com/ru/articles/728742/" rel="noopener noreferrer nofollow">Вопросы и ответы для собеседования по Kotlin. Часть 3</a> <br/><a href="https://habr.com/ru/articles/736392/" rel="noopener noreferrer nofollow">Вопросы и ответы для собеседования по Kotlin. Часть 4</a> — вы находитесь здесь</p><a class="anchor" name="%D0%A1%D0%BF%D0%B8%D1%81%D0%BE%D0%BA%20%D1%82%D0%B5%D0%BC%20%D0%B8%20%D0%B2%D0%BE%D0%BF%D1%80%D0%BE%D1%81%D0%BE%D0%B2" id="Список тем и вопросов"></a><h2>Список тем и вопросов:</h2><h4>1. Extensions (расширения)</h4><ul><li><p><a href="#Extensions%20(%D1%80%D0%B0%D1%81%D1%88%D0%B8%D1%80%D0%B5%D0%BD%D0%B8%D1%8F)%20%E2%80%94%20%D1%87%D1%82%D0%BE%20%D1%8D%D1%82%D0%BE%20%D0%B8%20%D0%B4%D0%BB%D1%8F%20%D1%87%D0%B5%D0%B3%D0%BE%20%D0%BD%D1%83%D0%B6%D0%BD%D1%8B?" rel="noopener noreferrer nofollow">Extensions (расширения) — что это и для чего нужны?</a></p></li><li><p><a href="#%D0%9A%D0%B0%D0%BA%20%D1%84%D1%83%D0%BD%D0%BA%D1%86%D0%B8%D0%B8%20%D1%80%D0%B0%D1%81%D1%88%D0%B8%D1%80%D0%B5%D0%BD%D0%B8%D1%8F%20%D1%80%D0%B0%D0%B1%D0%BE%D1%82%D0%B0%D1%8E%D1%82%20%D0%BF%D0%BE%D0%B4%20%D0%BA%D0%B0%D0%BF%D0%BE%D1%82%D0%BE%D0%BC?" rel="noopener noreferrer nofollow">Как функции расширения работают под капотом?</a></p></li><li><p><a href="#%D0%9A%D0%B0%D0%BA%20extensions%20%D0%B2%D1%8B%D0%B3%D0%BB%D1%8F%D0%B4%D1%8F%D1%82%20%D0%B2%20Java?" rel="noopener noreferrer nofollow">Как extensions выглядят в Java?</a></p></li></ul><h4>2. Функции высшего порядка, лямбда-выражения, анонимные функции</h4><ul><li><p><a href="#%D0%A4%D1%83%D0%BD%D0%BA%D1%86%D0%B8%D0%B8%20%D0%B2%D1%8B%D1%81%D1%88%D0%B5%D0%B3%D0%BE%20%D0%BF%D0%BE%D1%80%D1%8F%D0%B4%D0%BA%D0%B0" rel="noopener noreferrer nofollow">Функции высшего порядка</a></p></li><li><p><a href="#%D0%9B%D1%8F%D0%BC%D0%B1%D0%B4%D0%B0-%D0%B2%D1%8B%D1%80%D0%B0%D0%B6%D0%B5%D0%BD%D0%B8%D1%8F%20%D0%B8%20%D0%B0%D0%BD%D0%BE%D0%BD%D0%B8%D0%BC%D0%BD%D1%8B%D0%B5%20%D1%84%D1%83%D0%BD%D0%BA%D1%86%D0%B8%D0%B8" rel="noopener noreferrer nofollow">Лямбда-выражения и анонимные функции</a></p></li><li><p><a href="#%D0%A0%D0%B0%D0%B7%D0%BD%D0%B8%D1%86%D0%B0%20%D0%BC%D0%B5%D0%B6%D0%B4%D1%83%20%D0%BB%D1%8F%D0%BC%D0%B1%D0%B4%D0%B0-%D0%B2%D1%8B%D1%80%D0%B0%D0%B6%D0%B5%D0%BD%D0%B8%D0%B5%D0%BC%20%D0%B8%20%D0%B0%D0%BD%D0%BE%D0%BD%D0%B8%D0%BC%D0%BD%D0%BE%D0%B9%20%D1%84%D1%83%D0%BD%D0%BA%D1%86%D0%B8%D0%B5%D0%B9" rel="noopener noreferrer nofollow">Разница между лямбда-выражением и анонимной функцией</a></p></li><li><p><a href="#%D0%A7%D1%82%D0%BE%20%D1%82%D0%B0%D0%BA%D0%BE%D0%B5%20%D1%84%D1%83%D0%BD%D0%BA%D1%86%D0%B8%D0%BE%D0%BD%D0%B0%D0%BB%D1%8C%D0%BD%D1%8B%D0%B9%20%D1%82%D0%B8%D0%BF,%20%D0%BA%D0%B0%D0%BA%D0%B8%D0%B5%20%D1%83%20%D0%BD%D0%B5%D0%B3%D0%BE%20%D0%BE%D0%B3%D1%80%D0%B0%D0%BD%D0%B8%D1%87%D0%B5%D0%BD%D0%B8%D1%8F?" rel="noopener noreferrer nofollow">Что такое функциональный тип, какие у него ограничения?</a></p></li><li><p><a href="#%D0%9A%D0%B0%D0%BA%20%D1%80%D0%B0%D0%B1%D0%BE%D1%82%D0%B0%D1%8E%D1%82%20SAM-conversions?" rel="noopener noreferrer nofollow">Как работают SAM-conversions?</a></p></li><li><p><a href="#%D0%A3%D0%BA%D0%B0%D0%B7%D0%B0%D1%82%D0%B5%D0%BB%D0%B8%20%D0%BD%D0%B0%20%D1%84%D1%83%D0%BD%D0%BA%D1%86%D0%B8%D0%B8%20(Function%20references,%20Bound%20callable%20references)" rel="noopener noreferrer nofollow">Указатели на функции (Function references, Bound callable references)</a></p></li><li><p><a href="#%D0%A4%D1%83%D0%BD%D0%BA%D1%86%D0%B8%D0%B8%20%D0%BE%D0%B1%D0%BB%D0%B0%D1%81%D1%82%D0%B8%20%D0%B2%D0%B8%D0%B4%D0%B8%D0%BC%D0%BE%D1%81%D1%82%D0%B8%20(Scope%20Functions)%20%E2%80%94%20let,%20run,%20with,%20apply,%20also" rel="noopener noreferrer nofollow">Функции области видимости (Scope Functions) — let, run, with, apply, also</a></p></li></ul><h4>3. Встроенные (inline) функции, crossinline и noinline, reified</h4><ul><li><p><a href="#%D0%A7%D1%82%D0%BE%20%D1%82%D0%B0%D0%BA%D0%BE%D0%B5%20inline%20%D1%84%D1%83%D0%BD%D0%BA%D1%86%D0%B8%D0%B8,%20%D0%B2%20%D1%87%D0%B5%D0%BC%20%D0%B8%D1%85%20%D0%BF%D1%80%D0%B5%D0%B8%D0%BC%D1%83%D1%89%D0%B5%D1%81%D1%82%D0%B2%D0%BE?" rel="noopener noreferrer nofollow">Что такое inline функции, в чем их преимущество?</a></p></li><li><p><a href="#%D0%9C%D0%BE%D0%B4%D0%B8%D1%84%D0%B8%D0%BA%D0%B0%D1%82%D0%BE%D1%80%20noinline" rel="noopener noreferrer nofollow">Модификатор noinline</a></p></li><li><p><a href="#%D0%A7%D1%82%D0%BE%20%D1%82%D0%B0%D0%BA%D0%BE%D0%B5%20%D0%BD%D0%B5%D0%BB%D0%BE%D0%BA%D0%B0%D0%BB%D1%8C%D0%BD%D1%8B%D0%B9%20return?" rel="noopener noreferrer nofollow">Что такое нелокальный return?</a></p></li><li><p><a href="#%D0%9A%D0%B0%D0%BA%20%D1%80%D0%B0%D0%B1%D0%BE%D1%82%D0%B0%D0%B5%D1%82%20%D0%BC%D0%BE%D0%B4%D0%B8%D1%84%D0%B8%D0%BA%D0%B0%D1%82%D0%BE%D1%80%20crossinline?" rel="noopener noreferrer nofollow">Как работает модификатор crossinline?</a></p></li><li><p><a href="#%D0%9A%D0%BE%D0%B3%D0%B4%D0%B0%20%D0%BD%D1%83%D0%B6%D0%BD%D0%BE%20%D0%B8%D1%81%D0%BF%D0%BE%D0%BB%D1%8C%D0%B7%D0%BE%D0%B2%D0%B0%D1%82%D1%8C%20crossinline,%20%D0%B0%20%D0%BA%D0%BE%D0%B3%D0%B4%D0%B0%20noinline?" rel="noopener noreferrer nofollow">Когда нужно использовать crossinline, а когда noinline?</a></p></li><li><p><a href="#%D0%9A%D0%BB%D1%8E%D1%87%D0%B5%D0%B2%D0%BE%D0%B5%20%D1%81%D0%BB%D0%BE%D0%B2%D0%BE%20reified" rel="noopener noreferrer nofollow">Ключевое слово reified</a></p></li><li><p><a href="#%D0%9F%D0%BE%D1%87%D0%B5%D0%BC%D1%83 reified %D0%B2%D0%BE%D0%B7%D0%BC%D0%BE%D0%B6%D0%BD%D0%BE%20%D0%B8%D1%81%D0%BF%D0%BE%D0%BB%D1%8C%D0%B7%D0%BE%D0%B2%D0%B0%D1%82%D1%8C%20%D1%82%D0%BE%D0%BB%D1%8C%D0%BA%D0%BE%20%D1%81%20inline-%D1%84%D1%83%D0%BD%D0%BA%D1%86%D0%B8%D1%8F%D0%BC%D0%B8?" rel="noopener noreferrer nofollow">Почему reified возможно использовать только с inline-функциями?</a></p></li><li><p><a href="#%D0%9F%D0%BE%D1%87%D0%B5%D0%BC%D1%83%20reified%20%D0%BC%D0%BE%D0%B6%D0%BD%D0%BE%20%D0%B8%D1%81%D0%BF%D0%BE%D0%BB%D1%8C%D0%B7%D0%BE%D0%B2%D0%B0%D1%82%D1%8C%20%D1%82%D0%BE%D0%BB%D1%8C%D0%BA%D0%BE%20%D1%81%20%D0%BE%D0%B1%D0%BE%D0%B1%D1%89%D0%B5%D0%BD%D0%BD%D1%8B%D0%BC%D0%B8%20%D1%82%D0%B8%D0%BF%D0%B0%D0%BC%D0%B8%20(generics)?" rel="noopener noreferrer nofollow">Почему reified можно использовать только с обобщенными типами (generics)?</a></p></li><li><p><a href="#%D0%9F%D0%BE%D1%87%D0%B5%D0%BC%D1%83%20%D0%BD%D0%B5%D0%BB%D1%8C%D0%B7%D1%8F%20%D0%B2%D1%81%D0%B5%20%D1%84%D1%83%D0%BD%D0%BA%D1%86%D0%B8%D0%B8%20%D1%81%D0%B4%D0%B5%D0%BB%D0%B0%D1%82%D1%8C%20inline?" rel="noopener noreferrer nofollow">Почему нельзя все функции сделать inline?</a></p></li></ul><figure class="full-width "><img src="https://habrastorage.org/r/w1560/getpro/habr/upload_files/b4c/080/506/b4c080506274ba29a65c7dde6ce1cdfd.png" width="1587" height="753" data-src="https://habrastorage.org/getpro/habr/upload_files/b4c/080/506/b4c080506274ba29a65c7dde6ce1cdfd.png"/></figure><a class="anchor" name="Extensions%20(%D1%80%D0%B0%D1%81%D1%88%D0%B8%D1%80%D0%B5%D0%BD%D0%B8%D1%8F)%20%E2%80%94%20%D1%87%D1%82%D0%BE%20%D1%8D%D1%82%D0%BE%20%D0%B8%20%D0%B4%D0%BB%D1%8F%20%D1%87%D0%B5%D0%B3%D0%BE%20%D0%BD%D1%83%D0%B6%D0%BD%D1%8B?" id="Extensions (расширения) — что это и для чего нужны?"></a><h2>Extensions (расширения) — что это и для чего нужны?</h2><p>Это функции, которые позволяют <strong>добавить функционал к уже определенным типам</strong>.</p><p>Kotlin предлагает нам концепцию «Extension Function»: мы можем к любому существующему типу добавить функцию-расширение, которая будет доступна через все объекты этого типа (но будет иметь доступ только к публичным частям).</p><ul><li><p>Для добавления функционала класса, если он закрыт для расширения (например, лежит в сторонней библиотеке).</p></li><li><p>Для расширения <code>nullable</code> типов.</p></li><li><p>Для расширения <code>companion object</code>.</p></li><li><p>Для расширения свойств существующих классов.</p></li><li><p>Для конвертации моделей из одной в другую.</p></li><li><p>Для расширения функционала дженериков.</p></li></ul><p><strong>Подробнее:</strong> <a href="https://tproger.ru/articles/chto-takoe-funkcii-rasshirenija-kotlin-i-gde-ih-pravilno-primenjat" rel="noopener noreferrer nofollow">tproger.ru</a>, <a href="https://kotlinlang.ru/docs/reference/extensions.html" rel="noopener noreferrer nofollow">kotlinlang.ru</a>, <a href="https://metanit.com/kotlin/tutorial/5.5.php" rel="noopener noreferrer nofollow">metanit.com</a></p><a class="anchor" name="%D0%9A%D0%B0%D0%BA%20%D1%84%D1%83%D0%BD%D0%BA%D1%86%D0%B8%D0%B8%20%D1%80%D0%B0%D1%81%D1%88%D0%B8%D1%80%D0%B5%D0%BD%D0%B8%D1%8F%20%D1%80%D0%B0%D0%B1%D0%BE%D1%82%D0%B0%D1%8E%D1%82%20%D0%BF%D0%BE%D0%B4%20%D0%BA%D0%B0%D0%BF%D0%BE%D1%82%D0%BE%D0%BC?" id="Как функции расширения работают под капотом?"></a><p><a href="#%D0%A1%D0%BF%D0%B8%D1%81%D0%BE%D0%BA%20%D1%82%D0%B5%D0%BC%20%D0%B8%20%D0%B2%D0%BE%D0%BF%D1%80%D0%BE%D1%81%D0%BE%D0%B2" rel="noopener noreferrer nofollow">—————— ↑↑↑ к списку вопросов ↑↑↑ ——————</a></p><h2>Как функции расширения работают под капотом?</h2><p>По своей задумке, функция расширения Kotlin — это дополнительный метод для любого объекта, даже для потенциально несуществующего (нуллабельного). Этот инструмент является прямой реализацией переопределения методов паттерна проектирования Декоратор.</p><p><strong>ВАЖНО:</strong> В функциях расширения мы можем обращаться к любым общедоступным свойствам и методам объекта, однако не можем обращаться к свойствам и методам с модификаторами <code>private</code> и <code>protected</code>.</p><p><strong>ВАЖНО:</strong> Функции расширения <strong>не переопределяют</strong> функции, которые уже определены в классе. Если функция расширения имеет ту же сигнатуру, что и уже имеющаяся функция класса, то компилятор просто будет игнорировать подобную функцию расширения.</p><p>Определение аналогично определению обычной функции за тем исключением, что после слова <code>fun</code> идет название типа, для которого определяется функция, и через точку название функции. Определим пару функций расширения к типам <code>Int</code> и <code>String</code>:</p><pre><code class="kotlin">fun main() {
 
    val hello: String = "hello world"
    println(hello.wordCount('l'))   // 3
    println(hello.wordCount('o'))   // 2
    println(4.square())             // 16
    println(6.square())             // 36
}
 
fun String.wordCount(c: Char) : Int {
    var count = 0
    for(n in this) {
        if(n == c) count++
    }
    return count
}
fun Int.square(): Int {
    return this * this
}</code></pre><p>Для типа <code>Int</code> определена функция возведения в квадрат. В каждой функции расширения через ключевое слово <code>this</code> мы можем ссылаться на текущий объект того типа, для которого создается функция. Например, в функции:</p><pre><code class="kotlin">fun Int.square(): Int {
    return this * this
}</code></pre><p>Через <code>this</code> обращаемся к тому объекту, для которого будет вызываться функция. И затем вы можем вызвать ее следующим образом:</p><pre><code class="kotlin">4.square()      // 16</code></pre><p>Для типа <code>String</code> определена функция <code>wordCount</code>, которая подсчитывает, сколько встречается определенный символ в строке.</p><a class="anchor" name="%D0%9A%D0%B0%D0%BA%20extensions%20%D0%B2%D1%8B%D0%B3%D0%BB%D1%8F%D0%B4%D1%8F%D1%82%20%D0%B2%20Java?" id="Как extensions выглядят в Java?"></a><p><a href="#%D0%A1%D0%BF%D0%B8%D1%81%D0%BE%D0%BA%20%D1%82%D0%B5%D0%BC%20%D0%B8%20%D0%B2%D0%BE%D0%BF%D1%80%D0%BE%D1%81%D0%BE%D0%B2" rel="noopener noreferrer nofollow">—————— ↑↑↑ к списку вопросов ↑↑↑ ——————</a></p><h2>Как extensions выглядят в Java?</h2><p>Функции расширения для JVM являются <code>static final</code> методами.</p><p>Extensions в Kotlin не имеют прямого эквивалента в Java. Однако, компилятор Kotlin генерирует соответствующий статический метод в классе-компаньоне, который может быть вызван из Java кода в качестве статического метода этого класса.</p><a class="anchor" name="%D0%A4%D1%83%D0%BD%D0%BA%D1%86%D0%B8%D0%B8%20%D0%B2%D1%8B%D1%81%D1%88%D0%B5%D0%B3%D0%BE%20%D0%BF%D0%BE%D1%80%D1%8F%D0%B4%D0%BA%D0%B0" id="Функции высшего порядка"></a><p><a href="#%D0%A1%D0%BF%D0%B8%D1%81%D0%BE%D0%BA%20%D1%82%D0%B5%D0%BC%20%D0%B8%20%D0%B2%D0%BE%D0%BF%D1%80%D0%BE%D1%81%D0%BE%D0%B2" rel="noopener noreferrer nofollow">—————— ↑↑↑ к списку вопросов ↑↑↑ ——————</a></p><h2>Функции высшего порядка</h2><p>Функции высшего порядка в Котлин — это функции, которые принимают другие функции в качестве аргументов и/или возвращают функции в качестве результата. Эти принимаемые и возвращаемые функции обычно являются лямбда-выражениями.</p><p>Функции высшего порядка являются основой концепции функционального программирования.</p><p><strong>Подробнее:</strong> <a href="https://kotlinlang.ru/docs/reference/lambdas.html" rel="noopener noreferrer nofollow">kotlinlang.ru</a></p><a class="anchor" name="%D0%9B%D1%8F%D0%BC%D0%B1%D0%B4%D0%B0-%D0%B2%D1%8B%D1%80%D0%B0%D0%B6%D0%B5%D0%BD%D0%B8%D1%8F%20%D0%B8%20%D0%B0%D0%BD%D0%BE%D0%BD%D0%B8%D0%BC%D0%BD%D1%8B%D0%B5%20%D1%84%D1%83%D0%BD%D0%BA%D1%86%D0%B8%D0%B8" id="Лямбда-выражения и анонимные функции"></a><p><a href="#%D0%A1%D0%BF%D0%B8%D1%81%D0%BE%D0%BA%20%D1%82%D0%B5%D0%BC%20%D0%B8%20%D0%B2%D0%BE%D0%BF%D1%80%D0%BE%D1%81%D0%BE%D0%B2" rel="noopener noreferrer nofollow">—————— ↑↑↑ к списку вопросов ↑↑↑ ——————</a></p><h2>Лямбда-выражения и анонимные функции</h2><p>Лямбда-выражения и анонимные функции — это функции без имени, которые могут быть переданы в качестве аргумента другим функциям. Их можно объявлять отдельно: сохранить в переменной и вызывать в нужном месте. Также их можно писать прямо внутри выражения, минуя отдельное объявление.</p><p>Лямбда-выражения и анонимные функции облегчают написание функций высшего порядка и улучшают читаемость кода. Они позволяют определить функцию на месте её вызова, без необходимости создавать отдельный метод.</p><p><strong>Синтаксис лямбда-выражения:</strong><br/> <code>{ параметры -&gt; тело_лямбды }</code>, где:</p><ul><li><p><strong>параметры:</strong> список параметров, разделенных запятой, которые могут использоваться внутри тела лямбда-выражения.</p></li><li><p><strong>тело_лямбды:</strong> выражение или блок выражений, которые могут использоваться для выполнения логики лямбда-выражения. Если тело лямбда-выражения состоит из нескольких выражений, то они должны быть заключены в блок <code>{}</code>.</p></li></ul><p><strong>Синтаксис декларации анонимной функции</strong> полностью совпадает с синтаксисом обычной функции, но у первой нет имени.</p><pre><code class="kotlin">fun defaultFun(x: Int, y: Int): Int = x + y    // Именованная функция
val f = fun(x: Int, y: Int): Int = x + y       // Анонимная функция</code></pre><h4>1. Лямбда-выражения</h4><p><strong>Лямбда-выражения всегда окружены фигурными скобками.</strong> Список параметров отделяется от тела лямбды <code>-&gt;</code>.</p><pre><code class="kotlin">val sum = { x: Int, y: Int -&gt; x + y }
println(sum(1, 5))               // 6</code></pre><p>Параметров может быть несколько, как в примере выше, либо может вовсе не быть, тогда левая часть вместе со стрелкой <code>-&gt;</code> опускаются.</p><pre><code class="kotlin">val number = { 1 }
println(number())      // 1</code></pre><p>Если в лямбда-выражении только один параметр, при этом его тип может быть выведен автоматически, то объявление параметра можно опустить вместе с <code>-&gt;</code>. В данном случае для обращения к параметру будет создано имя по умолчанию — <code>it</code>.</p><pre><code class="kotlin">var double = { x: Int -&gt; x * 2 }
double = { it * 2 + 1 }
println(double(4))          // 9</code></pre><p>Значение из лямбда-выражения можно вернуть <strong>явно</strong> — при помощи оператора <code>return</code>. Либо неявно будет возвращено значение последнего (а возможно и единственного) выражения.</p><p>Если лямбда-выражение является последним аргументом функции, то оно может быть вынесено за круглые скобки. Если же оно является единственным аргументом функции, то круглые скобки можно опустить. Такой синтаксис также известен как <strong>trailing lambda</strong>.</p><p>Все три формы записи означают одно и тоже:</p><pre><code class="kotlin">// лямбда передается в качестве аргумента
people.maxBy({ р: Person -&gt; p.age })

// лямбда вынесена за скобки, т.к. является последним аргументом функции
people.maxBy() { р: Person -&gt; p.age }

// скобки опущены, т.к. лямбда - единственный аргумент функции
people.maxBy { р: Person -&gt; p.age }</code></pre><p>Если параметр лямбды не используется, разрешено применять подчеркивание вместо его имени:</p><pre><code class="kotlin">map.forEach { _, value -&gt; println("$value!") }</code></pre><h4>2. Анонимные функции</h4><p><strong>Анонимная функция объявляется также как и обычная функция, но без указания имени.</strong></p><pre><code class="kotlin">// анонимная функция в виде выражения
fun(x: Int, y: Int): Int = x + y

// та же функция, но в виде блока
fun(x: Int, y: Int): Int {
    return x + y
}</code></pre><p>В отличие от обычных функций, в анонимной функции можно опустить тип параметров, если его можно вывести из контекста.</p><pre><code class="kotlin">val numbers = listOf(1, 2, 3, 4, 5)
val evenNumbers = numbers.filter(fun(n) = n % 2 == 0)</code></pre><p>Здесь мы используем метод <code>filter</code> списка <code>numbers</code>, чтобы отобрать только четные числа. В качестве аргумента для метода <code>filter</code> мы передаем анонимную функцию с одним параметром. Тип параметра не указывается явно, но компилятор может вывести, что параметр должен иметь тип <code>Int</code>, так как мы оперируем целочисленными значениями в лямбда-выражении.</p><p>Анонимные функции следуют тем же правилам, что и обычные функции: для функций с телом-выражением возвращаемый тип и оператор <code>return</code> могут быть опущены, но для функций с телом-блоком они должны быть указаны явно.</p><a class="anchor" name="%D0%A0%D0%B0%D0%B7%D0%BD%D0%B8%D1%86%D0%B0%20%D0%BC%D0%B5%D0%B6%D0%B4%D1%83%20%D0%BB%D1%8F%D0%BC%D0%B1%D0%B4%D0%B0-%D0%B2%D1%8B%D1%80%D0%B0%D0%B6%D0%B5%D0%BD%D0%B8%D0%B5%D0%BC%20%D0%B8%20%D0%B0%D0%BD%D0%BE%D0%BD%D0%B8%D0%BC%D0%BD%D0%BE%D0%B9%20%D1%84%D1%83%D0%BD%D0%BA%D1%86%D0%B8%D0%B5%D0%B9" id="Разница между лямбда-выражением и анонимной функцией"></a><p><a href="#%D0%A1%D0%BF%D0%B8%D1%81%D0%BE%D0%BA%20%D1%82%D0%B5%D0%BC%20%D0%B8%20%D0%B2%D0%BE%D0%BF%D1%80%D0%BE%D1%81%D0%BE%D0%B2" rel="noopener noreferrer nofollow">—————— ↑↑↑ к списку вопросов ↑↑↑ ——————</a></p><h2>Разница между лямбда-выражением и анонимной функцией</h2><p><strong>1. Синтаксис</strong></p><p>Лямбда-выражения определяются <strong>заключением их в фигурные скобки</strong> в виде <code>{ параметры -&gt; тело }</code>.<br/> Анонимные функции определяются <strong>через ключевое слово </strong><code>fun</code> как обычные функции, хотя не имеют имени.</p><p><strong>2. Поведение оператора </strong><code>return</code> без метки</p><ul><li><p>В лямбда-выражении использование оператора <code>return</code> без метки приводит к возврату из <strong>обрамляющей (внешней) функции</strong>, а не из самого лямбда-выражения (т.е. полностью завершает работу этой функции и код, указанный после оператора <code>return</code> никогда не выполнится). Это называется <strong>нелокальным возвратом</strong> (non-local return), и может иметь неожиданное поведение и привести к ошибкам. В лямбда-выражениях рекомендуется использовать метки для явного указания точки возврата.</p></li><li><p>В анонимной функции <code>return</code> без метки приводит к возврату <strong>только из самой анонимной функции</strong> (а не из внешней функции), продолжая выполнение кода после вызова анонимной функции в обрамляющей функции. Анонимные функции ведут себя как ожидается для классических функций с явным оператором <code>return</code>.</p></li></ul><p>Таким образом, поведение оператора <code>return</code> без метки различается только в том, как завершается выполнение функции, в которой вызывается выражение. В лямбда-выражении, вызывающая функция завершается полностью, а в анонимной функции только сама анонимная функция.</p><p><strong>3. Поведение оператора </strong><code>return</code> с меткой</p><p>Оператор <code>return</code> с меткой позволяет указать точное место, из которого нужно вернуться при вызове <code>return</code>.</p><ul><li><p>Если использовать <code>return@label</code> в лямбда-выражении, то возврат будет осуществляться из конкретной лямбды, к которой применена метка. Вместо нелокального возврата, который происходит при использовании <code>return</code> без метки, <code>return</code> с меткой завершит только ту лямбду, которая соответствует указанной метке, и выполнение кода продолжится после этой лямбды во внешней функции. Метка позволяет читать и понимать код проще, так как явно указывает, откуда происходит возврат.</p></li><li><p>В анонимных функциях <code>return</code> без метки уже осуществляет возврат из самой анонимной функции. Однако, при использовании метки <code>return@label</code> вы также можете контролировать возврат из анонимной функции в сложных сценариях (например, при работе с несколькими вложенными функциями).</p></li></ul><p>В обоих случаях использование оператора <code>return</code> с меткой показывает точку возврата и делает код более явным и контролируемым.</p><p><strong>Подробнее о возврате к меткам:</strong> <a href="https://kotlinlang.ru/docs/reference/returns.html#return-to-labels" rel="noopener noreferrer nofollow">kotlinlang.ru</a></p><a class="anchor" name="%D0%A7%D1%82%D0%BE%20%D1%82%D0%B0%D0%BA%D0%BE%D0%B5%20%D1%84%D1%83%D0%BD%D0%BA%D1%86%D0%B8%D0%BE%D0%BD%D0%B0%D0%BB%D1%8C%D0%BD%D1%8B%D0%B9%20%D1%82%D0%B8%D0%BF,%20%D0%BA%D0%B0%D0%BA%D0%B8%D0%B5%20%D1%83%20%D0%BD%D0%B5%D0%B3%D0%BE%20%D0%BE%D0%B3%D1%80%D0%B0%D0%BD%D0%B8%D1%87%D0%B5%D0%BD%D0%B8%D1%8F?" id="Что такое функциональный тип, какие у него ограничения?"></a><p><a href="#%D0%A1%D0%BF%D0%B8%D1%81%D0%BE%D0%BA%20%D1%82%D0%B5%D0%BC%20%D0%B8%20%D0%B2%D0%BE%D0%BF%D1%80%D0%BE%D1%81%D0%BE%D0%B2" rel="noopener noreferrer nofollow">—————— ↑↑↑ к списку вопросов ↑↑↑ ——————</a></p><h2>Что такое функциональный тип, какие у него ограничения?</h2><p>Язык Kotlin допускает объявлять тип анонимных функций или лямбда выражений — функциональный.</p><p>Функциональный тип — это тип данных, который позволяет работать с функциями как с обычными объектами, передавать функции в качестве аргументов и возвращать их из функций. Синтаксис функционального типа в Котлин представлен списком типов параметров, разделенных запятой, затем оператором <code>-&gt;</code> и типом возвращаемого значения функции.</p><p>Пример функционального типа: <code>(a: Int, b: Int) -&gt; Int</code><br/> Здесь функциональный тип описывает функцию с двумя параметрами типа <code>Int</code> и возвращаемым значением типа <code>Int</code>.</p><p>Функциональный тип может быть использован для создания переменных, которые могут хранить ссылки на функции. А также поддерживает перегрузку, что позволяет иметь несколько функций с различными сигнатурами, но с одинаковым именем.</p><p><strong>Ограничения функционального типа:</strong></p><ul><li><p>Тип передаваемой функции должен быть определен явно, чтобы компилятор мог проверить типы аргументов и возвращаемых значений.</p></li><li><p>Функциональный тип может содержать только один тип возвращаемого значения.</p></li><li><p>Функциональный тип не может содержать более 22 параметров из-за ограничения JVM.</p></li><li><p>Функциональный тип не поддерживает неявные преобразования типов.</p></li></ul><p>Несмотря на эти ограничения, функциональные типы позволяют обрабатывать функции как объекты, что повышает гибкость и выразительность кода. Пример определения функционального типа:</p><pre><code class="kotlin">// определение функционального типа
typealias Operation = (Int, Int) -&gt; Int

// использование функционального типа
fun calculate(op: Operation, a: Int, b: Int): Int {
    return op(a, b)
}

// пример вызова функции calculate
val sum: Operation = { x, y -&gt; x + y }
calculate(sum, 10, 5)    // результат: 15</code></pre><p>Код из примера определяет функциональный тип <code>Operation</code>, который представляет собой функцию, принимающую два аргумента типа <code>Int</code> и возвращающую значение типа <code>Int</code>. Затем создается функция <code>calculate</code>, которая принимает три параметра: функцию <code>op</code> типа <code>Operation</code> и два аргумента типа <code>Int</code>. Внутри функции <code>calculate</code> вызывается переданная функция <code>op</code> с переданными аргументами <code>a</code> и <code>b</code>, и результат возвращается из функции <code>calculate</code>. В конце кода создается переменная <code>sum</code>, которая содержит лямбда-выражение, реализующее операцию сложения. Далее вызывается функция <code>calculate</code> с параметрами <code>sum</code>, <code>10</code> и <code>5</code>, что приводит к вызову функции <code>sum</code> с аргументами <code>10</code> и <code>5</code>, и результатом является число <code>15</code>.</p><p><strong>Подробнее:</strong> <a href="https://kotlinlang.ru/docs/lambdas.html#function-types" rel="noopener noreferrer nofollow">kotlinlang.ru</a></p><a class="anchor" name="%D0%9A%D0%B0%D0%BA%20%D1%80%D0%B0%D0%B1%D0%BE%D1%82%D0%B0%D1%8E%D1%82%20SAM-conversions?" id="Как работают SAM-conversions?"></a><p><a href="#%D0%A1%D0%BF%D0%B8%D1%81%D0%BE%D0%BA%20%D1%82%D0%B5%D0%BC%20%D0%B8%20%D0%B2%D0%BE%D0%BF%D1%80%D0%BE%D1%81%D0%BE%D0%B2" rel="noopener noreferrer nofollow">—————— ↑↑↑ к списку вопросов ↑↑↑ ——————</a></p><h2>Как работают SAM-conversions?</h2><p><strong>Single Abstract Method (SAM)</strong> интерфейсы — это интерфейсы только с одним абстрактным методом (функциональные интерфейсы). Kotlin поддерживает соглашение SAM — автоматическую конвертацию функций и lambda между Kotlin и Java.</p><p>SAM-conversions позволяют использовать Java-интерфейсы с единственным абстрактным методом в Kotlin, как если бы это были функциональные типы. В Kotlin вы можете использовать такие интерфейсы для создания лямбда-выражений без явного определения функционального типа.</p><p>При использовании интерфейса с единственным абстрактным методом в качестве функционального интерфейса в Java, вы можете передавать его экземпляры вместо лямбда-выражений. Это тоже возможно в Kotlin, но на самом деле Kotlin предоставляет более простой синтаксис для этого. Когда вам нужно использовать функциональный интерфейс в Kotlin, вы можете передать lambda-выражение, которое соответствует сигнатуре единственного метода интерфейса, вместо экземпляра интерфейса. Компилятор сам преобразует лямбда-выражение в экземпляр интерфейса, используя функцию-расширение метода <code>invoke</code> интерфейса. Пример:</p><pre><code class="kotlin">interface OnClickListener {
    fun onClick(view: View)
}

class Button {
    fun setOnClickListener(listener: OnClickListener) {
        // ...
    }
}

val button = Button()
button.setOnClickListener { view -&gt; 
    // обработка нажатия кнопки
}</code></pre><p>В этом примере мы определяем интерфейс <code>OnClickListener</code> с единственным абстрактным методом <code>onClick</code>. Затем мы создаем класс <code>Button</code>, который может иметь слушатель, реализующий данный интерфейс. После этого мы создаем экземпляр <code>Button</code> и передаем лямбда-выражение с соответствующей сигнатурой в качестве слушателя. Компилятор автоматически преобразует это лямбда-выражение в экземпляр интерфейса <code>OnClickListener</code>, используя функцию-расширение <code>invoke</code> интерфейса.</p><p><strong>Подробнее:</strong> <a href="https://kotlinlang.ru/docs/fun-interfaces.html" rel="noopener noreferrer nofollow">kotlinlang.ru</a>, <a href="https://hr-vector.com/kotlin/sam-preobrazovaniya-v-kotlin" rel="noopener noreferrer nofollow">hr-vector.com</a>, <a href="https://coderlessons.com/articles/mobilnaia-razrabotka-articles/sovet-pishite-bolee-chistyi-kod-s-pomoshchiu-kotlin-sam-conversions" rel="noopener noreferrer nofollow">coderlessons.com</a></p><a class="anchor" name="%D0%A3%D0%BA%D0%B0%D0%B7%D0%B0%D1%82%D0%B5%D0%BB%D0%B8%20%D0%BD%D0%B0%20%D1%84%D1%83%D0%BD%D0%BA%D1%86%D0%B8%D0%B8%20(Function%20references,%20Bound%20callable%20references)" id="Указатели на функции (Function references, Bound callable references)"></a><p><a href="#%D0%A1%D0%BF%D0%B8%D1%81%D0%BE%D0%BA%20%D1%82%D0%B5%D0%BC%20%D0%B8%20%D0%B2%D0%BE%D0%BF%D1%80%D0%BE%D1%81%D0%BE%D0%B2" rel="noopener noreferrer nofollow">—————— ↑↑↑ к списку вопросов ↑↑↑ ——————</a></p><h2>Указатели на функции (Function references, Bound callable references)</h2><p>В языке Kotlin есть возможность работать с функциями как с объектами. Функции можно сохранять в переменные, передавать как аргументы и возвращать из других функций. Для этого можно использовать <strong>функциональные ссылки (Function references)</strong>, которые представляют собой <strong>указатель на функцию</strong>.</p><p><strong>1. Function references</strong></p><p>Синтаксис функциональной ссылки имеет следующий вид: <code>::function_name</code>. Указатели на функции представляют собой <strong>сокращенную форму записи вызова функции</strong>. Вместо того, чтобы объявлять лямбда-выражение и передавать его как аргумент функции, можно использовать ссылку на существующий метод. Например, у нас есть класс <code>Person</code> с методом <code>getName()</code>:</p><pre><code class="kotlin">class Person(val name: String) {
    fun getName(): String = name
}
</code></pre><p>Тогда мы можем использовать указатель на метод <code>getName()</code> вместо лямбда-выражения:</p><pre><code class="kotlin">val persons = listOf(Person("Alice"), Person("Bob"))
val names = persons.map(Person::getName)
</code></pre><p><strong>2. Bound callable references</strong></p><p><strong>Bound callable references (привязанные ссылки)</strong> — это то же самое понятие, что и указатели на методы, но в случае, когда метод вызывается <strong>на экземпляре класса</strong>. В этом варианте мы можем использовать ссылку на метод, связанную с конкретным экземпляром класса. Для создания привязанной ссылки на метод используется следующий синтаксис: <code>&lt;object_name&gt;::&lt;method_name&gt;</code>.</p><p>Допустим, что у нас есть экземпляр класса <code>person</code> типа <code>Person</code>. Тогда мы можем использовать ссылку на метод <code>getName()</code> для получения его имени:</p><pre><code class="kotlin">val person = Person("Alice")
val name = person::getName
</code></pre><p>Здесь <code>name</code> будет ссылаться на метод <code>getName()</code> объекта <code>person</code>.</p><a class="anchor" name="%D0%A4%D1%83%D0%BD%D0%BA%D1%86%D0%B8%D0%B8%20%D0%BE%D0%B1%D0%BB%D0%B0%D1%81%D1%82%D0%B8%20%D0%B2%D0%B8%D0%B4%D0%B8%D0%BC%D0%BE%D1%81%D1%82%D0%B8%20(Scope%20Functions)%20%E2%80%94%20let,%20run,%20with,%20apply,%20also" id="Функции области видимости (Scope Functions) — let, run, with, apply, also"></a><p><a href="#%D0%A1%D0%BF%D0%B8%D1%81%D0%BE%D0%BA%20%D1%82%D0%B5%D0%BC%20%D0%B8%20%D0%B2%D0%BE%D0%BF%D1%80%D0%BE%D1%81%D0%BE%D0%B2" rel="noopener noreferrer nofollow">—————— ↑↑↑ к списку вопросов ↑↑↑ ——————</a></p><h2>Функции области видимости (Scope Functions) — let, run, with, apply, also</h2><p>В Kotlin есть 5 функций: <code>let, run, with, apply, also</code>, объединенных общим названием <strong>Scope Function</strong> (функции области видимости). Все они используются для одной цели — выполнить какой-то блок кода для конкретного объекта. При вызове подобной функции создается временная область видимости. В этой области видимости можно обращаться к объекту без использования его имени.</p><p>В основном эти 5 функций отличаются только 2 параметрами:</p><ul><li><p>способ ссылки на контекстный объект (<code>this</code> или <code>it</code>)</p></li><li><p>возвращаемое значение (объект контекста или результат лямбды)</p></li></ul><p><strong>1. Способ ссылки на объект</strong></p><p>Внутри лямбда-выражения, которое передается функции области видимости, объект контекста доступен по краткой ссылке, а не по его фактическому имени. Каждая функция области видимости использует один из двух способов доступа к объекту контекста: как лямбда-получатель (<code>this</code>) или как лямбда-аргумент (<code>it</code>).</p><p>Различие между <code>this</code> и <code>it</code> заключается в том, что:</p><ul><li><p><code>this</code> используется, когда мы работаем <strong>с объектом</strong>, на котором вызывается функция (<code>run</code>, <code>with</code> и <code>apply</code>)</p></li><li><p><code>it</code> используется, когда мы работаем <strong>с аргументом</strong>, переданным в функцию (<code>let</code> и <code>also</code>)</p></li></ul><p>Обычно <code>this</code> используется для установки свойств или вызова методов объектов, а <code>it</code> — для выполнения операций с аргументами.</p><p><strong>2. Возвращаемое значение</strong></p><p>Функции области видимости также отличаются по значению, которое они возвращают:</p><ul><li><p><code>apply</code> и <code>also</code> возвращают <strong>объект контекста</strong>. Это позволяет использовать эти функции для создания цепочек вызовов методов и свойств объекта.</p></li><li><p><code>let</code>, <code>run</code> и <code>with</code> возвращают <strong>результат лямбды</strong>. Результат может быть использован для сохранения в переменную или передачи в дальнейшую цепочку вызовов.</p></li></ul><h3>Шпаргалка по выбору функции</h3><div><div class="table"><table><tbody><tr><th><p>Функция</p></th><th><p>Ссылка на объект</p></th><th><p>Возвращаемое значение</p></th><th><p>Является функцией-расширением</p></th></tr><tr><td><p align="left">let</p></td><td><p align="left">it</p></td><td><p align="left">Результат лямбды</p></td><td><p align="left">Да</p></td></tr><tr><td><p align="left">run</p></td><td><p align="left">this</p></td><td><p align="left">Результат лямбды</p></td><td><p align="left">Да</p></td></tr><tr><td><p align="left">run</p></td><td><p align="left">-</p></td><td><p align="left">Результат лямбды</p></td><td><p align="left">Нет: может быть вызвана без объекта</p></td></tr><tr><td><p align="left">with</p></td><td><p align="left">this</p></td><td><p align="left">Результат лямбды</p></td><td><p align="left">Нет: принимает объект в качестве аргумента</p></td></tr><tr><td><p align="left">apply</p></td><td><p align="left">this</p></td><td><p align="left">Контекстный объект</p></td><td><p align="left">Да</p></td></tr><tr><td><p align="left">also</p></td><td><p align="left">it</p></td><td><p align="left">Контекстный объект</p></td><td><p align="left">Да</p></td></tr></tbody></table></div></div><p>Если таблицы недостаточно:</p><ul><li><p>Выполнить блок кода для значения, отличного от null - <code>let</code>.</p></li><li><p>Использовать результат выполнения цепочки вызовов - <code>let</code>.</p></li><li><p>Инициализация и настройка объекта - <code>apply</code>.</p></li><li><p>Настройка объекта и получение результата выполнения операций - <code>run</code>.</p></li><li><p>Выполнение операций, для которых требуется временная область видимости - <code>run</code> без субъекта вызова.</p></li><li><p>Добавление объекту дополнительных значений - <code>also</code>.</p></li><li><p>Группировка всех функций, вызываемых для объекта: <code>with</code>.</p></li></ul><p>Все функции области видимости являются <code>inline</code>, то есть их тело вставляется в место, где они вызываются, что позволяет исключить накладные расходы на вызов метода.</p><p><strong>Подробнее:</strong> <a href="https://metanit.com/kotlin/tutorial/5.7.php" rel="noopener noreferrer nofollow">metanit.com</a>, <a href="https://bimlibik.github.io/posts/kotlin-scope-functions/" rel="noopener noreferrer nofollow">bimlibik.github.io</a>, <a href="https://kotlinlang.ru/docs/reference/scope-functions.html" rel="noopener noreferrer nofollow">kotlinlang.ru</a>, <a href="https://habr.com/ru/post/580186/" rel="noopener noreferrer nofollow">habr.com</a></p><a class="anchor" name="%D0%A7%D1%82%D0%BE%20%D1%82%D0%B0%D0%BA%D0%BE%D0%B5%20inline%20%D1%84%D1%83%D0%BD%D0%BA%D1%86%D0%B8%D0%B8,%20%D0%B2%20%D1%87%D0%B5%D0%BC%20%D0%B8%D1%85%20%D0%BF%D1%80%D0%B5%D0%B8%D0%BC%D1%83%D1%89%D0%B5%D1%81%D1%82%D0%B2%D0%BE?" id="Что такое inline функции, в чем их преимущество?"></a><p><a href="#%D0%A1%D0%BF%D0%B8%D1%81%D0%BE%D0%BA%20%D1%82%D0%B5%D0%BC%20%D0%B8%20%D0%B2%D0%BE%D0%BF%D1%80%D0%BE%D1%81%D0%BE%D0%B2" rel="noopener noreferrer nofollow">—————— ↑↑↑ к списку вопросов ↑↑↑ ——————</a></p><h2>Что такое inline функции, в чем их преимущество?</h2><p>В Kotlin есть два типа функций: обычные и встроенные. Обычные функции похожи на функции в других языках программирования. Но встроенные функции имеют модификатор <code>inline</code>. Это позволяет компилятору подставить тело функции прямо в место её вызова.</p><p><strong>Как работают inline функции?</strong></p><p>Использование анонимных функций (лямбда-выражений) в Kotlin приводит к дополнительным затратам памяти. При использовании лямбда-выражения создается объект <code>FunctionN</code> (где <code>N</code> — количество параметров в лямбда-выражении), который содержит ссылку на само лямбда-выражение и может содержать захваченные переменные. При передаче лямбда-выражения в качестве параметра метода также создается новый объект <code>FunctionN</code>, что приводит к дополнительным затратам памяти.</p><p>Поэтому, чтобы избежать создания дополнительных объектов при передаче лямбда-выражений в функцию в качестве параметра, можно использовать встраивание (<strong>inline</strong>). Ключевое слово <code>inline</code> позволяет компилятору подставить тело функции непосредственно в место её вызова, вместо того, чтобы создавать объекты функций. Таким образом <strong>можно уменьшить затраты на создание объектов и улучшить производительность приложения</strong>.</p><p>Пример синтаксиса inline-функций с лямбдой:</p><pre><code class="kotlin">inline fun functionName(parameter1: Type1, parameter2: Type2, ..., parameterN: TypeN, block: () -&gt; Unit): ReturnType {
    // function body
}</code></pre><p>Модификатор <code>inline</code> влияет и на функцию, и на лямбду, переданную ей: они обе будут встроены в место вызова.</p><p><strong>Подробнее:</strong> <a href="https://kotlinlang.ru/docs/reference/inline-functions.html" rel="noopener noreferrer nofollow">kotlinlang.ru</a>, <a href="https://bimlibik.github.io/posts/kotlin-inline-functions/" rel="noopener noreferrer nofollow">bimlibik.github.io</a>, <a href="https://medium.com/@manuchekhrdev/kotlin-inline-noinline-crossinline-reified-f70dd33f94a2" rel="noopener noreferrer nofollow">medium.com</a></p><a class="anchor" name="%D0%9C%D0%BE%D0%B4%D0%B8%D1%84%D0%B8%D0%BA%D0%B0%D1%82%D0%BE%D1%80%20noinline" id="Модификатор noinline"></a><p><a href="#%D0%A1%D0%BF%D0%B8%D1%81%D0%BE%D0%BA%20%D1%82%D0%B5%D0%BC%20%D0%B8%20%D0%B2%D0%BE%D0%BF%D1%80%D0%BE%D1%81%D0%BE%D0%B2" rel="noopener noreferrer nofollow">—————— ↑↑↑ к списку вопросов ↑↑↑ ——————</a></p><h2>Модификатор noinline</h2><p>Если же вы хотите, чтобы некоторые лямбды, переданные inline-функции, не были встроены, то отметьте их модификатором <code>noinline</code>.</p><pre><code class="kotlin">inline fun foo(inlined: () -&gt; Unit, noinline notInlined: () -&gt; Unit) {
    // ...
}</code></pre><p>Разница между ними в том, что встраиваемая лямбда может быть вызвана только внутри inline-функции, либо может быть передана в качестве встраиваемого аргумента. В то время как с noinline-функциями можно работать без ограничений: <strong>хранить внутри полей, передавать куда-либо и т.д.</strong></p><a class="anchor" name="%D0%A7%D1%82%D0%BE%20%D1%82%D0%B0%D0%BA%D0%BE%D0%B5%20%D0%BD%D0%B5%D0%BB%D0%BE%D0%BA%D0%B0%D0%BB%D1%8C%D0%BD%D1%8B%D0%B9%20return?" id="Что такое нелокальный return?"></a><p><a href="#%D0%A1%D0%BF%D0%B8%D1%81%D0%BE%D0%BA%20%D1%82%D0%B5%D0%BC%20%D0%B8%20%D0%B2%D0%BE%D0%BF%D1%80%D0%BE%D1%81%D0%BE%D0%B2" rel="noopener noreferrer nofollow">—————— ↑↑↑ к списку вопросов ↑↑↑ ——————</a></p><h2>Что такое нелокальный return?</h2><p>В Котлин <strong>non-local return</strong> — это механизм, который позволяет выйти из внешней функции или лямбда-выражения и вернуться к вызывающему коду, обходя оставшуюся часть текущей функции или лямбда-выражения. Он работает по-разному в зависимости от того, является ли функция <strong>inline</strong> или <strong>не-inline</strong>.</p><p><strong>В не-inline функциях:</strong></p><ul><li><p>Если внутри функции есть лямбда-выражение, non-local return из лямбда-выражения может привести к нелокальному завершению внешней функции.</p></li><li><p>Для использования non-local return внутри лямбда-выражения в не-inline функции, необходимо использовать метку (label) и оператор <code>return@label</code>.</p></li></ul><p><strong>В inline-функциях:</strong></p><ul><li><p>В inline-функциях, лямбда-выражения становятся частью кода функции и имеют локальный контроль над потоком управления.</p></li><li><p>Оператор <code>return</code> внутри лямбда-выражения в inline-функции приведет только к завершению самого лямбда-выражения, не влияя на внешнюю функцию.</p></li></ul><a class="anchor" name="%D0%9A%D0%B0%D0%BA%20%D1%80%D0%B0%D0%B1%D0%BE%D1%82%D0%B0%D0%B5%D1%82%20%D0%BC%D0%BE%D0%B4%D0%B8%D1%84%D0%B8%D0%BA%D0%B0%D1%82%D0%BE%D1%80%20crossinline?" id="Как работает модификатор crossinline?"></a><p><a href="#%D0%A1%D0%BF%D0%B8%D1%81%D0%BE%D0%BA%20%D1%82%D0%B5%D0%BC%20%D0%B8%20%D0%B2%D0%BE%D0%BF%D1%80%D0%BE%D1%81%D0%BE%D0%B2" rel="noopener noreferrer nofollow">—————— ↑↑↑ к списку вопросов ↑↑↑ ——————</a></p><h2>Как работает модификатор crossinline?</h2><p><strong>crossinline</strong> — ключевое слово, которое используется для указания, что лямбда-выражение <strong>не может содержать нелокальных </strong><code>return</code>, даже если оно передано в inline-функцию.</p><p>Когда мы передаем лямбда-выражение в функцию в качестве параметра, мы можем использовать оператор <code>return</code> внутри лямбды, чтобы выйти из цикла или функции, в которой вызывается лямбда. Однако, если мы передаем лямбда-выражение в inline-функцию, код лямбда-выражения может быть вставлен прямо в место вызова функции. В этом случае, если в лямбде используется оператор <code>return</code>, это может привести к выходу из внешней функции, что не всегда желательно.</p><a class="anchor" name="%D0%9A%D0%BE%D0%B3%D0%B4%D0%B0%20%D0%BD%D1%83%D0%B6%D0%BD%D0%BE%20%D0%B8%D1%81%D0%BF%D0%BE%D0%BB%D1%8C%D0%B7%D0%BE%D0%B2%D0%B0%D1%82%D1%8C%20crossinline,%20%D0%B0%20%D0%BA%D0%BE%D0%B3%D0%B4%D0%B0%20noinline?" id="Когда нужно использовать crossinline, а когда noinline?"></a><p><a href="#%D0%A1%D0%BF%D0%B8%D1%81%D0%BE%D0%BA%20%D1%82%D0%B5%D0%BC%20%D0%B8%20%D0%B2%D0%BE%D0%BF%D1%80%D0%BE%D1%81%D0%BE%D0%B2" rel="noopener noreferrer nofollow">—————— ↑↑↑ к списку вопросов ↑↑↑ ——————</a></p><h2>Когда нужно использовать crossinline, а когда noinline?</h2><p>Модификаторы <code>crossinline</code> и <code>noinline</code> используются для управления поведением лямбда-выражений, переданных в качестве параметров функций. Они позволяют указывать, может ли лямбда-выражение содержать операторы <code>return</code>.</p><ul><li><p>Модификатор <code>crossinline</code> используется для указания того, что лямбда-выражение <strong>не может содержать операторы </strong><code>return</code>, даже если функция, принимающая лямбда-выражение, инлайновая.</p></li><li><p>Модификатор <code>noinline</code>, с другой стороны, указывает на то, что лямбда-выражение может быть сохранено как объект функции, а не выполнено внутри вызывающей функции. Это может быть полезно в случае, когда вы хотите использовать лямбда-выражение где-то ещё, например, как параметр для другой функции.</p></li></ul><p><strong>ВЫВОД:</strong> <code>crossinline</code> должен использоваться только тогда, когда вы уверены в том, что оператор <code>return</code> <strong>не будет использоваться</strong> внутри лямбда-выражения. Если лямбда-выражение должно содержать оператор <code>return</code>, то следует использовать ключевое слово <code>noinline</code> вместо <code>crossinline</code>.</p><a class="anchor" name="%D0%9A%D0%BB%D1%8E%D1%87%D0%B5%D0%B2%D0%BE%D0%B5%20%D1%81%D0%BB%D0%BE%D0%B2%D0%BE%20reified" id="Ключевое слово reified"></a><p><a href="#%D0%A1%D0%BF%D0%B8%D1%81%D0%BE%D0%BA%20%D1%82%D0%B5%D0%BC%20%D0%B8%20%D0%B2%D0%BE%D0%BF%D1%80%D0%BE%D1%81%D0%BE%D0%B2" rel="noopener noreferrer nofollow">—————— ↑↑↑ к списку вопросов ↑↑↑ ——————</a></p><h2>Ключевое слово reified</h2><p><strong>reified</strong> — это ключевое слово, которое может быть использовано <strong>только в inline-функциях</strong>. <code>reified</code> позволяет получить информацию о типе generic-параметра во время выполнения программы. В обычном случае, информация о типах стирается и недоступна во время выполнения, но с помощью <code>reified</code> можно сохранять эту информацию и использовать в других частях приложения.</p><p>Несколько простых примеров применения:</p><p><strong>1. Получить доступ к типу параметра во время выполнения</strong></p><pre><code class="kotlin">fun main() {
    printType&lt;String&gt;()    // String
    printType&lt;Int&gt;()       // Int
}

private inline fun &lt;reified T&gt; printType() {
    println(T::class.simpleName)
}</code></pre><p>В этом примере мы определяем функцию <code>printType()</code> с типовым параметром <code>T</code>, который мы указываем с помощью <code>reified</code>. Внутри функции мы можем получить тип <code>T</code> во время выполнения, используя <code>T::class</code>. Затем выводим название типа на экран с помощью <code>simpleName</code>. Когда мы вызываем функцию <code>printType()</code> с типом <code>String</code> или <code>Int</code>, она выводит соответствующий тип на экран.</p><p><strong>2. </strong><code>reified</code> вместе с <code>is</code> для проверки типа аргумента во время выполнения</p><pre><code class="kotlin">fun main() {
    println(isOfType&lt;Int&gt;(1))          // true
    println(isOfType&lt;Int&gt;("Hello"))    // false
}

private inline fun &lt;reified T&gt; isOfType(value: Any): Boolean {
    return value is T
}
</code></pre><p>Здесь мы определяем функцию <code>isOfType()</code>, которая принимает значение типа <code>Any</code> и возвращает <code>true</code>, если оно является типом <code>T</code>. Мы используем <code>reified</code>, чтобы получить доступ к типу <code>T</code> во время выполнения. Затем мы используем оператор <code>is</code> для проверки типа значения и возвращаем соответствующее boolean значение.</p><p><strong>3. Получить список элементов перечисления</strong></p><pre><code class="kotlin">enum class Color { RED, GREEN, BLUE }

fun main() {
    printEnumValues&lt;Color&gt;()    // RED, GREEN, BLUE
}

private inline fun &lt;reified T : Enum&lt;T&gt;&gt; printEnumValues() {
    enumValues&lt;T&gt;().forEach { value -&gt;
        println(value)
    }
}</code></pre><p>Определяем функцию <code>printEnumValues()</code>, которая выводит список элементов перечисления типа <code>T</code>. Мы применяем <code>reified</code>, чтобы получить доступ к типу <code>T</code> во время выполнения. Затем используем <code>enumValues&lt;T&gt;()</code>, чтобы получить список всех значений перечисления типа <code>T</code>. Внутри цикла выводим каждое значение на экран. Когда мы вызываем функцию <code>printEnumValues()</code> с типом <code>Color</code>, она выводит "RED", "GREEN" и "BLUE" в консоль.</p><a class="anchor" name="%D0%9F%D0%BE%D1%87%D0%B5%D0%BC%D1%83 reified %D0%B2%D0%BE%D0%B7%D0%BC%D0%BE%D0%B6%D0%BD%D0%BE%20%D0%B8%D1%81%D0%BF%D0%BE%D0%BB%D1%8C%D0%B7%D0%BE%D0%B2%D0%B0%D1%82%D1%8C%20%D1%82%D0%BE%D0%BB%D1%8C%D0%BA%D0%BE%20%D1%81%20inline-%D1%84%D1%83%D0%BD%D0%BA%D1%86%D0%B8%D1%8F%D0%BC%D0%B8?" id="Почему reified возможно использовать только с inline-функциями?"></a><p><a href="#%D0%A1%D0%BF%D0%B8%D1%81%D0%BE%D0%BA%20%D1%82%D0%B5%D0%BC%20%D0%B8%20%D0%B2%D0%BE%D0%BF%D1%80%D0%BE%D1%81%D0%BE%D0%B2" rel="noopener noreferrer nofollow">—————— ↑↑↑ к списку вопросов ↑↑↑ ——————</a></p><h2>Почему reified возможно использовать только с inline-функциями?</h2><p>Ключевое слово <code>reified</code> используется только с inline-функциями, т.к. оно позволяет получить доступ к информации о типе-параметре на этапе выполнения программы, что невозможно для обычных (non-inline) функций.</p><p>inline-функции в Kotlin позволяют копировать тело функции непосредственно в вызывающий код. Это позволяет избежать накладных расходов на создание объектов и вызовы функций при каждом вызове.</p><p>Именно <code>reified</code> в комбинации с <code>inline</code> позволяет сохранить информацию о типе-параметре и передать ее внутрь функции в рантайме, что было бы невозможно без <code>inline</code>.</p><p>Также стоит отметить, что ключевое слово <code>reified</code> можно применять только с обобщенными типами (дженериками).</p><a class="anchor" name="%D0%9F%D0%BE%D1%87%D0%B5%D0%BC%D1%83%20reified%20%D0%BC%D0%BE%D0%B6%D0%BD%D0%BE%20%D0%B8%D1%81%D0%BF%D0%BE%D0%BB%D1%8C%D0%B7%D0%BE%D0%B2%D0%B0%D1%82%D1%8C%20%D1%82%D0%BE%D0%BB%D1%8C%D0%BA%D0%BE%20%D1%81%20%D0%BE%D0%B1%D0%BE%D0%B1%D1%89%D0%B5%D0%BD%D0%BD%D1%8B%D0%BC%D0%B8%20%D1%82%D0%B8%D0%BF%D0%B0%D0%BC%D0%B8%20(generics)?" id="Почему reified можно использовать только с обобщенными типами (generics)?"></a><p><a href="#%D0%A1%D0%BF%D0%B8%D1%81%D0%BE%D0%BA%20%D1%82%D0%B5%D0%BC%20%D0%B8%20%D0%B2%D0%BE%D0%BF%D1%80%D0%BE%D1%81%D0%BE%D0%B2" rel="noopener noreferrer nofollow">—————— ↑↑↑ к списку вопросов ↑↑↑ ——————</a></p><h2>Почему reified можно использовать только с обобщенными типами (generics)?</h2><p>Ключевое слово <code>reified</code> в языке Kotlin можно использовать только с обобщенными типами, потому что оно предназначено для решения конкретной проблемы, связанной именно с дженериками.</p><p>Одна из особенностей обобщенных типов заключается в том, что информация о типе становится недоступной на этапе выполнения программы. Вместо этого на этапе компиляции создается код, который работает с типом-параметром "на уровне объекта", то есть как с любым другим объектом, не зная его конкретного типа.</p><p>Именно <code>reified</code> позволяет сохранить информацию о типе-параметре <strong>на этапе выполнения программы</strong>. И дает нам возможность проверять типы в рантайме, создавать объекты типа-параметра и передавать их в качестве параметров других функций.</p><p>Таким образом, ключевое слово <code>reified</code> <strong>не имеет смысла применять к необобщенным типам</strong>, поскольку они уже доступны в качестве конкретных объектов на этапе выполнения.</p><a class="anchor" name="%D0%9F%D0%BE%D1%87%D0%B5%D0%BC%D1%83%20%D0%BD%D0%B5%D0%BB%D1%8C%D0%B7%D1%8F%20%D0%B2%D1%81%D0%B5%20%D1%84%D1%83%D0%BD%D0%BA%D1%86%D0%B8%D0%B8%20%D1%81%D0%B4%D0%B5%D0%BB%D0%B0%D1%82%D1%8C%20inline?" id="Почему нельзя все функции сделать inline?"></a><p><a href="#%D0%A1%D0%BF%D0%B8%D1%81%D0%BE%D0%BA%20%D1%82%D0%B5%D0%BC%20%D0%B8%20%D0%B2%D0%BE%D0%BF%D1%80%D0%BE%D1%81%D0%BE%D0%B2" rel="noopener noreferrer nofollow">—————— ↑↑↑ к списку вопросов ↑↑↑ ——————</a></p><h2>Почему нельзя все функции сделать inline?</h2><p>Технически, можно попробовать сделать все функции <code>inline</code>. Однако, это может привести к ряду негативных последствий:</p><p><strong>1. Увеличение размера скомпилированного кода</strong></p><p>Поскольку inline-функции заменяются на их вызовы во время компиляции, это может привести к увеличению размера скомпилированного кода, особенно если функции содержат большой объем кода.</p><p><strong>2. Увеличение времени компиляции</strong></p><p>inline-функции могут увеличить время компиляции проекта, так как компилятору нужно заменить каждый вызов функции на ее код.</p><p><strong>3. Увеличение расхода памяти</strong></p><p>Если функции являются часто используемыми и содержат большой объем кода, использование inline-функций может привести к увеличению расхода памяти.</p><p><strong>4. Ограничения на использование лямбда-выражений</strong></p><p>Применение inline-функций может ограничить возможности использования лямбда-выражений. Например, в inline-функциях нельзя использовать функции, которые не могут быть inlined, такие как protected-функции или функции из других модулей.</p><p><strong>5. Ограничения на использование рекурсии</strong></p><p>Использование inline-функций может ограничить возможность использования рекурсии, так как замена рекурсивного вызова функции на ее код может привести к бесконечной рекурсии или переполнению стека.</p><p><strong>ВЫВОД:</strong> если все функции сделать <code>inline</code>, это может привести к экспоненциальному росту размера кода и увеличению времени компиляции. Поэтому необходимо выбирать оптимальную стратегию для каждой конкретной функции в зависимости от ее предполагаемого использования.</p><p><a href="https://habr.com/ru/post/721084/" rel="noopener noreferrer nofollow">Вопросы и ответы для собеседования по Kotlin. Часть 1</a><br/><a href="https://habr.com/ru/post/722686/" rel="noopener noreferrer nofollow">Вопросы и ответы для собеседования по Kotlin. Часть 2</a> <br/><a href="https://habr.com/ru/articles/728742/" rel="noopener noreferrer nofollow">Вопросы и ответы для собеседования по Kotlin. Часть 3</a> <br/><a href="https://habr.com/ru/articles/736392/" rel="noopener noreferrer nofollow">Вопросы и ответы для собеседования по Kotlin. Часть 4</a> — вы находитесь здесь</p><p></p></div></div></div><!----><!----></div><!----><!----></div><!--]--><!----><div class="tm-article-presenter__meta" data-test-id="article-meta-links"><div class="tm-separated-list tm-article-presenter__meta-list"><span class="tm-separated-list__title">Теги:</span><ul class="tm-separated-list__list"><!--[--><li class="tm-separated-list__item"><!--[--><a href="/ru/search/?target_type=posts&amp;order=relevance&amp;q=[kotlin]" class="tm-tags-list__link"><span>kotlin</span></a><!--]--></li><li class="tm-separated-list__item"><!--[--><a href="/ru/search/?target_type=posts&amp;order=relevance&amp;q=[%D1%81%D0%BE%D0%B1%D0%B5%D1%81%D0%B5%D0%B4%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D0%B5]" class="tm-tags-list__link"><span>собеседование</span></a><!--]--></li><li class="tm-separated-list__item"><!--[--><a href="/ru/search/?target_type=posts&amp;order=relevance&amp;q=[faq]" class="tm-tags-list__link"><span>faq</span></a><!--]--></li><li class="tm-separated-list__item"><!--[--><a href="/ru/search/?target_type=posts&amp;order=relevance&amp;q=[%D0%B0%D0%BD%D0%B4%D1%80%D0%BE%D0%B8%D0%B4]" class="tm-tags-list__link"><span>андроид</span></a><!--]--></li><li class="tm-separated-list__item"><!--[--><a href="/ru/search/?target_type=posts&amp;order=relevance&amp;q=[%D0%BF%D0%BE%D0%B4%D0%B3%D0%BE%D1%82%D0%BE%D0%B2%D0%BA%D0%B0+%D0%BA+%D1%81%D0%BE%D0%B1%D0%B5%D1%81%D0%B5%D0%B4%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D1%8E]" class="tm-tags-list__link"><span>подготовка к собеседованию</span></a><!--]--></li><li class="tm-separated-list__item"><!--[--><a href="/ru/search/?target_type=posts&amp;order=relevance&amp;q=[%D0%BA%D0%BE%D1%82%D0%BB%D0%B8%D0%BD]" class="tm-tags-list__link"><span>котлин</span></a><!--]--></li><li class="tm-separated-list__item"><!--[--><a href="/ru/search/?target_type=posts&amp;order=relevance&amp;q=[%D1%83%D1%87%D0%B5%D0%B1%D0%BD%D1%8B%D0%B5+%D0%BC%D0%B0%D1%82%D0%B5%D1%80%D0%B8%D0%B0%D0%BB%D1%8B]" class="tm-tags-list__link"><span>учебные материалы</span></a><!--]--></li><li class="tm-separated-list__item"><!--[--><a href="/ru/search/?target_type=posts&amp;order=relevance&amp;q=[android]" class="tm-tags-list__link"><span>android</span></a><!--]--></li><li class="tm-separated-list__item"><!--[--><a href="/ru/search/?target_type=posts&amp;order=relevance&amp;q=[%D0%B2%D0%BE%D0%BF%D1%80%D0%BE%D1%81%D1%8B+%D0%B4%D0%BB%D1%8F+%D1%81%D0%BE%D0%B1%D0%B5%D1%81%D0%B5%D0%B4%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D1%8F]" class="tm-tags-list__link"><span>вопросы для собеседования</span></a><!--]--></li><li class="tm-separated-list__item"><!--[--><a href="/ru/search/?target_type=posts&amp;order=relevance&amp;q=[kotlin+%D1%83%D1%80%D0%BE%D0%BA%D0%B8]" class="tm-tags-list__link"><span>kotlin уроки</span></a><!--]--></li><!--]--><!----></ul></div><div class="tm-separated-list tm-article-presenter__meta-list"><span class="tm-separated-list__title">Хабы:</span><ul class="tm-separated-list__list"><!--[--><li class="tm-separated-list__item"><!--[--><a href="/ru/hubs/programming/" class="tm-hubs-list__link"><!--[--><span>Программирование</span><!--]--></a><!--]--></li><li class="tm-separated-list__item"><!--[--><a href="/ru/hubs/java/" class="tm-hubs-list__link"><!--[--><span>Java</span><!--]--></a><!--]--></li><li class="tm-separated-list__item"><!--[--><a href="/ru/hubs/android_dev/" class="tm-hubs-list__link"><!--[--><span>Разработка под Android</span><!--]--></a><!--]--></li><li class="tm-separated-list__item"><!--[--><a href="/ru/hubs/kotlin/" class="tm-hubs-list__link"><!--[--><span>Kotlin</span><!--]--></a><!--]--></li><li class="tm-separated-list__item"><!--[--><a href="/ru/hubs/study/" class="tm-hubs-list__link"><!--[--><span>Учебный процесс в IT</span><!--]--></a><!--]--></li><!--]--><!----></ul></div></div><!----><!--]--></article><!--]--></div><!----></div><div style="" class="tm-article-sticky-panel" data-test-id="article-sticky-panel"><div class="tm-data-icons tm-data-icons tm-data-icons_space-big tm-article-sticky-panel__icons" data-test-id="article-stats-icons"><div class="tm-article-rating tm-data-icons__item"><div class="tm-votes-meter tm-article-rating__votes-switcher"><svg class="tm-svg-img tm-votes-meter__icon tm-votes-meter__icon tm-votes-meter__icon_appearance-article" height="24" width="24"><title>Всего голосов 7: ↑6 и ↓1</title><use xlink:href="/img/megazord-v28.371b7fa3..svg#counter-rating"></use></svg><span class="tm-votes-meter__value tm-votes-meter__value_positive tm-votes-meter__value_appearance-article tm-votes-meter__value_rating tm-votes-meter__value" data-test-id="votes-meter-value" title="Всего голосов 7: ↑6 и ↓1">+5</span></div><!--teleport start--><!--teleport end--><!----></div><!----><!----><button class="bookmarks-button tm-data-icons__item" title="Добавить в закладки" type="button"><span class="tm-svg-icon__wrapper bookmarks-button__icon"><svg class="tm-svg-img tm-svg-icon" height="24" width="24"><title>Добавить в закладки</title><use xlink:href="/img/megazord-v28.371b7fa3..svg#counter-favorite"></use></svg></span><span class="bookmarks-button__counter" title="Количество пользователей, добавивших публикацию в закладки">100</span></button><div class="tm-sharing tm-data-icons__item" title="Поделиться"><button class="tm-sharing__button" type="button"><svg viewbox="0 0 24 24" xmlns="http://www.w3.org/2000/svg" class="tm-sharing__icon"><path fill="currentColor" d="M13.8 13.8V18l7.2-6.6L13.8 5v3.9C5 8.9 3 18.6 3 18.6c2.5-4.4 6-4.8 10.8-4.8z"></path></svg></button><!--teleport start--><!--teleport end--></div><div class="tm-article-comments-counter-link tm-data-icons__item" title="Читать комментарии"><a href="/ru/articles/736392/comments/" class="tm-article-comments-counter-link__link" data-test-id="counter-comments"><!--[--><svg class="tm-svg-img tm-article-comments-counter-link__icon" height="24" width="24"><title>Комментарии</title><use xlink:href="/img/megazord-v28.371b7fa3..svg#counter-comments"></use></svg><span class="tm-article-comments-counter-link__value">4</span><!--]--></a><!----></div><!--[--><!--[--><!--[--><!----><!--]--><!--]--><!--]--><!--teleport start--><!--teleport end--><!----></div></div></div><!--[--><!--]--><div class="tm-article-presenter__footer"><!--[--><!--[--><div class="tm-article-blocks"><!----><!--[--><section class="tm-block tm-block tm-block_spacing-bottom"><!----><!--[--><div class="tm-block__body tm-block__body tm-block__body_variant-balanced"><!--[--><div class="tm-article-author" data-test-id="article-author-info" data-async-called="true"><!--[--><!--]--><div class="tm-user-card tm-user-card tm-user-card_variant-article tm-article-author__user-card" data-async-called="true"><div class="tm-user-card__info-container"><div class="tm-user-card__header"><div class="tm-user-card__header-data"><a href="/ru/users/dmt_ovs/" class="tm-user-card__userpic tm-user-card__userpic_size-40"><div class="tm-entity-image"><img alt="" class="tm-entity-image__pic" src="//habrastorage.org/getpro/habr/avatars/84b/afb/1c1/84bafb1c17208f6b124be4429e2a8104.png"></div></a><div class="tm-user-card__meta"><div class="tm-counter-container tm-karma tm-karma" title=" 32 голоса "><div class="tm-counter-container__header"><!--[--><div class="karma-display positive" data-v-7635202e>24</div><!----><!--]--></div><div class="tm-counter-container__footer"><!--[--><div class="tm-karma__text">Карма</div><!--teleport start--><!--teleport end--><!--]--></div></div><div class="tm-counter-container" title="Рейтинг пользователя"><div class="tm-counter-container__header"><!--[--><!--[--><!--]--><div class="tm-votes-lever tm-votes-lever tm-votes-lever_appearance-rating"><!----><div class="tm-votes-lever__score tm-votes-lever__score_appearance-rating tm-votes-lever__score"><!--[--><span><span class="tm-votes-lever__score-counter tm-votes-lever__score-counter_rating tm-votes-lever__score-counter" data-test-id="votes-score-counter">0</span></span><!--]--></div><!----></div><!--]--></div><div class="tm-counter-container__footer"><!--[--><span class="tm-rating__text tm-rating__text">Рейтинг</span><!--]--></div></div></div></div></div><div class="tm-user-card__info tm-user-card__info_variant-article tm-user-card__info"><div class="tm-user-card__title tm-user-card__title_variant-article tm-user-card__title"><span class="tm-user-card__name tm-user-card__name_variant-article tm-user-card__name">Дмитрий</span><a href="/ru/users/dmt_ovs/" class="tm-user-card__nickname tm-user-card__nickname tm-user-card__nickname_variant-article"> @dmt_ovs</a><!----></div><p class="tm-user-card__short-info tm-user-card__short-info_variant-article tm-user-card__short-info" data-test-id="user-card-speciality">(-_-)</p></div></div><!----><div class="tm-user-card__buttons tm-user-card__buttons_variant-article tm-user-card__buttons"><!----><div class="tm-user-card__button"><div class="tm-button-follow tm-user-card__button-follow"><!----><button class="tm-button-follow__button tm-button-follow__button_big" data-test-id="follow-button" type="button">Подписаться</button></div></div><!----><div class="tm-user-card__button tm-user-card__button_write" data-test-id="user-card-conversations"><svg class="tm-svg-img tm-user-card__button-icon" height="16" width="16"><title>Отправить сообщение</title><use xlink:href="/img/megazord-v28.371b7fa3..svg#mail"></use></svg></div><!----></div><!----></div><div class="tm-article-author__user-contacts" data-test-id="author-contacts"><!----><!----><!----></div></div><!--]--></div><!--]--><!----></section><!----><!--[--><div class="banner-wrapper leaderboard tm-page-article__banner" style="--467224fc:200px;--58ff5eba:auto;" data-v-ad758baa><!--[--><div class="placeholder-wrapper placeholder" data-v-ad758baa><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><div class="adfox-banner-placeholder leaderboard" data-v-12f7bcca><div class="image loads" data-v-12f7bcca></div><div class="lines" data-v-12f7bcca><div class="line loads" data-v-12f7bcca></div><div class="line loads" data-v-12f7bcca></div><div class="line loads" data-v-12f7bcca></div></div></div><!----></div><div id="adfox_164725660339535756" class="tm-adfox-banner" data-v-ad758baa></div><!--]--></div><!--]--><!--]--><div class="tm-article-blocks__comments"><div id="publication-comments" class="tm-article-page-comments"><div><!--[--><div class="tm-article-comments-counter-link tm-article-comments-counter-button"><a href="/ru/articles/736392/comments/" class="tm-article-comments-counter-link__link tm-article-comments-counter-link__link_button-style" data-test-id="counter-comments"><!--[--><svg class="tm-svg-img tm-article-comments-counter-link__icon tm-article-comments-counter-link__icon_contrasted" height="24" width="24"><title>Комментарии</title><use xlink:href="/img/megazord-v28.371b7fa3..svg#counter-comments"></use></svg><span class="tm-article-comments-counter-link__value tm-article-comments-counter-link__value_contrasted"> Комментарии 4 </span><!--]--></a><!----></div><!--]--></div></div></div><!--[--><!--[--><!--]--><section class="tm-block tm-block tm-block_spacing-bottom"><header class="tm-block__header tm-block__header tm-block__header_variant-borderless"><div class="tm-block__header-container"><h2 class="tm-block__title tm-block__title tm-block__title_variant-large">Публикации</h2><!--[--><!--]--></div><!----></header><!--[--><div class="tm-block__body tm-block__body tm-block__body_variant-condensed-slim"><!--[--><!--[--><div class="tm-tabs tm-tabs"><div class=""><!--[--><span class="tm-tabs__tab-item"><button class="tm-tabs__tab-link tm-tabs__tab-link_active tm-tabs__tab-link_slim tm-tabs__tab-link">Лучшие за сутки</button></span><span class="tm-tabs__tab-item"><button class="tm-tabs__tab-link tm-tabs__tab-link_slim tm-tabs__tab-link">Похожие</button></span><!--]--></div><!----></div><div class="similar-and-daily__tab-view"><div class="daily-articles-list"><ul class="tm-article-card-list"><!--[--><!--]--><div class="tm-bordered-card"><!----><!--[--><!--]--></div></ul><div class="daily-articles-block__button-container"><button class="btn btn_transparent btn_small tm-button tm-button_color-horizon" type="button"><!--[--><!--[-->Показать лучшие за всё время<!--]--><!--]--></button></div></div><!----></div><!--]--><!--]--></div><!--]--><!----></section><!--[--><section class="tm-block tm-block tm-block_spacing-around tm-stories-block" data-navigatable tabindex="0" data-async-called="true"><header class="tm-block__header tm-block__header"><div class="tm-block__header-container"><h2 class="tm-block__title tm-block__title">Истории</h2><!--[--><!--]--></div><!----></header><!--[--><div class="tm-block__body tm-block__body tm-block__body_variant-equal"><!--[--><div class="tm-stories-empty"><!--[--><div class="tm-stories-card-empty"><div class="tm-stories-card-empty__image"></div><div class="tm-stories-card-empty__title"><div class="tm-stories-card-empty__title-block"></div><div class="tm-stories-card-empty__title-block"></div><div class="tm-stories-card-empty__title-block"></div></div></div><div class="tm-stories-card-empty"><div class="tm-stories-card-empty__image"></div><div class="tm-stories-card-empty__title"><div class="tm-stories-card-empty__title-block"></div><div class="tm-stories-card-empty__title-block"></div><div class="tm-stories-card-empty__title-block"></div></div></div><div class="tm-stories-card-empty"><div class="tm-stories-card-empty__image"></div><div class="tm-stories-card-empty__title"><div class="tm-stories-card-empty__title-block"></div><div class="tm-stories-card-empty__title-block"></div><div class="tm-stories-card-empty__title-block"></div></div></div><div class="tm-stories-card-empty"><div class="tm-stories-card-empty__image"></div><div class="tm-stories-card-empty__title"><div class="tm-stories-card-empty__title-block"></div><div class="tm-stories-card-empty__title-block"></div><div class="tm-stories-card-empty__title-block"></div></div></div><div class="tm-stories-card-empty"><div class="tm-stories-card-empty__image"></div><div class="tm-stories-card-empty__title"><div class="tm-stories-card-empty__title-block"></div><div class="tm-stories-card-empty__title-block"></div><div class="tm-stories-card-empty__title-block"></div></div></div><div class="tm-stories-card-empty"><div class="tm-stories-card-empty__image"></div><div class="tm-stories-card-empty__title"><div class="tm-stories-card-empty__title-block"></div><div class="tm-stories-card-empty__title-block"></div><div class="tm-stories-card-empty__title-block"></div></div></div><!--]--></div><!----><!--]--></div><!--]--><!----></section><div class="placeholder-wrapper"><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><div class="tm-placeholder-inset tm-placeholder-questions"><div class="tm-placeholder-inset__header"><div class="tm-placeholder__line tm-placeholder__line_inset-header loads"></div></div><div class="tm-placeholder-inset__body"><ul class="tm-placeholder-list"><!--[--><li class="tm-placeholder-list__item tm-placeholder-list__item_inset"><div class="tm-placeholder__line tm-placeholder__line_item-title loads"></div><div class="tm-project-block-items__properties"><!--[--><span class="tm-project-block-items__property-item"><span class="tm-placeholder__line loads" style="width:100px;"></span></span><span class="tm-project-block-items__property-item"><span class="tm-placeholder__line loads" style="width:100px;"></span></span><span class="tm-project-block-items__property-item"><span class="tm-placeholder__line loads" style="width:100px;"></span></span><!--]--></div></li><li class="tm-placeholder-list__item tm-placeholder-list__item_inset"><div class="tm-placeholder__line tm-placeholder__line_item-title loads"></div><div class="tm-project-block-items__properties"><!--[--><span class="tm-project-block-items__property-item"><span class="tm-placeholder__line loads" style="width:100px;"></span></span><span class="tm-project-block-items__property-item"><span class="tm-placeholder__line loads" style="width:100px;"></span></span><span class="tm-project-block-items__property-item"><span class="tm-placeholder__line loads" style="width:100px;"></span></span><!--]--></div></li><li class="tm-placeholder-list__item tm-placeholder-list__item_inset"><div class="tm-placeholder__line tm-placeholder__line_item-title loads"></div><div class="tm-project-block-items__properties"><!--[--><span class="tm-project-block-items__property-item"><span class="tm-placeholder__line loads" style="width:100px;"></span></span><span class="tm-project-block-items__property-item"><span class="tm-placeholder__line loads" style="width:100px;"></span></span><span class="tm-project-block-items__property-item"><span class="tm-placeholder__line loads" style="width:100px;"></span></span><!--]--></div></li><li class="tm-placeholder-list__item tm-placeholder-list__item_inset"><div class="tm-placeholder__line tm-placeholder__line_item-title loads"></div><div class="tm-project-block-items__properties"><!--[--><span class="tm-project-block-items__property-item"><span class="tm-placeholder__line loads" style="width:100px;"></span></span><span class="tm-project-block-items__property-item"><span class="tm-placeholder__line loads" style="width:100px;"></span></span><span class="tm-project-block-items__property-item"><span class="tm-placeholder__line loads" style="width:100px;"></span></span><!--]--></div></li><li class="tm-placeholder-list__item tm-placeholder-list__item_inset"><div class="tm-placeholder__line tm-placeholder__line_item-title loads"></div><div class="tm-project-block-items__properties"><!--[--><span class="tm-project-block-items__property-item"><span class="tm-placeholder__line loads" style="width:100px;"></span></span><span class="tm-project-block-items__property-item"><span class="tm-placeholder__line loads" style="width:100px;"></span></span><span class="tm-project-block-items__property-item"><span class="tm-placeholder__line loads" style="width:100px;"></span></span><!--]--></div></li><!--]--></ul></div><div class="tm-placeholder-inset__footer"><div class="tm-placeholder__line tm-placeholder__line_inset-footer loads"></div></div></div><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----></div><!--]--><!----><!--[--><div><div class="placeholder-wrapper"><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><div class="tm-placeholder-promo"><div class="tm-placeholder-promo__header"><div class="tm-placeholder__line tm-placeholder__line_promo-title"></div></div><div class="tm-placeholder-promo__body"><div class="tm-placeholder-promo__posts"><div class="tm-placeholder-promo__post"><div class="tm-placeholder-promo__image"></div><div class="tm-placeholder__line tm-placeholder__line_post-title"></div></div><div class="tm-placeholder-promo__post"><div class="tm-placeholder-promo__image"></div><div class="tm-placeholder__line tm-placeholder__line_post-title"></div></div><div class="tm-placeholder-promo__post"><div class="tm-placeholder-promo__image"></div><div class="tm-placeholder__line tm-placeholder__line_post-title"></div></div></div><div class="tm-placeholder-promo__dots"><div class="tm-placeholder-promo__dot"></div><div class="tm-placeholder-promo__dot"></div><div class="tm-placeholder-promo__dot"></div></div></div></div><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----></div></div><section class="tm-block tm-block tm-block_spacing-top" data-async-called="true"><header class="tm-block__header tm-block__header"><div class="tm-block__header-container"><h2 class="tm-block__title tm-block__title">Работа</h2><!--[--><!--]--></div><!----></header><!--[--><div class="tm-block__body tm-block__body"><!--[--><!--[--><div class="tm-vacancies-block__item"><a class="tm-vacancies-block__vacancy-title" href="https://career.habr.com/vacancies/java_developer" target="_blank">Java разработчик</a><div class="tm-vacancies-block__vacancies-count">211
    вакансий</div></div><div class="tm-vacancies-block__item"><a class="tm-vacancies-block__vacancy-title" href="https://career.habr.com/vacancies/android_developer" target="_blank">Android разработчик </a><div class="tm-vacancies-block__vacancies-count">10
    вакансий</div></div><!--]--><!--]--></div><!--]--><footer class="tm-block__footer"><!--[--><a class="tm-block-extralink" href="https://career.habr.com/catalog">Все вакансии</a><!--]--></footer></section><section class="tm-block tm-block tm-block_spacing-around tm-events-block" data-navigatable tabindex="0" data-async-called="true"><header class="tm-block__header tm-block__header tm-block__header_variant-borderless-large"><div class="tm-block__header-container"><h2 class="tm-block__title tm-block__title">Ближайшие события</h2><!--[--><!--]--></div><!----></header><!--[--><div class="tm-block__body tm-block__body tm-block__body_variant-equal"><!--[--><div class="swiper-container tm-events-widget" style="--swiper-space-between:22px;"><div class="swiper-wrapper"><!--[--><!--[--><div class="swiper-slide"><!--[--><section class="tm-block tm-block tm-block_spacing-none" id="588" tabindex="-1"><!----><!--[--><div class="tm-event-card tm-event-card_is-widget tm-event-card_responsive"><a href="/ru/events/588/" class=""><img alt class="tm-event-card__image" data-src="https://habrastorage.org/getpro/habr/upload_files/f79/1fc/79d/f791fc79d0d9fdda84397ed0c0717764.png" loading="lazy" src="https://habrastorage.org/r/w390/getpro/habr/upload_files/f79/1fc/79d/f791fc79d0d9fdda84397ed0c0717764.png" srcset="https://habrastorage.org/r/w390/getpro/habr/upload_files/f79/1fc/79d/f791fc79d0d9fdda84397ed0c0717764.png, https://habrastorage.org/getpro/habr/upload_files/f79/1fc/79d/f791fc79d0d9fdda84397ed0c0717764.png 2x"></a><!----><div class="tm-event-card__info"><div class="tm-event-card__date"><!----><div class="tm-event-card__day"><span>17  февраля   – 24  марта  </span></div></div><a href="/ru/events/588/" class="tm-event-card__title-link"><span>Конкурс «Снежный код» от Хекслета. Три гранта на бесплатное 10-месячное обучение</span></a><div class="tm-event-card__places"><div class="tm-event-card__places-list"><!--[--><span class="tm-event-card__places-item"><span>Онлайн</span><!----></span><!--]--></div></div></div><div class="tm-event-card__footer tm-event-card__footer_widget"><a href="/ru/events/#588" class="tm-event-card__link">Больше событий в календаре</a><div class="tm-event-card__categories"><!--[--><div class="event-category__label event-category__label_type-development"><span>Разработка</span></div><!--]--></div></div></div><!--]--><!----></section><!--]--></div><div class="swiper-slide"><!--[--><section class="tm-block tm-block tm-block_spacing-none" id="596" tabindex="-1"><!----><!--[--><div class="tm-event-card tm-event-card_is-widget tm-event-card_responsive"><a href="/ru/events/596/" class=""><img alt class="tm-event-card__image" data-src="https://habrastorage.org/getpro/habr/upload_files/b14/cd3/772/b14cd3772bc67698c8fbfd846e23824a.png" loading="lazy" src="https://habrastorage.org/r/w390/getpro/habr/upload_files/b14/cd3/772/b14cd3772bc67698c8fbfd846e23824a.png" srcset="https://habrastorage.org/r/w390/getpro/habr/upload_files/b14/cd3/772/b14cd3772bc67698c8fbfd846e23824a.png, https://habrastorage.org/getpro/habr/upload_files/b14/cd3/772/b14cd3772bc67698c8fbfd846e23824a.png 2x"></a><!----><div class="tm-event-card__info"><div class="tm-event-card__date"><!----><div class="tm-event-card__day"><span>20  марта  </span></div></div><a href="/ru/events/596/" class="tm-event-card__title-link"><span>Офлайн-конференция Хабр х K-team: как удерживать таланты в 2025 году</span></a><div class="tm-event-card__places"><div class="tm-event-card__places-list"><!--[--><span class="tm-event-card__places-item"><span>Москва</span><!----></span><!--]--></div></div></div><div class="tm-event-card__footer tm-event-card__footer_widget"><a href="/ru/events/#596" class="tm-event-card__link">Больше событий в календаре</a><div class="tm-event-card__categories"><!--[--><div class="event-category__label event-category__label_type-other"><span>Другое</span></div><!--]--></div></div></div><!--]--><!----></section><!--]--></div><div class="swiper-slide"><!--[--><section class="tm-block tm-block tm-block_spacing-none" id="604" tabindex="-1"><!----><!--[--><div class="tm-event-card tm-event-card_is-widget tm-event-card_responsive"><a href="/ru/events/604/" class=""><img alt class="tm-event-card__image" data-src="https://habrastorage.org/getpro/habr/upload_files/733/9ef/194/7339ef1945f3ee6906daf89db79829d4.png" loading="lazy" src="https://habrastorage.org/r/w390/getpro/habr/upload_files/733/9ef/194/7339ef1945f3ee6906daf89db79829d4.png" srcset="https://habrastorage.org/r/w390/getpro/habr/upload_files/733/9ef/194/7339ef1945f3ee6906daf89db79829d4.png, https://habrastorage.org/getpro/habr/upload_files/733/9ef/194/7339ef1945f3ee6906daf89db79829d4.png 2x"></a><!----><div class="tm-event-card__info"><div class="tm-event-card__date"><!----><div class="tm-event-card__day"><span>20  марта  </span></div></div><a href="/ru/events/604/" class="tm-event-card__title-link"><span>IX HappyWorkForum | Аутентичность и ментальное здоровье персонала</span></a><div class="tm-event-card__places"><div class="tm-event-card__places-list"><!--[--><span class="tm-event-card__places-item"><span>Москва</span><span class="tm-event-card__places-separator"> • </span></span><span class="tm-event-card__places-item"><span>Онлайн</span><!----></span><!--]--></div></div></div><div class="tm-event-card__footer tm-event-card__footer_widget"><a href="/ru/events/#604" class="tm-event-card__link">Больше событий в календаре</a><div class="tm-event-card__categories"><!--[--><div class="event-category__label event-category__label_type-other"><span>Другое</span></div><!--]--></div></div></div><!--]--><!----></section><!--]--></div><div class="swiper-slide"><!--[--><section class="tm-block tm-block tm-block_spacing-none" id="612" tabindex="-1"><!----><!--[--><div class="tm-event-card tm-event-card_is-widget tm-event-card_responsive"><a href="/ru/events/612/" class=""><img alt class="tm-event-card__image" data-src="https://habrastorage.org/getpro/habr/upload_files/38f/10d/f4c/38f10df4c7f9d7c5d4610fe426af0ab4.png" loading="lazy" src="https://habrastorage.org/r/w390/getpro/habr/upload_files/38f/10d/f4c/38f10df4c7f9d7c5d4610fe426af0ab4.png" srcset="https://habrastorage.org/r/w390/getpro/habr/upload_files/38f/10d/f4c/38f10df4c7f9d7c5d4610fe426af0ab4.png, https://habrastorage.org/getpro/habr/upload_files/38f/10d/f4c/38f10df4c7f9d7c5d4610fe426af0ab4.png 2x"></a><!----><div class="tm-event-card__info"><div class="tm-event-card__date"><!----><div class="tm-event-card__day"><span>20  марта  </span></div></div><a href="/ru/events/612/" class="tm-event-card__title-link"><span>Вебинар «Мастерская бюджета: как управлять затратами на облачные ресурсы»</span></a><div class="tm-event-card__places"><div class="tm-event-card__places-list"><!--[--><span class="tm-event-card__places-item"><span>Онлайн</span><!----></span><!--]--></div></div></div><div class="tm-event-card__footer tm-event-card__footer_widget"><a href="/ru/events/#612" class="tm-event-card__link">Больше событий в календаре</a><div class="tm-event-card__categories"><!--[--><div class="event-category__label event-category__label_type-development"><span>Разработка</span></div><div class="event-category__label event-category__label_type-admin"><span>Администрирование</span></div><!--]--></div></div></div><!--]--><!----></section><!--]--></div><div class="swiper-slide"><!--[--><section class="tm-block tm-block tm-block_spacing-none" id="616" tabindex="-1"><!----><!--[--><div class="tm-event-card tm-event-card_is-widget tm-event-card_responsive"><a href="/ru/events/616/" class=""><img alt class="tm-event-card__image" data-src="https://habrastorage.org/getpro/habr/upload_files/523/7fb/13a/5237fb13ad7fb6fb483c49691aaec836.png" loading="lazy" src="https://habrastorage.org/r/w390/getpro/habr/upload_files/523/7fb/13a/5237fb13ad7fb6fb483c49691aaec836.png" srcset="https://habrastorage.org/r/w390/getpro/habr/upload_files/523/7fb/13a/5237fb13ad7fb6fb483c49691aaec836.png, https://habrastorage.org/getpro/habr/upload_files/523/7fb/13a/5237fb13ad7fb6fb483c49691aaec836.png 2x"></a><!----><div class="tm-event-card__info"><div class="tm-event-card__date"><!----><div class="tm-event-card__day"><span>21  марта  </span></div></div><a href="/ru/events/616/" class="tm-event-card__title-link"><span>Бизнес-конференция «Digital Brand Day 2025: Орбита 2025»</span></a><div class="tm-event-card__places"><div class="tm-event-card__places-list"><!--[--><span class="tm-event-card__places-item"><span>Москва</span><!----></span><!--]--></div></div></div><div class="tm-event-card__footer tm-event-card__footer_widget"><a href="/ru/events/#616" class="tm-event-card__link">Больше событий в календаре</a><div class="tm-event-card__categories"><!--[--><div class="event-category__label event-category__label_type-marketing"><span>Маркетинг</span></div><div class="event-category__label event-category__label_type-other"><span>Другое</span></div><!--]--></div></div></div><!--]--><!----></section><!--]--></div><div class="swiper-slide"><!--[--><section class="tm-block tm-block tm-block_spacing-none" id="608" tabindex="-1"><!----><!--[--><div class="tm-event-card tm-event-card_is-widget tm-event-card_responsive"><a href="/ru/events/608/" class=""><img alt class="tm-event-card__image" data-src="https://habrastorage.org/getpro/habr/upload_files/8fd/e04/ddd/8fde04ddd9ba3f6bcd515aa6209f96b7.png" loading="lazy" src="https://habrastorage.org/r/w390/getpro/habr/upload_files/8fd/e04/ddd/8fde04ddd9ba3f6bcd515aa6209f96b7.png" srcset="https://habrastorage.org/r/w390/getpro/habr/upload_files/8fd/e04/ddd/8fde04ddd9ba3f6bcd515aa6209f96b7.png, https://habrastorage.org/getpro/habr/upload_files/8fd/e04/ddd/8fde04ddd9ba3f6bcd515aa6209f96b7.png 2x"></a><!----><div class="tm-event-card__info"><div class="tm-event-card__date"><!----><div class="tm-event-card__day"><span>27  марта  </span></div></div><a href="/ru/events/608/" class="tm-event-card__title-link"><span>Вебинар «Контент-маркетинг здорового человека: как привлечь внимание аудитории»</span></a><div class="tm-event-card__places"><div class="tm-event-card__places-list"><!--[--><span class="tm-event-card__places-item"><span>Онлайн</span><!----></span><!--]--></div></div></div><div class="tm-event-card__footer tm-event-card__footer_widget"><a href="/ru/events/#608" class="tm-event-card__link">Больше событий в календаре</a><div class="tm-event-card__categories"><!--[--><div class="event-category__label event-category__label_type-marketing"><span>Маркетинг</span></div><div class="event-category__label event-category__label_type-other"><span>Другое</span></div><!--]--></div></div></div><!--]--><!----></section><!--]--></div><div class="swiper-slide"><!--[--><section class="tm-block tm-block tm-block_spacing-none" id="606" tabindex="-1"><!----><!--[--><div class="tm-event-card tm-event-card_is-widget tm-event-card_responsive"><a href="/ru/events/606/" class=""><img alt class="tm-event-card__image" data-src="https://habrastorage.org/getpro/habr/upload_files/b99/62a/b24/b9962ab2439c6edc80f96d7f0a847c72.png" loading="lazy" src="https://habrastorage.org/r/w390/getpro/habr/upload_files/b99/62a/b24/b9962ab2439c6edc80f96d7f0a847c72.png" srcset="https://habrastorage.org/r/w390/getpro/habr/upload_files/b99/62a/b24/b9962ab2439c6edc80f96d7f0a847c72.png, https://habrastorage.org/getpro/habr/upload_files/b99/62a/b24/b9962ab2439c6edc80f96d7f0a847c72.png 2x"></a><!----><div class="tm-event-card__info"><div class="tm-event-card__date"><!----><div class="tm-event-card__day"><span>31  марта  </span></div></div><a href="/ru/events/606/" class="tm-event-card__title-link"><span>Серия вебинаров «DevOps Middle: AvitoTech vs ecom.tech»</span></a><div class="tm-event-card__places"><div class="tm-event-card__places-list"><!--[--><span class="tm-event-card__places-item"><span>Онлайн</span><!----></span><!--]--></div></div></div><div class="tm-event-card__footer tm-event-card__footer_widget"><a href="/ru/events/#606" class="tm-event-card__link">Больше событий в календаре</a><div class="tm-event-card__categories"><!--[--><div class="event-category__label event-category__label_type-development"><span>Разработка</span></div><div class="event-category__label event-category__label_type-admin"><span>Администрирование</span></div><!--]--></div></div></div><!--]--><!----></section><!--]--></div><div class="swiper-slide"><!--[--><section class="tm-block tm-block tm-block_spacing-none" id="618" tabindex="-1"><!----><!--[--><div class="tm-event-card tm-event-card_is-widget tm-event-card_responsive"><a href="/ru/events/618/" class=""><img alt class="tm-event-card__image" data-src="https://habrastorage.org/getpro/habr/upload_files/f76/0f9/a82/f760f9a827b851a5eeca4802c643a91d.png" loading="lazy" src="https://habrastorage.org/r/w390/getpro/habr/upload_files/f76/0f9/a82/f760f9a827b851a5eeca4802c643a91d.png" srcset="https://habrastorage.org/r/w390/getpro/habr/upload_files/f76/0f9/a82/f760f9a827b851a5eeca4802c643a91d.png, https://habrastorage.org/getpro/habr/upload_files/f76/0f9/a82/f760f9a827b851a5eeca4802c643a91d.png 2x"></a><!----><div class="tm-event-card__info"><div class="tm-event-card__date"><!----><div class="tm-event-card__day"><span>3  апреля  </span></div></div><a href="/ru/events/618/" class="tm-event-card__title-link"><span>Реалити для разработчиков: узнайте, как строится новое публичное облако MWS</span></a><div class="tm-event-card__places"><div class="tm-event-card__places-list"><!--[--><span class="tm-event-card__places-item"><span>Онлайн</span><!----></span><!--]--></div></div></div><div class="tm-event-card__footer tm-event-card__footer_widget"><a href="/ru/events/#618" class="tm-event-card__link">Больше событий в календаре</a><div class="tm-event-card__categories"><!--[--><div class="event-category__label event-category__label_type-development"><span>Разработка</span></div><!--]--></div></div></div><!--]--><!----></section><!--]--></div><div class="swiper-slide"><!--[--><section class="tm-block tm-block tm-block_spacing-none" id="620" tabindex="-1"><!----><!--[--><div class="tm-event-card tm-event-card_is-widget tm-event-card_responsive"><a href="/ru/events/620/" class=""><img alt class="tm-event-card__image" data-src="https://habrastorage.org/getpro/habr/upload_files/eba/c37/879/ebac378793b959ebce42f41713e7b67f.jpg" loading="lazy" src="https://habrastorage.org/r/w390/getpro/habr/upload_files/eba/c37/879/ebac378793b959ebce42f41713e7b67f.jpg" srcset="https://habrastorage.org/r/w390/getpro/habr/upload_files/eba/c37/879/ebac378793b959ebce42f41713e7b67f.jpg, https://habrastorage.org/getpro/habr/upload_files/eba/c37/879/ebac378793b959ebce42f41713e7b67f.jpg 2x"></a><!----><div class="tm-event-card__info"><div class="tm-event-card__date"><!----><div class="tm-event-card__day"><span>3  апреля  </span></div></div><a href="/ru/events/620/" class="tm-event-card__title-link"><span>Открытая встреча «System Analysis Meetup SberHealth»</span></a><div class="tm-event-card__places"><div class="tm-event-card__places-list"><!--[--><span class="tm-event-card__places-item"><span>Москва</span><span class="tm-event-card__places-separator"> • </span></span><span class="tm-event-card__places-item"><span>Онлайн</span><!----></span><!--]--></div></div></div><div class="tm-event-card__footer tm-event-card__footer_widget"><a href="/ru/events/#620" class="tm-event-card__link">Больше событий в календаре</a><div class="tm-event-card__categories"><!--[--><div class="event-category__label event-category__label_type-analytics"><span>Аналитика</span></div><!--]--></div></div></div><!--]--><!----></section><!--]--></div><div class="swiper-slide"><!--[--><section class="tm-block tm-block tm-block_spacing-none" id="590" tabindex="-1"><!----><!--[--><div class="tm-event-card tm-event-card_is-widget tm-event-card_responsive"><a href="/ru/events/590/" class=""><img alt class="tm-event-card__image" data-src="https://habrastorage.org/getpro/habr/upload_files/31b/e68/295/31be6829578e7934fbc944396eb330b1.png" loading="lazy" src="https://habrastorage.org/r/w390/getpro/habr/upload_files/31b/e68/295/31be6829578e7934fbc944396eb330b1.png" srcset="https://habrastorage.org/r/w390/getpro/habr/upload_files/31b/e68/295/31be6829578e7934fbc944396eb330b1.png, https://habrastorage.org/getpro/habr/upload_files/31b/e68/295/31be6829578e7934fbc944396eb330b1.png 2x"></a><!----><div class="tm-event-card__info"><div class="tm-event-card__date"><!----><div class="tm-event-card__day"><span>10  апреля  </span></div></div><a href="/ru/events/590/" class="tm-event-card__title-link"><span>«GoCloud 2025» — масштабная IT-конференция про облака и AI</span></a><div class="tm-event-card__places"><div class="tm-event-card__places-list"><!--[--><span class="tm-event-card__places-item"><span>Москва</span><span class="tm-event-card__places-separator"> • </span></span><span class="tm-event-card__places-item"><span>Онлайн</span><!----></span><!--]--></div></div></div><div class="tm-event-card__footer tm-event-card__footer_widget"><a href="/ru/events/#590" class="tm-event-card__link">Больше событий в календаре</a><div class="tm-event-card__categories"><!--[--><div class="event-category__label event-category__label_type-development"><span>Разработка</span></div><div class="event-category__label event-category__label_type-admin"><span>Администрирование</span></div><div class="event-category__label event-category__label_type-management"><span>Менеджмент</span></div><!--]--></div></div></div><!--]--><!----></section><!--]--></div><div class="swiper-slide"><!--[--><section class="tm-block tm-block tm-block_spacing-none" id="516" tabindex="-1"><!----><!--[--><div class="tm-event-card tm-event-card_is-widget tm-event-card_responsive"><a href="/ru/events/516/" class=""><img alt class="tm-event-card__image" data-src="https://habrastorage.org/getpro/habr/upload_files/0e9/3a8/3ec/0e93a83ecea09f806d1df907ddb036a4.jpg" loading="lazy" src="https://habrastorage.org/r/w390/getpro/habr/upload_files/0e9/3a8/3ec/0e93a83ecea09f806d1df907ddb036a4.jpg" srcset="https://habrastorage.org/r/w390/getpro/habr/upload_files/0e9/3a8/3ec/0e93a83ecea09f806d1df907ddb036a4.jpg, https://habrastorage.org/getpro/habr/upload_files/0e9/3a8/3ec/0e93a83ecea09f806d1df907ddb036a4.jpg 2x"></a><!----><div class="tm-event-card__info"><div class="tm-event-card__date"><!----><div class="tm-event-card__day"><span>25 – 26  апреля  </span></div></div><a href="/ru/events/516/" class="tm-event-card__title-link"><span>IT-конференция Merge Tatarstan 2025</span></a><div class="tm-event-card__places"><div class="tm-event-card__places-list"><!--[--><span class="tm-event-card__places-item"><span>Казань</span><!----></span><!--]--></div></div></div><div class="tm-event-card__footer tm-event-card__footer_widget"><a href="/ru/events/#516" class="tm-event-card__link">Больше событий в календаре</a><div class="tm-event-card__categories"><!--[--><div class="event-category__label event-category__label_type-development"><span>Разработка</span></div><div class="event-category__label event-category__label_type-marketing"><span>Маркетинг</span></div><div class="event-category__label event-category__label_type-other"><span>Другое</span></div><!--]--></div></div></div><!--]--><!----></section><!--]--></div><div class="swiper-slide"><!--[--><section class="tm-block tm-block tm-block_spacing-none" id="610" tabindex="-1"><!----><!--[--><div class="tm-event-card tm-event-card_is-widget tm-event-card_responsive"><a href="/ru/events/610/" class=""><img alt class="tm-event-card__image" data-src="https://habrastorage.org/getpro/habr/upload_files/652/12d/998/65212d998fb4939d9787bd9c726d2acb.png" loading="lazy" src="https://habrastorage.org/r/w390/getpro/habr/upload_files/652/12d/998/65212d998fb4939d9787bd9c726d2acb.png" srcset="https://habrastorage.org/r/w390/getpro/habr/upload_files/652/12d/998/65212d998fb4939d9787bd9c726d2acb.png, https://habrastorage.org/getpro/habr/upload_files/652/12d/998/65212d998fb4939d9787bd9c726d2acb.png 2x"></a><!----><div class="tm-event-card__info"><div class="tm-event-card__date"><!----><div class="tm-event-card__day"><span>20 – 22  июня  </span></div></div><a href="/ru/events/610/" class="tm-event-card__title-link"><span>Летняя айти-тусовка Summer Merge</span></a><div class="tm-event-card__places"><div class="tm-event-card__places-list"><!--[--><span class="tm-event-card__places-item"><span>Ульяновская область</span><!----></span><!--]--></div></div></div><div class="tm-event-card__footer tm-event-card__footer_widget"><a href="/ru/events/#610" class="tm-event-card__link">Больше событий в календаре</a><div class="tm-event-card__categories"><!--[--><div class="event-category__label event-category__label_type-development"><span>Разработка</span></div><div class="event-category__label event-category__label_type-other"><span>Другое</span></div><!--]--></div></div></div><!--]--><!----></section><!--]--></div><!--]--><!--]--></div><!----><!--[--><button class="swiper-button-prev"><span class="tm-svg-icon__wrapper swiper-button-icon"><svg class="tm-svg-img tm-svg-icon" height="24" width="24"><title>Влево</title><use xlink:href="/img/megazord-v28.371b7fa3..svg#arrow-back"></use></svg></span></button><button class="swiper-button-next"><span class="tm-svg-icon__wrapper swiper-button-icon"><svg class="tm-svg-img tm-svg-icon" height="24" width="24"><title>Вправо</title><use xlink:href="/img/megazord-v28.371b7fa3..svg#arrow-back"></use></svg></span></button><!--]--></div><!--]--></div><!--]--><!----></section><!--]--><!--]--></div><!--]--><!--]--></div></div><!--]--><!--]--></div></div><div class="tm-page__sidebar"><!--[--><!----><!--]--></div></div><!----><!--]--></div></div></main><!----></div><!----><div class="tm-footer"><div class="tm-page-width"><!--[--><div class="tm-footer__container"><div class="tm-footer__title"><a class="tm-svg-icon__wrapper tm-footer__title-link" href="/ru/"><svg class="tm-svg-img tm-svg-icon" height="16" width="16"><title>Хабр</title><use xlink:href="/img/habr-logo-ru.svg#logo"></use></svg></a></div><div class="tm-footer__social"><!--[--><a class="tm-svg-icon__wrapper tm-social-icons__icon" href="https://www.facebook.com/habrahabr.ru" rel="nofollow noopener noreferrer" target="_blank"><svg class="tm-svg-img tm-svg-icon" height="36" width="36"><title>Facebook</title><use xlink:href="/img/new-social-icons-sprite.svg#social-logo-facebook"></use></svg></a><a class="tm-svg-icon__wrapper tm-social-icons__icon" href="https://twitter.com/habr_com" rel="nofollow noopener noreferrer" target="_blank"><svg class="tm-svg-img tm-svg-icon" height="36" width="36"><title>Twitter</title><use xlink:href="/img/new-social-icons-sprite.svg#social-logo-twitter"></use></svg></a><a class="tm-svg-icon__wrapper tm-social-icons__icon" href="https://vk.com/habr" rel="nofollow noopener noreferrer" target="_blank"><svg class="tm-svg-img tm-svg-icon" height="36" width="36"><title>VK</title><use xlink:href="/img/new-social-icons-sprite.svg#social-logo-vk"></use></svg></a><a class="tm-svg-icon__wrapper tm-social-icons__icon" href="https://telegram.me/habr_com" rel="nofollow noopener noreferrer" target="_blank"><svg class="tm-svg-img tm-svg-icon" height="36" width="36"><title>Telegram</title><use xlink:href="/img/new-social-icons-sprite.svg#social-logo-telegram"></use></svg></a><a class="tm-svg-icon__wrapper tm-social-icons__icon" href="https://www.youtube.com/channel/UCd_sTwKqVrweTt4oAKY5y4w" rel="nofollow noopener noreferrer" target="_blank"><svg class="tm-svg-img tm-svg-icon" height="36" width="36"><title>Youtube</title><use xlink:href="/img/new-social-icons-sprite.svg#social-logo-youtube"></use></svg></a><a class="tm-svg-icon__wrapper tm-social-icons__icon" href="https://dzen.ru/habr" rel="nofollow noopener noreferrer" target="_blank"><svg class="tm-svg-img tm-svg-icon" height="36" width="36"><title>Яндекс Дзен</title><use xlink:href="/img/new-social-icons-sprite.svg#social-logo-dzen"></use></svg></a><!--]--></div><!--teleport start--><!--teleport end--><button class="tm-footer__link"><svg class="tm-svg-img tm-footer__icon" height="16" width="16"><title>Язык</title><use xlink:href="/img/megazord-v28.371b7fa3..svg#lang"></use></svg> Настройка языка</button><a href="/ru/feedback/" class="tm-footer__link">Техническая поддержка</a><div class="tm-footer-copyright"><span class="tm-copyright"><span class="tm-copyright__years">© 2006–2025, </span><span class="tm-copyright__name"><a class="tm-copyright__link" href="https://company.habr.com/" rel="noopener" target="_blank">Habr</a></span></span></div></div><!--]--></div></div><!----><!--]--></div><!----></div><script>window.__INITIAL_STATE__={"adblock":{"hasAcceptableAdsFilter":false,"hasAdblock":false},"articlesList":{"articlesList":{"736392":{"id":"736392","timePublished":"2023-05-20T19:08:36+00:00","isCorporative":false,"lang":"ru","titleHtml":"Вопросы и ответы для собеседования по Kotlin. Часть 4","leadData":{"textHtml":"\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fhabr.com\u002Fru\u002Fpost\u002F721084\u002F\" rel=\"noopener noreferrer nofollow\"\u003EВопросы и ответы для собеседования по Kotlin. Часть 1\u003C\u002Fa\u003E\u003Cbr\u003E\u003Ca href=\"https:\u002F\u002Fhabr.com\u002Fru\u002Fpost\u002F722686\u002F\" rel=\"noopener noreferrer nofollow\"\u003EВопросы и ответы для собеседования по Kotlin. Часть 2\u003C\u002Fa\u003E&nbsp;\u003Cbr\u003E\u003Ca href=\"https:\u002F\u002Fhabr.com\u002Fru\u002Farticles\u002F728742\u002F\" rel=\"noopener noreferrer nofollow\"\u003EВопросы и ответы для собеседования по Kotlin. Часть 3\u003C\u002Fa\u003E \u003Cbr\u003E\u003Ca href=\"https:\u002F\u002Fhabr.com\u002Fru\u002Farticles\u002F736392\u002F\" rel=\"noopener noreferrer nofollow\"\u003EВопросы и ответы для собеседования по Kotlin. Часть 4\u003C\u002Fa\u003E — вы находитесь здесь\u003C\u002Fp\u003E","imageUrl":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F54d\u002Ff96\u002F12c\u002F54df9612c50967db75beb93320269e93.png","buttonTextHtml":"Читать далее","image":{"url":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F54d\u002Ff96\u002F12c\u002F54df9612c50967db75beb93320269e93.png","fit":"cover","positionY":0,"positionX":0}},"editorVersion":"2.0","postType":"article","postLabels":[],"author":{"id":"3223285","alias":"dmt_ovs","fullname":"Дмитрий","avatarUrl":"\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Favatars\u002F84b\u002Fafb\u002F1c1\u002F84bafb1c17208f6b124be4429e2a8104.png","speciality":"(-_-)","scoreStats":{"score":24,"votesCount":32},"rating":0,"relatedData":null,"contacts":[],"authorContacts":[],"paymentDetails":{"paymentYandexMoney":null,"paymentPayPalMe":null,"paymentWebmoney":null},"donationsMethod":null,"isInBlacklist":null,"careerProfile":null},"statistics":{"commentsCount":4,"favoritesCount":100,"readingCount":52209,"score":5,"votesCount":7,"votesCountPlus":6,"votesCountMinus":1},"hubs":[{"id":"359","alias":"programming","type":"collective","title":"Программирование","titleHtml":"Программирование","isProfiled":true,"relatedData":null},{"id":"375","alias":"java","type":"collective","title":"Java","titleHtml":"Java","isProfiled":true,"relatedData":null},{"id":"17107","alias":"android_dev","type":"collective","title":"Разработка под Android","titleHtml":"Разработка под Android","isProfiled":true,"relatedData":null},{"id":"19441","alias":"kotlin","type":"collective","title":"Kotlin","titleHtml":"Kotlin","isProfiled":true,"relatedData":null},{"id":"20696","alias":"study","type":"collective","title":"Учебный процесс в IT","titleHtml":"Учебный процесс в IT","isProfiled":false,"relatedData":null}],"flows":[{"id":"1","alias":"develop","title":"Разработка","titleHtml":"Разработка"},{"id":"3","alias":"management","title":"Менеджмент","titleHtml":"Менеджмент"}],"relatedData":{"vote":null,"unreadCommentsCount":0,"bookmarked":false,"canComment":false,"canEdit":false,"canViewVotes":false,"votePlus":{"canVote":false,"isChargeEnough":false,"isKarmaEnough":false,"isVotingOver":true,"isPublicationLimitEnough":false},"voteMinus":{"canVote":false,"isChargeEnough":false,"isKarmaEnough":false,"isVotingOver":true,"isPublicationLimitEnough":false},"canModerateComments":false,"trackerSubscribed":false,"emailSubscribed":false},"textHtml":"\u003Cdiv xmlns=\"http:\u002F\u002Fwww.w3.org\u002F1999\u002Fxhtml\"\u003E\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fhabr.com\u002Fru\u002Fpost\u002F721084\u002F\" rel=\"noopener noreferrer nofollow\"\u003EВопросы и ответы для собеседования по Kotlin. Часть 1\u003C\u002Fa\u003E\u003Cbr\u002F\u003E\u003Ca href=\"https:\u002F\u002Fhabr.com\u002Fru\u002Fpost\u002F722686\u002F\" rel=\"noopener noreferrer nofollow\"\u003EВопросы и ответы для собеседования по Kotlin. Часть 2\u003C\u002Fa\u003E \u003Cbr\u002F\u003E\u003Ca href=\"https:\u002F\u002Fhabr.com\u002Fru\u002Farticles\u002F728742\u002F\" rel=\"noopener noreferrer nofollow\"\u003EВопросы и ответы для собеседования по Kotlin. Часть 3\u003C\u002Fa\u003E \u003Cbr\u002F\u003E\u003Ca href=\"https:\u002F\u002Fhabr.com\u002Fru\u002Farticles\u002F736392\u002F\" rel=\"noopener noreferrer nofollow\"\u003EВопросы и ответы для собеседования по Kotlin. Часть 4\u003C\u002Fa\u003E — вы находитесь здесь\u003C\u002Fp\u003E\u003Ca class=\"anchor\" name=\"%D0%A1%D0%BF%D0%B8%D1%81%D0%BE%D0%BA%20%D1%82%D0%B5%D0%BC%20%D0%B8%20%D0%B2%D0%BE%D0%BF%D1%80%D0%BE%D1%81%D0%BE%D0%B2\" id=\"Список тем и вопросов\"\u003E\u003C\u002Fa\u003E\u003Ch2\u003EСписок тем и вопросов:\u003C\u002Fh2\u003E\u003Ch4\u003E1. Extensions (расширения)\u003C\u002Fh4\u003E\u003Cul\u003E\u003Cli\u003E\u003Cp\u003E\u003Ca href=\"#Extensions%20(%D1%80%D0%B0%D1%81%D1%88%D0%B8%D1%80%D0%B5%D0%BD%D0%B8%D1%8F)%20%E2%80%94%20%D1%87%D1%82%D0%BE%20%D1%8D%D1%82%D0%BE%20%D0%B8%20%D0%B4%D0%BB%D1%8F%20%D1%87%D0%B5%D0%B3%D0%BE%20%D0%BD%D1%83%D0%B6%D0%BD%D1%8B?\" rel=\"noopener noreferrer nofollow\"\u003EExtensions (расширения) — что это и для чего нужны?\u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003E\u003Ca href=\"#%D0%9A%D0%B0%D0%BA%20%D1%84%D1%83%D0%BD%D0%BA%D1%86%D0%B8%D0%B8%20%D1%80%D0%B0%D1%81%D1%88%D0%B8%D1%80%D0%B5%D0%BD%D0%B8%D1%8F%20%D1%80%D0%B0%D0%B1%D0%BE%D1%82%D0%B0%D1%8E%D1%82%20%D0%BF%D0%BE%D0%B4%20%D0%BA%D0%B0%D0%BF%D0%BE%D1%82%D0%BE%D0%BC?\" rel=\"noopener noreferrer nofollow\"\u003EКак функции расширения работают под капотом?\u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003E\u003Ca href=\"#%D0%9A%D0%B0%D0%BA%20extensions%20%D0%B2%D1%8B%D0%B3%D0%BB%D1%8F%D0%B4%D1%8F%D1%82%20%D0%B2%20Java?\" rel=\"noopener noreferrer nofollow\"\u003EКак extensions выглядят в Java?\u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003C\u002Ful\u003E\u003Ch4\u003E2. Функции высшего порядка, лямбда-выражения, анонимные функции\u003C\u002Fh4\u003E\u003Cul\u003E\u003Cli\u003E\u003Cp\u003E\u003Ca href=\"#%D0%A4%D1%83%D0%BD%D0%BA%D1%86%D0%B8%D0%B8%20%D0%B2%D1%8B%D1%81%D1%88%D0%B5%D0%B3%D0%BE%20%D0%BF%D0%BE%D1%80%D1%8F%D0%B4%D0%BA%D0%B0\" rel=\"noopener noreferrer nofollow\"\u003EФункции высшего порядка\u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003E\u003Ca href=\"#%D0%9B%D1%8F%D0%BC%D0%B1%D0%B4%D0%B0-%D0%B2%D1%8B%D1%80%D0%B0%D0%B6%D0%B5%D0%BD%D0%B8%D1%8F%20%D0%B8%20%D0%B0%D0%BD%D0%BE%D0%BD%D0%B8%D0%BC%D0%BD%D1%8B%D0%B5%20%D1%84%D1%83%D0%BD%D0%BA%D1%86%D0%B8%D0%B8\" rel=\"noopener noreferrer nofollow\"\u003EЛямбда-выражения и анонимные функции\u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003E\u003Ca href=\"#%D0%A0%D0%B0%D0%B7%D0%BD%D0%B8%D1%86%D0%B0%20%D0%BC%D0%B5%D0%B6%D0%B4%D1%83%20%D0%BB%D1%8F%D0%BC%D0%B1%D0%B4%D0%B0-%D0%B2%D1%8B%D1%80%D0%B0%D0%B6%D0%B5%D0%BD%D0%B8%D0%B5%D0%BC%20%D0%B8%20%D0%B0%D0%BD%D0%BE%D0%BD%D0%B8%D0%BC%D0%BD%D0%BE%D0%B9%20%D1%84%D1%83%D0%BD%D0%BA%D1%86%D0%B8%D0%B5%D0%B9\" rel=\"noopener noreferrer nofollow\"\u003EРазница между лямбда-выражением и анонимной функцией\u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003E\u003Ca href=\"#%D0%A7%D1%82%D0%BE%20%D1%82%D0%B0%D0%BA%D0%BE%D0%B5%20%D1%84%D1%83%D0%BD%D0%BA%D1%86%D0%B8%D0%BE%D0%BD%D0%B0%D0%BB%D1%8C%D0%BD%D1%8B%D0%B9%20%D1%82%D0%B8%D0%BF,%20%D0%BA%D0%B0%D0%BA%D0%B8%D0%B5%20%D1%83%20%D0%BD%D0%B5%D0%B3%D0%BE%20%D0%BE%D0%B3%D1%80%D0%B0%D0%BD%D0%B8%D1%87%D0%B5%D0%BD%D0%B8%D1%8F?\" rel=\"noopener noreferrer nofollow\"\u003EЧто такое функциональный тип, какие у него ограничения?\u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003E\u003Ca href=\"#%D0%9A%D0%B0%D0%BA%20%D1%80%D0%B0%D0%B1%D0%BE%D1%82%D0%B0%D1%8E%D1%82%20SAM-conversions?\" rel=\"noopener noreferrer nofollow\"\u003EКак работают SAM-conversions?\u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003E\u003Ca href=\"#%D0%A3%D0%BA%D0%B0%D0%B7%D0%B0%D1%82%D0%B5%D0%BB%D0%B8%20%D0%BD%D0%B0%20%D1%84%D1%83%D0%BD%D0%BA%D1%86%D0%B8%D0%B8%20(Function%20references,%20Bound%20callable%20references)\" rel=\"noopener noreferrer nofollow\"\u003EУказатели на функции (Function references, Bound callable references)\u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003E\u003Ca href=\"#%D0%A4%D1%83%D0%BD%D0%BA%D1%86%D0%B8%D0%B8%20%D0%BE%D0%B1%D0%BB%D0%B0%D1%81%D1%82%D0%B8%20%D0%B2%D0%B8%D0%B4%D0%B8%D0%BC%D0%BE%D1%81%D1%82%D0%B8%20(Scope%20Functions)%20%E2%80%94%20let,%20run,%20with,%20apply,%20also\" rel=\"noopener noreferrer nofollow\"\u003EФункции области видимости (Scope Functions) — let, run, with, apply, also\u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003C\u002Ful\u003E\u003Ch4\u003E3. Встроенные (inline) функции, crossinline и noinline, reified\u003C\u002Fh4\u003E\u003Cul\u003E\u003Cli\u003E\u003Cp\u003E\u003Ca href=\"#%D0%A7%D1%82%D0%BE%20%D1%82%D0%B0%D0%BA%D0%BE%D0%B5%20inline%20%D1%84%D1%83%D0%BD%D0%BA%D1%86%D0%B8%D0%B8,%20%D0%B2%20%D1%87%D0%B5%D0%BC%20%D0%B8%D1%85%20%D0%BF%D1%80%D0%B5%D0%B8%D0%BC%D1%83%D1%89%D0%B5%D1%81%D1%82%D0%B2%D0%BE?\" rel=\"noopener noreferrer nofollow\"\u003EЧто такое inline функции, в чем их преимущество?\u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003E\u003Ca href=\"#%D0%9C%D0%BE%D0%B4%D0%B8%D1%84%D0%B8%D0%BA%D0%B0%D1%82%D0%BE%D1%80%20noinline\" rel=\"noopener noreferrer nofollow\"\u003EМодификатор noinline\u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003E\u003Ca href=\"#%D0%A7%D1%82%D0%BE%20%D1%82%D0%B0%D0%BA%D0%BE%D0%B5%20%D0%BD%D0%B5%D0%BB%D0%BE%D0%BA%D0%B0%D0%BB%D1%8C%D0%BD%D1%8B%D0%B9%20return?\" rel=\"noopener noreferrer nofollow\"\u003EЧто такое нелокальный return?\u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003E\u003Ca href=\"#%D0%9A%D0%B0%D0%BA%20%D1%80%D0%B0%D0%B1%D0%BE%D1%82%D0%B0%D0%B5%D1%82%20%D0%BC%D0%BE%D0%B4%D0%B8%D1%84%D0%B8%D0%BA%D0%B0%D1%82%D0%BE%D1%80%20crossinline?\" rel=\"noopener noreferrer nofollow\"\u003EКак работает модификатор crossinline?\u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003E\u003Ca href=\"#%D0%9A%D0%BE%D0%B3%D0%B4%D0%B0%20%D0%BD%D1%83%D0%B6%D0%BD%D0%BE%20%D0%B8%D1%81%D0%BF%D0%BE%D0%BB%D1%8C%D0%B7%D0%BE%D0%B2%D0%B0%D1%82%D1%8C%20crossinline,%20%D0%B0%20%D0%BA%D0%BE%D0%B3%D0%B4%D0%B0%20noinline?\" rel=\"noopener noreferrer nofollow\"\u003EКогда нужно использовать crossinline, а когда noinline?\u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003E\u003Ca href=\"#%D0%9A%D0%BB%D1%8E%D1%87%D0%B5%D0%B2%D0%BE%D0%B5%20%D1%81%D0%BB%D0%BE%D0%B2%D0%BE%20reified\" rel=\"noopener noreferrer nofollow\"\u003EКлючевое слово reified\u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003E\u003Ca href=\"#%D0%9F%D0%BE%D1%87%D0%B5%D0%BC%D1%83 reified %D0%B2%D0%BE%D0%B7%D0%BC%D0%BE%D0%B6%D0%BD%D0%BE%20%D0%B8%D1%81%D0%BF%D0%BE%D0%BB%D1%8C%D0%B7%D0%BE%D0%B2%D0%B0%D1%82%D1%8C%20%D1%82%D0%BE%D0%BB%D1%8C%D0%BA%D0%BE%20%D1%81%20inline-%D1%84%D1%83%D0%BD%D0%BA%D1%86%D0%B8%D1%8F%D0%BC%D0%B8?\" rel=\"noopener noreferrer nofollow\"\u003EПочему reified возможно использовать только с inline-функциями?\u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003E\u003Ca href=\"#%D0%9F%D0%BE%D1%87%D0%B5%D0%BC%D1%83%20reified%20%D0%BC%D0%BE%D0%B6%D0%BD%D0%BE%20%D0%B8%D1%81%D0%BF%D0%BE%D0%BB%D1%8C%D0%B7%D0%BE%D0%B2%D0%B0%D1%82%D1%8C%20%D1%82%D0%BE%D0%BB%D1%8C%D0%BA%D0%BE%20%D1%81%20%D0%BE%D0%B1%D0%BE%D0%B1%D1%89%D0%B5%D0%BD%D0%BD%D1%8B%D0%BC%D0%B8%20%D1%82%D0%B8%D0%BF%D0%B0%D0%BC%D0%B8%20(generics)?\" rel=\"noopener noreferrer nofollow\"\u003EПочему reified можно использовать только с обобщенными типами (generics)?\u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003E\u003Ca href=\"#%D0%9F%D0%BE%D1%87%D0%B5%D0%BC%D1%83%20%D0%BD%D0%B5%D0%BB%D1%8C%D0%B7%D1%8F%20%D0%B2%D1%81%D0%B5%20%D1%84%D1%83%D0%BD%D0%BA%D1%86%D0%B8%D0%B8%20%D1%81%D0%B4%D0%B5%D0%BB%D0%B0%D1%82%D1%8C%20inline?\" rel=\"noopener noreferrer nofollow\"\u003EПочему нельзя все функции сделать inline?\u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003C\u002Ful\u003E\u003Cfigure class=\"full-width \"\u003E\u003Cimg src=\"https:\u002F\u002Fhabrastorage.org\u002Fr\u002Fw1560\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fb4c\u002F080\u002F506\u002Fb4c080506274ba29a65c7dde6ce1cdfd.png\" width=\"1587\" height=\"753\" data-src=\"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fb4c\u002F080\u002F506\u002Fb4c080506274ba29a65c7dde6ce1cdfd.png\"\u002F\u003E\u003C\u002Ffigure\u003E\u003Ca class=\"anchor\" name=\"Extensions%20(%D1%80%D0%B0%D1%81%D1%88%D0%B8%D1%80%D0%B5%D0%BD%D0%B8%D1%8F)%20%E2%80%94%20%D1%87%D1%82%D0%BE%20%D1%8D%D1%82%D0%BE%20%D0%B8%20%D0%B4%D0%BB%D1%8F%20%D1%87%D0%B5%D0%B3%D0%BE%20%D0%BD%D1%83%D0%B6%D0%BD%D1%8B?\" id=\"Extensions (расширения) — что это и для чего нужны?\"\u003E\u003C\u002Fa\u003E\u003Ch2\u003EExtensions (расширения) — что это и для чего нужны?\u003C\u002Fh2\u003E\u003Cp\u003EЭто функции, которые позволяют \u003Cstrong\u003Eдобавить функционал к уже определенным типам\u003C\u002Fstrong\u003E.\u003C\u002Fp\u003E\u003Cp\u003EKotlin предлагает нам концепцию «Extension Function»: мы можем к любому существующему типу добавить функцию-расширение, которая будет доступна через все объекты этого типа (но будет иметь доступ только к публичным частям).\u003C\u002Fp\u003E\u003Cul\u003E\u003Cli\u003E\u003Cp\u003EДля добавления функционала класса, если он закрыт для расширения (например, лежит в сторонней библиотеке).\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003EДля расширения \u003Ccode\u003Enullable\u003C\u002Fcode\u003E типов.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003EДля расширения \u003Ccode\u003Ecompanion object\u003C\u002Fcode\u003E.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003EДля расширения свойств существующих классов.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003EДля конвертации моделей из одной в другую.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003EДля расширения функционала дженериков.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003C\u002Ful\u003E\u003Cp\u003E\u003Cstrong\u003EПодробнее:\u003C\u002Fstrong\u003E \u003Ca href=\"https:\u002F\u002Ftproger.ru\u002Farticles\u002Fchto-takoe-funkcii-rasshirenija-kotlin-i-gde-ih-pravilno-primenjat\" rel=\"noopener noreferrer nofollow\"\u003Etproger.ru\u003C\u002Fa\u003E, \u003Ca href=\"https:\u002F\u002Fkotlinlang.ru\u002Fdocs\u002Freference\u002Fextensions.html\" rel=\"noopener noreferrer nofollow\"\u003Ekotlinlang.ru\u003C\u002Fa\u003E, \u003Ca href=\"https:\u002F\u002Fmetanit.com\u002Fkotlin\u002Ftutorial\u002F5.5.php\" rel=\"noopener noreferrer nofollow\"\u003Emetanit.com\u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003Ca class=\"anchor\" name=\"%D0%9A%D0%B0%D0%BA%20%D1%84%D1%83%D0%BD%D0%BA%D1%86%D0%B8%D0%B8%20%D1%80%D0%B0%D1%81%D1%88%D0%B8%D1%80%D0%B5%D0%BD%D0%B8%D1%8F%20%D1%80%D0%B0%D0%B1%D0%BE%D1%82%D0%B0%D1%8E%D1%82%20%D0%BF%D0%BE%D0%B4%20%D0%BA%D0%B0%D0%BF%D0%BE%D1%82%D0%BE%D0%BC?\" id=\"Как функции расширения работают под капотом?\"\u003E\u003C\u002Fa\u003E\u003Cp\u003E\u003Ca href=\"#%D0%A1%D0%BF%D0%B8%D1%81%D0%BE%D0%BA%20%D1%82%D0%B5%D0%BC%20%D0%B8%20%D0%B2%D0%BE%D0%BF%D1%80%D0%BE%D1%81%D0%BE%D0%B2\" rel=\"noopener noreferrer nofollow\"\u003E—————— ↑↑↑ к списку вопросов ↑↑↑ ——————\u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003Ch2\u003EКак функции расширения работают под капотом?\u003C\u002Fh2\u003E\u003Cp\u003EПо своей задумке, функция расширения Kotlin — это дополнительный метод для любого объекта, даже для потенциально несуществующего (нуллабельного). Этот инструмент является прямой реализацией переопределения методов паттерна проектирования Декоратор.\u003C\u002Fp\u003E\u003Cp\u003E\u003Cstrong\u003EВАЖНО:\u003C\u002Fstrong\u003E В функциях расширения мы можем обращаться к любым общедоступным свойствам и методам объекта, однако не можем обращаться к свойствам и методам с модификаторами \u003Ccode\u003Eprivate\u003C\u002Fcode\u003E и \u003Ccode\u003Eprotected\u003C\u002Fcode\u003E.\u003C\u002Fp\u003E\u003Cp\u003E\u003Cstrong\u003EВАЖНО:\u003C\u002Fstrong\u003E Функции расширения \u003Cstrong\u003Eне переопределяют\u003C\u002Fstrong\u003E функции, которые уже определены в классе. Если функция расширения имеет ту же сигнатуру, что и уже имеющаяся функция класса, то компилятор просто будет игнорировать подобную функцию расширения.\u003C\u002Fp\u003E\u003Cp\u003EОпределение аналогично определению обычной функции за тем исключением, что после слова \u003Ccode\u003Efun\u003C\u002Fcode\u003E идет название типа, для которого определяется функция, и через точку название функции. Определим пару функций расширения к типам \u003Ccode\u003EInt\u003C\u002Fcode\u003E и \u003Ccode\u003EString\u003C\u002Fcode\u003E:\u003C\u002Fp\u003E\u003Cpre\u003E\u003Ccode class=\"kotlin\"\u003Efun main() {\n \n    val hello: String = \"hello world\"\n    println(hello.wordCount('l'))   \u002F\u002F 3\n    println(hello.wordCount('o'))   \u002F\u002F 2\n    println(4.square())             \u002F\u002F 16\n    println(6.square())             \u002F\u002F 36\n}\n \nfun String.wordCount(c: Char) : Int {\n    var count = 0\n    for(n in this) {\n        if(n == c) count++\n    }\n    return count\n}\nfun Int.square(): Int {\n    return this * this\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EДля типа \u003Ccode\u003EInt\u003C\u002Fcode\u003E определена функция возведения в квадрат. В каждой функции расширения через ключевое слово \u003Ccode\u003Ethis\u003C\u002Fcode\u003E мы можем ссылаться на текущий объект того типа, для которого создается функция. Например, в функции:\u003C\u002Fp\u003E\u003Cpre\u003E\u003Ccode class=\"kotlin\"\u003Efun Int.square(): Int {\n    return this * this\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EЧерез \u003Ccode\u003Ethis\u003C\u002Fcode\u003E обращаемся к тому объекту, для которого будет вызываться функция. И затем вы можем вызвать ее следующим образом:\u003C\u002Fp\u003E\u003Cpre\u003E\u003Ccode class=\"kotlin\"\u003E4.square()      \u002F\u002F 16\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EДля типа \u003Ccode\u003EString\u003C\u002Fcode\u003E определена функция \u003Ccode\u003EwordCount\u003C\u002Fcode\u003E, которая подсчитывает, сколько встречается определенный символ в строке.\u003C\u002Fp\u003E\u003Ca class=\"anchor\" name=\"%D0%9A%D0%B0%D0%BA%20extensions%20%D0%B2%D1%8B%D0%B3%D0%BB%D1%8F%D0%B4%D1%8F%D1%82%20%D0%B2%20Java?\" id=\"Как extensions выглядят в Java?\"\u003E\u003C\u002Fa\u003E\u003Cp\u003E\u003Ca href=\"#%D0%A1%D0%BF%D0%B8%D1%81%D0%BE%D0%BA%20%D1%82%D0%B5%D0%BC%20%D0%B8%20%D0%B2%D0%BE%D0%BF%D1%80%D0%BE%D1%81%D0%BE%D0%B2\" rel=\"noopener noreferrer nofollow\"\u003E—————— ↑↑↑ к списку вопросов ↑↑↑ ——————\u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003Ch2\u003EКак extensions выглядят в Java?\u003C\u002Fh2\u003E\u003Cp\u003EФункции расширения для JVM являются \u003Ccode\u003Estatic final\u003C\u002Fcode\u003E методами.\u003C\u002Fp\u003E\u003Cp\u003EExtensions в Kotlin не имеют прямого эквивалента в Java. Однако, компилятор Kotlin генерирует соответствующий статический метод в классе-компаньоне, который может быть вызван из Java кода в качестве статического метода этого класса.\u003C\u002Fp\u003E\u003Ca class=\"anchor\" name=\"%D0%A4%D1%83%D0%BD%D0%BA%D1%86%D0%B8%D0%B8%20%D0%B2%D1%8B%D1%81%D1%88%D0%B5%D0%B3%D0%BE%20%D0%BF%D0%BE%D1%80%D1%8F%D0%B4%D0%BA%D0%B0\" id=\"Функции высшего порядка\"\u003E\u003C\u002Fa\u003E\u003Cp\u003E\u003Ca href=\"#%D0%A1%D0%BF%D0%B8%D1%81%D0%BE%D0%BA%20%D1%82%D0%B5%D0%BC%20%D0%B8%20%D0%B2%D0%BE%D0%BF%D1%80%D0%BE%D1%81%D0%BE%D0%B2\" rel=\"noopener noreferrer nofollow\"\u003E—————— ↑↑↑ к списку вопросов ↑↑↑ ——————\u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003Ch2\u003EФункции высшего порядка\u003C\u002Fh2\u003E\u003Cp\u003EФункции высшего порядка в Котлин — это функции, которые принимают другие функции в качестве аргументов и\u002Fили возвращают функции в качестве результата. Эти принимаемые и возвращаемые функции обычно являются лямбда-выражениями.\u003C\u002Fp\u003E\u003Cp\u003EФункции высшего порядка являются основой концепции функционального программирования.\u003C\u002Fp\u003E\u003Cp\u003E\u003Cstrong\u003EПодробнее:\u003C\u002Fstrong\u003E \u003Ca href=\"https:\u002F\u002Fkotlinlang.ru\u002Fdocs\u002Freference\u002Flambdas.html\" rel=\"noopener noreferrer nofollow\"\u003Ekotlinlang.ru\u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003Ca class=\"anchor\" name=\"%D0%9B%D1%8F%D0%BC%D0%B1%D0%B4%D0%B0-%D0%B2%D1%8B%D1%80%D0%B0%D0%B6%D0%B5%D0%BD%D0%B8%D1%8F%20%D0%B8%20%D0%B0%D0%BD%D0%BE%D0%BD%D0%B8%D0%BC%D0%BD%D1%8B%D0%B5%20%D1%84%D1%83%D0%BD%D0%BA%D1%86%D0%B8%D0%B8\" id=\"Лямбда-выражения и анонимные функции\"\u003E\u003C\u002Fa\u003E\u003Cp\u003E\u003Ca href=\"#%D0%A1%D0%BF%D0%B8%D1%81%D0%BE%D0%BA%20%D1%82%D0%B5%D0%BC%20%D0%B8%20%D0%B2%D0%BE%D0%BF%D1%80%D0%BE%D1%81%D0%BE%D0%B2\" rel=\"noopener noreferrer nofollow\"\u003E—————— ↑↑↑ к списку вопросов ↑↑↑ ——————\u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003Ch2\u003EЛямбда-выражения и анонимные функции\u003C\u002Fh2\u003E\u003Cp\u003EЛямбда-выражения и анонимные функции — это функции без имени, которые могут быть переданы в качестве аргумента другим функциям. Их можно объявлять отдельно: сохранить в переменной и вызывать в нужном месте. Также их можно писать прямо внутри выражения, минуя отдельное объявление.\u003C\u002Fp\u003E\u003Cp\u003EЛямбда-выражения и анонимные функции облегчают написание функций высшего порядка и улучшают читаемость кода. Они позволяют определить функцию на месте её вызова, без необходимости создавать отдельный метод.\u003C\u002Fp\u003E\u003Cp\u003E\u003Cstrong\u003EСинтаксис лямбда-выражения:\u003C\u002Fstrong\u003E\u003Cbr\u002F\u003E \u003Ccode\u003E{ параметры -&gt; тело_лямбды }\u003C\u002Fcode\u003E, где:\u003C\u002Fp\u003E\u003Cul\u003E\u003Cli\u003E\u003Cp\u003E\u003Cstrong\u003Eпараметры:\u003C\u002Fstrong\u003E список параметров, разделенных запятой, которые могут использоваться внутри тела лямбда-выражения.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003E\u003Cstrong\u003Eтело_лямбды:\u003C\u002Fstrong\u003E выражение или блок выражений, которые могут использоваться для выполнения логики лямбда-выражения. Если тело лямбда-выражения состоит из нескольких выражений, то они должны быть заключены в блок \u003Ccode\u003E{}\u003C\u002Fcode\u003E.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003C\u002Ful\u003E\u003Cp\u003E\u003Cstrong\u003EСинтаксис декларации анонимной функции\u003C\u002Fstrong\u003E полностью совпадает с синтаксисом обычной функции, но у первой нет имени.\u003C\u002Fp\u003E\u003Cpre\u003E\u003Ccode class=\"kotlin\"\u003Efun defaultFun(x: Int, y: Int): Int = x + y    \u002F\u002F Именованная функция\nval f = fun(x: Int, y: Int): Int = x + y       \u002F\u002F Анонимная функция\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Ch4\u003E1. Лямбда-выражения\u003C\u002Fh4\u003E\u003Cp\u003E\u003Cstrong\u003EЛямбда-выражения всегда окружены фигурными скобками.\u003C\u002Fstrong\u003E Список параметров отделяется от тела лямбды \u003Ccode\u003E-&gt;\u003C\u002Fcode\u003E.\u003C\u002Fp\u003E\u003Cpre\u003E\u003Ccode class=\"kotlin\"\u003Eval sum = { x: Int, y: Int -&gt; x + y }\nprintln(sum(1, 5))               \u002F\u002F 6\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EПараметров может быть несколько, как в примере выше, либо может вовсе не быть, тогда левая часть вместе со стрелкой \u003Ccode\u003E-&gt;\u003C\u002Fcode\u003E опускаются.\u003C\u002Fp\u003E\u003Cpre\u003E\u003Ccode class=\"kotlin\"\u003Eval number = { 1 }\nprintln(number())      \u002F\u002F 1\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EЕсли в лямбда-выражении только один параметр, при этом его тип может быть выведен автоматически, то объявление параметра можно опустить вместе с \u003Ccode\u003E-&gt;\u003C\u002Fcode\u003E. В данном случае для обращения к параметру будет создано имя по умолчанию — \u003Ccode\u003Eit\u003C\u002Fcode\u003E.\u003C\u002Fp\u003E\u003Cpre\u003E\u003Ccode class=\"kotlin\"\u003Evar double = { x: Int -&gt; x * 2 }\ndouble = { it * 2 + 1 }\nprintln(double(4))          \u002F\u002F 9\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EЗначение из лямбда-выражения можно вернуть \u003Cstrong\u003Eявно\u003C\u002Fstrong\u003E — при помощи оператора \u003Ccode\u003Ereturn\u003C\u002Fcode\u003E. Либо неявно будет возвращено значение последнего (а возможно и единственного) выражения.\u003C\u002Fp\u003E\u003Cp\u003EЕсли лямбда-выражение является последним аргументом функции, то оно может быть вынесено за круглые скобки. Если же оно является единственным аргументом функции, то круглые скобки можно опустить. Такой синтаксис также известен как \u003Cstrong\u003Etrailing lambda\u003C\u002Fstrong\u003E.\u003C\u002Fp\u003E\u003Cp\u003EВсе три формы записи означают одно и тоже:\u003C\u002Fp\u003E\u003Cpre\u003E\u003Ccode class=\"kotlin\"\u003E\u002F\u002F лямбда передается в качестве аргумента\npeople.maxBy({ р: Person -&gt; p.age })\n\n\u002F\u002F лямбда вынесена за скобки, т.к. является последним аргументом функции\npeople.maxBy() { р: Person -&gt; p.age }\n\n\u002F\u002F скобки опущены, т.к. лямбда - единственный аргумент функции\npeople.maxBy { р: Person -&gt; p.age }\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EЕсли параметр лямбды не используется, разрешено применять подчеркивание вместо его имени:\u003C\u002Fp\u003E\u003Cpre\u003E\u003Ccode class=\"kotlin\"\u003Emap.forEach { _, value -&gt; println(\"$value!\") }\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Ch4\u003E2. Анонимные функции\u003C\u002Fh4\u003E\u003Cp\u003E\u003Cstrong\u003EАнонимная функция объявляется также как и обычная функция, но без указания имени.\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\u003Cpre\u003E\u003Ccode class=\"kotlin\"\u003E\u002F\u002F анонимная функция в виде выражения\nfun(x: Int, y: Int): Int = x + y\n\n\u002F\u002F та же функция, но в виде блока\nfun(x: Int, y: Int): Int {\n    return x + y\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EВ отличие от обычных функций, в анонимной функции можно опустить тип параметров, если его можно вывести из контекста.\u003C\u002Fp\u003E\u003Cpre\u003E\u003Ccode class=\"kotlin\"\u003Eval numbers = listOf(1, 2, 3, 4, 5)\nval evenNumbers = numbers.filter(fun(n) = n % 2 == 0)\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EЗдесь мы используем метод \u003Ccode\u003Efilter\u003C\u002Fcode\u003E списка \u003Ccode\u003Enumbers\u003C\u002Fcode\u003E, чтобы отобрать только четные числа. В качестве аргумента для метода \u003Ccode\u003Efilter\u003C\u002Fcode\u003E мы передаем анонимную функцию с одним параметром. Тип параметра не указывается явно, но компилятор может вывести, что параметр должен иметь тип \u003Ccode\u003EInt\u003C\u002Fcode\u003E, так как мы оперируем целочисленными значениями в лямбда-выражении.\u003C\u002Fp\u003E\u003Cp\u003EАнонимные функции следуют тем же правилам, что и обычные функции: для функций с телом-выражением возвращаемый тип и оператор \u003Ccode\u003Ereturn\u003C\u002Fcode\u003E могут быть опущены, но для функций с телом-блоком они должны быть указаны явно.\u003C\u002Fp\u003E\u003Ca class=\"anchor\" name=\"%D0%A0%D0%B0%D0%B7%D0%BD%D0%B8%D1%86%D0%B0%20%D0%BC%D0%B5%D0%B6%D0%B4%D1%83%20%D0%BB%D1%8F%D0%BC%D0%B1%D0%B4%D0%B0-%D0%B2%D1%8B%D1%80%D0%B0%D0%B6%D0%B5%D0%BD%D0%B8%D0%B5%D0%BC%20%D0%B8%20%D0%B0%D0%BD%D0%BE%D0%BD%D0%B8%D0%BC%D0%BD%D0%BE%D0%B9%20%D1%84%D1%83%D0%BD%D0%BA%D1%86%D0%B8%D0%B5%D0%B9\" id=\"Разница между лямбда-выражением и анонимной функцией\"\u003E\u003C\u002Fa\u003E\u003Cp\u003E\u003Ca href=\"#%D0%A1%D0%BF%D0%B8%D1%81%D0%BE%D0%BA%20%D1%82%D0%B5%D0%BC%20%D0%B8%20%D0%B2%D0%BE%D0%BF%D1%80%D0%BE%D1%81%D0%BE%D0%B2\" rel=\"noopener noreferrer nofollow\"\u003E—————— ↑↑↑ к списку вопросов ↑↑↑ ——————\u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003Ch2\u003EРазница между лямбда-выражением и анонимной функцией\u003C\u002Fh2\u003E\u003Cp\u003E\u003Cstrong\u003E1. Синтаксис\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\u003Cp\u003EЛямбда-выражения определяются \u003Cstrong\u003Eзаключением их в фигурные скобки\u003C\u002Fstrong\u003E в виде \u003Ccode\u003E{ параметры -&gt; тело }\u003C\u002Fcode\u003E.\u003Cbr\u002F\u003E Анонимные функции определяются \u003Cstrong\u003Eчерез ключевое слово \u003C\u002Fstrong\u003E\u003Ccode\u003Efun\u003C\u002Fcode\u003E как обычные функции, хотя не имеют имени.\u003C\u002Fp\u003E\u003Cp\u003E\u003Cstrong\u003E2. Поведение оператора \u003C\u002Fstrong\u003E\u003Ccode\u003Ereturn\u003C\u002Fcode\u003E без метки\u003C\u002Fp\u003E\u003Cul\u003E\u003Cli\u003E\u003Cp\u003EВ лямбда-выражении использование оператора \u003Ccode\u003Ereturn\u003C\u002Fcode\u003E без метки приводит к возврату из \u003Cstrong\u003Eобрамляющей (внешней) функции\u003C\u002Fstrong\u003E, а не из самого лямбда-выражения (т.е. полностью завершает работу этой функции и код, указанный после оператора \u003Ccode\u003Ereturn\u003C\u002Fcode\u003E никогда не выполнится). Это называется \u003Cstrong\u003Eнелокальным возвратом\u003C\u002Fstrong\u003E (non-local return), и может иметь неожиданное поведение и привести к ошибкам. В лямбда-выражениях рекомендуется использовать метки для явного указания точки возврата.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003EВ анонимной функции \u003Ccode\u003Ereturn\u003C\u002Fcode\u003E без метки приводит к возврату \u003Cstrong\u003Eтолько из самой анонимной функции\u003C\u002Fstrong\u003E (а не из внешней функции), продолжая выполнение кода после вызова анонимной функции в обрамляющей функции. Анонимные функции ведут себя как ожидается для классических функций с явным оператором \u003Ccode\u003Ereturn\u003C\u002Fcode\u003E.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003C\u002Ful\u003E\u003Cp\u003EТаким образом, поведение оператора \u003Ccode\u003Ereturn\u003C\u002Fcode\u003E без метки различается только в том, как завершается выполнение функции, в которой вызывается выражение. В лямбда-выражении, вызывающая функция завершается полностью, а в анонимной функции только сама анонимная функция.\u003C\u002Fp\u003E\u003Cp\u003E\u003Cstrong\u003E3. Поведение оператора \u003C\u002Fstrong\u003E\u003Ccode\u003Ereturn\u003C\u002Fcode\u003E с меткой\u003C\u002Fp\u003E\u003Cp\u003EОператор \u003Ccode\u003Ereturn\u003C\u002Fcode\u003E с меткой позволяет указать точное место, из которого нужно вернуться при вызове \u003Ccode\u003Ereturn\u003C\u002Fcode\u003E.\u003C\u002Fp\u003E\u003Cul\u003E\u003Cli\u003E\u003Cp\u003EЕсли использовать \u003Ccode\u003Ereturn@label\u003C\u002Fcode\u003E в лямбда-выражении, то возврат будет осуществляться из конкретной лямбды, к которой применена метка. Вместо нелокального возврата, который происходит при использовании \u003Ccode\u003Ereturn\u003C\u002Fcode\u003E без метки, \u003Ccode\u003Ereturn\u003C\u002Fcode\u003E с меткой завершит только ту лямбду, которая соответствует указанной метке, и выполнение кода продолжится после этой лямбды во внешней функции. Метка позволяет читать и понимать код проще, так как явно указывает, откуда происходит возврат.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003EВ анонимных функциях \u003Ccode\u003Ereturn\u003C\u002Fcode\u003E без метки уже осуществляет возврат из самой анонимной функции. Однако, при использовании метки \u003Ccode\u003Ereturn@label\u003C\u002Fcode\u003E вы также можете контролировать возврат из анонимной функции в сложных сценариях (например, при работе с несколькими вложенными функциями).\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003C\u002Ful\u003E\u003Cp\u003EВ обоих случаях использование оператора \u003Ccode\u003Ereturn\u003C\u002Fcode\u003E с меткой показывает точку возврата и делает код более явным и контролируемым.\u003C\u002Fp\u003E\u003Cp\u003E\u003Cstrong\u003EПодробнее о возврате к меткам:\u003C\u002Fstrong\u003E \u003Ca href=\"https:\u002F\u002Fkotlinlang.ru\u002Fdocs\u002Freference\u002Freturns.html#return-to-labels\" rel=\"noopener noreferrer nofollow\"\u003Ekotlinlang.ru\u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003Ca class=\"anchor\" name=\"%D0%A7%D1%82%D0%BE%20%D1%82%D0%B0%D0%BA%D0%BE%D0%B5%20%D1%84%D1%83%D0%BD%D0%BA%D1%86%D0%B8%D0%BE%D0%BD%D0%B0%D0%BB%D1%8C%D0%BD%D1%8B%D0%B9%20%D1%82%D0%B8%D0%BF,%20%D0%BA%D0%B0%D0%BA%D0%B8%D0%B5%20%D1%83%20%D0%BD%D0%B5%D0%B3%D0%BE%20%D0%BE%D0%B3%D1%80%D0%B0%D0%BD%D0%B8%D1%87%D0%B5%D0%BD%D0%B8%D1%8F?\" id=\"Что такое функциональный тип, какие у него ограничения?\"\u003E\u003C\u002Fa\u003E\u003Cp\u003E\u003Ca href=\"#%D0%A1%D0%BF%D0%B8%D1%81%D0%BE%D0%BA%20%D1%82%D0%B5%D0%BC%20%D0%B8%20%D0%B2%D0%BE%D0%BF%D1%80%D0%BE%D1%81%D0%BE%D0%B2\" rel=\"noopener noreferrer nofollow\"\u003E—————— ↑↑↑ к списку вопросов ↑↑↑ ——————\u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003Ch2\u003EЧто такое функциональный тип, какие у него ограничения?\u003C\u002Fh2\u003E\u003Cp\u003EЯзык Kotlin допускает объявлять тип анонимных функций или лямбда выражений — функциональный.\u003C\u002Fp\u003E\u003Cp\u003EФункциональный тип — это тип данных, который позволяет работать с функциями как с обычными объектами, передавать функции в качестве аргументов и возвращать их из функций. Синтаксис функционального типа в Котлин представлен списком типов параметров, разделенных запятой, затем оператором \u003Ccode\u003E-&gt;\u003C\u002Fcode\u003E и типом возвращаемого значения функции.\u003C\u002Fp\u003E\u003Cp\u003EПример функционального типа: \u003Ccode\u003E(a: Int, b: Int) -&gt; Int\u003C\u002Fcode\u003E\u003Cbr\u002F\u003E Здесь функциональный тип описывает функцию с двумя параметрами типа \u003Ccode\u003EInt\u003C\u002Fcode\u003E и возвращаемым значением типа \u003Ccode\u003EInt\u003C\u002Fcode\u003E.\u003C\u002Fp\u003E\u003Cp\u003EФункциональный тип может быть использован для создания переменных, которые могут хранить ссылки на функции. А также поддерживает перегрузку, что позволяет иметь несколько функций с различными сигнатурами, но с одинаковым именем.\u003C\u002Fp\u003E\u003Cp\u003E\u003Cstrong\u003EОграничения функционального типа:\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\u003Cul\u003E\u003Cli\u003E\u003Cp\u003EТип передаваемой функции должен быть определен явно, чтобы компилятор мог проверить типы аргументов и возвращаемых значений.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003EФункциональный тип может содержать только один тип возвращаемого значения.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003EФункциональный тип не может содержать более 22 параметров из-за ограничения JVM.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003EФункциональный тип не поддерживает неявные преобразования типов.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003C\u002Ful\u003E\u003Cp\u003EНесмотря на эти ограничения, функциональные типы позволяют обрабатывать функции как объекты, что повышает гибкость и выразительность кода. Пример определения функционального типа:\u003C\u002Fp\u003E\u003Cpre\u003E\u003Ccode class=\"kotlin\"\u003E\u002F\u002F определение функционального типа\ntypealias Operation = (Int, Int) -&gt; Int\n\n\u002F\u002F использование функционального типа\nfun calculate(op: Operation, a: Int, b: Int): Int {\n    return op(a, b)\n}\n\n\u002F\u002F пример вызова функции calculate\nval sum: Operation = { x, y -&gt; x + y }\ncalculate(sum, 10, 5)    \u002F\u002F результат: 15\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EКод из примера определяет функциональный тип \u003Ccode\u003EOperation\u003C\u002Fcode\u003E, который представляет собой функцию, принимающую два аргумента типа \u003Ccode\u003EInt\u003C\u002Fcode\u003E и возвращающую значение типа \u003Ccode\u003EInt\u003C\u002Fcode\u003E. Затем создается функция \u003Ccode\u003Ecalculate\u003C\u002Fcode\u003E, которая принимает три параметра: функцию \u003Ccode\u003Eop\u003C\u002Fcode\u003E типа \u003Ccode\u003EOperation\u003C\u002Fcode\u003E и два аргумента типа \u003Ccode\u003EInt\u003C\u002Fcode\u003E. Внутри функции \u003Ccode\u003Ecalculate\u003C\u002Fcode\u003E вызывается переданная функция \u003Ccode\u003Eop\u003C\u002Fcode\u003E с переданными аргументами \u003Ccode\u003Ea\u003C\u002Fcode\u003E и \u003Ccode\u003Eb\u003C\u002Fcode\u003E, и результат возвращается из функции \u003Ccode\u003Ecalculate\u003C\u002Fcode\u003E. В конце кода создается переменная \u003Ccode\u003Esum\u003C\u002Fcode\u003E, которая содержит лямбда-выражение, реализующее операцию сложения. Далее вызывается функция \u003Ccode\u003Ecalculate\u003C\u002Fcode\u003E с параметрами \u003Ccode\u003Esum\u003C\u002Fcode\u003E, \u003Ccode\u003E10\u003C\u002Fcode\u003E и \u003Ccode\u003E5\u003C\u002Fcode\u003E, что приводит к вызову функции \u003Ccode\u003Esum\u003C\u002Fcode\u003E с аргументами \u003Ccode\u003E10\u003C\u002Fcode\u003E и \u003Ccode\u003E5\u003C\u002Fcode\u003E, и результатом является число \u003Ccode\u003E15\u003C\u002Fcode\u003E.\u003C\u002Fp\u003E\u003Cp\u003E\u003Cstrong\u003EПодробнее:\u003C\u002Fstrong\u003E \u003Ca href=\"https:\u002F\u002Fkotlinlang.ru\u002Fdocs\u002Flambdas.html#function-types\" rel=\"noopener noreferrer nofollow\"\u003Ekotlinlang.ru\u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003Ca class=\"anchor\" name=\"%D0%9A%D0%B0%D0%BA%20%D1%80%D0%B0%D0%B1%D0%BE%D1%82%D0%B0%D1%8E%D1%82%20SAM-conversions?\" id=\"Как работают SAM-conversions?\"\u003E\u003C\u002Fa\u003E\u003Cp\u003E\u003Ca href=\"#%D0%A1%D0%BF%D0%B8%D1%81%D0%BE%D0%BA%20%D1%82%D0%B5%D0%BC%20%D0%B8%20%D0%B2%D0%BE%D0%BF%D1%80%D0%BE%D1%81%D0%BE%D0%B2\" rel=\"noopener noreferrer nofollow\"\u003E—————— ↑↑↑ к списку вопросов ↑↑↑ ——————\u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003Ch2\u003EКак работают SAM-conversions?\u003C\u002Fh2\u003E\u003Cp\u003E\u003Cstrong\u003ESingle Abstract Method (SAM)\u003C\u002Fstrong\u003E интерфейсы — это интерфейсы только с одним абстрактным методом (функциональные интерфейсы). Kotlin поддерживает соглашение SAM — автоматическую конвертацию функций и lambda между Kotlin и Java.\u003C\u002Fp\u003E\u003Cp\u003ESAM-conversions позволяют использовать Java-интерфейсы с единственным абстрактным методом в Kotlin, как если бы это были функциональные типы. В Kotlin вы можете использовать такие интерфейсы для создания лямбда-выражений без явного определения функционального типа.\u003C\u002Fp\u003E\u003Cp\u003EПри использовании интерфейса с единственным абстрактным методом в качестве функционального интерфейса в Java, вы можете передавать его экземпляры вместо лямбда-выражений. Это тоже возможно в Kotlin, но на самом деле Kotlin предоставляет более простой синтаксис для этого. Когда вам нужно использовать функциональный интерфейс в Kotlin, вы можете передать lambda-выражение, которое соответствует сигнатуре единственного метода интерфейса, вместо экземпляра интерфейса. Компилятор сам преобразует лямбда-выражение в экземпляр интерфейса, используя функцию-расширение метода \u003Ccode\u003Einvoke\u003C\u002Fcode\u003E интерфейса. Пример:\u003C\u002Fp\u003E\u003Cpre\u003E\u003Ccode class=\"kotlin\"\u003Einterface OnClickListener {\n    fun onClick(view: View)\n}\n\nclass Button {\n    fun setOnClickListener(listener: OnClickListener) {\n        \u002F\u002F ...\n    }\n}\n\nval button = Button()\nbutton.setOnClickListener { view -&gt; \n    \u002F\u002F обработка нажатия кнопки\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EВ этом примере мы определяем интерфейс \u003Ccode\u003EOnClickListener\u003C\u002Fcode\u003E с единственным абстрактным методом \u003Ccode\u003EonClick\u003C\u002Fcode\u003E. Затем мы создаем класс \u003Ccode\u003EButton\u003C\u002Fcode\u003E, который может иметь слушатель, реализующий данный интерфейс. После этого мы создаем экземпляр \u003Ccode\u003EButton\u003C\u002Fcode\u003E и передаем лямбда-выражение с соответствующей сигнатурой в качестве слушателя. Компилятор автоматически преобразует это лямбда-выражение в экземпляр интерфейса \u003Ccode\u003EOnClickListener\u003C\u002Fcode\u003E, используя функцию-расширение \u003Ccode\u003Einvoke\u003C\u002Fcode\u003E интерфейса.\u003C\u002Fp\u003E\u003Cp\u003E\u003Cstrong\u003EПодробнее:\u003C\u002Fstrong\u003E \u003Ca href=\"https:\u002F\u002Fkotlinlang.ru\u002Fdocs\u002Ffun-interfaces.html\" rel=\"noopener noreferrer nofollow\"\u003Ekotlinlang.ru\u003C\u002Fa\u003E, \u003Ca href=\"https:\u002F\u002Fhr-vector.com\u002Fkotlin\u002Fsam-preobrazovaniya-v-kotlin\" rel=\"noopener noreferrer nofollow\"\u003Ehr-vector.com\u003C\u002Fa\u003E, \u003Ca href=\"https:\u002F\u002Fcoderlessons.com\u002Farticles\u002Fmobilnaia-razrabotka-articles\u002Fsovet-pishite-bolee-chistyi-kod-s-pomoshchiu-kotlin-sam-conversions\" rel=\"noopener noreferrer nofollow\"\u003Ecoderlessons.com\u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003Ca class=\"anchor\" name=\"%D0%A3%D0%BA%D0%B0%D0%B7%D0%B0%D1%82%D0%B5%D0%BB%D0%B8%20%D0%BD%D0%B0%20%D1%84%D1%83%D0%BD%D0%BA%D1%86%D0%B8%D0%B8%20(Function%20references,%20Bound%20callable%20references)\" id=\"Указатели на функции (Function references, Bound callable references)\"\u003E\u003C\u002Fa\u003E\u003Cp\u003E\u003Ca href=\"#%D0%A1%D0%BF%D0%B8%D1%81%D0%BE%D0%BA%20%D1%82%D0%B5%D0%BC%20%D0%B8%20%D0%B2%D0%BE%D0%BF%D1%80%D0%BE%D1%81%D0%BE%D0%B2\" rel=\"noopener noreferrer nofollow\"\u003E—————— ↑↑↑ к списку вопросов ↑↑↑ ——————\u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003Ch2\u003EУказатели на функции (Function references, Bound callable references)\u003C\u002Fh2\u003E\u003Cp\u003EВ языке Kotlin есть возможность работать с функциями как с объектами. Функции можно сохранять в переменные, передавать как аргументы и возвращать из других функций. Для этого можно использовать \u003Cstrong\u003Eфункциональные ссылки (Function references)\u003C\u002Fstrong\u003E, которые представляют собой \u003Cstrong\u003Eуказатель на функцию\u003C\u002Fstrong\u003E.\u003C\u002Fp\u003E\u003Cp\u003E\u003Cstrong\u003E1. Function references\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\u003Cp\u003EСинтаксис функциональной ссылки имеет следующий вид: \u003Ccode\u003E::function_name\u003C\u002Fcode\u003E. Указатели на функции представляют собой \u003Cstrong\u003Eсокращенную форму записи вызова функции\u003C\u002Fstrong\u003E. Вместо того, чтобы объявлять лямбда-выражение и передавать его как аргумент функции, можно использовать ссылку на существующий метод. Например, у нас есть класс \u003Ccode\u003EPerson\u003C\u002Fcode\u003E с методом \u003Ccode\u003EgetName()\u003C\u002Fcode\u003E:\u003C\u002Fp\u003E\u003Cpre\u003E\u003Ccode class=\"kotlin\"\u003Eclass Person(val name: String) {\n    fun getName(): String = name\n}\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EТогда мы можем использовать указатель на метод \u003Ccode\u003EgetName()\u003C\u002Fcode\u003E вместо лямбда-выражения:\u003C\u002Fp\u003E\u003Cpre\u003E\u003Ccode class=\"kotlin\"\u003Eval persons = listOf(Person(\"Alice\"), Person(\"Bob\"))\nval names = persons.map(Person::getName)\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003E\u003Cstrong\u003E2. Bound callable references\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\u003Cp\u003E\u003Cstrong\u003EBound callable references (привязанные ссылки)\u003C\u002Fstrong\u003E — это то же самое понятие, что и указатели на методы, но в случае, когда метод вызывается \u003Cstrong\u003Eна экземпляре класса\u003C\u002Fstrong\u003E. В этом варианте мы можем использовать ссылку на метод, связанную с конкретным экземпляром класса. Для создания привязанной ссылки на метод используется следующий синтаксис: \u003Ccode\u003E&lt;object_name&gt;::&lt;method_name&gt;\u003C\u002Fcode\u003E.\u003C\u002Fp\u003E\u003Cp\u003EДопустим, что у нас есть экземпляр класса \u003Ccode\u003Eperson\u003C\u002Fcode\u003E типа \u003Ccode\u003EPerson\u003C\u002Fcode\u003E. Тогда мы можем использовать ссылку на метод \u003Ccode\u003EgetName()\u003C\u002Fcode\u003E для получения его имени:\u003C\u002Fp\u003E\u003Cpre\u003E\u003Ccode class=\"kotlin\"\u003Eval person = Person(\"Alice\")\nval name = person::getName\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EЗдесь \u003Ccode\u003Ename\u003C\u002Fcode\u003E будет ссылаться на метод \u003Ccode\u003EgetName()\u003C\u002Fcode\u003E объекта \u003Ccode\u003Eperson\u003C\u002Fcode\u003E.\u003C\u002Fp\u003E\u003Ca class=\"anchor\" name=\"%D0%A4%D1%83%D0%BD%D0%BA%D1%86%D0%B8%D0%B8%20%D0%BE%D0%B1%D0%BB%D0%B0%D1%81%D1%82%D0%B8%20%D0%B2%D0%B8%D0%B4%D0%B8%D0%BC%D0%BE%D1%81%D1%82%D0%B8%20(Scope%20Functions)%20%E2%80%94%20let,%20run,%20with,%20apply,%20also\" id=\"Функции области видимости (Scope Functions) — let, run, with, apply, also\"\u003E\u003C\u002Fa\u003E\u003Cp\u003E\u003Ca href=\"#%D0%A1%D0%BF%D0%B8%D1%81%D0%BE%D0%BA%20%D1%82%D0%B5%D0%BC%20%D0%B8%20%D0%B2%D0%BE%D0%BF%D1%80%D0%BE%D1%81%D0%BE%D0%B2\" rel=\"noopener noreferrer nofollow\"\u003E—————— ↑↑↑ к списку вопросов ↑↑↑ ——————\u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003Ch2\u003EФункции области видимости (Scope Functions) — let, run, with, apply, also\u003C\u002Fh2\u003E\u003Cp\u003EВ Kotlin есть 5 функций: \u003Ccode\u003Elet, run, with, apply, also\u003C\u002Fcode\u003E, объединенных общим названием \u003Cstrong\u003EScope Function\u003C\u002Fstrong\u003E (функции области видимости). Все они используются для одной цели — выполнить какой-то блок кода для конкретного объекта. При вызове подобной функции создается временная область видимости. В этой области видимости можно обращаться к объекту без использования его имени.\u003C\u002Fp\u003E\u003Cp\u003EВ основном эти 5 функций отличаются только 2 параметрами:\u003C\u002Fp\u003E\u003Cul\u003E\u003Cli\u003E\u003Cp\u003Eспособ ссылки на контекстный объект (\u003Ccode\u003Ethis\u003C\u002Fcode\u003E или \u003Ccode\u003Eit\u003C\u002Fcode\u003E)\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003Eвозвращаемое значение (объект контекста или результат лямбды)\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003C\u002Ful\u003E\u003Cp\u003E\u003Cstrong\u003E1. Способ ссылки на объект\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\u003Cp\u003EВнутри лямбда-выражения, которое передается функции области видимости, объект контекста доступен по краткой ссылке, а не по его фактическому имени. Каждая функция области видимости использует один из двух способов доступа к объекту контекста: как лямбда-получатель (\u003Ccode\u003Ethis\u003C\u002Fcode\u003E) или как лямбда-аргумент (\u003Ccode\u003Eit\u003C\u002Fcode\u003E).\u003C\u002Fp\u003E\u003Cp\u003EРазличие между \u003Ccode\u003Ethis\u003C\u002Fcode\u003E и \u003Ccode\u003Eit\u003C\u002Fcode\u003E заключается в том, что:\u003C\u002Fp\u003E\u003Cul\u003E\u003Cli\u003E\u003Cp\u003E\u003Ccode\u003Ethis\u003C\u002Fcode\u003E используется, когда мы работаем \u003Cstrong\u003Eс объектом\u003C\u002Fstrong\u003E, на котором вызывается функция (\u003Ccode\u003Erun\u003C\u002Fcode\u003E, \u003Ccode\u003Ewith\u003C\u002Fcode\u003E и \u003Ccode\u003Eapply\u003C\u002Fcode\u003E)\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003E\u003Ccode\u003Eit\u003C\u002Fcode\u003E используется, когда мы работаем \u003Cstrong\u003Eс аргументом\u003C\u002Fstrong\u003E, переданным в функцию (\u003Ccode\u003Elet\u003C\u002Fcode\u003E и \u003Ccode\u003Ealso\u003C\u002Fcode\u003E)\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003C\u002Ful\u003E\u003Cp\u003EОбычно \u003Ccode\u003Ethis\u003C\u002Fcode\u003E используется для установки свойств или вызова методов объектов, а \u003Ccode\u003Eit\u003C\u002Fcode\u003E — для выполнения операций с аргументами.\u003C\u002Fp\u003E\u003Cp\u003E\u003Cstrong\u003E2. Возвращаемое значение\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\u003Cp\u003EФункции области видимости также отличаются по значению, которое они возвращают:\u003C\u002Fp\u003E\u003Cul\u003E\u003Cli\u003E\u003Cp\u003E\u003Ccode\u003Eapply\u003C\u002Fcode\u003E и \u003Ccode\u003Ealso\u003C\u002Fcode\u003E возвращают \u003Cstrong\u003Eобъект контекста\u003C\u002Fstrong\u003E. Это позволяет использовать эти функции для создания цепочек вызовов методов и свойств объекта.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003E\u003Ccode\u003Elet\u003C\u002Fcode\u003E, \u003Ccode\u003Erun\u003C\u002Fcode\u003E и \u003Ccode\u003Ewith\u003C\u002Fcode\u003E возвращают \u003Cstrong\u003Eрезультат лямбды\u003C\u002Fstrong\u003E. Результат может быть использован для сохранения в переменную или передачи в дальнейшую цепочку вызовов.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003C\u002Ful\u003E\u003Ch3\u003EШпаргалка по выбору функции\u003C\u002Fh3\u003E\u003Cdiv\u003E\u003Cdiv class=\"table\"\u003E\u003Ctable\u003E\u003Ctbody\u003E\u003Ctr\u003E\u003Cth\u003E\u003Cp\u003EФункция\u003C\u002Fp\u003E\u003C\u002Fth\u003E\u003Cth\u003E\u003Cp\u003EСсылка на объект\u003C\u002Fp\u003E\u003C\u002Fth\u003E\u003Cth\u003E\u003Cp\u003EВозвращаемое значение\u003C\u002Fp\u003E\u003C\u002Fth\u003E\u003Cth\u003E\u003Cp\u003EЯвляется функцией-расширением\u003C\u002Fp\u003E\u003C\u002Fth\u003E\u003C\u002Ftr\u003E\u003Ctr\u003E\u003Ctd\u003E\u003Cp align=\"left\"\u003Elet\u003C\u002Fp\u003E\u003C\u002Ftd\u003E\u003Ctd\u003E\u003Cp align=\"left\"\u003Eit\u003C\u002Fp\u003E\u003C\u002Ftd\u003E\u003Ctd\u003E\u003Cp align=\"left\"\u003EРезультат лямбды\u003C\u002Fp\u003E\u003C\u002Ftd\u003E\u003Ctd\u003E\u003Cp align=\"left\"\u003EДа\u003C\u002Fp\u003E\u003C\u002Ftd\u003E\u003C\u002Ftr\u003E\u003Ctr\u003E\u003Ctd\u003E\u003Cp align=\"left\"\u003Erun\u003C\u002Fp\u003E\u003C\u002Ftd\u003E\u003Ctd\u003E\u003Cp align=\"left\"\u003Ethis\u003C\u002Fp\u003E\u003C\u002Ftd\u003E\u003Ctd\u003E\u003Cp align=\"left\"\u003EРезультат лямбды\u003C\u002Fp\u003E\u003C\u002Ftd\u003E\u003Ctd\u003E\u003Cp align=\"left\"\u003EДа\u003C\u002Fp\u003E\u003C\u002Ftd\u003E\u003C\u002Ftr\u003E\u003Ctr\u003E\u003Ctd\u003E\u003Cp align=\"left\"\u003Erun\u003C\u002Fp\u003E\u003C\u002Ftd\u003E\u003Ctd\u003E\u003Cp align=\"left\"\u003E-\u003C\u002Fp\u003E\u003C\u002Ftd\u003E\u003Ctd\u003E\u003Cp align=\"left\"\u003EРезультат лямбды\u003C\u002Fp\u003E\u003C\u002Ftd\u003E\u003Ctd\u003E\u003Cp align=\"left\"\u003EНет: может быть вызвана без объекта\u003C\u002Fp\u003E\u003C\u002Ftd\u003E\u003C\u002Ftr\u003E\u003Ctr\u003E\u003Ctd\u003E\u003Cp align=\"left\"\u003Ewith\u003C\u002Fp\u003E\u003C\u002Ftd\u003E\u003Ctd\u003E\u003Cp align=\"left\"\u003Ethis\u003C\u002Fp\u003E\u003C\u002Ftd\u003E\u003Ctd\u003E\u003Cp align=\"left\"\u003EРезультат лямбды\u003C\u002Fp\u003E\u003C\u002Ftd\u003E\u003Ctd\u003E\u003Cp align=\"left\"\u003EНет: принимает объект в качестве аргумента\u003C\u002Fp\u003E\u003C\u002Ftd\u003E\u003C\u002Ftr\u003E\u003Ctr\u003E\u003Ctd\u003E\u003Cp align=\"left\"\u003Eapply\u003C\u002Fp\u003E\u003C\u002Ftd\u003E\u003Ctd\u003E\u003Cp align=\"left\"\u003Ethis\u003C\u002Fp\u003E\u003C\u002Ftd\u003E\u003Ctd\u003E\u003Cp align=\"left\"\u003EКонтекстный объект\u003C\u002Fp\u003E\u003C\u002Ftd\u003E\u003Ctd\u003E\u003Cp align=\"left\"\u003EДа\u003C\u002Fp\u003E\u003C\u002Ftd\u003E\u003C\u002Ftr\u003E\u003Ctr\u003E\u003Ctd\u003E\u003Cp align=\"left\"\u003Ealso\u003C\u002Fp\u003E\u003C\u002Ftd\u003E\u003Ctd\u003E\u003Cp align=\"left\"\u003Eit\u003C\u002Fp\u003E\u003C\u002Ftd\u003E\u003Ctd\u003E\u003Cp align=\"left\"\u003EКонтекстный объект\u003C\u002Fp\u003E\u003C\u002Ftd\u003E\u003Ctd\u003E\u003Cp align=\"left\"\u003EДа\u003C\u002Fp\u003E\u003C\u002Ftd\u003E\u003C\u002Ftr\u003E\u003C\u002Ftbody\u003E\u003C\u002Ftable\u003E\u003C\u002Fdiv\u003E\u003C\u002Fdiv\u003E\u003Cp\u003EЕсли таблицы недостаточно:\u003C\u002Fp\u003E\u003Cul\u003E\u003Cli\u003E\u003Cp\u003EВыполнить блок кода для значения, отличного от null - \u003Ccode\u003Elet\u003C\u002Fcode\u003E.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003EИспользовать результат выполнения цепочки вызовов - \u003Ccode\u003Elet\u003C\u002Fcode\u003E.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003EИнициализация и настройка объекта - \u003Ccode\u003Eapply\u003C\u002Fcode\u003E.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003EНастройка объекта и получение результата выполнения операций - \u003Ccode\u003Erun\u003C\u002Fcode\u003E.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003EВыполнение операций, для которых требуется временная область видимости - \u003Ccode\u003Erun\u003C\u002Fcode\u003E без субъекта вызова.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003EДобавление объекту дополнительных значений - \u003Ccode\u003Ealso\u003C\u002Fcode\u003E.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003EГруппировка всех функций, вызываемых для объекта: \u003Ccode\u003Ewith\u003C\u002Fcode\u003E.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003C\u002Ful\u003E\u003Cp\u003EВсе функции области видимости являются \u003Ccode\u003Einline\u003C\u002Fcode\u003E, то есть их тело вставляется в место, где они вызываются, что позволяет исключить накладные расходы на вызов метода.\u003C\u002Fp\u003E\u003Cp\u003E\u003Cstrong\u003EПодробнее:\u003C\u002Fstrong\u003E \u003Ca href=\"https:\u002F\u002Fmetanit.com\u002Fkotlin\u002Ftutorial\u002F5.7.php\" rel=\"noopener noreferrer nofollow\"\u003Emetanit.com\u003C\u002Fa\u003E, \u003Ca href=\"https:\u002F\u002Fbimlibik.github.io\u002Fposts\u002Fkotlin-scope-functions\u002F\" rel=\"noopener noreferrer nofollow\"\u003Ebimlibik.github.io\u003C\u002Fa\u003E, \u003Ca href=\"https:\u002F\u002Fkotlinlang.ru\u002Fdocs\u002Freference\u002Fscope-functions.html\" rel=\"noopener noreferrer nofollow\"\u003Ekotlinlang.ru\u003C\u002Fa\u003E, \u003Ca href=\"https:\u002F\u002Fhabr.com\u002Fru\u002Fpost\u002F580186\u002F\" rel=\"noopener noreferrer nofollow\"\u003Ehabr.com\u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003Ca class=\"anchor\" name=\"%D0%A7%D1%82%D0%BE%20%D1%82%D0%B0%D0%BA%D0%BE%D0%B5%20inline%20%D1%84%D1%83%D0%BD%D0%BA%D1%86%D0%B8%D0%B8,%20%D0%B2%20%D1%87%D0%B5%D0%BC%20%D0%B8%D1%85%20%D0%BF%D1%80%D0%B5%D0%B8%D0%BC%D1%83%D1%89%D0%B5%D1%81%D1%82%D0%B2%D0%BE?\" id=\"Что такое inline функции, в чем их преимущество?\"\u003E\u003C\u002Fa\u003E\u003Cp\u003E\u003Ca href=\"#%D0%A1%D0%BF%D0%B8%D1%81%D0%BE%D0%BA%20%D1%82%D0%B5%D0%BC%20%D0%B8%20%D0%B2%D0%BE%D0%BF%D1%80%D0%BE%D1%81%D0%BE%D0%B2\" rel=\"noopener noreferrer nofollow\"\u003E—————— ↑↑↑ к списку вопросов ↑↑↑ ——————\u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003Ch2\u003EЧто такое inline функции, в чем их преимущество?\u003C\u002Fh2\u003E\u003Cp\u003EВ Kotlin есть два типа функций: обычные и встроенные. Обычные функции похожи на функции в других языках программирования. Но встроенные функции имеют модификатор \u003Ccode\u003Einline\u003C\u002Fcode\u003E. Это позволяет компилятору подставить тело функции прямо в место её вызова.\u003C\u002Fp\u003E\u003Cp\u003E\u003Cstrong\u003EКак работают inline функции?\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\u003Cp\u003EИспользование анонимных функций (лямбда-выражений) в Kotlin приводит к дополнительным затратам памяти. При использовании лямбда-выражения создается объект \u003Ccode\u003EFunctionN\u003C\u002Fcode\u003E (где \u003Ccode\u003EN\u003C\u002Fcode\u003E — количество параметров в лямбда-выражении), который содержит ссылку на само лямбда-выражение и может содержать захваченные переменные. При передаче лямбда-выражения в качестве параметра метода также создается новый объект \u003Ccode\u003EFunctionN\u003C\u002Fcode\u003E, что приводит к дополнительным затратам памяти.\u003C\u002Fp\u003E\u003Cp\u003EПоэтому, чтобы избежать создания дополнительных объектов при передаче лямбда-выражений в функцию в качестве параметра, можно использовать встраивание (\u003Cstrong\u003Einline\u003C\u002Fstrong\u003E). Ключевое слово \u003Ccode\u003Einline\u003C\u002Fcode\u003E позволяет компилятору подставить тело функции непосредственно в место её вызова, вместо того, чтобы создавать объекты функций. Таким образом \u003Cstrong\u003Eможно уменьшить затраты на создание объектов и улучшить производительность приложения\u003C\u002Fstrong\u003E.\u003C\u002Fp\u003E\u003Cp\u003EПример синтаксиса inline-функций с лямбдой:\u003C\u002Fp\u003E\u003Cpre\u003E\u003Ccode class=\"kotlin\"\u003Einline fun functionName(parameter1: Type1, parameter2: Type2, ..., parameterN: TypeN, block: () -&gt; Unit): ReturnType {\n    \u002F\u002F function body\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EМодификатор \u003Ccode\u003Einline\u003C\u002Fcode\u003E влияет и на функцию, и на лямбду, переданную ей: они обе будут встроены в место вызова.\u003C\u002Fp\u003E\u003Cp\u003E\u003Cstrong\u003EПодробнее:\u003C\u002Fstrong\u003E \u003Ca href=\"https:\u002F\u002Fkotlinlang.ru\u002Fdocs\u002Freference\u002Finline-functions.html\" rel=\"noopener noreferrer nofollow\"\u003Ekotlinlang.ru\u003C\u002Fa\u003E, \u003Ca href=\"https:\u002F\u002Fbimlibik.github.io\u002Fposts\u002Fkotlin-inline-functions\u002F\" rel=\"noopener noreferrer nofollow\"\u003Ebimlibik.github.io\u003C\u002Fa\u003E, \u003Ca href=\"https:\u002F\u002Fmedium.com\u002F@manuchekhrdev\u002Fkotlin-inline-noinline-crossinline-reified-f70dd33f94a2\" rel=\"noopener noreferrer nofollow\"\u003Emedium.com\u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003Ca class=\"anchor\" name=\"%D0%9C%D0%BE%D0%B4%D0%B8%D1%84%D0%B8%D0%BA%D0%B0%D1%82%D0%BE%D1%80%20noinline\" id=\"Модификатор noinline\"\u003E\u003C\u002Fa\u003E\u003Cp\u003E\u003Ca href=\"#%D0%A1%D0%BF%D0%B8%D1%81%D0%BE%D0%BA%20%D1%82%D0%B5%D0%BC%20%D0%B8%20%D0%B2%D0%BE%D0%BF%D1%80%D0%BE%D1%81%D0%BE%D0%B2\" rel=\"noopener noreferrer nofollow\"\u003E—————— ↑↑↑ к списку вопросов ↑↑↑ ——————\u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003Ch2\u003EМодификатор noinline\u003C\u002Fh2\u003E\u003Cp\u003EЕсли же вы хотите, чтобы некоторые лямбды, переданные inline-функции, не были встроены, то отметьте их модификатором \u003Ccode\u003Enoinline\u003C\u002Fcode\u003E.\u003C\u002Fp\u003E\u003Cpre\u003E\u003Ccode class=\"kotlin\"\u003Einline fun foo(inlined: () -&gt; Unit, noinline notInlined: () -&gt; Unit) {\n    \u002F\u002F ...\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EРазница между ними в том, что встраиваемая лямбда может быть вызвана только внутри inline-функции, либо может быть передана в качестве встраиваемого аргумента. В то время как с noinline-функциями можно работать без ограничений: \u003Cstrong\u003Eхранить внутри полей, передавать куда-либо и т.д.\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\u003Ca class=\"anchor\" name=\"%D0%A7%D1%82%D0%BE%20%D1%82%D0%B0%D0%BA%D0%BE%D0%B5%20%D0%BD%D0%B5%D0%BB%D0%BE%D0%BA%D0%B0%D0%BB%D1%8C%D0%BD%D1%8B%D0%B9%20return?\" id=\"Что такое нелокальный return?\"\u003E\u003C\u002Fa\u003E\u003Cp\u003E\u003Ca href=\"#%D0%A1%D0%BF%D0%B8%D1%81%D0%BE%D0%BA%20%D1%82%D0%B5%D0%BC%20%D0%B8%20%D0%B2%D0%BE%D0%BF%D1%80%D0%BE%D1%81%D0%BE%D0%B2\" rel=\"noopener noreferrer nofollow\"\u003E—————— ↑↑↑ к списку вопросов ↑↑↑ ——————\u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003Ch2\u003EЧто такое нелокальный return?\u003C\u002Fh2\u003E\u003Cp\u003EВ Котлин \u003Cstrong\u003Enon-local return\u003C\u002Fstrong\u003E — это механизм, который позволяет выйти из внешней функции или лямбда-выражения и вернуться к вызывающему коду, обходя оставшуюся часть текущей функции или лямбда-выражения. Он работает по-разному в зависимости от того, является ли функция \u003Cstrong\u003Einline\u003C\u002Fstrong\u003E или \u003Cstrong\u003Eне-inline\u003C\u002Fstrong\u003E.\u003C\u002Fp\u003E\u003Cp\u003E\u003Cstrong\u003EВ не-inline функциях:\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\u003Cul\u003E\u003Cli\u003E\u003Cp\u003EЕсли внутри функции есть лямбда-выражение, non-local return из лямбда-выражения может привести к нелокальному завершению внешней функции.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003EДля использования non-local return внутри лямбда-выражения в не-inline функции, необходимо использовать метку (label) и оператор \u003Ccode\u003Ereturn@label\u003C\u002Fcode\u003E.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003C\u002Ful\u003E\u003Cp\u003E\u003Cstrong\u003EВ inline-функциях:\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\u003Cul\u003E\u003Cli\u003E\u003Cp\u003EВ inline-функциях, лямбда-выражения становятся частью кода функции и имеют локальный контроль над потоком управления.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003EОператор \u003Ccode\u003Ereturn\u003C\u002Fcode\u003E внутри лямбда-выражения в inline-функции приведет только к завершению самого лямбда-выражения, не влияя на внешнюю функцию.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003C\u002Ful\u003E\u003Ca class=\"anchor\" name=\"%D0%9A%D0%B0%D0%BA%20%D1%80%D0%B0%D0%B1%D0%BE%D1%82%D0%B0%D0%B5%D1%82%20%D0%BC%D0%BE%D0%B4%D0%B8%D1%84%D0%B8%D0%BA%D0%B0%D1%82%D0%BE%D1%80%20crossinline?\" id=\"Как работает модификатор crossinline?\"\u003E\u003C\u002Fa\u003E\u003Cp\u003E\u003Ca href=\"#%D0%A1%D0%BF%D0%B8%D1%81%D0%BE%D0%BA%20%D1%82%D0%B5%D0%BC%20%D0%B8%20%D0%B2%D0%BE%D0%BF%D1%80%D0%BE%D1%81%D0%BE%D0%B2\" rel=\"noopener noreferrer nofollow\"\u003E—————— ↑↑↑ к списку вопросов ↑↑↑ ——————\u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003Ch2\u003EКак работает модификатор crossinline?\u003C\u002Fh2\u003E\u003Cp\u003E\u003Cstrong\u003Ecrossinline\u003C\u002Fstrong\u003E — ключевое слово, которое используется для указания, что лямбда-выражение \u003Cstrong\u003Eне может содержать нелокальных \u003C\u002Fstrong\u003E\u003Ccode\u003Ereturn\u003C\u002Fcode\u003E, даже если оно передано в inline-функцию.\u003C\u002Fp\u003E\u003Cp\u003EКогда мы передаем лямбда-выражение в функцию в качестве параметра, мы можем использовать оператор \u003Ccode\u003Ereturn\u003C\u002Fcode\u003E внутри лямбды, чтобы выйти из цикла или функции, в которой вызывается лямбда. Однако, если мы передаем лямбда-выражение в inline-функцию, код лямбда-выражения может быть вставлен прямо в место вызова функции. В этом случае, если в лямбде используется оператор \u003Ccode\u003Ereturn\u003C\u002Fcode\u003E, это может привести к выходу из внешней функции, что не всегда желательно.\u003C\u002Fp\u003E\u003Ca class=\"anchor\" name=\"%D0%9A%D0%BE%D0%B3%D0%B4%D0%B0%20%D0%BD%D1%83%D0%B6%D0%BD%D0%BE%20%D0%B8%D1%81%D0%BF%D0%BE%D0%BB%D1%8C%D0%B7%D0%BE%D0%B2%D0%B0%D1%82%D1%8C%20crossinline,%20%D0%B0%20%D0%BA%D0%BE%D0%B3%D0%B4%D0%B0%20noinline?\" id=\"Когда нужно использовать crossinline, а когда noinline?\"\u003E\u003C\u002Fa\u003E\u003Cp\u003E\u003Ca href=\"#%D0%A1%D0%BF%D0%B8%D1%81%D0%BE%D0%BA%20%D1%82%D0%B5%D0%BC%20%D0%B8%20%D0%B2%D0%BE%D0%BF%D1%80%D0%BE%D1%81%D0%BE%D0%B2\" rel=\"noopener noreferrer nofollow\"\u003E—————— ↑↑↑ к списку вопросов ↑↑↑ ——————\u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003Ch2\u003EКогда нужно использовать crossinline, а когда noinline?\u003C\u002Fh2\u003E\u003Cp\u003EМодификаторы \u003Ccode\u003Ecrossinline\u003C\u002Fcode\u003E и \u003Ccode\u003Enoinline\u003C\u002Fcode\u003E используются для управления поведением лямбда-выражений, переданных в качестве параметров функций. Они позволяют указывать, может ли лямбда-выражение содержать операторы \u003Ccode\u003Ereturn\u003C\u002Fcode\u003E.\u003C\u002Fp\u003E\u003Cul\u003E\u003Cli\u003E\u003Cp\u003EМодификатор \u003Ccode\u003Ecrossinline\u003C\u002Fcode\u003E используется для указания того, что лямбда-выражение \u003Cstrong\u003Eне может содержать операторы \u003C\u002Fstrong\u003E\u003Ccode\u003Ereturn\u003C\u002Fcode\u003E, даже если функция, принимающая лямбда-выражение, инлайновая.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003EМодификатор \u003Ccode\u003Enoinline\u003C\u002Fcode\u003E, с другой стороны, указывает на то, что лямбда-выражение может быть сохранено как объект функции, а не выполнено внутри вызывающей функции. Это может быть полезно в случае, когда вы хотите использовать лямбда-выражение где-то ещё, например, как параметр для другой функции.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003C\u002Ful\u003E\u003Cp\u003E\u003Cstrong\u003EВЫВОД:\u003C\u002Fstrong\u003E \u003Ccode\u003Ecrossinline\u003C\u002Fcode\u003E должен использоваться только тогда, когда вы уверены в том, что оператор \u003Ccode\u003Ereturn\u003C\u002Fcode\u003E \u003Cstrong\u003Eне будет использоваться\u003C\u002Fstrong\u003E внутри лямбда-выражения. Если лямбда-выражение должно содержать оператор \u003Ccode\u003Ereturn\u003C\u002Fcode\u003E, то следует использовать ключевое слово \u003Ccode\u003Enoinline\u003C\u002Fcode\u003E вместо \u003Ccode\u003Ecrossinline\u003C\u002Fcode\u003E.\u003C\u002Fp\u003E\u003Ca class=\"anchor\" name=\"%D0%9A%D0%BB%D1%8E%D1%87%D0%B5%D0%B2%D0%BE%D0%B5%20%D1%81%D0%BB%D0%BE%D0%B2%D0%BE%20reified\" id=\"Ключевое слово reified\"\u003E\u003C\u002Fa\u003E\u003Cp\u003E\u003Ca href=\"#%D0%A1%D0%BF%D0%B8%D1%81%D0%BE%D0%BA%20%D1%82%D0%B5%D0%BC%20%D0%B8%20%D0%B2%D0%BE%D0%BF%D1%80%D0%BE%D1%81%D0%BE%D0%B2\" rel=\"noopener noreferrer nofollow\"\u003E—————— ↑↑↑ к списку вопросов ↑↑↑ ——————\u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003Ch2\u003EКлючевое слово reified\u003C\u002Fh2\u003E\u003Cp\u003E\u003Cstrong\u003Ereified\u003C\u002Fstrong\u003E — это ключевое слово, которое может быть использовано \u003Cstrong\u003Eтолько в inline-функциях\u003C\u002Fstrong\u003E. \u003Ccode\u003Ereified\u003C\u002Fcode\u003E позволяет получить информацию о типе generic-параметра во время выполнения программы. В обычном случае, информация о типах стирается и недоступна во время выполнения, но с помощью \u003Ccode\u003Ereified\u003C\u002Fcode\u003E можно сохранять эту информацию и использовать в других частях приложения.\u003C\u002Fp\u003E\u003Cp\u003EНесколько простых примеров применения:\u003C\u002Fp\u003E\u003Cp\u003E\u003Cstrong\u003E1. Получить доступ к типу параметра во время выполнения\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\u003Cpre\u003E\u003Ccode class=\"kotlin\"\u003Efun main() {\n    printType&lt;String&gt;()    \u002F\u002F String\n    printType&lt;Int&gt;()       \u002F\u002F Int\n}\n\nprivate inline fun &lt;reified T&gt; printType() {\n    println(T::class.simpleName)\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EВ этом примере мы определяем функцию \u003Ccode\u003EprintType()\u003C\u002Fcode\u003E с типовым параметром \u003Ccode\u003ET\u003C\u002Fcode\u003E, который мы указываем с помощью \u003Ccode\u003Ereified\u003C\u002Fcode\u003E. Внутри функции мы можем получить тип \u003Ccode\u003ET\u003C\u002Fcode\u003E во время выполнения, используя \u003Ccode\u003ET::class\u003C\u002Fcode\u003E. Затем выводим название типа на экран с помощью \u003Ccode\u003EsimpleName\u003C\u002Fcode\u003E. Когда мы вызываем функцию \u003Ccode\u003EprintType()\u003C\u002Fcode\u003E с типом \u003Ccode\u003EString\u003C\u002Fcode\u003E или \u003Ccode\u003EInt\u003C\u002Fcode\u003E, она выводит соответствующий тип на экран.\u003C\u002Fp\u003E\u003Cp\u003E\u003Cstrong\u003E2. \u003C\u002Fstrong\u003E\u003Ccode\u003Ereified\u003C\u002Fcode\u003E вместе с \u003Ccode\u003Eis\u003C\u002Fcode\u003E для проверки типа аргумента во время выполнения\u003C\u002Fp\u003E\u003Cpre\u003E\u003Ccode class=\"kotlin\"\u003Efun main() {\n    println(isOfType&lt;Int&gt;(1))          \u002F\u002F true\n    println(isOfType&lt;Int&gt;(\"Hello\"))    \u002F\u002F false\n}\n\nprivate inline fun &lt;reified T&gt; isOfType(value: Any): Boolean {\n    return value is T\n}\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EЗдесь мы определяем функцию \u003Ccode\u003EisOfType()\u003C\u002Fcode\u003E, которая принимает значение типа \u003Ccode\u003EAny\u003C\u002Fcode\u003E и возвращает \u003Ccode\u003Etrue\u003C\u002Fcode\u003E, если оно является типом \u003Ccode\u003ET\u003C\u002Fcode\u003E. Мы используем \u003Ccode\u003Ereified\u003C\u002Fcode\u003E, чтобы получить доступ к типу \u003Ccode\u003ET\u003C\u002Fcode\u003E во время выполнения. Затем мы используем оператор \u003Ccode\u003Eis\u003C\u002Fcode\u003E для проверки типа значения и возвращаем соответствующее boolean значение.\u003C\u002Fp\u003E\u003Cp\u003E\u003Cstrong\u003E3. Получить список элементов перечисления\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\u003Cpre\u003E\u003Ccode class=\"kotlin\"\u003Eenum class Color { RED, GREEN, BLUE }\n\nfun main() {\n    printEnumValues&lt;Color&gt;()    \u002F\u002F RED, GREEN, BLUE\n}\n\nprivate inline fun &lt;reified T : Enum&lt;T&gt;&gt; printEnumValues() {\n    enumValues&lt;T&gt;().forEach { value -&gt;\n        println(value)\n    }\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EОпределяем функцию \u003Ccode\u003EprintEnumValues()\u003C\u002Fcode\u003E, которая выводит список элементов перечисления типа \u003Ccode\u003ET\u003C\u002Fcode\u003E. Мы применяем \u003Ccode\u003Ereified\u003C\u002Fcode\u003E, чтобы получить доступ к типу \u003Ccode\u003ET\u003C\u002Fcode\u003E во время выполнения. Затем используем \u003Ccode\u003EenumValues&lt;T&gt;()\u003C\u002Fcode\u003E, чтобы получить список всех значений перечисления типа \u003Ccode\u003ET\u003C\u002Fcode\u003E. Внутри цикла выводим каждое значение на экран. Когда мы вызываем функцию \u003Ccode\u003EprintEnumValues()\u003C\u002Fcode\u003E с типом \u003Ccode\u003EColor\u003C\u002Fcode\u003E, она выводит \"RED\", \"GREEN\" и \"BLUE\" в консоль.\u003C\u002Fp\u003E\u003Ca class=\"anchor\" name=\"%D0%9F%D0%BE%D1%87%D0%B5%D0%BC%D1%83 reified %D0%B2%D0%BE%D0%B7%D0%BC%D0%BE%D0%B6%D0%BD%D0%BE%20%D0%B8%D1%81%D0%BF%D0%BE%D0%BB%D1%8C%D0%B7%D0%BE%D0%B2%D0%B0%D1%82%D1%8C%20%D1%82%D0%BE%D0%BB%D1%8C%D0%BA%D0%BE%20%D1%81%20inline-%D1%84%D1%83%D0%BD%D0%BA%D1%86%D0%B8%D1%8F%D0%BC%D0%B8?\" id=\"Почему reified возможно использовать только с inline-функциями?\"\u003E\u003C\u002Fa\u003E\u003Cp\u003E\u003Ca href=\"#%D0%A1%D0%BF%D0%B8%D1%81%D0%BE%D0%BA%20%D1%82%D0%B5%D0%BC%20%D0%B8%20%D0%B2%D0%BE%D0%BF%D1%80%D0%BE%D1%81%D0%BE%D0%B2\" rel=\"noopener noreferrer nofollow\"\u003E—————— ↑↑↑ к списку вопросов ↑↑↑ ——————\u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003Ch2\u003EПочему reified возможно использовать только с inline-функциями?\u003C\u002Fh2\u003E\u003Cp\u003EКлючевое слово \u003Ccode\u003Ereified\u003C\u002Fcode\u003E используется только с inline-функциями, т.к. оно позволяет получить доступ к информации о типе-параметре на этапе выполнения программы, что невозможно для обычных (non-inline) функций.\u003C\u002Fp\u003E\u003Cp\u003Einline-функции в Kotlin позволяют копировать тело функции непосредственно в вызывающий код. Это позволяет избежать накладных расходов на создание объектов и вызовы функций при каждом вызове.\u003C\u002Fp\u003E\u003Cp\u003EИменно \u003Ccode\u003Ereified\u003C\u002Fcode\u003E в комбинации с \u003Ccode\u003Einline\u003C\u002Fcode\u003E позволяет сохранить информацию о типе-параметре и передать ее внутрь функции в рантайме, что было бы невозможно без \u003Ccode\u003Einline\u003C\u002Fcode\u003E.\u003C\u002Fp\u003E\u003Cp\u003EТакже стоит отметить, что ключевое слово \u003Ccode\u003Ereified\u003C\u002Fcode\u003E можно применять только с обобщенными типами (дженериками).\u003C\u002Fp\u003E\u003Ca class=\"anchor\" name=\"%D0%9F%D0%BE%D1%87%D0%B5%D0%BC%D1%83%20reified%20%D0%BC%D0%BE%D0%B6%D0%BD%D0%BE%20%D0%B8%D1%81%D0%BF%D0%BE%D0%BB%D1%8C%D0%B7%D0%BE%D0%B2%D0%B0%D1%82%D1%8C%20%D1%82%D0%BE%D0%BB%D1%8C%D0%BA%D0%BE%20%D1%81%20%D0%BE%D0%B1%D0%BE%D0%B1%D1%89%D0%B5%D0%BD%D0%BD%D1%8B%D0%BC%D0%B8%20%D1%82%D0%B8%D0%BF%D0%B0%D0%BC%D0%B8%20(generics)?\" id=\"Почему reified можно использовать только с обобщенными типами (generics)?\"\u003E\u003C\u002Fa\u003E\u003Cp\u003E\u003Ca href=\"#%D0%A1%D0%BF%D0%B8%D1%81%D0%BE%D0%BA%20%D1%82%D0%B5%D0%BC%20%D0%B8%20%D0%B2%D0%BE%D0%BF%D1%80%D0%BE%D1%81%D0%BE%D0%B2\" rel=\"noopener noreferrer nofollow\"\u003E—————— ↑↑↑ к списку вопросов ↑↑↑ ——————\u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003Ch2\u003EПочему reified можно использовать только с обобщенными типами (generics)?\u003C\u002Fh2\u003E\u003Cp\u003EКлючевое слово \u003Ccode\u003Ereified\u003C\u002Fcode\u003E в языке Kotlin можно использовать только с обобщенными типами, потому что оно предназначено для решения конкретной проблемы, связанной именно с дженериками.\u003C\u002Fp\u003E\u003Cp\u003EОдна из особенностей обобщенных типов заключается в том, что информация о типе становится недоступной на этапе выполнения программы. Вместо этого на этапе компиляции создается код, который работает с типом-параметром \"на уровне объекта\", то есть как с любым другим объектом, не зная его конкретного типа.\u003C\u002Fp\u003E\u003Cp\u003EИменно \u003Ccode\u003Ereified\u003C\u002Fcode\u003E позволяет сохранить информацию о типе-параметре \u003Cstrong\u003Eна этапе выполнения программы\u003C\u002Fstrong\u003E. И дает нам возможность проверять типы в рантайме, создавать объекты типа-параметра и передавать их в качестве параметров других функций.\u003C\u002Fp\u003E\u003Cp\u003EТаким образом, ключевое слово \u003Ccode\u003Ereified\u003C\u002Fcode\u003E \u003Cstrong\u003Eне имеет смысла применять к необобщенным типам\u003C\u002Fstrong\u003E, поскольку они уже доступны в качестве конкретных объектов на этапе выполнения.\u003C\u002Fp\u003E\u003Ca class=\"anchor\" name=\"%D0%9F%D0%BE%D1%87%D0%B5%D0%BC%D1%83%20%D0%BD%D0%B5%D0%BB%D1%8C%D0%B7%D1%8F%20%D0%B2%D1%81%D0%B5%20%D1%84%D1%83%D0%BD%D0%BA%D1%86%D0%B8%D0%B8%20%D1%81%D0%B4%D0%B5%D0%BB%D0%B0%D1%82%D1%8C%20inline?\" id=\"Почему нельзя все функции сделать inline?\"\u003E\u003C\u002Fa\u003E\u003Cp\u003E\u003Ca href=\"#%D0%A1%D0%BF%D0%B8%D1%81%D0%BE%D0%BA%20%D1%82%D0%B5%D0%BC%20%D0%B8%20%D0%B2%D0%BE%D0%BF%D1%80%D0%BE%D1%81%D0%BE%D0%B2\" rel=\"noopener noreferrer nofollow\"\u003E—————— ↑↑↑ к списку вопросов ↑↑↑ ——————\u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003Ch2\u003EПочему нельзя все функции сделать inline?\u003C\u002Fh2\u003E\u003Cp\u003EТехнически, можно попробовать сделать все функции \u003Ccode\u003Einline\u003C\u002Fcode\u003E. Однако, это может привести к ряду негативных последствий:\u003C\u002Fp\u003E\u003Cp\u003E\u003Cstrong\u003E1. Увеличение размера скомпилированного кода\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\u003Cp\u003EПоскольку inline-функции заменяются на их вызовы во время компиляции, это может привести к увеличению размера скомпилированного кода, особенно если функции содержат большой объем кода.\u003C\u002Fp\u003E\u003Cp\u003E\u003Cstrong\u003E2. Увеличение времени компиляции\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\u003Cp\u003Einline-функции могут увеличить время компиляции проекта, так как компилятору нужно заменить каждый вызов функции на ее код.\u003C\u002Fp\u003E\u003Cp\u003E\u003Cstrong\u003E3. Увеличение расхода памяти\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\u003Cp\u003EЕсли функции являются часто используемыми и содержат большой объем кода, использование inline-функций может привести к увеличению расхода памяти.\u003C\u002Fp\u003E\u003Cp\u003E\u003Cstrong\u003E4. Ограничения на использование лямбда-выражений\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\u003Cp\u003EПрименение inline-функций может ограничить возможности использования лямбда-выражений. Например, в inline-функциях нельзя использовать функции, которые не могут быть inlined, такие как protected-функции или функции из других модулей.\u003C\u002Fp\u003E\u003Cp\u003E\u003Cstrong\u003E5. Ограничения на использование рекурсии\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\u003Cp\u003EИспользование inline-функций может ограничить возможность использования рекурсии, так как замена рекурсивного вызова функции на ее код может привести к бесконечной рекурсии или переполнению стека.\u003C\u002Fp\u003E\u003Cp\u003E\u003Cstrong\u003EВЫВОД:\u003C\u002Fstrong\u003E если все функции сделать \u003Ccode\u003Einline\u003C\u002Fcode\u003E, это может привести к экспоненциальному росту размера кода и увеличению времени компиляции. Поэтому необходимо выбирать оптимальную стратегию для каждой конкретной функции в зависимости от ее предполагаемого использования.\u003C\u002Fp\u003E\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fhabr.com\u002Fru\u002Fpost\u002F721084\u002F\" rel=\"noopener noreferrer nofollow\"\u003EВопросы и ответы для собеседования по Kotlin. Часть 1\u003C\u002Fa\u003E\u003Cbr\u002F\u003E\u003Ca href=\"https:\u002F\u002Fhabr.com\u002Fru\u002Fpost\u002F722686\u002F\" rel=\"noopener noreferrer nofollow\"\u003EВопросы и ответы для собеседования по Kotlin. Часть 2\u003C\u002Fa\u003E \u003Cbr\u002F\u003E\u003Ca href=\"https:\u002F\u002Fhabr.com\u002Fru\u002Farticles\u002F728742\u002F\" rel=\"noopener noreferrer nofollow\"\u003EВопросы и ответы для собеседования по Kotlin. Часть 3\u003C\u002Fa\u003E \u003Cbr\u002F\u003E\u003Ca href=\"https:\u002F\u002Fhabr.com\u002Fru\u002Farticles\u002F736392\u002F\" rel=\"noopener noreferrer nofollow\"\u003EВопросы и ответы для собеседования по Kotlin. Часть 4\u003C\u002Fa\u003E — вы находитесь здесь\u003C\u002Fp\u003E\u003Cp\u003E\u003C\u002Fp\u003E\u003C\u002Fdiv\u003E","tags":[{"titleHtml":"kotlin"},{"titleHtml":"собеседование"},{"titleHtml":"faq"},{"titleHtml":"андроид"},{"titleHtml":"подготовка к собеседованию"},{"titleHtml":"котлин"},{"titleHtml":"учебные материалы"},{"titleHtml":"android"},{"titleHtml":"вопросы для собеседования"},{"titleHtml":"kotlin уроки"}],"metadata":{"stylesUrls":[],"scriptUrls":[],"shareImageUrl":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F54d\u002Ff96\u002F12c\u002F54df9612c50967db75beb93320269e93.png","shareImageWidth":1200,"shareImageHeight":630,"vkShareImageUrl":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F54d\u002Ff96\u002F12c\u002F54df9612c50967db75beb93320269e93.png","schemaJsonLd":"{\"@context\":\"http:\\\u002F\\\u002Fschema.org\",\"@type\":\"Article\",\"mainEntityOfPage\":{\"@type\":\"WebPage\",\"@id\":\"https:\\\u002F\\\u002Fhabr.com\\\u002Fru\\\u002Farticles\\\u002F736392\\\u002F\"},\"headline\":\"Вопросы и ответы для собеседования по Kotlin. Часть 4\",\"datePublished\":\"2023-05-20T22:08:36+03:00\",\"dateModified\":\"2024-01-25T12:34:18+03:00\",\"author\":{\"@type\":\"Person\",\"name\":\"Дмитрий\"},\"publisher\":{\"@type\":\"Organization\",\"name\":\"Habr\",\"logo\":{\"@type\":\"ImageObject\",\"url\":\"https:\\\u002F\\\u002Fhabrastorage.org\\\u002Fwebt\\\u002Fa_\\\u002Flk\\\u002F9m\\\u002Fa_lk9mjkccjox-zccjrpfolmkmq.png\"}},\"description\":\"Вопросы и ответы для собеседования по Kotlin. Часть 1Вопросы и ответы для собеседования по Kotlin. Часть 2&nbsp;Вопросы и ответы для собеседования по Kotlin. Часть 3...\",\"url\":\"https:\\\u002F\\\u002Fhabr.com\\\u002Fru\\\u002Farticles\\\u002F736392\\\u002F#post-content-body\",\"about\":[\"h_programming\",\"h_java\",\"h_android_dev\",\"h_kotlin\",\"h_study\",\"f_develop\",\"f_management\"],\"image\":[\"https:\\\u002F\\\u002Fhabr.com\\\u002Fshare\\\u002Fpublication\\\u002F736392\\\u002F6e9043a646dab62ad9ac8c8accc07648\\\u002F\",\"https:\\\u002F\\\u002Fhabrastorage.org\\\u002Fgetpro\\\u002Fhabr\\\u002Fupload_files\\\u002Fb4c\\\u002F080\\\u002F506\\\u002Fb4c080506274ba29a65c7dde6ce1cdfd.png\"]}","metaDescription":"Вопросы и ответы для собеседования по Kotlin. Часть 1 Вопросы и ответы для собеседования по Kotlin. Часть 2 &nbsp; Вопросы и ответы для собеседования по Kotlin. Часть 3 Вопросы и ответы для...","mainImageUrl":null,"amp":true,"customTrackerLinks":[]},"polls":[],"commentsEnabled":{"status":true,"reason":null},"rulesRemindEnabled":false,"votesEnabled":true,"status":"published","plannedPublishTime":null,"checked":null,"hasPinnedComments":false,"format":"faq","banner":null,"multiwidget":null,"multiwidgetUuid":null,"readingTime":18,"complexity":"medium","isEditorial":false}},"articlesIds":{},"isLoading":false,"pagesCount":{},"route":{},"reasonsList":null,"postReasonsList":null,"view":"list","lastVisitedRoute":{},"ssrCommentsArticleIds":[""],"viewedPosts":[],"myFeedFilter":{"complexity":"all","score":"all","types":["articles","posts","news"]},"myFeedIsApplyFilters":false,"myFeedIsForce":false,"karma":{"userReasonsList":null}},"authorContribution":{"authors":{}},"betaTest":{"currentAnnouncement":null,"announcements":{},"announcementCards":null,"announcementComments":{},"announcementCommentThreads":{},"announcementCommentingStatuses":{},"archivedList":[]},"authorStatistics":{"articleRefs":{},"articleIds":{},"pagesCount":{},"route":{},"viewsCount":[],"maxStatsCount":{}},"career":{"seoLandings":[{"title":"Java разработчик","vacanciesCount":211,"itemUrl":"https:\u002F\u002Fcareer.habr.com\u002Fvacancies\u002Fjava_developer","itemHubs":["java","javame_dev","gradle"]},{"title":"Android разработчик ","vacanciesCount":10,"itemUrl":"https:\u002F\u002Fcareer.habr.com\u002Fvacancies\u002Fandroid_developer","itemHubs":["android_dev","mobile_dev","flutter"]}],"hubs":"programming,java,android_dev,kotlin,study"},"comments":{"articleComments":{},"articlePinnedComments":{},"searchCommentsResults":null,"pagesCount":null,"commentAccess":{},"scrollParents":{},"pageArticleComments":{"lastViewedComment":0,"postId":null,"lastCommentTimestamp":"","moderated":[],"moderatedIds":[],"commentRoute":"","idempotenceKey":""}},"companies":{"companyRefs":{},"companyIds":{},"companyTopIds":{},"pagesCount":{},"companyProfiles":{},"companiesCategories":[],"companiesCategoriesTotalCount":0,"companiesWidgets":{},"companiesWorkers":{},"companiesFans":{},"multiwidgets":{},"route":{},"isLoading":false,"companyWorkersLoading":false,"companyFansLoading":false,"multiwidgetLoading":false,"vacancies":{},"companiesGalleries":{},"companiesBanners":{},"companiesLandingVacancies":{},"companiesTechnologies":{},"workplaceInfo":null},"companyAdmin":{"companyInfo":null,"companyInfoLoading":false,"faqArticles":null,"brandingPreviewImageUrl":null,"jivoStatus":0,"adminNotifications":null,"availableInvitesCount":{}},"companyAdd":{"currentStep":"","stepsData":{},"uncompletedSteps":[],"isStepLoading":true,"isStepCommitting":false,"isInitialized":false,"agreementContent":""},"companiesContribution":{"hubs":{},"flows":{},"companyRefs":{}},"companyHubsContribution":{"contributionRefs":{"hubRefs":{},"hubIds":{}}},"conversation":{"messages":[],"respondent":null,"isLoadMore":false},"conversations":{"conversations":[],"pagesCount":0},"docs":{"menu":{},"articles":{},"mainMenu":[],"loading":{"main":false,"dropdown":false,"article":false}},"feature":{"isProbablyVisible":true},"fixedBanner":{"isArticleStickyPanelVisible":false,"isArticleStickyPanelAtTheBottom":false,"isFixedBannerVisible":false,"isStickyPanelIconsHidden":false},"flows":{"flows":[{"id":"1","alias":"develop","title":"Разработка","titleHtml":"Разработка","route":{"name":"FLOW_PAGE","params":{"flowName":"develop"}}},{"id":"6","alias":"admin","title":"Администрирование","titleHtml":"Администрирование","route":{"name":"FLOW_PAGE","params":{"flowName":"admin"}}},{"id":"2","alias":"design","title":"Дизайн","titleHtml":"Дизайн","route":{"name":"FLOW_PAGE","params":{"flowName":"design"}}},{"id":"3","alias":"management","title":"Менеджмент","titleHtml":"Менеджмент","route":{"name":"FLOW_PAGE","params":{"flowName":"management"}}},{"id":"4","alias":"marketing","title":"Маркетинг","titleHtml":"Маркетинг","route":{"name":"FLOW_PAGE","params":{"flowName":"marketing"}}},{"id":"7","alias":"popsci","title":"Научпоп","titleHtml":"Научпоп","route":{"name":"FLOW_PAGE","params":{"flowName":"popsci"}}}],"updates":{}},"global":{"isPwa":false,"device":"mobile","isHabrCom":true,"requestId":"ea4ecaa33bb89ea616ff4c25d570a890"},"hubs":{"hubRefs":{},"hubIds":{},"pagesCount":{},"isLoading":false,"route":{}},"hubsBlock":{"hubRefs":{},"hubIds":{}},"i18n":{"fl":"ru","hl":"ru"},"info":{"welcomePage":{},"isLoading":true},"location":{"urlStruct":{"protocol":null,"slashes":null,"auth":null,"host":null,"port":null,"hostname":null,"hash":null,"query":{},"pathname":"\u002Fru\u002Farticles\u002F736392\u002F","path":"\u002Fru\u002Farticles\u002F736392\u002F","href":"\u002Fru\u002Farticles\u002F736392\u002F"}},"me":{"user":null,"uuid":null,"ppgDemanded":false,"karmaResetInfo":{"canReincarnate":null,"wasReincarnated":null,"currentScore":null},"notes":null,"userUpdates":{"feeds":{"newPostsCount":null,"newThreadsCount":null,"newNewsCount":null,"newCount":null},"conversationUnreadCount":0}},"mostReadingList":{"mostReadingListIds":[],"mostReadingListRefs":null,"promoPost":null},"onboarding":{"currentStep":null,"stepsData":{},"stepsErrors":{},"completedSteps":[],"isStepCommitting":false,"isCommitDisabled":true},"ppa":{"articles":{},"card":null,"transactions":null,"totalTransactions":null,"isAccessible":null},"projectsBlocks":{"activeBlocks":{"questions":"project-block-article"}},"promoData":{"isLoading":false,"hasLoaded":false,"featurer":null,"megaposts":null,"promoLinks":null,"promoPosts":null,"sticker":null},"publicationStatistics":{"statsInfo":{},"statsFunnels":{},"statsGraph":{},"defaultSuggest":{},"suggest":{},"timeTracker":{},"isTrackingActivity":false,"isUserActive":true,"otherPublicationStats":{}},"pullRefresh":{"shouldRefresh":false},"sandbox":{"articleIds":[],"articleRefs":{},"pagesCount":null,"route":{},"lastVisitedRoute":{},"isLoading":false},"search":{"searchQueryError":null},"settingsOther":{"inputs":{"uiLang":{"errors":[],"ref":null,"value":""},"articlesLangEnglish":{"errors":[],"ref":null,"value":false},"articlesLangRussian":{"errors":[],"ref":null,"value":false},"agreement":{"errors":[],"ref":null,"value":false},"email":{"errors":[],"ref":null,"value":true},"digest":{"errors":[],"ref":null,"value":true}}},"similarList":{"similarListIds":[],"similarListRefs":null},"ssr":{"error":null,"isDataLoaded":true,"isDataLoading":false,"isHydrationFailed":false,"isServer":false},"stories":{"stories":[{"id":"story-998","author":{"logo":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F91a\u002F166\u002F49f\u002F91a16649f9ef89302a5a56cfa22a451d.png","title":"Яндекс Практикум","link":"https:\u002F\u002Fu.habr.com\u002Fstories_up"},"title":"Как расти на работе?","lang":"ru","startTime":"2025-03-18T18:45:00+03:00","finishTime":"2025-03-31T19:00:00+03:00","slides":[{"id":"story-998_1","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fbf4\u002F911\u002F7e6\u002Fbf49117e637ff2099b3944f8803cd7a3.png","button":null},{"id":"story-998_2","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F3e3\u002Fc84\u002Fe83\u002F3e3c84e8330ea1ddf72e9d310457ed2f.png","button":{"title":"Расти в карьере","link":"https:\u002F\u002Fu.habr.com\u002Fstories_up","colorType":"light"}},{"id":"story-998_3","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F84b\u002F533\u002F3c3\u002F84b5333c3e77e8dac62a8b50d042acb9.png","button":{"title":"Расти в карьере","link":"https:\u002F\u002Fu.habr.com\u002Fstories_up","colorType":"light"}},{"id":"story-998_4","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F257\u002Feb0\u002F2be\u002F257eb02bea1777e13f3e647cae6e06cd.png","button":{"title":"Расти в карьере","link":"https:\u002F\u002Fu.habr.com\u002Fstories_up","colorType":"light"}},{"id":"story-998_5","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F858\u002F086\u002F0ed\u002F8580860ed3497c043c04f9a42054d74f.png","button":{"title":"Расти в карьере","link":"https:\u002F\u002Fu.habr.com\u002Fstories_up","colorType":"light"}},{"id":"story-998_6","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fcdf\u002F32f\u002F387\u002Fcdf32f38777f046c063b5182f4125e14.png","button":{"title":"Расти в карьере","link":"https:\u002F\u002Fu.habr.com\u002Fstories_up","colorType":"light"}},{"id":"story-998_7","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fd48\u002Ff2d\u002F0e2\u002Fd48f2d0e2ecd7d746d738191bb913d8f.png","button":{"title":"Расти в карьере","link":"https:\u002F\u002Fu.habr.com\u002Fstories_up","colorType":"light"}},{"id":"story-998_8","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fb38\u002Ffd7\u002Fee0\u002Fb38fd7ee04848bf3b058be7403438bd1.png","button":{"title":"Расти в карьере","link":"https:\u002F\u002Fu.habr.com\u002Fstories_up","colorType":"light"}},{"id":"story-998_9","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F79e\u002Feaa\u002F9d8\u002F79eeaa9d8af5a288ad42bd9d63b5793a.png","button":{"title":"Расти в карьере","link":"https:\u002F\u002Fu.habr.com\u002Fstories_up","colorType":"light"}},{"id":"story-998_10","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fcdc\u002F17e\u002F385\u002Fcdc17e38582dc67838b9abfb200d982e.png","button":{"title":"Расти в карьере","link":"https:\u002F\u002Fu.habr.com\u002Fstories_up","colorType":"light"}}]},{"id":"story-996","author":{"logo":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fe63\u002F36d\u002Fa24\u002Fe6336da24460ab6b9fbc347d03eb263a.png","title":"Хабр","link":null},"title":"Здоровье айтишника","lang":"ru","startTime":"2025-03-17T10:22:00+03:00","finishTime":"2025-04-13T10:22:00+03:00","slides":[{"id":"story-996_1","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fb7c\u002F6de\u002F8ea\u002Fb7c6de8ea6789dbc30f071716172b6dd.jpg","button":null},{"id":"story-996_2","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F2e7\u002F88a\u002F0fe\u002F2e788a0fe61729ca8b23eb59069c844f.jpg","button":{"title":"Личный опыт","link":"https:\u002F\u002Fu.habr.com\u002Fzd-1","colorType":"light"}},{"id":"story-996_3","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fb93\u002F6f4\u002F256\u002Fb936f425653b84fa60ab00d09f78c543.jpg","button":{"title":"Как это было","link":"https:\u002F\u002Fu.habr.com\u002Fzd-2","colorType":"light"}},{"id":"story-996_4","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fc10\u002Fd14\u002Ff5a\u002Fc10d14f5a4859fe10baecbcc2bcb8828.jpg","button":{"title":"Шея в фокусе","link":"https:\u002F\u002Fu.habr.com\u002Fzd-3","colorType":"dark"}},{"id":"story-996_5","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F535\u002Fe1b\u002F77a\u002F535e1b77a9eb896262ad73321f2ad99f.jpg","button":{"title":"Фотоинструкция","link":"https:\u002F\u002Fu.habr.com\u002Fzd-4","colorType":"light"}},{"id":"story-996_6","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F569\u002Fc39\u002F49f\u002F569c3949f5b330ea85d4a1864f481c3d.jpg","button":{"title":"Сидите (не)правильно","link":"https:\u002F\u002Fu.habr.com\u002Fzd-5","colorType":"dark"}},{"id":"story-996_7","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F1f2\u002F1de\u002Fdbf\u002F1f21dedbf2902bc4061a75b839b63595.jpg","button":{"title":"Журнал изменений","link":"https:\u002F\u002Fu.habr.com\u002Fzd-6","colorType":"dark"}},{"id":"story-996_8","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F95a\u002F164\u002F21b\u002F95a16421badc3a9f1135309ab0c42c41.jpg","button":{"title":"Альтернатива","link":"https:\u002F\u002Fu.habr.com\u002Fzd-7","colorType":"light"}},{"id":"story-996_9","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F624\u002F027\u002F54d\u002F62402754d311798af44bcfe7f9abfedc.jpg","button":{"title":"Хроника поисков","link":"https:\u002F\u002Fu.habr.com\u002Fzd-8","colorType":"dark"}}]},{"id":"story-992","author":{"logo":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F3fe\u002F2fc\u002Fb05\u002F3fe2fcb05df852d7e1e00d44e54e39ae.png","title":"Сезоны Хабра","link":"https:\u002F\u002Fu.habr.com\u002Ffnstories"},"title":"Угадайте будущее в новом сезоне","lang":"ru","startTime":"2025-03-12T19:15:00+03:00","finishTime":"2025-03-31T23:56:00+03:00","slides":[{"id":"story-992_1","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fc56\u002Faf5\u002Fc43\u002Fc56af5c4377f7f7b94f7b6ad20fc92c3.png","button":{"title":"А что за сезон?","link":"https:\u002F\u002Fu.habr.com\u002Ffnstories","colorType":"light"}},{"id":"story-992_2","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F8fa\u002Fde7\u002F65d\u002F8fade765d99207f31c597283ae6ce912.png","button":{"title":"Какие темы нужны","link":"https:\u002F\u002Fu.habr.com\u002Ffnstories","colorType":"dark"}},{"id":"story-992_3","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F23e\u002F7b9\u002Fb24\u002F23e7b9b24cb056d1a42e8d31ccea16ce.png","button":{"title":"Сезон будущего ИИ","link":"https:\u002F\u002Fu.habr.com\u002Ffnstories","colorType":"dark"}},{"id":"story-992_4","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F27b\u002Fbfc\u002Fa18\u002F27bbfca18e656ee0122b5cb8eb2cb502.png","button":{"title":"Все правила сезона","link":"https:\u002F\u002Fu.habr.com\u002Ffnstories","colorType":"dark"}},{"id":"story-992_5","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F1e0\u002F6c6\u002Ff33\u002F1e06c6f33e703bbd2b2ae3baee3376fd.png","button":{"title":"Как участвовать","link":"https:\u002F\u002Fu.habr.com\u002Ffnstories","colorType":"dark"}}]},{"id":"story-990","author":{"logo":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F282\u002Fe80\u002Fbf1\u002F282e80bf1b73484126ed53c6f3e42692.png","title":"Aeza","link":"https:\u002F\u002Fu.habr.com\u002FI72qi"},"title":"С праздником весны!","lang":"ru","startTime":"2025-03-09T10:15:00+03:00","finishTime":"2025-03-30T23:59:00+03:00","slides":[{"id":"story-990_1","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F064\u002F9dd\u002Ff59\u002F0649ddf5949cae6c9342fb62034a36ac.png","button":null},{"id":"story-990_2","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F05f\u002F96b\u002F25e\u002F05f96b25e910c32256ee0b1916f21380.png","button":{"title":"Семейная история","link":"https:\u002F\u002Fu.habr.com\u002Fey2bY","colorType":"light"}},{"id":"story-990_3","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fcd1\u002Ff5d\u002F921\u002Fcd1f5d921bb9489ac11727272660bdb6.png","button":{"title":"Движущиеся картинки","link":"https:\u002F\u002Fu.habr.com\u002FWLKXU","colorType":"light"}},{"id":"story-990_4","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fb55\u002Fd45\u002Fec5\u002Fb55d45ec50e53275c60d16ea886a0672.png","button":{"title":"Личный опыт","link":"https:\u002F\u002Fu.habr.com\u002FSxrki","colorType":"light"}},{"id":"story-990_5","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Ffa7\u002F1ce\u002Ffca\u002Ffa71cefca5ed0a3fe8b50bd703b3605f.png","button":{"title":"Алгоритм","link":"https:\u002F\u002Fu.habr.com\u002Ftbz2p","colorType":"light"}},{"id":"story-990_6","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F435\u002F89d\u002Ff90\u002F43589df9018846cc6a8eed986226b252.png","button":{"title":"Выбрать сценарий","link":"https:\u002F\u002Fu.habr.com\u002F0RCPk","colorType":"light"}},{"id":"story-990_7","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F514\u002F5f8\u002F619\u002F5145f86194ad48dad48a846b42af0f93.png","button":{"title":"Jiraзамещение","link":"https:\u002F\u002Fu.habr.com\u002FEwhYq","colorType":"light"}},{"id":"story-990_8","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F439\u002Fa83\u002Fae7\u002F439a83ae78f7ef711e3b9bbed1ec26c5.png","button":{"title":"8 вещей","link":"https:\u002F\u002Fu.habr.com\u002FVTv2r","colorType":"light"}},{"id":"story-990_9","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F02d\u002F783\u002F2f7\u002F02d7832f7b1c95d88bff9f34209e204a.png","button":{"title":"Интерфейсы","link":"https:\u002F\u002Fu.habr.com\u002FUFOMZ","colorType":"light"}},{"id":"story-990_10","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F0cb\u002Ff7f\u002F0d9\u002F0cbf7f0d905d486ce4ff82bc939b21d5.png","button":{"title":"Стикеры ваши","link":"https:\u002F\u002Fu.habr.com\u002FoA1K7","colorType":"light"}}]},{"id":"story-984","author":{"logo":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F648\u002F61b\u002F9ae\u002F64861b9aecb7c474cd94063f98045541.png","title":"Хабр","link":null},"title":"Всегда котов!","lang":"ru","startTime":"2025-03-01T00:01:09+03:00","finishTime":"2025-03-23T16:21:00+03:00","slides":[{"id":"story-984_1","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fc06\u002Fc21\u002F93f\u002Fc06c2193ff34362ac2af782cf2571f55.png","button":null},{"id":"story-984_2","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fb68\u002F15f\u002F763\u002Fb6815f7630b9c015b1e67efb5bdf12d4.jpg","button":{"title":"Сделать purrrr","link":"https:\u002F\u002Fu.habr.com\u002Fj4DN1","colorType":"light"}},{"id":"story-984_3","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F550\u002F76e\u002Fd7a\u002F55076ed7a0954e243f944fc2f330623a.png","button":{"title":"Тыгыдык","link":"https:\u002F\u002Fu.habr.com\u002Fya360_kotov","colorType":"dark"}},{"id":"story-984_4","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F2fb\u002F23b\u002F06c\u002F2fb23b06cf294c2050104b2aef589788.jpg","button":{"title":"Исследование","link":"https:\u002F\u002Fu.habr.com\u002FbO3r0","colorType":"light"}},{"id":"story-984_5","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Ff50\u002F50f\u002F0ae\u002Ff5050f0aeea1335c4f0544c1863f8342.jpg","button":{"title":"Детали проекта","link":"https:\u002F\u002Fu.habr.com\u002FQJmhe","colorType":"light"}},{"id":"story-984_6","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F825\u002F3dd\u002F5f5\u002F8253dd5f5c19dd061578f1d09310a45f.jpg","button":{"title":"Эксперименты","link":"https:\u002F\u002Fu.habr.com\u002FVaOdo","colorType":"light"}},{"id":"story-984_7","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F3fb\u002Fc92\u002F0f9\u002F3fbc920f9ea81eca2c1c027ff77fc659.jpg","button":{"title":"Это не мем","link":"https:\u002F\u002Fu.habr.com\u002F0Wb3p","colorType":"light"}},{"id":"story-984_8","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F2b4\u002F794\u002Fc33\u002F2b4794c33844e60aad9468018fd132cd.jpg","button":{"title":"В засаде","link":"https:\u002F\u002Fu.habr.com\u002FnasCD","colorType":"dark"}}]}]},"technotext":{"years":[],"technotextDocForNominees":null,"technotextDocForWinners":null,"technotextInfo":{},"technotextInfoLoading":false,"technotextWinners":{},"technotextWinnersLoading":false},"userHubsContribution":{"contributionRefs":{"hubRefs":{},"hubIds":{}}},"userInvites":{"availableInvites":0,"usedInvitesIds":[],"usedInvitesRefs":{},"usedInvitesPagesCount":0,"unusedInvitesIds":[],"unusedInvitesRefs":{},"unusedInvitesPagesCount":0},"userVotes":{"karmaVotesList":[],"karmaVotesPagesCount":null,"karmaVotesListLoading":false,"commentsVotesList":[],"commentsVotesPagesCount":null,"commentsVotesListLoading":false,"postsVotesList":[],"postsVotesPagesCount":null,"postsVotesListLoading":false,"userVotesList":[],"userVotesPagesCount":null,"userVotesListLoading":false},"users":{"authorRefs":{},"authorIds":{},"pagesCount":{},"authorProfiles":{"dmt_ovs":{"alias":"dmt_ovs","badgets":[{"title":"Захабренный","description":"Пользователь с кармой \u003E0","url":null,"isRemovable":false},{"title":"Бета-тестер","description":"Участвует в тестировании новой функциональности","url":"https:\u002F\u002Fhabr.com\u002Fbeta\u002Fwelcome\u002F","isRemovable":false}],"aboutHtml":"","contacts":[],"invitedBy":{"issuerLogin":null,"timeCreated":"2023-02-24T22:37:10+00:00"},"careerProfile":null,"companies":{"pagesCount":1,"companyIds":["citymobil","lightmap","microsoft"],"companyRefs":{"citymobil":{"id":"5858","alias":"citymobil","titleHtml":"Ситимобил","descriptionHtml":"Творим городскую мобильность","imageUrl":"\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fcompany\u002Fcd3\u002F99d\u002Fb96\u002Fcd399db968a2981be5357e8cc3488bf2.jpg","relatedData":null,"statistics":{"subscribersCount":45049,"rating":0,"invest":null},"commonHubs":[]},"lightmap":{"id":"7774","alias":"lightmap","titleHtml":"Lightmap","descriptionHtml":"Разработчик мобильных игр","imageUrl":"\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fcompany\u002Fb48\u002Ff8d\u002F0e1\u002Fb48f8d0e11c97dd1e1b3c097307e2011.png","relatedData":null,"statistics":{"subscribersCount":36662,"rating":0,"invest":null},"commonHubs":[]},"microsoft":{"id":"68","alias":"microsoft","titleHtml":"Microsoft","descriptionHtml":"Microsoft — мировой лидер в области ПО и ИТ-услуг","imageUrl":"\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fcompany\u002Fe98\u002F5cf\u002F6a0\u002Fe985cf6a01b15006350561f26c70a41f.png","relatedData":null,"statistics":{"subscribersCount":163238,"rating":0,"invest":null},"commonHubs":[]}}}}},"userHubs":{},"userInvitations":{},"authorFollowers":{},"authorFollowed":{},"userSpecialization":{},"karmaStats":[],"statistics":null,"isLoading":false,"authorFollowersLoading":false,"authorFollowedLoading":false,"userHubsLoading":false,"userInvitationsLoading":false,"route":{}},"viewport":{"prevScrollY":{},"scrollY":0,"width":0},"tracker":{"notificationsLoading":false,"notificationsList":[],"notificationsPageCount":0,"pendingMarkNotificationsRead":[],"publicationsLoading":true,"publicationsList":[],"publicationsPageCount":0,"pendingDeletePublications":false,"pendingMarkPublicationsRead":false},"events":{"eventRefs":{},"eventIds":[],"pagesCount":0,"categories":[],"cities":[],"actualEvents":[{"id":"588","titleHtml":"Конкурс «Снежный код» от Хекслета. Три гранта на бесплатное 10-месячное обучение","descriptionHtml":"\u003Cp\u003EУчаствуйте в конкурсе грантов от онлайн-школы программирования Хекслет. Три победителя пройдут 10-месячное обучение с наставником, освоив один из востребованных стеков: Java, Python, JavaScript, PHP или Node.js.\u003C\u002Fp\u003E\u003Cp\u003EЭто шанс без вложений освоить новый стек, систематизировать знания, восполнить пробелы и повысить свою ценность на рынке. Технологии развиваются быстро — обновляйте навыки, чтобы не отставать.\u003C\u002Fp\u003E\u003Cp\u003EПомимо грантов, можно выиграть доступ ко всем курсам Хекслета, полезные подписки, сертификаты и подарки от Хабра и партнеров.\u003C\u002Fp\u003E\u003Cp\u003EВ прошлом году три победителя успешно завершили программу и уже работают в IT.  Инвестируйте время в свое развитие — участвуйте! \u003C\u002Fp\u003E","imageUrl":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Ff79\u002F1fc\u002F79d\u002Ff791fc79d0d9fdda84397ed0c0717764.png","eventUrl":"https:\u002F\u002Fspecial.hexlet.io\u002Fgrant?utm_source=partners&utm_medium=referral&utm_campaign=grant&utm_content=link&utm_term=placement_habr","startDay":"2025-02-17","finishDay":"2025-03-24","isOnline":true,"geo":[],"isArchive":false,"categories":[{"id":"2","titleHtml":"Разработка"}],"tags":["гранты","конкурс","Хекслет","Java","Python","JavaScript","PHP","Node.js"],"metadata":null},{"id":"596","titleHtml":"Офлайн-конференция Хабр х K-team: как удерживать таланты в 2025 году","descriptionHtml":"\u003Cp\u003EМы — Хабр и K-Team — провели масштабное исследование, чтобы разобраться, что на самом деле мотивирует сотрудников оставаться в компании и быть лояльными\u003C\u002Fp\u003E\u003Cp\u003EВместе прошли по тернистому пути к лояльности, опросив&nbsp;3 000+ сотрудников, HR и руководителей из разных отраслей:&nbsp;от ретейла и логистики до IT и промышленности. Мы заботливо собрали самые разные мнения, чтобы понять, что по-настоящему важно для людей, которые остаются в компании надолго и любят свою работу. \u003C\u002Fp\u003E\u003Cp\u003EНаша цель проста — помочь бизнесу не сливать бюджет на бесполезные инициативы, а сотрудникам — получать то, что им действительно нужно. \u003C\u002Fp\u003E\u003Cp\u003EПриглашаем вас на офлайн-презентацию в Москве в марте. Обсудим результаты исследования, ключевые выводы и разберем, как строить эффективные Retention-стратегии в 2025 году.\u003C\u002Fp\u003E\u003Cp\u003EКоличество мест ограничено, заявки проходят модерацию. Если ваша заявка будет одобрена, вы получите письмо с подтверждением и адресом встречи.\u003C\u002Fp\u003E\u003Cp\u003EЕсли прийти не получится — после ивента отправим результаты исследования всем, кто зарегистрируется на лендинге.\u003C\u002Fp\u003E\u003Cp\u003EМентальное здоровье сотрудников — важная часть корпоративной культуры. В «Ясно для бизнеса» изучают, как забота о команде влияет на вовлечённость и эффективность. Они подготовили гайд о работе с молодыми специалистами, а для теста сервиса есть промокод CORP-HABRTLNT-DISC20 на скидку 20% для первых сессий: https:\u002F\u002Fu.habr.com\u002FPQP4b\u003C\u002Fp\u003E\u003Cp\u003E\u003C\u002Fp\u003E","imageUrl":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fb14\u002Fcd3\u002F772\u002Fb14cd3772bc67698c8fbfd846e23824a.png","eventUrl":"https:\u002F\u002Fevent.k-team.ru\u002Fexpectations_vs_reality?utm_source=habr","startDay":"2025-03-20","startTime":"10:00","finishDay":"2025-03-20","finishTime":"17:00","isOnline":false,"geo":["Москва"],"isArchive":false,"categories":[{"id":"16","titleHtml":"Другое"}],"tags":["HR","HRD","Удержание сотрудников"],"metadata":null},{"id":"604","titleHtml":"IX HappyWorkForum | Аутентичность и ментальное здоровье персонала","descriptionHtml":"\u003Cp\u003EБолее 250 HRD, первые лица компаний и владельцы крупного бизнеса обсудят лучшие практики благополучия и управление командой.\u003C\u002Fp\u003E\u003Cp\u003EПочему ментальное здоровье становится KPI бизнеса?\u003C\u002Fp\u003E\u003Cp\u003EГде граница ответственности за выгорание и стресс сотрудников?\u003C\u002Fp\u003E\u003Cp\u003EКак стать работодателем №1?\u003C\u002Fp\u003E\u003Cp\u003EКак управлять уставшими командами?\u003C\u002Fp\u003E\u003Cp\u003EКак справляться с выгоранием руководителей?\u003C\u002Fp\u003E\u003Cp\u003EЧем замотивировать сотрудников, когда деньги уже не работают?&nbsp;&nbsp;\u003C\u002Fp\u003E\u003Cp\u003EКак решать ценностные конфликты?\u003C\u002Fp\u003E\u003Cp\u003EУспешные корпоративные программы: что реально работает?&nbsp;&nbsp;\u003C\u002Fp\u003E\u003Cp\u003EВ программе презентация отчёта по развитию лидерства, батлы, практические кейсы и нетворкинг.\u003C\u002Fp\u003E\u003Cp\u003EСреди спикеров, представители компаний: Т-банк, Сравни.ру, Ростелеком, ТД Ренна, Спортмастер, ТрансТелеком, Оптиком, Норникель, Азбука вкуса, ЕВМ и другие.\u003C\u002Fp\u003E\u003Cp\u003EУчастие для HRD, руководителей и владельцев бизнеса без оплаты. Действует строгая модерация.\u003C\u002Fp\u003E\u003Cp\u003E\u003C\u002Fp\u003E","imageUrl":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F733\u002F9ef\u002F194\u002F7339ef1945f3ee6906daf89db79829d4.png","eventUrl":"https:\u002F\u002Fhappyforum.ru\u002F?utm_source=habr&utm_medium=email&utm_campaign=hwf","startDay":"2025-03-20","startTime":"10:00","finishDay":"2025-03-20","finishTime":"18:00","isOnline":true,"geo":["Москва"],"isArchive":false,"categories":[{"id":"16","titleHtml":"Другое"}],"tags":["HRD","HR"],"metadata":null},{"id":"612","titleHtml":"Вебинар «Мастерская бюджета: как управлять затратами на облачные ресурсы»","descriptionHtml":"\u003Cp\u003EРасскажем, как сэкономить на использовании облачных сервисов через возможности личного кабинета, сервисы с free tier и акции. Покажем, как оптимизировать потребление ресурсов и настроить лимиты бюджетов.\u003C\u002Fp\u003E\u003Cp\u003EПрограмма вебинара:\u003C\u002Fp\u003E\u003Cul\u003E\u003Cli\u003E\u003Cp\u003EАнализ текущей утилизации ресурсов: поиск ресурсов с низкой утилизацией и анализ возможной оптимизации.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003EКалькулятор затрат: демо-настройки параметров для точных прогнозов расходов.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003EАнализ детализированных данных: подходы к аналитике, включая метаданные.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003EОптимизация потребления: использование зарезервированных инстансов и спотовых экземпляров.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003EАнализ бесплатного потребления: как использовать free tier для сокращения затрат.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003EНастройка лимитов бюджетов: автоматизация и уведомления для контроля расходов.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003EИспользование Public API: тегирование ресурсов для лучшей аналитики затрат.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003C\u002Ful\u003E\u003Cp\u003EВебинар будет интересен менеджерам облачных ресурсов и IT-департаментов, DevOps-инженерам и сотрудникам, в чью зону ответственности входит контроль над облачными расходами.\u003C\u002Fp\u003E","imageUrl":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F38f\u002F10d\u002Ff4c\u002F38f10df4c7f9d7c5d4610fe426af0ab4.png","eventUrl":"https:\u002F\u002Fu.habr.com\u002Fcldr_cloudeventwebinar","startDay":"2025-03-20","startTime":"11:00","finishDay":"2025-03-20","isOnline":true,"geo":[],"isArchive":false,"categories":[{"id":"2","titleHtml":"Разработка"},{"id":"4","titleHtml":"Администрирование"}],"tags":["вебинар cloudru","вебинар для айтишников","вебинар про облака"],"metadata":null},{"id":"616","titleHtml":"Бизнес-конференция «Digital Brand Day 2025: Орбита 2025»","descriptionHtml":"\u003Cp\u003E21 марта конференция «Digital Brand Day 2025: Орбита 2025» в восьмой раз соберёт ведущих экспертов цифрового маркетинга и рекламы для обсуждения главных трендов digital-рынка и новых инструментов, которые определят стратегию брендов.\u003C\u002Fp\u003E\u003Cp\u003EВ основе темы Digital Brand Day 2025 лежит фундаментальный вопрос философии: что первично — материя или сознание? А что же первично в цифровой среде — технологии или идеи? Конференция станет эпицентром открытий, где мы вместе проложим путь сквозь бескрайние просторы рекламного космоса и наметим вектор развития цифрового маркетинга.\u003C\u002Fp\u003E\u003Cp\u003EГостей «Digital Brand Day: Орбита 2025» ждёт не только насыщенная программа, но и возможность завести полезные знакомства, увидеть, каким будет диджитал завтра.\u003C\u002Fp\u003E","imageUrl":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F523\u002F7fb\u002F13a\u002F5237fb13ad7fb6fb483c49691aaec836.png","eventUrl":"https:\u002F\u002Fu.habr.com\u002Fcldr_digitalbrandday","startDay":"2025-03-21","startTime":"10:00","isOnline":false,"geo":["Москва"],"isArchive":false,"categories":[{"id":"10","titleHtml":"Маркетинг"},{"id":"16","titleHtml":"Другое"}],"tags":["digital brand day","бизнес-конференция digital brand day","цифровой маркетинг","digital-рынок"],"metadata":null},{"id":"608","titleHtml":"Вебинар «Контент-маркетинг здорового человека: как привлечь внимание аудитории»","descriptionHtml":"\u003Cp\u003E27 марта в 16:00 МСК вместе с агентством Loft PR Studio проведем открытый вебинар о том, как писать про здоровье на Хабре. \u003C\u002Fp\u003E\u003Cp\u003EНа вебинаре разберем, что помогает удерживать внимание и превращает контент в работающий инструмент. Поделимся опытом брендов, которые ведут блоги и регулярно публикуют статьи.\u003C\u002Fp\u003E\u003Cp\u003EБудет интересно тем, кто продвигает товары и услуги для здоровья на аудиторию B2C и B2B. \u003C\u002Fp\u003E\u003Cp\u003E🔗 Участие бесплатное, но нужна предварительная регистрация.\u003C\u002Fp\u003E","imageUrl":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F8fd\u002Fe04\u002Fddd\u002F8fde04ddd9ba3f6bcd515aa6209f96b7.png","eventUrl":"https:\u002F\u002Fhabr.timepad.ru\u002Fevent\u002F3266126\u002F?utm_refcode=b5d44b4f1d5f2c06b5696586408b58e610baafd8","startDay":"2025-03-27","startTime":"16:00","finishDay":"2025-03-27","finishTime":"18:00","isOnline":true,"geo":[],"isArchive":false,"categories":[{"id":"10","titleHtml":"Маркетинг"},{"id":"16","titleHtml":"Другое"}],"tags":["Вебинар","Контент","Хабр"],"metadata":null},{"id":"606","titleHtml":"Серия вебинаров «DevOps Middle: AvitoTech vs ecom.tech»","descriptionHtml":"\u003Cp\u003EУчебный центр Слёрм запустил серию бесплатных вебинаров «Честные вакансии: DevOps Middle».\u003C\u002Fp\u003E\u003Cp\u003EДва раза в неделю Вячеслав Федосеев, TeamLead DevOps в «Честном знаке» и автор телеграм-канала «DevOps Bootcamp с Федосеевым» встречается в прямом эфире с экспертами из бигтеха, чтобы обсудить:\u003C\u002Fp\u003E\u003Col\u003E\u003Cli\u003E\u003Cp\u003EКакие задачи должен решать DevOps middle.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003EКакими основными и дополнительными инструментами и подходами должен владеть DevOps middle.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003EСтоп-факторы на собеседовании.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003EКак выглядит рабочий день DevOps middle.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003EКакие софт-скилы действительно важны.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003C\u002Fol\u003E\u003Cp\u003E31 марта состоится встреча с экспертами AvitoTech, 2 апреля — с ecom.tech. Кому подходите вы, а кто — вам? Разберёмся вместе на вебинарах.\u003C\u002Fp\u003E\u003Cp\u003EПодробности — в telegram-боте.\u003C\u002Fp\u003E\u003Cp\u003E\u003C\u002Fp\u003E","imageUrl":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fb99\u002F62a\u002Fb24\u002Fb9962ab2439c6edc80f96d7f0a847c72.png","eventUrl":"https:\u002F\u002Fu.habr.com\u002Fcldr_slermdevops","startDay":"2025-03-31","startTime":"17:00","isOnline":true,"geo":[],"isArchive":false,"categories":[{"id":"2","titleHtml":"Разработка"},{"id":"4","titleHtml":"Администрирование"}],"tags":["Вебинар Слерм","Вебинар Devops","Честные вакансии","Слерм","Честные вакансии Devops Middle"],"metadata":null},{"id":"618","titleHtml":"Реалити для разработчиков: узнайте, как строится новое публичное облако MWS","descriptionHtml":"\u003Cp\u003EBuilding the Cloud — это реалити-проект для разработчиков о новом облаке МТС Web Services. Каждый эпизод посвящён отдельному building-блоку новой облачной платформы.\u003C\u002Fp\u003E\u003Cp\u003EВ прямом эфире:\u003C\u002Fp\u003E\u003Cul\u003E\u003Cli\u003E\u003Cp\u003EПоказываем архитектуру сервисов облака ещё до релиза.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003EДелимся опытом на реальных кейсах из разработки.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003EОтвечаем на вопросы в прямом эфире.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003C\u002Ful\u003E\u003Cp\u003EВ новом выпуске проекта расскажем, как строим underlay-сеть нового облака.\u003C\u002Fp\u003E\u003Cp\u003EВы узнаете:\u003C\u002Fp\u003E\u003Cul\u003E\u003Cli\u003E\u003Cp\u003EКак мы поменяли подход к построению underlay-сети в новом облаке MWS.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003EКакую архитектуру строим и как реализовали изоляцию management и data plane.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003EКак обеспечиваем отказоустойчивость и производительность на уровне физической инфраструктуры.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003C\u002Ful\u003E\u003Cp\u003EНовый выпуск Building the Cloud будет интересен сетевым инженерам, backend-разработчикам, DevOps- и SRE-инженерам, а также всем, кто интересуется сетевыми или облачными технологиями.\u003C\u002Fp\u003E\u003Cp\u003EРегистрируйтесь по ссылке, подключайтесь к прямому эфиру и задавайте вопросы в чате.\u003C\u002Fp\u003E\u003Cp\u003EЗа самый интересный вопрос подарим фирменный мерч MWS.\u003C\u002Fp\u003E\u003Cp\u003EДо встречи в эфире.\u003C\u002Fp\u003E","imageUrl":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Ff76\u002F0f9\u002Fa82\u002Ff760f9a827b851a5eeca4802c643a91d.png","eventUrl":"https:\u002F\u002Fu.habr.com\u002Fcldr_buildingthecloud4","startDay":"2025-04-03","startTime":"11:00","isOnline":true,"geo":[],"isArchive":false,"categories":[{"id":"2","titleHtml":"Разработка"}],"tags":["реалити-проект для разработчиков","Реалити для разработчиков","облако","облако MWS"],"metadata":null},{"id":"620","titleHtml":"Открытая встреча «System Analysis Meetup SberHealth»","descriptionHtml":"\u003Cp\u003EВ программе:\u003C\u002Fp\u003E\u003Cul\u003E\u003Cli\u003E\u003Cp\u003EГоргоц Мария, старший системный аналитик, расскажет про описание требований для мобильных приложений.&nbsp;\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003EНижник Станислав, ведущий системный аналитик, расскажет про книжный клуб системных аналитиков: «Как мы создали сообщество для обмена знаниями».\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003EВ качестве приглашённого спикера Севостьянова Анастасия, ведущий системный аналитик в Альфа-Банке, расскажет про мидл слой без хаоса: «Как сделать документацию понятной и живой».&nbsp;\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003C\u002Ful\u003E\u003Cp\u003EПосле сессии с докладами проведём профессиональную игру для офлайн-участников «Искусство защиты абсурда».&nbsp;\u003C\u002Fp\u003E\u003Cp\u003EВедущая митапа Пашкова Ольга, руководитель направления методологии и системного анализа в СберЗдоровье.\u003C\u002Fp\u003E","imageUrl":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Feba\u002Fc37\u002F879\u002Febac378793b959ebce42f41713e7b67f.jpg","eventUrl":"https:\u002F\u002Fu.habr.com\u002Fcldr_sbermeetup","startDay":"2025-04-03","startTime":"17:00","finishDay":"2025-04-03","finishTime":"23:00","isOnline":true,"geo":["Москва"],"isArchive":false,"categories":[{"id":"12","titleHtml":"Аналитика"}],"tags":["Семинар аналитика","сбер митап","системная аналитика митап","системная аналитика"],"metadata":null},{"id":"590","titleHtml":"«GoCloud 2025» — масштабная IT-конференция про облака и AI","descriptionHtml":"\u003Cp\u003EПоговорим про глобальные тренды в AI, расскажем про широкий набор сценариев работы в облаке, поделимся последними релизами и нашими планами, чтобы показать, какой простор открывают облачные и AI-технологии для бизнеса и разработчиков.\u003C\u002Fp\u003E\u003Cp\u003EЧто ждёт участников в этом году:\u003C\u002Fp\u003E\u003Cul\u003E\u003Cli\u003E\u003Cp\u003EТри трека: инфраструктура и инструменты, AI и R&amp;D и сценарии работы в облаке.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003E30+ спикеров из Cloud.ru и ведущих российских компаний.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003ELive-демонстрации облачных платформ и нетворкинг с экспертами.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003EНе только доклады: интерактивные зоны, afterparty с музыкальной программой и кастомный мерч.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003C\u002Ful\u003E\u003Cp\u003EКому будет полезно: техническим лидерам, IT-директорам, бизнес-руководителям, разработчикам, DevOps-инженерам, архитекторам, дата-инженерам, AI\u002FML-инженерам, дата-сайентистам, SRE-инженерам, системным администраторам, специалистам по информационной безопасности.\u003C\u002Fp\u003E\u003Cp\u003EАдрес: Москва, Цифровое деловое пространство (ЦДП), ул. Покровка, 47.\u003C\u002Fp\u003E\u003Cp\u003E\u003C\u002Fp\u003E","imageUrl":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F31b\u002Fe68\u002F295\u002F31be6829578e7934fbc944396eb330b1.png","eventUrl":"https:\u002F\u002Fu.habr.com\u002Fcldr_gocloud","startDay":"2025-04-10","startTime":"10:00","finishDay":"2025-04-10","finishTime":"20:00","isOnline":true,"geo":["Москва"],"isArchive":false,"categories":[{"id":"2","titleHtml":"Разработка"},{"id":"4","titleHtml":"Администрирование"},{"id":"8","titleHtml":"Менеджмент"}],"tags":["конференция Cloud.ru","AI","ИИ","айти конференция","облачные хранилища"],"metadata":null},{"id":"516","titleHtml":"IT-конференция Merge Tatarstan 2025","descriptionHtml":"\u003Cp\u003EКрупнейшая региональная IT-конференция России собирает профессионалов со всей страны для нетворкинга, обмена опытом и поиска новых деловых контактов.\u003C\u002Fp\u003E\u003Cp\u003EMerge Tatarstan — это 7 тематических конференций на одной площадке, 2000 участников, более 170 спикеров-практиков, мастер-классы, воркшопы и BoF-сессии.\u003C\u002Fp\u003E\u003Cp\u003EК участию в конференции приглашаются разработчики, QA, тимлиды, Project\u002FProduct-менеджеры, маркетологи, аналитики, UI\u002FUX-дизайнеры, PR-специалисты, HR-менеджеры, владельцы бизнеса и начинающие специалисты.\u003C\u002Fp\u003E\u003Cp\u003E\u003C\u002Fp\u003E","imageUrl":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F0e9\u002F3a8\u002F3ec\u002F0e93a83ecea09f806d1df907ddb036a4.jpg","eventUrl":"https:\u002F\u002Fu.habr.com\u002Fcldr_tatarstan","startDay":"2025-04-25","startTime":"09:00","finishDay":"2025-04-26","finishTime":"19:30","isOnline":false,"geo":["Казань"],"isArchive":false,"categories":[{"id":"2","titleHtml":"Разработка"},{"id":"10","titleHtml":"Маркетинг"},{"id":"16","titleHtml":"Другое"}],"tags":["Разработка","IT","PR","UI\u002FUX","бизнес","маркетинг","аналитика"],"metadata":null},{"id":"610","titleHtml":"Летняя айти-тусовка Summer Merge","descriptionHtml":"\u003Cp\u003EЛетняя айти-тусовка возвращается.\u003C\u002Fp\u003E\u003Cp\u003EВырваться из рутины и сменить обстановку на несколько дней можно вместе с Summer Merge.&nbsp;\u003C\u002Fp\u003E\u003Cp\u003EСосновый лес, чистый воздух, живое общение с экспертами IT, спортивные состязания, мастер-классы, квесты, встречи с друзьями, новые знакомства, afterparty — забудьте про суету города и окунитесь в приятную атмосферу digital detox. В эти летние IT-выходные мы обещаем атмосферу ярких приключений.&nbsp;\u003C\u002Fp\u003E\u003Cp\u003EЖдём вас 20—22 июня в экопарке «Русский берег» на Summer Merge.\u003C\u002Fp\u003E","imageUrl":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F652\u002F12d\u002F998\u002F65212d998fb4939d9787bd9c726d2acb.png","eventUrl":"https:\u002F\u002Fu.habr.com\u002Fcldr_summermerge","startDay":"2025-06-20","finishDay":"2025-06-22","isOnline":false,"geo":["Ульяновская область"],"isArchive":false,"categories":[{"id":"2","titleHtml":"Разработка"},{"id":"16","titleHtml":"Другое"}],"tags":["летняя айти-тусовка","айти-кэмп","летний выезд для айтишников","Summer Merge"],"metadata":null}],"currentEvent":null,"eventsFilter":{"city":"all","timeStarted":null,"timeEnded":null}},"wysiwyg":{"WYSIWYGRulesRefs":null}};(function(){var s;(s=document.currentScript||document.scripts[document.scripts.length-1]).parentNode.removeChild(s);}());</script><script src="https://assets.habr.com/habr-web/js/chunk-vendors.3b11d41f.js" defer></script><script src="https://assets.habr.com/habr-web/js/app.7a97ea6d.js" defer></script></div>
    <div id="overlays"><!----><!--teleport anchor--><!----><!--teleport anchor--><!----><!--teleport anchor--><!----><!--teleport anchor--><!----><!--teleport anchor--><!----><!--teleport anchor--></div>
    
    
    <script async src="https://www.googletagmanager.com/gtag/js?id=G-S28W1WC23F"></script>
    <script>
      window.dataLayer = window.dataLayer || [];
      function gtag(){dataLayer.push(arguments);}
      gtag('js', new Date());
    </script>
  
  <script type="text/javascript" >
    (function(m,e,t,r,i,k,a){m[i]=m[i]||function(){(m[i].a=m[i].a||[]).push(arguments)};
    m[i].l=1*new Date();k=e.createElement(t),a=e.getElementsByTagName(t)[0],k.async=1,k.src=r,a.parentNode.insertBefore(k,a)})
    (window, document, "script", "https://mc.yandex.ru/metrika/tag.js", "ym");

  </script>
    <script type="text/javascript">
      window.addEventListener('load', function () {
        setTimeout(() => {
          const img = new Image();
          img.src = 'https://vk.com/rtrg?p=VK-RTRG-421343-57vKE';
        }, 0);
      });
    </script>
  
    </body>

    </html>
