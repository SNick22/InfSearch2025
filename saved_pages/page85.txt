<!DOCTYPE html>
<html lang="ru">

  <head>
    <title>Как новый компилятор K2 ускоряет компиляцию Kotlin на 94% &#x2F; Хабр</title>
<meta property="fb:app_id" content="444736788986613">
<meta property="fb:pages" content="472597926099084">
<meta name="twitter:card" content="summary_large_image">
<meta name="twitter:site" content="@habr_com">
<meta property="og:site_name" content="Хабр">
<link href="https://habr.com/ru/rss/post/813085/?fl=ru" type="application/rss+xml" title rel="alternate" name="rss">
<link href="https://habr.com/ru/companies/kts/articles/813085/" rel="canonical" data-hid="e3fa780">
<link rel="image_src" href="https://habrastorage.org/getpro/habr/upload_files/90f/8d0/1d9/90f8d01d9f8258baea6fa8177683e15b.png" data-hid="2a79c45">
<link rel="amphtml" href="https://habr.com/ru/amp/publications/813085/">
<meta property="og:title" content="Как новый компилятор K2 ускоряет компиляцию Kotlin на 94%">
<meta name="twitter:title" content="Как новый компилятор K2 ускоряет компиляцию Kotlin на 94%">
<meta name="aiturec:title" content="Как новый компилятор K2 ускоряет компиляцию Kotlin на 94%">
<meta name="description" content="Привет, меня зовут Мялкин Максим, я занимаюсь мобильной разработкой в KTS. Не за горами выпуск новой версии Kotlin 2.0, основной частью которого является изменение компилятора на K2.&nbsp; По замерам...">
<meta itemprop="description" content="Привет, меня зовут Мялкин Максим, я занимаюсь мобильной разработкой в KTS. Не за горами выпуск новой версии Kotlin 2.0, основной частью которого является изменение компилятора на K2.&nbsp; По замерам...">
<meta property="og:description" content="Привет, меня зовут Мялкин Максим, я занимаюсь мобильной разработкой в KTS. Не за горами выпуск новой версии Kotlin 2.0, основной частью которого является изменение компилятора на K2.&nbsp; По замерам...">
<meta name="twitter:description" content="Привет, меня зовут Мялкин Максим, я занимаюсь мобильной разработкой в KTS. Не за горами выпуск новой версии Kotlin 2.0, основной частью которого является изменение компилятора на K2.&nbsp; По замерам...">
<meta property="aiturec:description" content="Привет, меня зовут Мялкин Максим, я занимаюсь мобильной разработкой в KTS. Не за горами выпуск новой версии Kotlin 2.0, основной частью которого является изменение компилятора на K2.&nbsp; По замерам...">
<meta itemprop="image" content="https://habrastorage.org/getpro/habr/upload_files/90f/8d0/1d9/90f8d01d9f8258baea6fa8177683e15b.png">
<meta property="og:image" content="https://habrastorage.org/getpro/habr/upload_files/90f/8d0/1d9/90f8d01d9f8258baea6fa8177683e15b.png">
<meta property="og:image:width" content="1200">
<meta property="og:image:height" content="630">
<meta property="aiturec:image" content="https://habrastorage.org/getpro/habr/upload_files/90f/8d0/1d9/90f8d01d9f8258baea6fa8177683e15b.png">
<meta name="twitter:image" content="https://habrastorage.org/getpro/habr/upload_files/90f/8d0/1d9/90f8d01d9f8258baea6fa8177683e15b.png">
<meta property="vk:image" content="https://habrastorage.org/getpro/habr/upload_files/90f/8d0/1d9/90f8d01d9f8258baea6fa8177683e15b.png?format=vk">
<meta property="vk:image" content="https://habrastorage.org/getpro/habr/upload_files/90f/8d0/1d9/90f8d01d9f8258baea6fa8177683e15b.png?format=vk">
<meta property="aiturec:item_id" content="813085">
<meta property="aiturec:datetime" content="2024-05-08T13:39:14.000Z">
<meta content="https://habr.com/ru/companies/kts/articles/813085/" property="og:url">
<meta property="og:type" content="article">
<meta property="og:locale" content="ru_RU">
<meta property="og:image:width" content="1200">
<meta property="og:image:height" content="630">
<meta name="keywords" content="компиляторы, kotlin, k1, k2, релиз kotlin, kotlin 2.0, android, kmp">
<script type="application/ld+json" data-hid="1e0f0a2">{"@context":"http:\/\/schema.org","@type":"Article","mainEntityOfPage":{"@type":"WebPage","@id":"https:\/\/habr.com\/ru\/companies\/kts\/articles\/813085\/"},"headline":"Как новый компилятор K2 ускоряет компиляцию Kotlin на 94%","datePublished":"2024-05-08T16:39:14+03:00","dateModified":"2024-07-28T20:28:19+03:00","author":{"@type":"Person","name":"Мялкин Максим"},"publisher":{"@type":"Organization","name":"Habr","logo":{"@type":"ImageObject","url":"https:\/\/habrastorage.org\/webt\/a_\/lk\/9m\/a_lk9mjkccjox-zccjrpfolmkmq.png"}},"description":"Привет, меня зовут Мялкин Максим, я занимаюсь мобильной разработкой в KTS.Не за горами выпуск новой версии Kotlin 2.0, основной частью которого является изменени...","url":"https:\/\/habr.com\/ru\/companies\/kts\/articles\/813085\/#post-content-body","about":["c_kts","h_mobile_dev","h_android_dev","h_compilers","h_kotlin","f_develop"],"image":["https:\/\/habr.com\/share\/publication\/813085\/1056adc8ec4882d20f2cfd409566ea3e\/","https:\/\/habrastorage.org\/getpro\/habr\/upload_files\/6fb\/759\/1f6\/6fb7591f611b10770942a200f86839ef.png","https:\/\/habrastorage.org\/getpro\/habr\/upload_files\/270\/87c\/d74\/27087cd740cefa8036228a3fabb6ca55.png","https:\/\/habrastorage.org\/getpro\/habr\/upload_files\/202\/f74\/7c5\/202f747c54865c34df0132635279f51c.png","https:\/\/habrastorage.org\/getpro\/habr\/upload_files\/56e\/8b2\/853\/56e8b28531b3b0326d360f788f139ccb.png","https:\/\/habrastorage.org\/getpro\/habr\/upload_files\/1f5\/6c4\/f1e\/1f56c4f1e203bf04bb04fb29d8663a18.png","https:\/\/habrastorage.org\/getpro\/habr\/upload_files\/2af\/bfd\/412\/2afbfd412cd2a88b69f5b706e1c82cd8.png","https:\/\/habrastorage.org\/getpro\/habr\/upload_files\/572\/7f9\/705\/5727f97056517eff98516ca70f34d2bb.png","https:\/\/habrastorage.org\/getpro\/habr\/upload_files\/adb\/053\/2c7\/adb0532c76d3dd7f4af419179adb371a.png","https:\/\/habrastorage.org\/getpro\/habr\/upload_files\/33e\/6ab\/daa\/33e6abdaadc3bcc914c9994631c794b6.png","https:\/\/habrastorage.org\/getpro\/habr\/upload_files\/84b\/844\/f04\/84b844f04ff3b6d314c6090cfa366179.png","https:\/\/habrastorage.org\/getpro\/habr\/upload_files\/fb7\/6db\/748\/fb76db748ef1fbec2e7e8288de575e6d.png","https:\/\/habrastorage.org\/getpro\/habr\/upload_files\/de9\/320\/09d\/de932009d0f8cc2fd0fd1e386ae6e491.png","https:\/\/habrastorage.org\/getpro\/habr\/upload_files\/165\/821\/e8b\/165821e8b1855a9d51d6dbf38e93d51e.png","https:\/\/habrastorage.org\/getpro\/habr\/upload_files\/11b\/a47\/d11\/11ba47d11cf39386fc081444fd0a1c73.png","https:\/\/habrastorage.org\/getpro\/habr\/upload_files\/990\/679\/b56\/990679b5695fc4eb454e6f5f69b88d14.jpg","https:\/\/habrastorage.org\/getpro\/habr\/upload_files\/b06\/012\/0a7\/b060120a757af3fd4cb173261860d6d3.png","https:\/\/habrastorage.org\/getpro\/habr\/upload_files\/4c0\/7be\/40d\/4c07be40d527d5ac1c9c54e9d211135e.png","https:\/\/habrastorage.org\/getpro\/habr\/upload_files\/ece\/610\/25f\/ece61025f9a00c4e4606f0e8d9bb1c46.png","https:\/\/habrastorage.org\/getpro\/habr\/upload_files\/836\/1fd\/265\/8361fd265640179683030531eb4af37f.png","https:\/\/habrastorage.org\/getpro\/habr\/upload_files\/745\/b50\/65d\/745b5065de514b84b60da07976b05ad0.png","https:\/\/habrastorage.org\/getpro\/habr\/upload_files\/20e\/340\/2a3\/20e3402a3355374bcbf03cf3a99c238e.png","https:\/\/habrastorage.org\/getpro\/habr\/upload_files\/d51\/12a\/97d\/d5112a97d9581d6e903dc8ccb1e27fdf.png","https:\/\/habrastorage.org\/getpro\/habr\/upload_files\/a9b\/89f\/a7b\/a9b89fa7bb1d10a0c160659817323df8.png","https:\/\/habrastorage.org\/getpro\/habr\/upload_files\/f65\/1b1\/0c0\/f651b10c054bc941fb3516f04817e779.png","https:\/\/habrastorage.org\/getpro\/habr\/upload_files\/1e8\/868\/4e7\/1e88684e78583306c60d3baa8cc79948.png","https:\/\/habrastorage.org\/getpro\/habr\/upload_files\/10c\/ab4\/2c1\/10cab42c14a33d2d388845583ddf0049.png","https:\/\/habrastorage.org\/getpro\/habr\/upload_files\/9ea\/d4b\/700\/9ead4b70078c70c14a4d19c1d8d62f96.png","https:\/\/habrastorage.org\/getpro\/habr\/upload_files\/6dc\/4ba\/282\/6dc4ba2823a579a6e58c74e18ed50ed4.png","https:\/\/habrastorage.org\/getpro\/habr\/upload_files\/128\/67e\/571\/12867e5715f0fa5c6650a4a3715f9eb7.png","https:\/\/habrastorage.org\/getpro\/habr\/upload_files\/5f5\/0f6\/810\/5f50f68104937a2fbcb4f6cb3a90c1a1.png","https:\/\/habrastorage.org\/getpro\/habr\/upload_files\/57d\/17a\/34d\/57d17a34de9a0b9eef198ce7dcd0216e.png","https:\/\/habrastorage.org\/getpro\/habr\/upload_files\/48b\/6a1\/0e4\/48b6a10e4b25df66253d762008826cc0.png","https:\/\/habrastorage.org\/getpro\/habr\/upload_files\/06b\/521\/b96\/06b521b96545144de6567e249ac0d863.png","https:\/\/habrastorage.org\/getpro\/habr\/upload_files\/863\/3a4\/4e3\/8633a44e35800c2fdc31298245f43fe8.png","https:\/\/habrastorage.org\/getpro\/habr\/upload_files\/2e9\/14e\/f6f\/2e914ef6feb4ab75068486290e87bc95.png","https:\/\/habrastorage.org\/getpro\/habr\/upload_files\/c78\/534\/63e\/c7853463ed3b31b4e99c4698a6f4b4ab.png","https:\/\/habrastorage.org\/getpro\/habr\/upload_files\/98b\/e2d\/008\/98be2d00820accf6e676d0332f0f4f90.png","https:\/\/habrastorage.org\/getpro\/habr\/upload_files\/991\/90e\/0a2\/99190e0a2a44ffce6f512fe4a0aa4163.png","https:\/\/habrastorage.org\/getpro\/habr\/upload_files\/674\/cfd\/3bd\/674cfd3bd2547984874c6d26b1b7c661.png","https:\/\/habrastorage.org\/getpro\/habr\/upload_files\/1e8\/495\/dda\/1e8495dda92dc53af904e3a5756b14ee.png","https:\/\/habrastorage.org\/getpro\/habr\/upload_files\/76d\/a8f\/ea9\/76da8fea949241a9417e3c6013d57c2a.png"]}</script>
    <meta charset="UTF-8">
    <meta name="viewport"
      content="width=device-width,initial-scale=1.0,viewport-fit=cover,maximum-scale=1,user-scalable=0">
    <meta name="referrer" content="unsafe-url">
    <style>
      /* cyrillic-ext */
      @font-face {
        font-family: 'Fira Sans';
        font-style: normal;
        font-weight: 400;
        font-display: swap;
        src: url(https://fonts.gstatic.com/s/firasans/v17/va9E4kDNxMZdWfMOD5VvmojLazX3dGTP.woff2) format('woff2');
        unicode-range: U+0460-052F, U+1C80-1C88, U+20B4, U+2DE0-2DFF, U+A640-A69F, U+FE2E-FE2F;
      }

      /* cyrillic */
      @font-face {
        font-family: 'Fira Sans';
        font-style: normal;
        font-weight: 400;
        font-display: swap;
        src: url(https://fonts.gstatic.com/s/firasans/v17/va9E4kDNxMZdWfMOD5Vvk4jLazX3dGTP.woff2) format('woff2');
        unicode-range: U+0301, U+0400-045F, U+0490-0491, U+04B0-04B1, U+2116;
      }

      /* latin-ext */
      @font-face {
        font-family: 'Fira Sans';
        font-style: normal;
        font-weight: 400;
        font-display: swap;
        src: url(https://fonts.gstatic.com/s/firasans/v17/va9E4kDNxMZdWfMOD5VvmYjLazX3dGTP.woff2) format('woff2');
        unicode-range: U+0100-02AF, U+0304, U+0308, U+0329, U+1E00-1E9F, U+1EF2-1EFF, U+2020, U+20A0-20AB, U+20AD-20C0, U+2113, U+2C60-2C7F, U+A720-A7FF;
      }

      /* latin */
      @font-face {
        font-family: 'Fira Sans';
        font-style: normal;
        font-weight: 400;
        font-display: swap;
        src: url(https://fonts.gstatic.com/s/firasans/v17/va9E4kDNxMZdWfMOD5Vvl4jLazX3dA.woff2) format('woff2');
        unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+0304, U+0308, U+0329, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;
      }

      /* cyrillic-ext */
      @font-face {
        font-family: 'Fira Sans';
        font-style: normal;
        font-weight: 500;
        font-display: swap;
        src: url(https://fonts.gstatic.com/s/firasans/v17/va9B4kDNxMZdWfMOD5VnZKveSxf6Xl7Gl3LX.woff2) format('woff2');
        unicode-range: U+0460-052F, U+1C80-1C88, U+20B4, U+2DE0-2DFF, U+A640-A69F, U+FE2E-FE2F;
      }

      /* cyrillic */
      @font-face {
        font-family: 'Fira Sans';
        font-style: normal;
        font-weight: 500;
        font-display: swap;
        src: url(https://fonts.gstatic.com/s/firasans/v17/va9B4kDNxMZdWfMOD5VnZKveQhf6Xl7Gl3LX.woff2) format('woff2');
        unicode-range: U+0301, U+0400-045F, U+0490-0491, U+04B0-04B1, U+2116;
      }

      /* latin-ext */
      @font-face {
        font-family: 'Fira Sans';
        font-style: normal;
        font-weight: 500;
        font-display: swap;
        src: url(https://fonts.gstatic.com/s/firasans/v17/va9B4kDNxMZdWfMOD5VnZKveSBf6Xl7Gl3LX.woff2) format('woff2');
        unicode-range: U+0100-02AF, U+0304, U+0308, U+0329, U+1E00-1E9F, U+1EF2-1EFF, U+2020, U+20A0-20AB, U+20AD-20C0, U+2113, U+2C60-2C7F, U+A720-A7FF;
      }

      /* latin */
      @font-face {
        font-family: 'Fira Sans';
        font-style: normal;
        font-weight: 500;
        font-display: swap;
        src: url(https://fonts.gstatic.com/s/firasans/v17/va9B4kDNxMZdWfMOD5VnZKveRhf6Xl7Glw.woff2) format('woff2');
        unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+0304, U+0308, U+0329, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;
      }

      /* cyrillic-ext */
      @font-face {
        font-family: 'Fira Sans';
        font-style: normal;
        font-weight: 700;
        font-display: swap;
        src: url(https://fonts.gstatic.com/s/firasans/v17/va9B4kDNxMZdWfMOD5VnLK3eSxf6Xl7Gl3LX.woff2) format('woff2');
        unicode-range: U+0460-052F, U+1C80-1C88, U+20B4, U+2DE0-2DFF, U+A640-A69F, U+FE2E-FE2F;
      }

      /* cyrillic */
      @font-face {
        font-family: 'Fira Sans';
        font-style: normal;
        font-weight: 700;
        font-display: swap;
        src: url(https://fonts.gstatic.com/s/firasans/v17/va9B4kDNxMZdWfMOD5VnLK3eQhf6Xl7Gl3LX.woff2) format('woff2');
        unicode-range: U+0301, U+0400-045F, U+0490-0491, U+04B0-04B1, U+2116;
      }

      /* latin-ext */
      @font-face {
        font-family: 'Fira Sans';
        font-style: normal;
        font-weight: 700;
        font-display: swap;
        src: url(https://fonts.gstatic.com/s/firasans/v17/va9B4kDNxMZdWfMOD5VnLK3eSBf6Xl7Gl3LX.woff2) format('woff2');
        unicode-range: U+0100-02AF, U+0304, U+0308, U+0329, U+1E00-1E9F, U+1EF2-1EFF, U+2020, U+20A0-20AB, U+20AD-20C0, U+2113, U+2C60-2C7F, U+A720-A7FF;
      }

      /* latin */
      @font-face {
        font-family: 'Fira Sans';
        font-style: normal;
        font-weight: 700;
        font-display: swap;
        src: url(https://fonts.gstatic.com/s/firasans/v17/va9B4kDNxMZdWfMOD5VnLK3eRhf6Xl7Glw.woff2) format('woff2');
        unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+0304, U+0308, U+0329, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;
      }
    </style>
    <link rel="preload" href="https://assets.habr.com/habr-web/css/theme/light-v1.css" as="style" media="(prefers-color-scheme: light)" /><link rel="preload" href="https://assets.habr.com/habr-web/css/theme/dark-v1.css" as="style" media="(prefers-color-scheme: dark)" /><link id="light-colors" rel="stylesheet" href="https://assets.habr.com/habr-web/css/theme/light-v1.css" media="(prefers-color-scheme: light)" /><link id="dark-colors" rel="stylesheet" href="https://assets.habr.com/habr-web/css/theme/dark-v1.css" media="(prefers-color-scheme: dark)" />
    <script>window.i18nFetch = new Promise((res, rej) => {
          const xhr = new XMLHttpRequest();
          xhr.open('GET', '/js/i18n/ru-compiled.35b2fec11bb79a62419ab67779c2dd82.json');
          xhr.responseType = 'json';
          xhr.onload = function(e) {
            if (this.status === 200) {
              res({ru: xhr.response});
            } else {
              rej(e);
            }
          };
          xhr.send();
        });</script>
    <style>
      .grecaptcha-badge {
        visibility: hidden;
      }
    </style>
    <meta name="habr-version" content="2.233.0">
    
    <meta name="apple-mobile-web-app-status-bar-style" content="#303b44">
    <meta name="msapplication-TileColor" content="#629FBC">
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="mobile-web-app-capable" content="yes">
    <link rel="shortcut icon" type="image/png" sizes="16x16" href="https://assets.habr.com/habr-web/img/favicons/favicon-16.png">
    <link rel="shortcut icon" type="image/png" sizes="32x32" href="https://assets.habr.com/habr-web/img/favicons/favicon-32.png">
    <link rel="apple-touch-icon" type="image/png" sizes="76x76" href="https://assets.habr.com/habr-web/img/favicons/apple-touch-icon-76.png">
    <link rel="apple-touch-icon" type="image/png" sizes="120x120" href="https://assets.habr.com/habr-web/img/favicons/apple-touch-icon-120.png">
    <link rel="apple-touch-icon" type="image/png" sizes="152x152" href="https://assets.habr.com/habr-web/img/favicons/apple-touch-icon-152.png">
    <link rel="apple-touch-icon" type="image/png" sizes="180x180" href="https://assets.habr.com/habr-web/img/favicons/apple-touch-icon-180.png">
    <link rel="apple-touch-icon" type="image/png" sizes="256x256" href="https://assets.habr.com/habr-web/img/favicons/apple-touch-icon-256.png">
    <link rel="apple-touch-startup-image"
      media="screen and (device-width: 320px) and (device-height: 568px) and (-webkit-device-pixel-ratio: 2) and (orientation: landscape)"
      href="https://assets.habr.com/habr-web/img/splashes/splash_1136x640.png">
    <link rel="apple-touch-startup-image"
      media="screen and (device-width: 375px) and (device-height: 812px) and (-webkit-device-pixel-ratio: 3) and (orientation: landscape)"
      href="https://assets.habr.com/habr-web/img/splashes/splash_2436x1125.png">
    <link rel="apple-touch-startup-image"
      media="screen and (device-width: 414px) and (device-height: 896px) and (-webkit-device-pixel-ratio: 2) and (orientation: landscape)"
      href="https://assets.habr.com/habr-web/img/splashes/splash_1792x828.png">
    <link rel="apple-touch-startup-image"
      media="screen and (device-width: 414px) and (device-height: 896px) and (-webkit-device-pixel-ratio: 2) and (orientation: portrait)"
      href="https://assets.habr.com/habr-web/img/splashes/splash_828x1792.png">
    <link rel="apple-touch-startup-image"
      media="screen and (device-width: 375px) and (device-height: 667px) and (-webkit-device-pixel-ratio: 2) and (orientation: landscape)"
      href="https://assets.habr.com/habr-web/img/splashes/splash_1334x750.png">
    <link rel="apple-touch-startup-image"
      media="screen and (device-width: 414px) and (device-height: 896px) and (-webkit-device-pixel-ratio: 3) and (orientation: portrait)"
      href="https://assets.habr.com/habr-web/img/splashes/splash_1242x2668.png">
    <link rel="apple-touch-startup-image"
      media="screen and (device-width: 414px) and (device-height: 736px) and (-webkit-device-pixel-ratio: 3) and (orientation: landscape)"
      href="https://assets.habr.com/habr-web/img/splashes/splash_2208x1242.png">
    <link rel="apple-touch-startup-image"
      media="screen and (device-width: 375px) and (device-height: 812px) and (-webkit-device-pixel-ratio: 3) and (orientation: portrait)"
      href="https://assets.habr.com/habr-web/img/splashes/splash_1125x2436.png">
    <link rel="apple-touch-startup-image"
      media="screen and (device-width: 414px) and (device-height: 736px) and (-webkit-device-pixel-ratio: 3) and (orientation: portrait)"
      href="https://assets.habr.com/habr-web/img/splashes/splash_1242x2208.png">
    <link rel="apple-touch-startup-image"
      media="screen and (device-width: 1024px) and (device-height: 1366px) and (-webkit-device-pixel-ratio: 2) and (orientation: landscape)"
      href="https://assets.habr.com/habr-web/img/splashes/splash_2732x2048.png">
    <link rel="apple-touch-startup-image"
      media="screen and (device-width: 414px) and (device-height: 896px) and (-webkit-device-pixel-ratio: 3) and (orientation: landscape)"
      href="https://assets.habr.com/habr-web/img/splashes/splash_2688x1242.png">
    <link rel="apple-touch-startup-image"
      media="screen and (device-width: 834px) and (device-height: 1112px) and (-webkit-device-pixel-ratio: 2) and (orientation: landscape)"
      href="https://assets.habr.com/habr-web/img/splashes/splash_2224x1668.png">
    <link rel="apple-touch-startup-image"
      media="screen and (device-width: 375px) and (device-height: 667px) and (-webkit-device-pixel-ratio: 2) and (orientation: portrait)"
      href="https://assets.habr.com/habr-web/img/splashes/splash_750x1334.png">
    <link rel="apple-touch-startup-image"
      media="screen and (device-width: 1024px) and (device-height: 1366px) and (-webkit-device-pixel-ratio: 2) and (orientation: portrait)"
      href="https://assets.habr.com/habr-web/img/splashes/splash_2048x2732.png">
    <link rel="apple-touch-startup-image"
      media="screen and (device-width: 834px) and (device-height: 1194px) and (-webkit-device-pixel-ratio: 2) and (orientation: landscape)"
      href="https://assets.habr.com/habr-web/img/splashes/splash_2388x1668.png">
    <link rel="apple-touch-startup-image"
      media="screen and (device-width: 834px) and (device-height: 1112px) and (-webkit-device-pixel-ratio: 2) and (orientation: portrait)"
      href="https://assets.habr.com/habr-web/img/splashes/splash_1668x2224.png">
    <link rel="apple-touch-startup-image"
      media="screen and (device-width: 320px) and (device-height: 568px) and (-webkit-device-pixel-ratio: 2) and (orientation: portrait)"
      href="https://assets.habr.com/habr-web/img/splashes/splash_640x1136.png">
    <link rel="apple-touch-startup-image"
      media="screen and (device-width: 834px) and (device-height: 1194px) and (-webkit-device-pixel-ratio: 2) and (orientation: portrait)"
      href="https://assets.habr.com/habr-web/img/splashes/splash_1668x2388.png">
    <link rel="apple-touch-startup-image"
      media="screen and (device-width: 768px) and (device-height: 1024px) and (-webkit-device-pixel-ratio: 2) and (orientation: landscape)"
      href="https://assets.habr.com/habr-web/img/splashes/splash_2048x1536.png">
    <link rel="apple-touch-startup-image"
      media="screen and (device-width: 768px) and (device-height: 1024px) and (-webkit-device-pixel-ratio: 2) and (orientation: portrait)"
      href="https://assets.habr.com/habr-web/img/splashes/splash_1536x2048.png">
    <link rel="mask-icon" color="#77a2b6" href="https://assets.habr.com/habr-web/img/favicons/apple-touch-icon-120.svg">
    <link crossorigin="use-credentials" href="/manifest.webmanifest" rel="manifest">
    <script async src="https://unpkg.com/pwacompat" crossorigin="anonymous"></script>
    <script>window.yaContextCb = window.yaContextCb || []</script>
    <script src="https://yandex.ru/ads/system/context.js" async></script>
  <link rel="preload" href="https://assets.habr.com/habr-web/css/chunk-vendors.04465f7c.css" as="style"><link rel="preload" href="https://assets.habr.com/habr-web/js/chunk-vendors.3b11d41f.js" as="script"><link rel="preload" href="https://assets.habr.com/habr-web/css/app.20959a76.css" as="style"><link rel="preload" href="https://assets.habr.com/habr-web/js/app.7a97ea6d.js" as="script"><link rel="stylesheet" href="https://assets.habr.com/habr-web/css/chunk-vendors.04465f7c.css"><link rel="stylesheet" href="https://assets.habr.com/habr-web/css/app.20959a76.css"></head>
  <body>
    
    <div id="mount"><div id="app" data-async-called="true"><div class="tm-layout__wrapper"><!--[--><!----><div></div><div class="tm-feature tm-feature"><!----></div><header class="tm-header" data-test-id="header"><div class="tm-page-width"><!--[--><div class="tm-header__container"><div class="tm-header__burger-nav" data-test-id="burger-nav"><button class="tm-header__button tm-header__button_burger" type="button"><svg class="tm-svg-img tm-header__icon tm-header__icon-burger" height="16" width="16"><title>Меню</title><use xlink:href="/img/megazord-v28.371b7fa3..svg#header-burger"></use></svg></button></div><span class="tm-header__logo-wrap"><a class="tm-header__logo tm-header__logo_hl-ru tm-header__logo" href="/ru/"><svg class="tm-svg-img tm-header__icon" height="16" width="16"><title>Хабр</title><use xlink:href="/img/habr-logo-ru.svg#logo"></use></svg></a><span style="display:none;" class="tm-header__beta-sign">β</span></span><!----><div class="tm-header-user-menu tm-header_user-menu"><a href="/ru/search/" class="tm-header-user-menu__item tm-header-user-menu__search" data-test-id="search-button"><svg class="tm-svg-img tm-header-user-menu__icon tm-header-user-menu__icon_search" height="24" width="24"><title>Поиск</title><use xlink:href="/img/megazord-v28.371b7fa3..svg#search"></use></svg></a><!----><!----><div class="tm-header-user-menu__item tm-header-user-menu__write"><div><svg class="tm-svg-img tm-header-user-menu__icon tm-header-user-menu__icon_write" height="24" width="24"><title>Написать публикацию</title><use xlink:href="/img/megazord-v28.371b7fa3..svg#write"></use></svg></div><!----></div><!--[--><div class="tm-header-user-menu__item"><button class="tm-header-user-menu__toggle" data-test-id="user-menu-settings"><svg class="tm-svg-img tm-header-user-menu__icon" height="24" width="24"><title>Настройки</title><use xlink:href="/img/megazord-v28.371b7fa3..svg#page-settings"></use></svg></button></div><a href="https://habr.com/kek/v1/auth/habrahabr/?back=/ru/companies/kts/articles/813085/&amp;hl=ru" rel="nofollow" class="tm-header-user-menu__item"><!--[--><button class="btn btn_solid btn_small tm-header-user-menu__login" type="button"><!--[-->Войти<!--]--></button><!--]--></a><!--]--><!----><!--teleport start--><!--teleport end--><!----></div></div><!--]--></div></header><div class="tm-layout"><div class="tm-page-progress-bar"></div><!----><!----><div class="tm-page-width"><!--[--><!--]--></div><main class="tm-layout__container"><div class="tm-page" hl="ru" companyname="kts" data-async-called="true" style="--0c809c5a:16px;--a086013e:100%;--7c457026:0;"><div class="tm-page-width"><!--[--><div class="tm-page__header"><!--[--><div class="tm-company-card__branding tm-company-card__branding_loading tm-company-article__branding" data-test-id="company-card-branding"><div class="tm-company-card__branding-placeholder"><!----></div><a href="https://kts.studio"><img class="tm-company-card__branding-image" src="//habrastorage.org/getpro/habr/branding/c23/a62/3c3/c23a623c393d565412dad1b298427cff.jpg"></a></div><!--]--></div><div class="tm-page__wrapper"><div class="tm-page__main_has-sidebar tm-page__main"><div class="pull-down"><!----><div class="pull-down__header" style="height:0px;"><div class="pull-down__content" style="bottom:10px;"><svg class="tm-svg-img pull-down__icon pull-down__arrow" height="24" width="24"><title>Обновить</title><use xlink:href="/img/megazord-v28.371b7fa3..svg#pull-arrow"></use></svg></div></div><!--[--><!--[--><div class="tm-article-presenter"><!--[--><!--]--><div class="tm-article-presenter__body" data-test-id="article-body"><div class="tm-misprint-area"><div class="tm-misprint-area__wrapper"><!--[--><article class="tm-article-presenter__content tm-article-presenter__content_narrow"><!--[--><div class="tm-article-presenter__header"><!--[--><!--]--><div class="tm-article-snippet tm-article-snippet tm-article-presenter__snippet"><!--[--><!--]--><div class="tm-article-snippet__meta-container"><div class="tm-article-snippet__meta"><span class="tm-user-info tm-article-snippet__author"><a href="/ru/users/MAX1993M/" class="tm-user-info__userpic" data-test-id="user-info-pic" title="MAX1993M"><div class="tm-entity-image"><img alt="" class="tm-entity-image__pic" height="32" src="//habrastorage.org/r/w64/getpro/habr/avatars/a43/109/5a1/a431095a1cb7f4867897a9f7f8b18890.jpg" width="32"></div></a><span class="tm-user-info__user tm-user-info__user_appearance-default" data-test-id="user-info-description"><a href="/ru/users/MAX1993M/" class="tm-user-info__username">MAX1993M <!----></a><!--[--><span class="tm-article-datetime-published"><time datetime="2024-05-08T13:39:14.000Z" title="2024-05-08, 16:39">8  мая  2024 в 16:39</time></span><!--]--></span></span></div><!----></div><h1 class="tm-title tm-title_h1" lang="ru" data-test-id="articleTitle"><span>Как новый компилятор K2 ускоряет компиляцию Kotlin на 94%</span></h1><div class="tm-article-snippet__stats" data-test-id="articleStats"><div class="tm-article-complexity tm-article-complexity_complexity-medium"><span class="tm-svg-icon__wrapper tm-article-complexity__icon"><svg class="tm-svg-img tm-svg-icon" height="24" width="24"><title>Уровень сложности</title><use xlink:href="/img/megazord-v28.371b7fa3..svg#complexity-medium"></use></svg></span><span class="tm-article-complexity__label">Средний</span></div><div class="tm-article-reading-time"><span class="tm-svg-icon__wrapper tm-article-reading-time__icon"><svg class="tm-svg-img tm-svg-icon" height="24" width="24"><title>Время на прочтение</title><use xlink:href="/img/megazord-v28.371b7fa3..svg#clock"></use></svg></span><span class="tm-article-reading-time__label">10 мин</span></div><span class="tm-icon-counter tm-data-icons__item"><svg class="tm-svg-img tm-icon-counter__icon" height="24" width="24"><title>Количество просмотров</title><use xlink:href="/img/megazord-v28.371b7fa3..svg#counter-views"></use></svg><span class="tm-icon-counter__value" title="15361">15K</span></span></div><div class="tm-publication-hubs__container" data-test-id="articleHubsList"><div class="tm-publication-hubs"><!--[--><span class="tm-publication-hub__link-container"><a href="/ru/companies/kts/articles/" class="tm-publication-hub__link"><!--[--><span>Блог компании KTS</span><!----><!--]--></a></span><span class="tm-publication-hub__link-container"><a href="/ru/hubs/mobile_dev/" class="tm-publication-hub__link"><!--[--><span>Разработка мобильных приложений</span><span class="tm-article-snippet__profiled-hub" title="Профильный хаб">*</span><!--]--></a></span><span class="tm-publication-hub__link-container"><a href="/ru/hubs/android_dev/" class="tm-publication-hub__link"><!--[--><span>Разработка под Android</span><span class="tm-article-snippet__profiled-hub" title="Профильный хаб">*</span><!--]--></a></span><span class="tm-publication-hub__link-container"><a href="/ru/hubs/compilers/" class="tm-publication-hub__link"><!--[--><span>Компиляторы</span><span class="tm-article-snippet__profiled-hub" title="Профильный хаб">*</span><!--]--></a></span><span class="tm-publication-hub__link-container"><a href="/ru/hubs/kotlin/" class="tm-publication-hub__link"><!--[--><span>Kotlin</span><span class="tm-article-snippet__profiled-hub" title="Профильный хаб">*</span><!--]--></a></span><!--]--></div></div><div class="tm-article-labels" data-test-id="articleLabels"><div class="tm-article-labels__container"><div class="tm-publication-label tm-publication-label_variant-review"><span>Обзор</span></div><!--[--><div class="tm-publication-label tm-publication-label_variant-translation"><span>Перевод</span></div><!--]--></div></div><!----><!----></div></div><!--[--><div class="tm-article-presenter__origin"><a class="tm-article-presenter__origin-link" href="https://www.youtube.com/watch?v=wUGfuWHCqrc&amp;ab_channel=KotlinbyJetBrains" target="_blank">Автор оригинала: <span>Amanda Hinchman-Dominguez</span></a></div><div class="tm-article-body" data-gallery-root lang="ru"><div><!--[--><!--]--></div><div id="post-content-body"><div><div class="article-formatted-body article-formatted-body article-formatted-body_version-2"><div xmlns="http://www.w3.org/1999/xhtml"><figure class="full-width "><img src="https://habrastorage.org/r/w1560/getpro/habr/upload_files/6fb/759/1f6/6fb7591f611b10770942a200f86839ef.png" width="2438" height="1369" data-src="https://habrastorage.org/getpro/habr/upload_files/6fb/759/1f6/6fb7591f611b10770942a200f86839ef.png"/></figure><p>Привет, меня зовут Мялкин Максим, я занимаюсь мобильной разработкой в <a href="https://kts.tech/"><u>KTS.</u></a></p><p>Не за горами выпуск новой версии Kotlin 2.0, основной частью которого является изменение компилятора на K2. </p><p><a href="https://blog.jetbrains.com/kotlin/2024/04/k2-compiler-performance-benchmarks-and-how-to-measure-them-on-your-projects/"><u>По замерам JB</u></a>, K2 ускоряет компиляцию на 94%. Также он позволит ускорить разработку новых языковых фич и унифицировать все платформы, предоставляя улучшенную архитектуру для мультиплатформенных проектов.</p><p>Но мало кто погружался в то, как работает K2, и чем он отличается от K1. </p><p>Эта статья более освещает нюансы работы компилятора, которые будут полезны разработчикам для понимания, что же JB улучшают под капотом, и как это работает.</p><p>Контент статьи основывается на <a href="https://www.youtube.com/watch?v=wUGfuWHCqrc"><u>выступлении</u></a> и <a href="https://www.youtube.com/watch?v=iTdJJq_LyoY"><u>овервью</u></a>, но с добавлением дополнительной информации.</p><h2>Оглавление  </h2><ul><li><p><a href="#1">Как работает компилятор</a></p></li><li><p><a href="#2">Frontend  </a></p><ul><li><p><a href="#3">Реализация K1  </a></p><ul><li><p><a href="#4">Как работает K1  </a></p></li><li><p><a href="#5">Parsing Phase  </a></p><ul><li><p><a href="#6">Задача синтаксического парсинга  </a></p></li><li><p><a href="#7"> Этапы Parsing phase  </a></p></li></ul></li><li><p><a href="#8">Resolution Phase  </a></p><ul><li><p><a href="#9">Задача семантического парсинга</a>  </p></li><li><p><a href="#10">Этапы Resolution Phase  </a></p></li></ul></li><li><p><a href="#11">Проблемы K1 </a> </p></li></ul></li><li><p><a href="#12">Реализация K2  </a></p><ul><li><p><a href="#13">Как работает K2  </a></p><ul><li><p><a href="#14">Parsing  </a></p></li><li><p><a href="#15">Psi2Fir  </a></p></li><li><p><a href="#16">Resolution  </a></p></li><li><p><a href="#17">Checking  </a></p></li><li><p><a href="#18">Fir2Ir  </a></p></li></ul></li></ul></li><li><p><a href="#19">Визуальное сравнение результатов K1 и K2   </a></p></li></ul></li><li><p><a href="#20">Backend  </a></p><ul><li><p><a href="#22">Цели улучшения Backend  </a></p></li><li><p><a href="#23">Как работает Backend  </a></p><ul><li><p><a href="#24">IR </a> </p></li><li><p><a href="#24">IR lowering  </a></p></li><li><p><a href="#26">Target code </a> </p></li></ul></li></ul></li><li><p><a href="#27">Выводы</a>  </p></li><li><p><a href="#27">Дополнительные материалы  </a><br/></p></li></ul><a class="anchor" name="1" id="1"></a><h2>Как работает компилятор</h2><p>Для начала поговорим о компиляторах в целом. По сути, <strong>компилятор </strong>— это программа. Она принимает код на языке программирования и превращает его в машинный код, который компьютер может исполнить.</p><p>Чтобы превратить исходный код в машинный, компилятор проводит несколько промежуточных преобразований. Если очень упростить, то компилятор делает две вещи:</p><ul><li><p>меняет формат данных (compiling)</p></li><li><p>упрощает его (lowering)</p></li></ul><figure class="full-width "><img src="https://habrastorage.org/r/w1560/getpro/habr/upload_files/270/87c/d74/27087cd740cefa8036228a3fabb6ca55.png" width="2020" height="1218" data-src="https://habrastorage.org/getpro/habr/upload_files/270/87c/d74/27087cd740cefa8036228a3fabb6ca55.png"/></figure><p>Иногда стандартных функций Kotlin недостаточно. В таких случаях разработчики выходят за рамки стандартных инструментов и используют <strong>плагины компилятора</strong>.</p><p>Плагины встраиваются в работу компилятора Kotlin на различных фазах компиляции и меняют стандартное преобразование кода компилятором. </p><figure class=""><img src="https://habrastorage.org/r/w1560/getpro/habr/upload_files/202/f74/7c5/202f747c54865c34df0132635279f51c.png" width="602" height="319" data-src="https://habrastorage.org/getpro/habr/upload_files/202/f74/7c5/202f747c54865c34df0132635279f51c.png"/></figure><blockquote><p>Плагины компилятора используют такие библиотек как Jetpack Compose, Kotlinx serialization.</p></blockquote><p>Kotlin компилятор состоит из 2 частей:</p><ul><li><p>Frontend</p><ul><li><p>отвечает за построение <strong>синтаксического дерева (структуры кода)</strong> и добавление <strong>семантической информации (смысл кода)</strong></p></li></ul></li><li><p>Backend</p><ul><li><p>отвечает за генерацию кода для целевой (target) платформы: JVM, JS, Native, WASM (экспериментальный)</p></li></ul></li></ul><figure class="full-width "><img src="https://habrastorage.org/r/w1560/getpro/habr/upload_files/56e/8b2/853/56e8b28531b3b0326d360f788f139ccb.png" width="1972" height="1082" data-src="https://habrastorage.org/getpro/habr/upload_files/56e/8b2/853/56e8b28531b3b0326d360f788f139ccb.png"/></figure><p>Остановимся подробнее на каждой из частей.</p><a class="anchor" name="2" id="2"></a><h2>Frontend  </h2><p>У компилятора Kotlin есть две фронтенд-реализации: </p><ul><li><p>K1 (FE10-) </p></li><li><p>K2 (Fir-)</p></li></ul><p>Упрощенно весь процесс работы фронтенда выглядит так:</p><ul><li><p>Компилятор принимает исходный код </p></li><li><p>Производит синтаксический и семантический анализ кода</p></li><li><p>Отправляет данные на бэкенд для последующей генерации IR (Intermediate representation) и целевого кода платформы (target)</p></li></ul><figure class="full-width "><img src="https://habrastorage.org/r/w1560/getpro/habr/upload_files/1f5/6c4/f1e/1f56c4f1e203bf04bb04fb29d8663a18.png" width="1600" height="842" data-src="https://habrastorage.org/getpro/habr/upload_files/1f5/6c4/f1e/1f56c4f1e203bf04bb04fb29d8663a18.png"/></figure><p>Обе реализации похожи, но K2 вводит дополнительное форматирование данных перед тем, как отправить преобразованный код на бэкенд. </p><a class="anchor" name="3" id="3"></a><h2>Реализация K1</h2><figure class="full-width "><img src="https://habrastorage.org/r/w1560/getpro/habr/upload_files/2af/bfd/412/2afbfd412cd2a88b69f5b706e1c82cd8.png" width="2052" height="592" data-src="https://habrastorage.org/getpro/habr/upload_files/2af/bfd/412/2afbfd412cd2a88b69f5b706e1c82cd8.png"/></figure><p>Реализация K1 работает c:</p><ul><li><p><a href="https://plugins.jetbrains.com/docs/intellij/psi.html"><strong><u>PSI</u></strong></a><strong> </strong>(Programming Structure Interface)</p><ul><li><p>PSI — это слой платформы IntelliJ, который занимается парсингом файлов и созданием синтаксических и семантических моделей кода (что такое синтаксис и семантика рассмотрим позже)</p></li></ul></li><li><p><a href="https://github.com/JetBrains/kotlin/tree/c5e70c7d3f1d3e75e9bd4be74bd1c9e488852471/core/descriptors/src/org/jetbrains/kotlin/descriptors"><strong><u>Дескрипторами</u></strong></a></p><ul><li><p>В зависимости от типа элемента дескрипторы могут содержать разную информацию о нем. Например дескриптор класса: контент класса, overrides, companion object и тд.</p></li></ul></li><li><p><a href="https://github.com/JetBrains/kotlin/blob/master/compiler/frontend/src/org/jetbrains/kotlin/resolve/BindingContext.java"><strong><u>BindingContext</u></strong></a><strong> </strong>— это Map, которая содержит информацию о программе и дополняет PSI.</p></li></ul><p>Во время обработки K1 отправляет <strong>PSI</strong> и <strong>BindingContext</strong> на Backend, который на входе использует преобразование PSI в IR (Psi2Ir) для дальнейшей работы. </p><a class="anchor" name="4" id="4"></a><h4>Как работает K1</h4><p>Общая схема работы выглядит следующим образом</p><figure class="full-width "><img src="https://habrastorage.org/r/w1560/getpro/habr/upload_files/572/7f9/705/5727f97056517eff98516ca70f34d2bb.png" width="1325" height="811" data-src="https://habrastorage.org/getpro/habr/upload_files/572/7f9/705/5727f97056517eff98516ca70f34d2bb.png"/></figure><p>Есть 2 фазы: </p><ul><li><p><strong>Parsing Phase</strong> — разбирает что именно написал разработчик. На этой фазе еще неизвестно, будет ли компилироваться написанный код. Здесь проверяется, что код написан <strong>синтаксически</strong> верно.</p></li><li><p><strong>Resolution Phase</strong> — производит анализ, необходимый для понимания, будет ли код компилироваться и является ли он <strong>семантически</strong> правильным (<a href="https://docs.google.com/document/d/17dBSxlXRW7PRD92QZGcGeotnsPSOsp0NSdnFXXZ41sg/edit"><u>более детальный разбор Resolution Phase</u></a>).</p></li></ul><p>Разберём дальше разницу между синтаксисом и семантикой.</p><p>Чтобы разобраться в работе компилятора K1, предположим, что у нас есть исходный код </p><pre><code class="kotlin">fun two() = 2 </code></pre><p>Пока что для компилятора это только строка текста.  </p><a class="anchor" name="5" id="5"></a><h4>Parsing Phase</h4><a class="anchor" name="6" id="6"></a><h3>Задача синтаксического парсинга</h3><p><strong>Задача парсинга — </strong>проверить <strong>структуру</strong> программы и убедиться, что она верная и следует <a href="https://kotlinlang.org/docs/reference/grammar.html"><strong><u>грамматическим</u></strong></a><strong> правилам</strong> языка. </p><p>Пример:</p><figure class=""><img src="https://habrastorage.org/r/w1560/getpro/habr/upload_files/adb/053/2c7/adb0532c76d3dd7f4af419179adb371a.png" width="441" height="228" data-src="https://habrastorage.org/getpro/habr/upload_files/adb/053/2c7/adb0532c76d3dd7f4af419179adb371a.png"/></figure><a class="anchor" name="7" id="7"></a><h3>Этапы Parsing phase</h3><figure class="full-width "><img src="https://habrastorage.org/r/w1560/getpro/habr/upload_files/33e/6ab/daa/33e6abdaadc3bcc914c9994631c794b6.png" width="720" height="595" data-src="https://habrastorage.org/getpro/habr/upload_files/33e/6ab/daa/33e6abdaadc3bcc914c9994631c794b6.png"/></figure><ol><li><p>Все начинается с <strong>лексического анализа (Lexer Analysis)</strong>. Сначала Kotlin Parser сканирует исходный код (строку) и разбивает его на лексические части (<a href="https://github.com/JetBrains/kotlin/blob/master/compiler/psi/src/org/jetbrains/kotlin/lexer/KtTokens.java"><strong><u>KtTokens</u></strong></a>). Например:</p><ul><li><p><code>(</code><strong><em> —&gt; </em></strong><code>KtSingleValueToken.LPAR</code><strong><em> </em></strong></p></li><li><p><code>)</code><strong><em> —&gt;</em></strong><code>KtSingleValueToken.RPAR</code></p></li><li><p><code>=</code><strong><em> —&gt;</em></strong><code>KtSingleValueToken.EQ</code></p></li></ul><p>В нашем примере разбиение на токены выглядит так:</p><figure class="full-width "><img src="https://habrastorage.org/r/w1560/getpro/habr/upload_files/84b/844/f04/84b844f04ff3b6d314c6090cfa366179.png" alt="" title="" width="1600" height="881" data-src="https://habrastorage.org/getpro/habr/upload_files/84b/844/f04/84b844f04ff3b6d314c6090cfa366179.png"/></figure><p>Пробелы тоже превращаются в токены. Но они не обозначены, чтобы не перегружать  лишней информацией. </p><p></p></li><li><p>Далее начинается <strong>синтаксический анализ (Syntax Analysis)</strong>. Его первый этап — это построение <strong>абстрактного синтаксического дерева (AST)</strong>, которое состоит из лексических токенов. Важная особенность: дерево уже представляет из себя не последовательность символов, а <strong>имеет структуру</strong>. </p><p>Обратите внимание, что структура этого дерева совпадает со структурой нашего исходного кода. В нашем примере это выглядит так:</p><figure class="full-width "><img src="https://habrastorage.org/r/w1560/getpro/habr/upload_files/fb7/6db/748/fb76db748ef1fbec2e7e8288de575e6d.png" width="1600" height="896" data-src="https://habrastorage.org/getpro/habr/upload_files/fb7/6db/748/fb76db748ef1fbec2e7e8288de575e6d.png"/></figure></li></ol><ol start="3"><li><p>Следующим этапом мы накладываем PSI на узлы абстрактного синтаксического дерева. Теперь у нас есть <strong>PSI-дерево,</strong> которое содержит дополнительную информацию по каждому элементу:</p><figure class="full-width "><img src="https://habrastorage.org/r/w1560/getpro/habr/upload_files/de9/320/09d/de932009d0f8cc2fd0fd1e386ae6e491.png" width="1600" height="885" data-src="https://habrastorage.org/getpro/habr/upload_files/de9/320/09d/de932009d0f8cc2fd0fd1e386ae6e491.png"/></figure></li></ol><p>На этом этапе мы ищем только синтаксические ошибки. Другими словами, мы видим правильно написанный код, но пока не можем предсказать, скомпилируется он или нет и самое главное не понимаем смысл этого кода. </p><details class="spoiler"><summary>В IntelliJ IDEA, вы можете загрузить плагин PSIViewer чтобы смотреть PSI для кода, написанного вами. </summary><div class="spoiler__content"><p></p><figure class="full-width "><img src="https://habrastorage.org/r/w1560/getpro/habr/upload_files/165/821/e8b/165821e8b1855a9d51d6dbf38e93d51e.png" width="1600" height="752" data-src="https://habrastorage.org/getpro/habr/upload_files/165/821/e8b/165821e8b1855a9d51d6dbf38e93d51e.png"/></figure><p></p></div></details><a class="anchor" name="8" id="8"></a><h4>Resolution Phase</h4><a class="anchor" name="9" id="9"></a><h3>Задача семантического парсинга</h3><p>Чтобы понять <strong>смысл</strong> написанного кода используется <strong>Resolution Phase</strong>. </p><p>Здесь PSI-дерево проходит набор этапов, в процессе которых генерируется семантическая информация, позволяющая понять (resolving) имена <strong>функций, типов, переменных</strong> и откуда они взялись. </p><p>Все мы в коде видели ошибки из этой стадии. </p><figure class="full-width "><img src="https://habrastorage.org/r/w1560/getpro/habr/upload_files/11b/a47/d11/11ba47d11cf39386fc081444fd0a1c73.png" width="716" height="164" data-src="https://habrastorage.org/getpro/habr/upload_files/11b/a47/d11/11ba47d11cf39386fc081444fd0a1c73.png"/></figure><p> <strong>Семантическая информация содержит данные о</strong>:  </p><details class="spoiler"><summary>Переменных и параметрах</summary><div class="spoiler__content"><figure class=""><img src="https://habrastorage.org/r/w780q1/getpro/habr/upload_files/990/679/b56/990679b5695fc4eb454e6f5f69b88d14.jpg" width="290" height="204" data-src="https://habrastorage.org/getpro/habr/upload_files/990/679/b56/990679b5695fc4eb454e6f5f69b88d14.jpg" data-blurred="true"/></figure><p>На стадии семантического анализа нужно понять, что, используя pet внутри функции play, мы используем параметр функции, объявленный в первой строке</p></div></details><details class="spoiler"><summary>Типах</summary><div class="spoiler__content"><figure class="full-width "><img src="https://habrastorage.org/r/w1560/getpro/habr/upload_files/b06/012/0a7/b060120a757af3fd4cb173261860d6d3.png" width="1600" height="462" data-src="https://habrastorage.org/getpro/habr/upload_files/b06/012/0a7/b060120a757af3fd4cb173261860d6d3.png"/></figure><p>	Семантическая информация содержит данные о том, на какие типы ссылается код, в каком месте они объявлены. </p></div></details><details class="spoiler"><summary>Вызовах функций</summary><div class="spoiler__content"><figure class="full-width "><img src="https://habrastorage.org/r/w1560/getpro/habr/upload_files/4c0/7be/40d/4c07be40d527d5ac1c9c54e9d211135e.png" width="1494" height="408" data-src="https://habrastorage.org/getpro/habr/upload_files/4c0/7be/40d/4c07be40d527d5ac1c9c54e9d211135e.png"/></figure><p>Может существовать много функций <em>meow</em>, и требуется определить, какую именно функцию нужно вызвать. Эта стадия занимает большую часть семантического анализа. Тк <em>meow</em> может быть: обычной функцией внутри класса, extension, property. Функция может находиться внутри текущего модуля, другого модуля или в библиотеке. На этапе семантического анализа нужно найти все функции с нужным названием и выбрать наиболее подходящую функцию для конкретной ситуации. </p></div></details><p><strong>Эта стадия отвечает на похожие вопросы</strong>:</p><ul><li><p>Откуда появилась эта функция/переменная/тип для использования</p></li><li><p>Точно ли две строки относятся к одной и той же переменной или это разные переменные в зависимости от контекста где они используются?</p></li><li><p>Какой тип у конкретного объекта?  </p></li></ul><details class="spoiler"><summary>Производится выведение типов</summary><div class="spoiler__content"><pre><code class="kotlin">val list1 = listOf(1, 2, 3)
val list2 = listOf("one", "two", "three")</code></pre><p>Представим, что у нас есть такая запись.</p><p>Тут используется generic-функция <em>listOf</em></p><pre><code class="kotlin">public fun &lt;T&gt; listOf(vararg elements: T): List&lt;T&gt;</code></pre><p>Задача семантического анализа — вывести аргументы типа для каждого использования  </p><pre><code class="kotlin">val list1 = listOf(1, 2, 3)</code></pre><p>В первом случае <em>T = Int</em>  </p><pre><code class="kotlin">val list2 = listOf("one", "two", "three")</code></pre><p>Во втором — <em>T = String</em>.  </p></div></details><a class="anchor" name="10" id="10"></a><h3>Этапы Resolution Phase</h3><p>Реализация K1 выполняет вычисление на <strong>PSI-дереве</strong>, создает дескрипторы и <strong>BindingContext</strong> map, а затем передает все это на бэкенд. В итоге бэкенд преобразует полученную информацию в IR с помощью <strong>Psi2Ir</strong>.</p><p>Вся эта информация будет использоваться дальше на бэкенде:</p><figure class="full-width "><img src="https://habrastorage.org/r/w1560/getpro/habr/upload_files/ece/610/25f/ece61025f9a00c4e4606f0e8d9bb1c46.png" width="1600" height="895" data-src="https://habrastorage.org/getpro/habr/upload_files/ece/610/25f/ece61025f9a00c4e4606f0e8d9bb1c46.png"/></figure><details class="spoiler"><summary>Пример с деревом PSI и семантической информацией BindingContext</summary><div class="spoiler__content"><p>В этом примере можно увидеть как исходный код (строка) преобразуется в структуру (дерево) и по каждому узлу дерева добавляется дополнительная информация (семантика).</p><figure class="full-width "><img src="https://habrastorage.org/r/w1560/getpro/habr/upload_files/836/1fd/265/8361fd265640179683030531eb4af37f.png" width="1600" height="739" data-src="https://habrastorage.org/getpro/habr/upload_files/836/1fd/265/8361fd265640179683030531eb4af37f.png"/></figure><p></p></div></details><a class="anchor" name="11" id="11"></a><h4>Проблемы K1</h4><p>Мы разобрались с тем, как работает фронтенд-реализация K1. Обозначим этот процесс на схеме K1:</p><figure class="full-width "><img src="https://habrastorage.org/r/w1560/getpro/habr/upload_files/745/b50/65d/745b5065de514b84b60da07976b05ad0.png" width="1600" height="572" data-src="https://habrastorage.org/getpro/habr/upload_files/745/b50/65d/745b5065de514b84b60da07976b05ad0.png"/></figure><p>У этой реализации есть свои недостатки (<a href="https://kotlinlang.slack.com/archives/C7L3JB43G/p1622478266038500"><u>объяснение Дмитрия Новожилова в kotlin slack</u></a>). Преобразование через <strong>PSI</strong> и <strong>BindingContext</strong> приводит к проблемам с производительностью компилятора. </p><p>Тк компилятор работает с ленивыми дескрипторами, то выполнение постоянно прыгает между разными частями кода, это сводит на нет некоторые JIT-оптимизации. Кроме этого много информации resolution phase хранится в большом <strong>BindingContext</strong>, из-за этого ЦП не может хорошо кэшировать объекты. </p><p>Все это ведет к проблемам с производительностью.</p><a class="anchor" name="12" id="12"></a><h2>Реализация K2</h2><p>Чтобы повысить производительность компилятора и улучшить архитектуру решения, JB создала новую фронтенд-реализацию <strong>K2 (Fir frontend)</strong>.</p><p>Изменение произошло в структурах данных. Вместо старых структур (<strong>PSI</strong> + <strong>BindingContext</strong>) реализация K2 использует <strong>Fir (Frontend Intermediate Representation)</strong>. Это <strong>семантическое дерево </strong>(дерево, в узлах которого к структуре кода добавлена семантическая информация). Оно представляет исходный код.</p><figure class="full-width "><img src="https://habrastorage.org/r/w1560/getpro/habr/upload_files/20e/340/2a3/20e3402a3355374bcbf03cf3a99c238e.png" width="1600" height="741" data-src="https://habrastorage.org/getpro/habr/upload_files/20e/340/2a3/20e3402a3355374bcbf03cf3a99c238e.png"/></figure><a class="anchor" name="13" id="13"></a><h4>Как работает K2</h4><p>Вместо того, чтобы как раньше отправлять <strong>PSI</strong> и <strong>BindingContext</strong> в Backend, в K2 на Frontend происходят дополнительные преобразования:</p><ol><li><p><a href="#31">Компилятор принимает raw PSI на входе (Parsing)</a></p></li><li><p><a href="#32">Производит незаполненное raw Fir-дерево (Psi2Fir)</a></p></li><li><p><a href="#33">Семантическая информация заполняет Fir-дерево (Resolution + Checking)</a></p></li><li><p><a href="https://34">Преобразует Fir в Ir (Fir2Ir)</a></p></li><li><p><a href="https://35">Передает Ir бэкенду </a></p></li></ol><p>В случае с K2, мы рассмотрим более сложный случай и пропустим те фазы, в которых K1 и K2 работают одинаково.</p><p>Для примера возьмем исходный код </p><pre><code class="kotlin">private val kotlinFiles = mutableListOf(1, 2, 3)</code></pre><figure class="full-width "><img src="https://habrastorage.org/r/w1560/getpro/habr/upload_files/d51/12a/97d/d5112a97d9581d6e903dc8ccb1e27fdf.png" width="1049" height="572" data-src="https://habrastorage.org/getpro/habr/upload_files/d51/12a/97d/d5112a97d9581d6e903dc8ccb1e27fdf.png"/></figure><a class="anchor" name="14" id="14"></a><h3>Parsing</h3><a class="anchor" name="31" id="31"></a><p>Начнем с уровня PSI<strong> </strong>(до этого K1 и K2 схожи):</p><figure class="full-width "><img src="https://habrastorage.org/r/w1560/getpro/habr/upload_files/a9b/89f/a7b/a9b89fa7bb1d10a0c160659817323df8.png" width="1442" height="799" data-src="https://habrastorage.org/getpro/habr/upload_files/a9b/89f/a7b/a9b89fa7bb1d10a0c160659817323df8.png"/></figure><p>В этом случае, реализация K1 просто генерировала бы дополнительные данные для отправки PSI на бэкенд. </p><a class="anchor" name="15" id="15"></a><h3>Psi2Fir</h3><a class="anchor" name="32" id="32"></a><p>В отличие от нее, K2 компилирует этот промежуточный формат данных перед созданием Ir. В итоге получается <strong>Fir </strong>— это <em>mutable-</em>дерево, построенное из результатов парсера (PSI-дерева):</p><figure class="full-width "><img src="https://habrastorage.org/r/w1560/getpro/habr/upload_files/f65/1b1/0c0/f651b10c054bc941fb3516f04817e779.png" width="1452" height="812" data-src="https://habrastorage.org/getpro/habr/upload_files/f65/1b1/0c0/f651b10c054bc941fb3516f04817e779.png"/></figure><p>Тут видно сходство между PSI и raw Fir.</p><figure class="full-width "><img src="https://habrastorage.org/r/w1560/getpro/habr/upload_files/1e8/868/4e7/1e88684e78583306c60d3baa8cc79948.png" width="1756" height="1060" data-src="https://habrastorage.org/getpro/habr/upload_files/1e8/868/4e7/1e88684e78583306c60d3baa8cc79948.png"/></figure><a class="anchor" name="16" id="16"></a><h3>Resolution</h3><p>Итак, мы создаем raw FIR и пересылаем его нескольким обработчикам. Они представляют собой различные этапы пайплайна компилятора и заполняют дерево семантической информацией:</p><figure class="full-width "><img src="https://habrastorage.org/r/w1560/getpro/habr/upload_files/10c/ab4/2c1/10cab42c14a33d2d388845583ddf0049.png" width="1453" height="802" data-src="https://habrastorage.org/getpro/habr/upload_files/10c/ab4/2c1/10cab42c14a33d2d388845583ddf0049.png"/></figure><a class="anchor" name="33" id="33"></a><p>Все файлы в модуле проходят эти этапы одновременно. </p><p>В это время выполняются такие действия, как:</p><ul><li><p>Вычисление import’ов</p></li><li><p>Поиск идентификаторов класса для супертипов и наследников sealed классов</p></li><li><p>Вычисление модификаторов видимости</p></li><li><p>Вычисление контрактов функций</p></li><li><p>Выведение типов возвращаемого значения</p></li><li><p>Анализ тел функций и свойств</p></li></ul><p>На стадии Resolution компилятор преобразует сгенерированное raw Fir, заполняя дерево семантической информацией: </p><figure class="full-width "><img src="https://habrastorage.org/r/w1560/getpro/habr/upload_files/9ea/d4b/700/9ead4b70078c70c14a4d19c1d8d62f96.png" width="1455" height="811" data-src="https://habrastorage.org/getpro/habr/upload_files/9ea/d4b/700/9ead4b70078c70c14a4d19c1d8d62f96.png"/></figure><p>На этих этапах компилятор выполняет desugaring. Например, `if` можно заменить на `when` или `for` — на `while`. </p><p>Раньше мы делали все это на Backend, но благодаря K2 то же самое можно делать на Frontend. </p><a class="anchor" name="17" id="17"></a><h3>Checking</h3><figure class="full-width "><img src="https://habrastorage.org/r/w1560/getpro/habr/upload_files/6dc/4ba/282/6dc4ba2823a579a6e58c74e18ed50ed4.png" width="1464" height="806" data-src="https://habrastorage.org/getpro/habr/upload_files/6dc/4ba/282/6dc4ba2823a579a6e58c74e18ed50ed4.png"/></figure><p>Мы пришли к последней стадии — стадии проверки. Здесь компилятор берет Fir и проводит диагностику на предмет предупреждений и ошибок. </p><p>Если ошибки появились, данные отправляются плагину IDEA — именно он подчеркивает ошибку красной линией. Компиляция останавливается, чтобы не отправлять неверный код на бэкенд. </p><a class="anchor" name="18" id="18"></a><h3>Fir2Ir</h3><p>Если ошибок нет</p><figure class="full-width "><img src="https://habrastorage.org/r/w1560/getpro/habr/upload_files/128/67e/571/12867e5715f0fa5c6650a4a3715f9eb7.png" width="1460" height="820" data-src="https://habrastorage.org/getpro/habr/upload_files/128/67e/571/12867e5715f0fa5c6650a4a3715f9eb7.png"/></figure><a class="anchor" name="34" id="34"></a><p>FIR трансформируется в IR</p><figure class="full-width "><img src="https://habrastorage.org/r/w1560/getpro/habr/upload_files/5f5/0f6/810/5f50f68104937a2fbcb4f6cb3a90c1a1.png" width="1455" height="810" data-src="https://habrastorage.org/getpro/habr/upload_files/5f5/0f6/810/5f50f68104937a2fbcb4f6cb3a90c1a1.png"/></figure><a class="anchor" name="35" id="35"></a><p>В итоге мы получаем входные данные для бэкенда</p><a class="anchor" name="19" id="19"></a><h2>Визуальное сравнение результатов K1 и K2   </h2><figure class="full-width "><img src="https://habrastorage.org/r/w1560/getpro/habr/upload_files/57d/17a/34d/57d17a34de9a0b9eef198ce7dcd0216e.png" width="5734" height="2815" data-src="https://habrastorage.org/getpro/habr/upload_files/57d/17a/34d/57d17a34de9a0b9eef198ce7dcd0216e.png"/></figure><p>Итого в K2 мы получили Fir (одну структуру данных вместо двух в K1 версии)  </p><a class="anchor" name="20" id="20"></a><h2>Backend</h2><a class="anchor" name="21" id="21"></a><h3>Цели улучшения Backend</h3><p>Изначально при разработке Kotlin компилятор не использовал промежуточное представление (IR). Тк это необязательная стадия при разработке компиляторов. </p><details class="spoiler"><summary>Каноничная архитектура компилятора</summary><div class="spoiler__content"><figure class="full-width "><img src="https://habrastorage.org/r/w1560/getpro/habr/upload_files/48b/6a1/0e4/48b6a10e4b25df66253d762008826cc0.png" width="944" height="1049" data-src="https://habrastorage.org/getpro/habr/upload_files/48b/6a1/0e4/48b6a10e4b25df66253d762008826cc0.png"/></figure><p></p></div></details><p>Отсутствие IR позволило Kotlin быстрее эволюционировать на ранних стадиях. Kotlin компилировался не только в JVM, но так же и в JS. JS высокоуровневый язык и он похож больше на Kotlin, чем на JVM байткод. Поэтому IR бы только тормозило разработку преобразования.</p><figure class="full-width "><img src="https://habrastorage.org/r/w1560/getpro/habr/upload_files/06b/521/b96/06b521b96545144de6567e249ac0d863.png" width="1258" height="988" data-src="https://habrastorage.org/getpro/habr/upload_files/06b/521/b96/06b521b96545144de6567e249ac0d863.png"/></figure><p>Но вскоре появился еще 1 native backend.</p><figure class="full-width "><img src="https://habrastorage.org/r/w1560/getpro/habr/upload_files/863/3a4/4e3/8633a44e35800c2fdc31298245f43fe8.png" width="1600" height="685" data-src="https://habrastorage.org/getpro/habr/upload_files/863/3a4/4e3/8633a44e35800c2fdc31298245f43fe8.png"/></figure><p>Стало понятно что все 3 бэкенда могут использовать общую логику по трансформации и упрощению кода, что позволит поддерживать фичи для разных бекендов проще. Поэтому начиная с native-backend команда Kotlin решила использовать IR, сначала только для него самого.</p><figure class="full-width "><img src="https://habrastorage.org/r/w1560/getpro/habr/upload_files/2e9/14e/f6f/2e914ef6feb4ab75068486290e87bc95.png" width="1600" height="919" data-src="https://habrastorage.org/getpro/habr/upload_files/2e9/14e/f6f/2e914ef6feb4ab75068486290e87bc95.png"/></figure><p>Итак, в качестве целей разработки новой версии можно выделить:</p><ul><li><p>переиспользование логики между разными бекендами</p></li><li><p>упрощение поддержки новых языковых возможностей</p></li></ul><p>Необходимо отметить, что ускорение Backend не являлось целью. В отличие от ускорения Frontend-части.</p><p>Новая реализация Backend позволила расширять компилятор с помощью компиляторных плагинов. В частности реализация Jetpack Compose полагается на новую версию бекенда c использованием IR.</p><a class="anchor" name="22" id="22"></a><h3>Как работает Backend</h3><figure class="full-width "><img src="https://habrastorage.org/r/w1560/getpro/habr/upload_files/c78/534/63e/c7853463ed3b31b4e99c4698a6f4b4ab.png" width="1426" height="795" data-src="https://habrastorage.org/getpro/habr/upload_files/c78/534/63e/c7853463ed3b31b4e99c4698a6f4b4ab.png"/></figure><p>Сейчас в Kotlin есть четыре реализации backend: </p><ul><li><p>JVM</p></li><li><p>JS</p></li><li><p>Native </p></li><li><p>WASM</p></li></ul><p>Какой бы бэкенд вы ни использовали, обработка в нем всегда начинается с генератора IR и оптимизатора. Затем выбранная конфигурация запускает сгенерированный код:</p><p> </p><figure class="full-width "><img src="https://habrastorage.org/r/w1560/getpro/habr/upload_files/98b/e2d/008/98be2d00820accf6e676d0332f0f4f90.png" width="2524" height="1466" data-src="https://habrastorage.org/getpro/habr/upload_files/98b/e2d/008/98be2d00820accf6e676d0332f0f4f90.png"/></figure><p>Для примера выберем бэкенд JVM и продолжим работу с mutableList</p><a class="anchor" name="23" id="23"></a><h4>IR</h4><figure class="full-width "><img src="https://habrastorage.org/r/w1560/getpro/habr/upload_files/991/90e/0a2/99190e0a2a44ffce6f512fe4a0aa4163.png" width="1460" height="814" data-src="https://habrastorage.org/getpro/habr/upload_files/991/90e/0a2/99190e0a2a44ffce6f512fe4a0aa4163.png"/></figure><p>IR это также дерево. В IR добавлена вся семантическая информация. Для человека IR на выглядит не очень читабельно, но зато такой вид гораздо понятнее для компилятора. В момент анализа IR создаются поток управления и стеки вызовов.</p><p>Можно рассматривать IR как представление кода в виде дерева, которое <strong>разработано специально для генерации кода target-платформы</strong>. В отличие от Fir на фронтенде, который проверяет смысл написанного кода.</p><a class="anchor" name="24" id="24"></a><h4>IR lowering</h4><p>Затем на IR выполняются оптимизации и упрощения это называется <strong>lowering</strong>.  Таким образом упрощается сложность Kotlin. Например в IR отсутствуют local и internal классы, они заменены отдельными классами со специальными именами. С помощью упрощений разным backend’ам не нужно бороться со сложностью языка Kotlin и реализация становится проще.</p><figure class="full-width "><img src="https://habrastorage.org/r/w1560/getpro/habr/upload_files/674/cfd/3bd/674cfd3bd2547984874c6d26b1b7c661.png" width="1449" height="811" data-src="https://habrastorage.org/getpro/habr/upload_files/674/cfd/3bd/674cfd3bd2547984874c6d26b1b7c661.png"/></figure><p>Также на этом этапе упрощаются операции, улучшается производительность и качество машинного кода, особенно с точки зрения многопоточности.</p><a class="anchor" name="25" id="25"></a><h4>Target code</h4><p>Теперь у нас есть сгенерированный код целевой платформы. В нашем примере это JVM байт-код. Далее он отправляется на виртуальную машину, где он и будет исполняться:</p><figure class="full-width "><img src="https://habrastorage.org/r/w1560/getpro/habr/upload_files/1e8/495/dda/1e8495dda92dc53af904e3a5756b14ee.png" width="1453" height="814" data-src="https://habrastorage.org/getpro/habr/upload_files/1e8/495/dda/1e8495dda92dc53af904e3a5756b14ee.png"/></figure><p>На этом задачи компилятора считаются выполненными.</p><a class="anchor" name="26" id="26"></a><h2>Выводы</h2><p>Что дает новый компилятор:</p><ul><li><p>Единая структура данных Fir для представления кода и семантики</p></li><li><p>Возможность добавления плагинов компилятора</p></li><li><p>Упрощение поддержки новых языковых возможностей для разных target-платформ.</p></li><li><p>Улучшение производительности компилятора и IDE (плагин Kotlin в IDE использует Frontend компилятора). <a href="https://blog.jetbrains.com/kotlin/2024/04/k2-compiler-performance-benchmarks-and-how-to-measure-them-on-your-projects/"><u>По результатам замеров JB</u></a>:</p><ul><li><p>ускорение компиляции на 94%</p></li><li><p>ускорение фазы инициализации на 488%</p></li><li><p>ускорение фазы анализа на 376%</p></li></ul></li></ul><p>В этой статье мы рассмотрели как работают разные версии компилятора Kotlin. Непосредственно в эту тему редко углубляются разработчики. Я надеюсь, что материал позволил заглянуть вам под капот и узнать, что же там происходит, когда вы каждый день собираете приложения на работе.</p><a class="anchor" name="27" id="27"></a><h3>Дополнительные материалы</h3><ul><li><p>Видео <a href="https://youtu.be/wUGfuWHCqrc"><u>Crash Course on the Kotlin Compiler by Amanda Hinchman-Dominguez</u></a> </p></li><li><p>Видео <a href="https://www.youtube.com/watch?v=w-GMlaziIyo"><u>KotlinConf 2018 - Writing Your First Kotlin Compiler Plugin by Kevin Most</u></a> </p></li><li><p>Видео <a href="https://www.youtube.com/watch?v=iTdJJq_LyoY"><u>What Everyone Must Know About The NEW Kotlin K2 Compiler</u></a> </p></li><li><p>Видео <a href="https://www.droidcon.com/2022/06/28/ha-hitchhikers-guide-to-compose-compiler-composers-compiler-plugins-and-snapshots/"><u>A Hitchhiker's Guide to Compose Compiler: Composers, Compiler Plugins, and Snapshots</u></a></p></li><li><p>Репозиторий <a href="https://github.com/ahinchman1/Kotlin-Compiler-Crash-Course"><u>Kotlin-Compiler-Crash-Course</u></a> с заметками об отладке, тестировании и настройке компилятора Kotlin </p></li><li><p>Цикл статей Crash course on the Kotlin compiler</p><ul><li><p><a href="https://medium.com/google-developer-experts/crash-course-on-the-kotlin-compiler-k1-k2-frontends-backends-fe2238790bd8"><u>K1 + K2 Frontends, Backends</u></a></p></li><li><p><a href="https://medium.com/google-developer-experts/crash-course-on-the-kotlin-compiler-1-frontend-parsing-phase-9898490d922b"><u>1. Frontend: Parsing phase</u></a></p></li><li><p><a href="https://docs.google.com/document/d/17dBSxlXRW7PRD92QZGcGeotnsPSOsp0NSdnFXXZ41sg/edit"><u>2. Frontend: Resolution phase</u></a> </p></li></ul></li><li><p>Книга “Compilers: Principles, Techniques, and Tools” by Alfred Aho, Jeffrey Ullman, Ravi Sethi, Monica Lam</p></li></ul><figure class=""><img src="https://habrastorage.org/r/w1560/getpro/habr/upload_files/76d/a8f/ea9/76da8fea949241a9417e3c6013d57c2a.png" width="340" height="443" data-src="https://habrastorage.org/getpro/habr/upload_files/76d/a8f/ea9/76da8fea949241a9417e3c6013d57c2a.png"/></figure><p><strong>Другие наши статьи по Android разработке:</strong></p><ul><li><p><a href="https://habr.com/ru/companies/kts/articles/814363/">Developer Keynote Google I/O 2024: официальная поддержка KMP, развитие Gemini и AI в Андроиде</a></p></li><li><p><a href="https://habr.com/ru/companies/kts/articles/767224/">4 сценария, когда нужно сделать ставку на Kotlin Multiplatform, а не Flutter</a></p></li><li><p><a href="https://habr.com/ru/companies/kts/articles/771498/">Kotlin Multiplatform перешёл в stable. Что это значит?</a></p></li><li><p><a href="https://habr.com/ru/companies/kts/articles/798607/">Кот в мешке: мастерство обработки ошибок внешних ключей SQLite</a></p></li></ul><p></p></div></div></div><!----><!----></div><!----><!----></div><!--]--><!----><div class="tm-article-presenter__meta" data-test-id="article-meta-links"><div class="tm-separated-list tm-article-presenter__meta-list"><span class="tm-separated-list__title">Теги:</span><ul class="tm-separated-list__list"><!--[--><li class="tm-separated-list__item"><!--[--><a href="/ru/search/?target_type=posts&amp;order=relevance&amp;q=[%D0%BA%D0%BE%D0%BC%D0%BF%D0%B8%D0%BB%D1%8F%D1%82%D0%BE%D1%80%D1%8B]" class="tm-tags-list__link"><span>компиляторы</span></a><!--]--></li><li class="tm-separated-list__item"><!--[--><a href="/ru/search/?target_type=posts&amp;order=relevance&amp;q=[kotlin]" class="tm-tags-list__link"><span>kotlin</span></a><!--]--></li><li class="tm-separated-list__item"><!--[--><a href="/ru/search/?target_type=posts&amp;order=relevance&amp;q=[k1]" class="tm-tags-list__link"><span>k1</span></a><!--]--></li><li class="tm-separated-list__item"><!--[--><a href="/ru/search/?target_type=posts&amp;order=relevance&amp;q=[k2]" class="tm-tags-list__link"><span>k2</span></a><!--]--></li><li class="tm-separated-list__item"><!--[--><a href="/ru/search/?target_type=posts&amp;order=relevance&amp;q=[%D1%80%D0%B5%D0%BB%D0%B8%D0%B7+kotlin]" class="tm-tags-list__link"><span>релиз kotlin</span></a><!--]--></li><li class="tm-separated-list__item"><!--[--><a href="/ru/search/?target_type=posts&amp;order=relevance&amp;q=[kotlin+2.0]" class="tm-tags-list__link"><span>kotlin 2.0</span></a><!--]--></li><li class="tm-separated-list__item"><!--[--><a href="/ru/search/?target_type=posts&amp;order=relevance&amp;q=[android]" class="tm-tags-list__link"><span>android</span></a><!--]--></li><li class="tm-separated-list__item"><!--[--><a href="/ru/search/?target_type=posts&amp;order=relevance&amp;q=[kmp]" class="tm-tags-list__link"><span>kmp</span></a><!--]--></li><!--]--><!----></ul></div><div class="tm-separated-list tm-article-presenter__meta-list"><span class="tm-separated-list__title">Хабы:</span><ul class="tm-separated-list__list"><!--[--><li class="tm-separated-list__item"><!--[--><a href="/ru/companies/kts/articles/" class="tm-hubs-list__link"><!--[--><span>Блог компании KTS</span><!--]--></a><!--]--></li><li class="tm-separated-list__item"><!--[--><a href="/ru/hubs/mobile_dev/" class="tm-hubs-list__link"><!--[--><span>Разработка мобильных приложений</span><!--]--></a><!--]--></li><li class="tm-separated-list__item"><!--[--><a href="/ru/hubs/android_dev/" class="tm-hubs-list__link"><!--[--><span>Разработка под Android</span><!--]--></a><!--]--></li><li class="tm-separated-list__item"><!--[--><a href="/ru/hubs/compilers/" class="tm-hubs-list__link"><!--[--><span>Компиляторы</span><!--]--></a><!--]--></li><li class="tm-separated-list__item"><!--[--><a href="/ru/hubs/kotlin/" class="tm-hubs-list__link"><!--[--><span>Kotlin</span><!--]--></a><!--]--></li><!--]--><!----></ul></div></div><!----><!--]--></article><!--]--></div><!----></div><div style="" class="tm-article-sticky-panel" data-test-id="article-sticky-panel"><div class="tm-data-icons tm-data-icons tm-data-icons_space-big tm-article-sticky-panel__icons" data-test-id="article-stats-icons"><div class="tm-article-rating tm-data-icons__item"><div class="tm-votes-meter tm-article-rating__votes-switcher"><svg class="tm-svg-img tm-votes-meter__icon tm-votes-meter__icon tm-votes-meter__icon_appearance-article" height="24" width="24"><title>Всего голосов 68: ↑68 и ↓0</title><use xlink:href="/img/megazord-v28.371b7fa3..svg#counter-rating"></use></svg><span class="tm-votes-meter__value tm-votes-meter__value_positive tm-votes-meter__value_appearance-article tm-votes-meter__value_rating tm-votes-meter__value" data-test-id="votes-meter-value" title="Всего голосов 68: ↑68 и ↓0">+74</span></div><!--teleport start--><!--teleport end--><!----></div><!----><!----><button class="bookmarks-button tm-data-icons__item" title="Добавить в закладки" type="button"><span class="tm-svg-icon__wrapper bookmarks-button__icon"><svg class="tm-svg-img tm-svg-icon" height="24" width="24"><title>Добавить в закладки</title><use xlink:href="/img/megazord-v28.371b7fa3..svg#counter-favorite"></use></svg></span><span class="bookmarks-button__counter" title="Количество пользователей, добавивших публикацию в закладки">80</span></button><div class="tm-sharing tm-data-icons__item" title="Поделиться"><button class="tm-sharing__button" type="button"><svg viewbox="0 0 24 24" xmlns="http://www.w3.org/2000/svg" class="tm-sharing__icon"><path fill="currentColor" d="M13.8 13.8V18l7.2-6.6L13.8 5v3.9C5 8.9 3 18.6 3 18.6c2.5-4.4 6-4.8 10.8-4.8z"></path></svg></button><!--teleport start--><!--teleport end--></div><div class="tm-article-comments-counter-link tm-data-icons__item" title="Читать комментарии"><a href="/ru/companies/kts/articles/813085/comments/" class="tm-article-comments-counter-link__link" data-test-id="counter-comments"><!--[--><svg class="tm-svg-img tm-article-comments-counter-link__icon" height="24" width="24"><title>Комментарии</title><use xlink:href="/img/megazord-v28.371b7fa3..svg#counter-comments"></use></svg><span class="tm-article-comments-counter-link__value">16</span><!--]--></a><!----></div><!--[--><!--[--><!--[--><!----><!--]--><!--]--><!--]--><!--teleport start--><!--teleport end--><!----></div></div></div><!--[--><!--]--><div class="tm-article-presenter__footer"><!--[--><!--[--><div class="tm-article-blocks"><!----><!--[--><section class="tm-block tm-block tm-block_spacing-bottom"><!----><!--[--><div class="tm-block__body tm-block__body tm-block__body_variant-balanced"><!--[--><div class="tm-article-author" data-test-id="article-author-info" data-async-called="true"><!--[--><!--[--><div class="tm-article-author__company"><div class="tm-article-author__company-card"><div class="tm-company-snippet"><a href="/ru/companies/kts/profile/" class="tm-company-snippet__logo-link"><div class="tm-entity-image"><img alt="" class="tm-entity-image__pic" height="40" src="//habrastorage.org/getpro/habr/company/cc2/c99/64b/cc2c9964bc4927b7001827fc0b2b471b.png" width="40"></div></a><div class="tm-company-snippet__info"><a href="/ru/companies/kts/profile/" class="tm-company-snippet__title" data-test-id="company-title"><span>KTS</span></a><div class="tm-company-snippet__description">Создаем цифровые продукты для бизнеса</div></div></div><div class="tm-article-author__buttons"><!----><!----></div></div><div class="tm-article-author__company-contacts"><!--[--><a class="tm-article-author__contact" href="https://kts.tech" rel="noopener" target="_blank">Сайт</a><!--]--></div><div class="tm-article-author__separator"></div></div><!--]--><!--]--><div class="tm-user-card tm-user-card tm-user-card_variant-article tm-article-author__user-card" data-async-called="true"><div class="tm-user-card__info-container"><div class="tm-user-card__header"><div class="tm-user-card__header-data"><a href="/ru/users/MAX1993M/" class="tm-user-card__userpic tm-user-card__userpic_size-40"><div class="tm-entity-image"><img alt="" class="tm-entity-image__pic" src="//habrastorage.org/getpro/habr/avatars/a43/109/5a1/a431095a1cb7f4867897a9f7f8b18890.jpg"></div></a><div class="tm-user-card__meta"><div class="tm-counter-container tm-karma tm-karma" title=" 52 голоса "><div class="tm-counter-container__header"><!--[--><div class="karma-display positive" data-v-7635202e>46</div><!----><!--]--></div><div class="tm-counter-container__footer"><!--[--><div class="tm-karma__text">Карма</div><!--teleport start--><!--teleport end--><!--]--></div></div><div class="tm-counter-container" title="Рейтинг пользователя"><div class="tm-counter-container__header"><!--[--><!--[--><!--]--><div class="tm-votes-lever tm-votes-lever tm-votes-lever_appearance-rating"><!----><div class="tm-votes-lever__score tm-votes-lever__score_appearance-rating tm-votes-lever__score"><!--[--><span><span class="tm-votes-lever__score-counter tm-votes-lever__score-counter_rating tm-votes-lever__score-counter" data-test-id="votes-score-counter">0.1</span></span><!--]--></div><!----></div><!--]--></div><div class="tm-counter-container__footer"><!--[--><span class="tm-rating__text tm-rating__text">Рейтинг</span><!--]--></div></div></div></div></div><div class="tm-user-card__info tm-user-card__info_variant-article tm-user-card__info"><div class="tm-user-card__title tm-user-card__title_variant-article tm-user-card__title"><span class="tm-user-card__name tm-user-card__name_variant-article tm-user-card__name">Мялкин Максим</span><a href="/ru/users/MAX1993M/" class="tm-user-card__nickname tm-user-card__nickname tm-user-card__nickname_variant-article"> @MAX1993M</a><!----></div><p class="tm-user-card__short-info tm-user-card__short-info_variant-article tm-user-card__short-info" data-test-id="user-card-speciality">Мобильный разработчик</p></div></div><!----><div class="tm-user-card__buttons tm-user-card__buttons_variant-article tm-user-card__buttons"><!----><div class="tm-user-card__button"><div class="tm-button-follow tm-user-card__button-follow"><!----><button class="tm-button-follow__button tm-button-follow__button_big" data-test-id="follow-button" type="button">Подписаться</button></div></div><!----><div class="tm-user-card__button tm-user-card__button_write" data-test-id="user-card-conversations"><svg class="tm-svg-img tm-user-card__button-icon" height="16" width="16"><title>Отправить сообщение</title><use xlink:href="/img/megazord-v28.371b7fa3..svg#mail"></use></svg></div><!----></div><!----></div><div class="tm-article-author__user-contacts" data-test-id="author-contacts"><!----><!----><!----></div></div><!--]--></div><!--]--><!----></section><!----><!--[--><!--]--><!--]--><div class="tm-article-blocks__comments"><div id="publication-comments" class="tm-article-page-comments"><div><!--[--><div class="tm-article-comments-counter-link tm-article-comments-counter-button"><a href="/ru/companies/kts/articles/813085/comments/" class="tm-article-comments-counter-link__link tm-article-comments-counter-link__link_button-style" data-test-id="counter-comments"><!--[--><svg class="tm-svg-img tm-article-comments-counter-link__icon tm-article-comments-counter-link__icon_contrasted" height="24" width="24"><title>Комментарии</title><use xlink:href="/img/megazord-v28.371b7fa3..svg#counter-comments"></use></svg><span class="tm-article-comments-counter-link__value tm-article-comments-counter-link__value_contrasted"> Комментарии 16 </span><!--]--></a><!----></div><!--]--></div></div></div><!--[--><!--[--><!--]--><section class="tm-block tm-block tm-block_spacing-bottom"><header class="tm-block__header tm-block__header tm-block__header_variant-borderless"><div class="tm-block__header-container"><h2 class="tm-block__title tm-block__title tm-block__title_variant-large">Публикации</h2><!--[--><!--]--></div><!----></header><!--[--><div class="tm-block__body tm-block__body tm-block__body_variant-condensed-slim"><!--[--><!--[--><div class="tm-tabs tm-tabs"><div class=""><!--[--><span class="tm-tabs__tab-item"><button class="tm-tabs__tab-link tm-tabs__tab-link_active tm-tabs__tab-link_slim tm-tabs__tab-link">Лучшие за сутки</button></span><span class="tm-tabs__tab-item"><button class="tm-tabs__tab-link tm-tabs__tab-link_slim tm-tabs__tab-link">Похожие</button></span><!--]--></div><!----></div><div class="similar-and-daily__tab-view"><div class="placeholder-wrapper"><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><div class="tm-placeholder-article-cards"><!--[--><div class="tm-placeholder-article-card"><div class="tm-placeholder__user"><div class="tm-placeholder__user-pic loads"></div><div class="tm-placeholder__user-date loads"></div></div><div class="tm-placeholder-article-card__title"><div class="tm-placeholder__line tm-placeholder-article-card__title-line loads"></div><div class="tm-placeholder__line tm-placeholder-article-card__title-line loads"></div></div><div class="tm-placeholder-article-card__icons tm-placeholder__counters"><!--[--><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div><div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div><div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div><div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div><div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><!--]--></div></div><div class="tm-placeholder-article-card"><div class="tm-placeholder__user"><div class="tm-placeholder__user-pic loads"></div><div class="tm-placeholder__user-date loads"></div></div><div class="tm-placeholder-article-card__title"><div class="tm-placeholder__line tm-placeholder-article-card__title-line loads"></div><div class="tm-placeholder__line tm-placeholder-article-card__title-line loads"></div></div><div class="tm-placeholder-article-card__icons tm-placeholder__counters"><!--[--><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div><div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div><div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div><div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div><div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><!--]--></div></div><div class="tm-placeholder-article-card"><div class="tm-placeholder__user"><div class="tm-placeholder__user-pic loads"></div><div class="tm-placeholder__user-date loads"></div></div><div class="tm-placeholder-article-card__title"><div class="tm-placeholder__line tm-placeholder-article-card__title-line loads"></div><div class="tm-placeholder__line tm-placeholder-article-card__title-line loads"></div></div><div class="tm-placeholder-article-card__icons tm-placeholder__counters"><!--[--><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div><div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div><div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div><div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div><div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><!--]--></div></div><div class="tm-placeholder-article-card"><div class="tm-placeholder__user"><div class="tm-placeholder__user-pic loads"></div><div class="tm-placeholder__user-date loads"></div></div><div class="tm-placeholder-article-card__title"><div class="tm-placeholder__line tm-placeholder-article-card__title-line loads"></div><div class="tm-placeholder__line tm-placeholder-article-card__title-line loads"></div></div><div class="tm-placeholder-article-card__icons tm-placeholder__counters"><!--[--><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div><div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div><div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div><div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div><div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><!--]--></div></div><div class="tm-placeholder-article-card"><div class="tm-placeholder__user"><div class="tm-placeholder__user-pic loads"></div><div class="tm-placeholder__user-date loads"></div></div><div class="tm-placeholder-article-card__title"><div class="tm-placeholder__line tm-placeholder-article-card__title-line loads"></div><div class="tm-placeholder__line tm-placeholder-article-card__title-line loads"></div></div><div class="tm-placeholder-article-card__icons tm-placeholder__counters"><!--[--><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div><div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div><div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div><div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div><div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><!--]--></div></div><!--]--></div><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----></div><!----></div><!--]--><!--]--></div><!--]--><!----></section><!--[--><!--[--><div class="placeholder-wrapper"><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><div class="tm-placeholder-inset tm-placeholder-vacancies"><div class="tm-placeholder-inset__header"><div class="tm-placeholder__line tm-placeholder__line_inset-header loads"></div></div><div class="tm-placeholder-inset__body"><ul class="tm-placeholder-list"><!--[--><li class="tm-placeholder-list__item tm-placeholder-list__item_inset"><div class="tm-placeholder-list__title-container"><div class="tm-placeholder__line tm-placeholder__line_item-title loads"></div></div><div class="tm-project-block-items__properties"><!--[--><span class="tm-project-block-items__property-item"><span class="tm-placeholder__line loads" style="width:100px;"></span></span><span class="tm-project-block-items__property-item"><span class="tm-placeholder__line loads" style="width:100px;"></span></span><span class="tm-project-block-items__property-item"><span class="tm-placeholder__line loads" style="width:100px;"></span></span><!--]--></div></li><li class="tm-placeholder-list__item tm-placeholder-list__item_inset"><div class="tm-placeholder-list__title-container"><div class="tm-placeholder__line tm-placeholder__line_item-title loads"></div></div><div class="tm-project-block-items__properties"><!--[--><span class="tm-project-block-items__property-item"><span class="tm-placeholder__line loads" style="width:100px;"></span></span><span class="tm-project-block-items__property-item"><span class="tm-placeholder__line loads" style="width:100px;"></span></span><span class="tm-project-block-items__property-item"><span class="tm-placeholder__line loads" style="width:100px;"></span></span><!--]--></div></li><li class="tm-placeholder-list__item tm-placeholder-list__item_inset"><div class="tm-placeholder-list__title-container"><div class="tm-placeholder__line tm-placeholder__line_item-title loads"></div></div><div class="tm-project-block-items__properties"><!--[--><span class="tm-project-block-items__property-item"><span class="tm-placeholder__line loads" style="width:100px;"></span></span><span class="tm-project-block-items__property-item"><span class="tm-placeholder__line loads" style="width:100px;"></span></span><span class="tm-project-block-items__property-item"><span class="tm-placeholder__line loads" style="width:100px;"></span></span><!--]--></div></li><li class="tm-placeholder-list__item tm-placeholder-list__item_inset"><div class="tm-placeholder-list__title-container"><div class="tm-placeholder__line tm-placeholder__line_item-title loads"></div></div><div class="tm-project-block-items__properties"><!--[--><span class="tm-project-block-items__property-item"><span class="tm-placeholder__line loads" style="width:100px;"></span></span><span class="tm-project-block-items__property-item"><span class="tm-placeholder__line loads" style="width:100px;"></span></span><span class="tm-project-block-items__property-item"><span class="tm-placeholder__line loads" style="width:100px;"></span></span><!--]--></div></li><li class="tm-placeholder-list__item tm-placeholder-list__item_inset"><div class="tm-placeholder-list__title-container"><div class="tm-placeholder__line tm-placeholder__line_item-title loads"></div></div><div class="tm-project-block-items__properties"><!--[--><span class="tm-project-block-items__property-item"><span class="tm-placeholder__line loads" style="width:100px;"></span></span><span class="tm-project-block-items__property-item"><span class="tm-placeholder__line loads" style="width:100px;"></span></span><span class="tm-project-block-items__property-item"><span class="tm-placeholder__line loads" style="width:100px;"></span></span><!--]--></div></li><!--]--></ul></div><div class="tm-placeholder-inset__footer"><div class="tm-placeholder__line tm-placeholder__line_inset-footer loads"></div></div></div><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----></div><!--]--><!--]--><!----><!--[--><!--]--><!--]--></div><!--]--><!--]--></div></div><!--]--><!--]--></div></div><div class="tm-page__sidebar"><!--[--><!----><!--]--></div></div><!----><!--]--></div></div></main><!----></div><!----><div class="tm-footer"><div class="tm-page-width"><!--[--><div class="tm-footer__container"><div class="tm-footer__title"><a class="tm-svg-icon__wrapper tm-footer__title-link" href="/ru/"><svg class="tm-svg-img tm-svg-icon" height="16" width="16"><title>Хабр</title><use xlink:href="/img/habr-logo-ru.svg#logo"></use></svg></a></div><div class="tm-footer__social"><!--[--><a class="tm-svg-icon__wrapper tm-social-icons__icon" href="https://www.facebook.com/habrahabr.ru" rel="nofollow noopener noreferrer" target="_blank"><svg class="tm-svg-img tm-svg-icon" height="36" width="36"><title>Facebook</title><use xlink:href="/img/new-social-icons-sprite.svg#social-logo-facebook"></use></svg></a><a class="tm-svg-icon__wrapper tm-social-icons__icon" href="https://twitter.com/habr_com" rel="nofollow noopener noreferrer" target="_blank"><svg class="tm-svg-img tm-svg-icon" height="36" width="36"><title>Twitter</title><use xlink:href="/img/new-social-icons-sprite.svg#social-logo-twitter"></use></svg></a><a class="tm-svg-icon__wrapper tm-social-icons__icon" href="https://vk.com/habr" rel="nofollow noopener noreferrer" target="_blank"><svg class="tm-svg-img tm-svg-icon" height="36" width="36"><title>VK</title><use xlink:href="/img/new-social-icons-sprite.svg#social-logo-vk"></use></svg></a><a class="tm-svg-icon__wrapper tm-social-icons__icon" href="https://telegram.me/habr_com" rel="nofollow noopener noreferrer" target="_blank"><svg class="tm-svg-img tm-svg-icon" height="36" width="36"><title>Telegram</title><use xlink:href="/img/new-social-icons-sprite.svg#social-logo-telegram"></use></svg></a><a class="tm-svg-icon__wrapper tm-social-icons__icon" href="https://www.youtube.com/channel/UCd_sTwKqVrweTt4oAKY5y4w" rel="nofollow noopener noreferrer" target="_blank"><svg class="tm-svg-img tm-svg-icon" height="36" width="36"><title>Youtube</title><use xlink:href="/img/new-social-icons-sprite.svg#social-logo-youtube"></use></svg></a><a class="tm-svg-icon__wrapper tm-social-icons__icon" href="https://dzen.ru/habr" rel="nofollow noopener noreferrer" target="_blank"><svg class="tm-svg-img tm-svg-icon" height="36" width="36"><title>Яндекс Дзен</title><use xlink:href="/img/new-social-icons-sprite.svg#social-logo-dzen"></use></svg></a><!--]--></div><!--teleport start--><!--teleport end--><button class="tm-footer__link"><svg class="tm-svg-img tm-footer__icon" height="16" width="16"><title>Язык</title><use xlink:href="/img/megazord-v28.371b7fa3..svg#lang"></use></svg> Настройка языка</button><a href="/ru/feedback/" class="tm-footer__link">Техническая поддержка</a><div class="tm-footer-copyright"><span class="tm-copyright"><span class="tm-copyright__years">© 2006–2025, </span><span class="tm-copyright__name"><a class="tm-copyright__link" href="https://company.habr.com/" rel="noopener" target="_blank">Habr</a></span></span></div></div><!--]--></div></div><!----><!--]--></div><!----></div><script>window.__INITIAL_STATE__={"adblock":{"hasAcceptableAdsFilter":false,"hasAdblock":false},"articlesList":{"articlesList":{"813085":{"id":"813085","timePublished":"2024-05-08T13:39:14+00:00","isCorporative":true,"lang":"ru","titleHtml":"Как новый компилятор K2 ускоряет компиляцию Kotlin на 94%","leadData":{"textHtml":"\u003Cp\u003EПривет, меня зовут Мялкин Максим, я занимаюсь мобильной разработкой в \u003Ca href=\"https:\u002F\u002Fkts.tech\u002F\"\u003E\u003Cu\u003EKTS.\u003C\u002Fu\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003Cp\u003EНе за горами выпуск новой версии Kotlin 2.0, основной частью которого является изменение компилятора на K2.&nbsp;\u003C\u002Fp\u003E\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fblog.jetbrains.com\u002Fkotlin\u002F2024\u002F04\u002Fk2-compiler-performance-benchmarks-and-how-to-measure-them-on-your-projects\u002F\"\u003E\u003Cu\u003EПо замерам JB\u003C\u002Fu\u003E\u003C\u002Fa\u003E, K2 ускоряет компиляцию на 94%. Также он позволит ускорить разработку новых языковых фич и унифицировать все платформы, предоставляя улучшенную архитектуру для мультиплатформенных проектов.\u003C\u002Fp\u003E\u003Cp\u003EНо мало кто изучал, как работает K2, и чем он отличается от K1.&nbsp;\u003C\u002Fp\u003E\u003Cp\u003EЭта статья освещает нюансы работы компилятора, которые будут полезны разработчикам для понимания, что же JB улучшают под капотом, и как это работает.\u003C\u002Fp\u003E\u003Cp\u003E\u003C\u002Fp\u003E","imageUrl":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F90f\u002F8d0\u002F1d9\u002F90f8d01d9f8258baea6fa8177683e15b.png","buttonTextHtml":"Читать далее","image":{"url":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F90f\u002F8d0\u002F1d9\u002F90f8d01d9f8258baea6fa8177683e15b.png","fit":"cover","positionY":0,"positionX":0}},"editorVersion":"2.0","postType":"article","postLabels":[{"type":"translation","typeOf":"system","title":"Перевод","data":{"originalAuthorName":"Amanda Hinchman-Dominguez","originalUrl":"https:\u002F\u002Fwww.youtube.com\u002Fwatch?v=wUGfuWHCqrc&ab_channel=KotlinbyJetBrains"}}],"author":{"id":"261267","alias":"MAX1993M","fullname":"Мялкин Максим","avatarUrl":"\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Favatars\u002Fa43\u002F109\u002F5a1\u002Fa431095a1cb7f4867897a9f7f8b18890.jpg","speciality":"Мобильный разработчик","scoreStats":{"score":46,"votesCount":52},"rating":0.1,"relatedData":null,"contacts":[],"authorContacts":[],"paymentDetails":{"paymentYandexMoney":null,"paymentPayPalMe":null,"paymentWebmoney":null},"donationsMethod":null,"isInBlacklist":null,"careerProfile":null},"statistics":{"commentsCount":16,"favoritesCount":80,"readingCount":15361,"score":74,"votesCount":68,"votesCountPlus":68,"votesCountMinus":0},"hubs":[{"id":"22694","alias":"kts","type":"corporative","title":"Блог компании KTS","titleHtml":"Блог компании KTS","isProfiled":false,"relatedData":null},{"id":"6345","alias":"mobile_dev","type":"collective","title":"Разработка мобильных приложений","titleHtml":"Разработка мобильных приложений","isProfiled":true,"relatedData":null},{"id":"17107","alias":"android_dev","type":"collective","title":"Разработка под Android","titleHtml":"Разработка под Android","isProfiled":true,"relatedData":null},{"id":"17188","alias":"compilers","type":"collective","title":"Компиляторы","titleHtml":"Компиляторы","isProfiled":true,"relatedData":null},{"id":"19441","alias":"kotlin","type":"collective","title":"Kotlin","titleHtml":"Kotlin","isProfiled":true,"relatedData":null}],"flows":[{"id":"1","alias":"develop","title":"Разработка","titleHtml":"Разработка"}],"relatedData":{"vote":null,"unreadCommentsCount":0,"bookmarked":false,"canComment":false,"canEdit":false,"canViewVotes":false,"votePlus":{"canVote":false,"isChargeEnough":false,"isKarmaEnough":false,"isVotingOver":true,"isPublicationLimitEnough":false},"voteMinus":{"canVote":false,"isChargeEnough":false,"isKarmaEnough":false,"isVotingOver":true,"isPublicationLimitEnough":false},"canModerateComments":false,"trackerSubscribed":false,"emailSubscribed":false},"textHtml":"\u003Cdiv xmlns=\"http:\u002F\u002Fwww.w3.org\u002F1999\u002Fxhtml\"\u003E\u003Cfigure class=\"full-width \"\u003E\u003Cimg src=\"https:\u002F\u002Fhabrastorage.org\u002Fr\u002Fw1560\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F6fb\u002F759\u002F1f6\u002F6fb7591f611b10770942a200f86839ef.png\" width=\"2438\" height=\"1369\" data-src=\"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F6fb\u002F759\u002F1f6\u002F6fb7591f611b10770942a200f86839ef.png\"\u002F\u003E\u003C\u002Ffigure\u003E\u003Cp\u003EПривет, меня зовут Мялкин Максим, я занимаюсь мобильной разработкой в \u003Ca href=\"https:\u002F\u002Fkts.tech\u002F\"\u003E\u003Cu\u003EKTS.\u003C\u002Fu\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003Cp\u003EНе за горами выпуск новой версии Kotlin 2.0, основной частью которого является изменение компилятора на K2. \u003C\u002Fp\u003E\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fblog.jetbrains.com\u002Fkotlin\u002F2024\u002F04\u002Fk2-compiler-performance-benchmarks-and-how-to-measure-them-on-your-projects\u002F\"\u003E\u003Cu\u003EПо замерам JB\u003C\u002Fu\u003E\u003C\u002Fa\u003E, K2 ускоряет компиляцию на 94%. Также он позволит ускорить разработку новых языковых фич и унифицировать все платформы, предоставляя улучшенную архитектуру для мультиплатформенных проектов.\u003C\u002Fp\u003E\u003Cp\u003EНо мало кто погружался в то, как работает K2, и чем он отличается от K1. \u003C\u002Fp\u003E\u003Cp\u003EЭта статья более освещает нюансы работы компилятора, которые будут полезны разработчикам для понимания, что же JB улучшают под капотом, и как это работает.\u003C\u002Fp\u003E\u003Cp\u003EКонтент статьи основывается на \u003Ca href=\"https:\u002F\u002Fwww.youtube.com\u002Fwatch?v=wUGfuWHCqrc\"\u003E\u003Cu\u003Eвыступлении\u003C\u002Fu\u003E\u003C\u002Fa\u003E и \u003Ca href=\"https:\u002F\u002Fwww.youtube.com\u002Fwatch?v=iTdJJq_LyoY\"\u003E\u003Cu\u003Eовервью\u003C\u002Fu\u003E\u003C\u002Fa\u003E, но с добавлением дополнительной информации.\u003C\u002Fp\u003E\u003Ch2\u003EОглавление  \u003C\u002Fh2\u003E\u003Cul\u003E\u003Cli\u003E\u003Cp\u003E\u003Ca href=\"#1\"\u003EКак работает компилятор\u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003E\u003Ca href=\"#2\"\u003EFrontend  \u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003Cul\u003E\u003Cli\u003E\u003Cp\u003E\u003Ca href=\"#3\"\u003EРеализация K1  \u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003Cul\u003E\u003Cli\u003E\u003Cp\u003E\u003Ca href=\"#4\"\u003EКак работает K1  \u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003E\u003Ca href=\"#5\"\u003EParsing Phase  \u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003Cul\u003E\u003Cli\u003E\u003Cp\u003E\u003Ca href=\"#6\"\u003EЗадача синтаксического парсинга  \u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003E\u003Ca href=\"#7\"\u003E Этапы Parsing phase  \u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003C\u002Ful\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003E\u003Ca href=\"#8\"\u003EResolution Phase  \u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003Cul\u003E\u003Cli\u003E\u003Cp\u003E\u003Ca href=\"#9\"\u003EЗадача семантического парсинга\u003C\u002Fa\u003E  \u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003E\u003Ca href=\"#10\"\u003EЭтапы Resolution Phase  \u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003C\u002Ful\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003E\u003Ca href=\"#11\"\u003EПроблемы K1 \u003C\u002Fa\u003E \u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003C\u002Ful\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003E\u003Ca href=\"#12\"\u003EРеализация K2  \u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003Cul\u003E\u003Cli\u003E\u003Cp\u003E\u003Ca href=\"#13\"\u003EКак работает K2  \u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003Cul\u003E\u003Cli\u003E\u003Cp\u003E\u003Ca href=\"#14\"\u003EParsing  \u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003E\u003Ca href=\"#15\"\u003EPsi2Fir  \u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003E\u003Ca href=\"#16\"\u003EResolution  \u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003E\u003Ca href=\"#17\"\u003EChecking  \u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003E\u003Ca href=\"#18\"\u003EFir2Ir  \u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003C\u002Ful\u003E\u003C\u002Fli\u003E\u003C\u002Ful\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003E\u003Ca href=\"#19\"\u003EВизуальное сравнение результатов K1 и K2   \u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003C\u002Ful\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003E\u003Ca href=\"#20\"\u003EBackend  \u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003Cul\u003E\u003Cli\u003E\u003Cp\u003E\u003Ca href=\"#22\"\u003EЦели улучшения Backend  \u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003E\u003Ca href=\"#23\"\u003EКак работает Backend  \u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003Cul\u003E\u003Cli\u003E\u003Cp\u003E\u003Ca href=\"#24\"\u003EIR \u003C\u002Fa\u003E \u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003E\u003Ca href=\"#24\"\u003EIR lowering  \u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003E\u003Ca href=\"#26\"\u003ETarget code \u003C\u002Fa\u003E \u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003C\u002Ful\u003E\u003C\u002Fli\u003E\u003C\u002Ful\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003E\u003Ca href=\"#27\"\u003EВыводы\u003C\u002Fa\u003E  \u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003E\u003Ca href=\"#27\"\u003EДополнительные материалы  \u003C\u002Fa\u003E\u003Cbr\u002F\u003E\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003C\u002Ful\u003E\u003Ca class=\"anchor\" name=\"1\" id=\"1\"\u003E\u003C\u002Fa\u003E\u003Ch2\u003EКак работает компилятор\u003C\u002Fh2\u003E\u003Cp\u003EДля начала поговорим о компиляторах в целом. По сути, \u003Cstrong\u003Eкомпилятор \u003C\u002Fstrong\u003E— это программа. Она принимает код на языке программирования и превращает его в машинный код, который компьютер может исполнить.\u003C\u002Fp\u003E\u003Cp\u003EЧтобы превратить исходный код в машинный, компилятор проводит несколько промежуточных преобразований. Если очень упростить, то компилятор делает две вещи:\u003C\u002Fp\u003E\u003Cul\u003E\u003Cli\u003E\u003Cp\u003Eменяет формат данных (compiling)\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003Eупрощает его (lowering)\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003C\u002Ful\u003E\u003Cfigure class=\"full-width \"\u003E\u003Cimg src=\"https:\u002F\u002Fhabrastorage.org\u002Fr\u002Fw1560\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F270\u002F87c\u002Fd74\u002F27087cd740cefa8036228a3fabb6ca55.png\" width=\"2020\" height=\"1218\" data-src=\"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F270\u002F87c\u002Fd74\u002F27087cd740cefa8036228a3fabb6ca55.png\"\u002F\u003E\u003C\u002Ffigure\u003E\u003Cp\u003EИногда стандартных функций Kotlin недостаточно. В таких случаях разработчики выходят за рамки стандартных инструментов и используют \u003Cstrong\u003Eплагины компилятора\u003C\u002Fstrong\u003E.\u003C\u002Fp\u003E\u003Cp\u003EПлагины встраиваются в работу компилятора Kotlin на различных фазах компиляции и меняют стандартное преобразование кода компилятором. \u003C\u002Fp\u003E\u003Cfigure class=\"\"\u003E\u003Cimg src=\"https:\u002F\u002Fhabrastorage.org\u002Fr\u002Fw1560\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F202\u002Ff74\u002F7c5\u002F202f747c54865c34df0132635279f51c.png\" width=\"602\" height=\"319\" data-src=\"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F202\u002Ff74\u002F7c5\u002F202f747c54865c34df0132635279f51c.png\"\u002F\u003E\u003C\u002Ffigure\u003E\u003Cblockquote\u003E\u003Cp\u003EПлагины компилятора используют такие библиотек как Jetpack Compose, Kotlinx serialization.\u003C\u002Fp\u003E\u003C\u002Fblockquote\u003E\u003Cp\u003EKotlin компилятор состоит из 2 частей:\u003C\u002Fp\u003E\u003Cul\u003E\u003Cli\u003E\u003Cp\u003EFrontend\u003C\u002Fp\u003E\u003Cul\u003E\u003Cli\u003E\u003Cp\u003Eотвечает за построение \u003Cstrong\u003Eсинтаксического дерева (структуры кода)\u003C\u002Fstrong\u003E и добавление \u003Cstrong\u003Eсемантической информации (смысл кода)\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003C\u002Ful\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003EBackend\u003C\u002Fp\u003E\u003Cul\u003E\u003Cli\u003E\u003Cp\u003Eотвечает за генерацию кода для целевой (target) платформы: JVM, JS, Native, WASM (экспериментальный)\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003C\u002Ful\u003E\u003C\u002Fli\u003E\u003C\u002Ful\u003E\u003Cfigure class=\"full-width \"\u003E\u003Cimg src=\"https:\u002F\u002Fhabrastorage.org\u002Fr\u002Fw1560\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F56e\u002F8b2\u002F853\u002F56e8b28531b3b0326d360f788f139ccb.png\" width=\"1972\" height=\"1082\" data-src=\"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F56e\u002F8b2\u002F853\u002F56e8b28531b3b0326d360f788f139ccb.png\"\u002F\u003E\u003C\u002Ffigure\u003E\u003Cp\u003EОстановимся подробнее на каждой из частей.\u003C\u002Fp\u003E\u003Ca class=\"anchor\" name=\"2\" id=\"2\"\u003E\u003C\u002Fa\u003E\u003Ch2\u003EFrontend  \u003C\u002Fh2\u003E\u003Cp\u003EУ компилятора Kotlin есть две фронтенд-реализации: \u003C\u002Fp\u003E\u003Cul\u003E\u003Cli\u003E\u003Cp\u003EK1 (FE10-) \u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003EK2 (Fir-)\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003C\u002Ful\u003E\u003Cp\u003EУпрощенно весь процесс работы фронтенда выглядит так:\u003C\u002Fp\u003E\u003Cul\u003E\u003Cli\u003E\u003Cp\u003EКомпилятор принимает исходный код \u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003EПроизводит синтаксический и семантический анализ кода\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003EОтправляет данные на бэкенд для последующей генерации IR (Intermediate representation) и целевого кода платформы (target)\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003C\u002Ful\u003E\u003Cfigure class=\"full-width \"\u003E\u003Cimg src=\"https:\u002F\u002Fhabrastorage.org\u002Fr\u002Fw1560\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F1f5\u002F6c4\u002Ff1e\u002F1f56c4f1e203bf04bb04fb29d8663a18.png\" width=\"1600\" height=\"842\" data-src=\"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F1f5\u002F6c4\u002Ff1e\u002F1f56c4f1e203bf04bb04fb29d8663a18.png\"\u002F\u003E\u003C\u002Ffigure\u003E\u003Cp\u003EОбе реализации похожи, но K2 вводит дополнительное форматирование данных перед тем, как отправить преобразованный код на бэкенд. \u003C\u002Fp\u003E\u003Ca class=\"anchor\" name=\"3\" id=\"3\"\u003E\u003C\u002Fa\u003E\u003Ch2\u003EРеализация K1\u003C\u002Fh2\u003E\u003Cfigure class=\"full-width \"\u003E\u003Cimg src=\"https:\u002F\u002Fhabrastorage.org\u002Fr\u002Fw1560\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F2af\u002Fbfd\u002F412\u002F2afbfd412cd2a88b69f5b706e1c82cd8.png\" width=\"2052\" height=\"592\" data-src=\"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F2af\u002Fbfd\u002F412\u002F2afbfd412cd2a88b69f5b706e1c82cd8.png\"\u002F\u003E\u003C\u002Ffigure\u003E\u003Cp\u003EРеализация K1 работает c:\u003C\u002Fp\u003E\u003Cul\u003E\u003Cli\u003E\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fplugins.jetbrains.com\u002Fdocs\u002Fintellij\u002Fpsi.html\"\u003E\u003Cstrong\u003E\u003Cu\u003EPSI\u003C\u002Fu\u003E\u003C\u002Fstrong\u003E\u003C\u002Fa\u003E\u003Cstrong\u003E \u003C\u002Fstrong\u003E(Programming Structure Interface)\u003C\u002Fp\u003E\u003Cul\u003E\u003Cli\u003E\u003Cp\u003EPSI — это слой платформы IntelliJ, который занимается парсингом файлов и созданием синтаксических и семантических моделей кода (что такое синтаксис и семантика рассмотрим позже)\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003C\u002Ful\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fgithub.com\u002FJetBrains\u002Fkotlin\u002Ftree\u002Fc5e70c7d3f1d3e75e9bd4be74bd1c9e488852471\u002Fcore\u002Fdescriptors\u002Fsrc\u002Forg\u002Fjetbrains\u002Fkotlin\u002Fdescriptors\"\u003E\u003Cstrong\u003E\u003Cu\u003EДескрипторами\u003C\u002Fu\u003E\u003C\u002Fstrong\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003Cul\u003E\u003Cli\u003E\u003Cp\u003EВ зависимости от типа элемента дескрипторы могут содержать разную информацию о нем. Например дескриптор класса: контент класса, overrides, companion object и тд.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003C\u002Ful\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fgithub.com\u002FJetBrains\u002Fkotlin\u002Fblob\u002Fmaster\u002Fcompiler\u002Ffrontend\u002Fsrc\u002Forg\u002Fjetbrains\u002Fkotlin\u002Fresolve\u002FBindingContext.java\"\u003E\u003Cstrong\u003E\u003Cu\u003EBindingContext\u003C\u002Fu\u003E\u003C\u002Fstrong\u003E\u003C\u002Fa\u003E\u003Cstrong\u003E \u003C\u002Fstrong\u003E— это Map, которая содержит информацию о программе и дополняет PSI.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003C\u002Ful\u003E\u003Cp\u003EВо время обработки K1 отправляет \u003Cstrong\u003EPSI\u003C\u002Fstrong\u003E и \u003Cstrong\u003EBindingContext\u003C\u002Fstrong\u003E на Backend, который на входе использует преобразование PSI в IR (Psi2Ir) для дальнейшей работы. \u003C\u002Fp\u003E\u003Ca class=\"anchor\" name=\"4\" id=\"4\"\u003E\u003C\u002Fa\u003E\u003Ch4\u003EКак работает K1\u003C\u002Fh4\u003E\u003Cp\u003EОбщая схема работы выглядит следующим образом\u003C\u002Fp\u003E\u003Cfigure class=\"full-width \"\u003E\u003Cimg src=\"https:\u002F\u002Fhabrastorage.org\u002Fr\u002Fw1560\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F572\u002F7f9\u002F705\u002F5727f97056517eff98516ca70f34d2bb.png\" width=\"1325\" height=\"811\" data-src=\"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F572\u002F7f9\u002F705\u002F5727f97056517eff98516ca70f34d2bb.png\"\u002F\u003E\u003C\u002Ffigure\u003E\u003Cp\u003EЕсть 2 фазы: \u003C\u002Fp\u003E\u003Cul\u003E\u003Cli\u003E\u003Cp\u003E\u003Cstrong\u003EParsing Phase\u003C\u002Fstrong\u003E — разбирает что именно написал разработчик. На этой фазе еще неизвестно, будет ли компилироваться написанный код. Здесь проверяется, что код написан \u003Cstrong\u003Eсинтаксически\u003C\u002Fstrong\u003E верно.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003E\u003Cstrong\u003EResolution Phase\u003C\u002Fstrong\u003E — производит анализ, необходимый для понимания, будет ли код компилироваться и является ли он \u003Cstrong\u003Eсемантически\u003C\u002Fstrong\u003E правильным (\u003Ca href=\"https:\u002F\u002Fdocs.google.com\u002Fdocument\u002Fd\u002F17dBSxlXRW7PRD92QZGcGeotnsPSOsp0NSdnFXXZ41sg\u002Fedit\"\u003E\u003Cu\u003Eболее детальный разбор Resolution Phase\u003C\u002Fu\u003E\u003C\u002Fa\u003E).\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003C\u002Ful\u003E\u003Cp\u003EРазберём дальше разницу между синтаксисом и семантикой.\u003C\u002Fp\u003E\u003Cp\u003EЧтобы разобраться в работе компилятора K1, предположим, что у нас есть исходный код \u003C\u002Fp\u003E\u003Cpre\u003E\u003Ccode class=\"kotlin\"\u003Efun two() = 2 \u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EПока что для компилятора это только строка текста.  \u003C\u002Fp\u003E\u003Ca class=\"anchor\" name=\"5\" id=\"5\"\u003E\u003C\u002Fa\u003E\u003Ch4\u003EParsing Phase\u003C\u002Fh4\u003E\u003Ca class=\"anchor\" name=\"6\" id=\"6\"\u003E\u003C\u002Fa\u003E\u003Ch3\u003EЗадача синтаксического парсинга\u003C\u002Fh3\u003E\u003Cp\u003E\u003Cstrong\u003EЗадача парсинга — \u003C\u002Fstrong\u003Eпроверить \u003Cstrong\u003Eструктуру\u003C\u002Fstrong\u003E программы и убедиться, что она верная и следует \u003Ca href=\"https:\u002F\u002Fkotlinlang.org\u002Fdocs\u002Freference\u002Fgrammar.html\"\u003E\u003Cstrong\u003E\u003Cu\u003Eграмматическим\u003C\u002Fu\u003E\u003C\u002Fstrong\u003E\u003C\u002Fa\u003E\u003Cstrong\u003E правилам\u003C\u002Fstrong\u003E языка. \u003C\u002Fp\u003E\u003Cp\u003EПример:\u003C\u002Fp\u003E\u003Cfigure class=\"\"\u003E\u003Cimg src=\"https:\u002F\u002Fhabrastorage.org\u002Fr\u002Fw1560\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fadb\u002F053\u002F2c7\u002Fadb0532c76d3dd7f4af419179adb371a.png\" width=\"441\" height=\"228\" data-src=\"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fadb\u002F053\u002F2c7\u002Fadb0532c76d3dd7f4af419179adb371a.png\"\u002F\u003E\u003C\u002Ffigure\u003E\u003Ca class=\"anchor\" name=\"7\" id=\"7\"\u003E\u003C\u002Fa\u003E\u003Ch3\u003EЭтапы Parsing phase\u003C\u002Fh3\u003E\u003Cfigure class=\"full-width \"\u003E\u003Cimg src=\"https:\u002F\u002Fhabrastorage.org\u002Fr\u002Fw1560\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F33e\u002F6ab\u002Fdaa\u002F33e6abdaadc3bcc914c9994631c794b6.png\" width=\"720\" height=\"595\" data-src=\"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F33e\u002F6ab\u002Fdaa\u002F33e6abdaadc3bcc914c9994631c794b6.png\"\u002F\u003E\u003C\u002Ffigure\u003E\u003Col\u003E\u003Cli\u003E\u003Cp\u003EВсе начинается с \u003Cstrong\u003Eлексического анализа (Lexer Analysis)\u003C\u002Fstrong\u003E. Сначала Kotlin Parser сканирует исходный код (строку) и разбивает его на лексические части (\u003Ca href=\"https:\u002F\u002Fgithub.com\u002FJetBrains\u002Fkotlin\u002Fblob\u002Fmaster\u002Fcompiler\u002Fpsi\u002Fsrc\u002Forg\u002Fjetbrains\u002Fkotlin\u002Flexer\u002FKtTokens.java\"\u003E\u003Cstrong\u003E\u003Cu\u003EKtTokens\u003C\u002Fu\u003E\u003C\u002Fstrong\u003E\u003C\u002Fa\u003E). Например:\u003C\u002Fp\u003E\u003Cul\u003E\u003Cli\u003E\u003Cp\u003E\u003Ccode\u003E(\u003C\u002Fcode\u003E\u003Cstrong\u003E\u003Cem\u003E —&gt; \u003C\u002Fem\u003E\u003C\u002Fstrong\u003E\u003Ccode\u003EKtSingleValueToken.LPAR\u003C\u002Fcode\u003E\u003Cstrong\u003E\u003Cem\u003E \u003C\u002Fem\u003E\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003E\u003Ccode\u003E)\u003C\u002Fcode\u003E\u003Cstrong\u003E\u003Cem\u003E —&gt;\u003C\u002Fem\u003E\u003C\u002Fstrong\u003E\u003Ccode\u003EKtSingleValueToken.RPAR\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003E\u003Ccode\u003E=\u003C\u002Fcode\u003E\u003Cstrong\u003E\u003Cem\u003E —&gt;\u003C\u002Fem\u003E\u003C\u002Fstrong\u003E\u003Ccode\u003EKtSingleValueToken.EQ\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003C\u002Ful\u003E\u003Cp\u003EВ нашем примере разбиение на токены выглядит так:\u003C\u002Fp\u003E\u003Cfigure class=\"full-width \"\u003E\u003Cimg src=\"https:\u002F\u002Fhabrastorage.org\u002Fr\u002Fw1560\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F84b\u002F844\u002Ff04\u002F84b844f04ff3b6d314c6090cfa366179.png\" alt=\"\" title=\"\" width=\"1600\" height=\"881\" data-src=\"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F84b\u002F844\u002Ff04\u002F84b844f04ff3b6d314c6090cfa366179.png\"\u002F\u003E\u003C\u002Ffigure\u003E\u003Cp\u003EПробелы тоже превращаются в токены. Но они не обозначены, чтобы не перегружать  лишней информацией. \u003C\u002Fp\u003E\u003Cp\u003E\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003EДалее начинается \u003Cstrong\u003Eсинтаксический анализ (Syntax Analysis)\u003C\u002Fstrong\u003E. Его первый этап — это построение \u003Cstrong\u003Eабстрактного синтаксического дерева (AST)\u003C\u002Fstrong\u003E, которое состоит из лексических токенов. Важная особенность: дерево уже представляет из себя не последовательность символов, а \u003Cstrong\u003Eимеет структуру\u003C\u002Fstrong\u003E. \u003C\u002Fp\u003E\u003Cp\u003EОбратите внимание, что структура этого дерева совпадает со структурой нашего исходного кода. В нашем примере это выглядит так:\u003C\u002Fp\u003E\u003Cfigure class=\"full-width \"\u003E\u003Cimg src=\"https:\u002F\u002Fhabrastorage.org\u002Fr\u002Fw1560\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Ffb7\u002F6db\u002F748\u002Ffb76db748ef1fbec2e7e8288de575e6d.png\" width=\"1600\" height=\"896\" data-src=\"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Ffb7\u002F6db\u002F748\u002Ffb76db748ef1fbec2e7e8288de575e6d.png\"\u002F\u003E\u003C\u002Ffigure\u003E\u003C\u002Fli\u003E\u003C\u002Fol\u003E\u003Col start=\"3\"\u003E\u003Cli\u003E\u003Cp\u003EСледующим этапом мы накладываем PSI на узлы абстрактного синтаксического дерева. Теперь у нас есть \u003Cstrong\u003EPSI-дерево,\u003C\u002Fstrong\u003E которое содержит дополнительную информацию по каждому элементу:\u003C\u002Fp\u003E\u003Cfigure class=\"full-width \"\u003E\u003Cimg src=\"https:\u002F\u002Fhabrastorage.org\u002Fr\u002Fw1560\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fde9\u002F320\u002F09d\u002Fde932009d0f8cc2fd0fd1e386ae6e491.png\" width=\"1600\" height=\"885\" data-src=\"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fde9\u002F320\u002F09d\u002Fde932009d0f8cc2fd0fd1e386ae6e491.png\"\u002F\u003E\u003C\u002Ffigure\u003E\u003C\u002Fli\u003E\u003C\u002Fol\u003E\u003Cp\u003EНа этом этапе мы ищем только синтаксические ошибки. Другими словами, мы видим правильно написанный код, но пока не можем предсказать, скомпилируется он или нет и самое главное не понимаем смысл этого кода. \u003C\u002Fp\u003E\u003Cdetails class=\"spoiler\"\u003E\u003Csummary\u003EВ IntelliJ IDEA, вы можете загрузить плагин PSIViewer чтобы смотреть PSI для кода, написанного вами. \u003C\u002Fsummary\u003E\u003Cdiv class=\"spoiler__content\"\u003E\u003Cp\u003E\u003C\u002Fp\u003E\u003Cfigure class=\"full-width \"\u003E\u003Cimg src=\"https:\u002F\u002Fhabrastorage.org\u002Fr\u002Fw1560\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F165\u002F821\u002Fe8b\u002F165821e8b1855a9d51d6dbf38e93d51e.png\" width=\"1600\" height=\"752\" data-src=\"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F165\u002F821\u002Fe8b\u002F165821e8b1855a9d51d6dbf38e93d51e.png\"\u002F\u003E\u003C\u002Ffigure\u003E\u003Cp\u003E\u003C\u002Fp\u003E\u003C\u002Fdiv\u003E\u003C\u002Fdetails\u003E\u003Ca class=\"anchor\" name=\"8\" id=\"8\"\u003E\u003C\u002Fa\u003E\u003Ch4\u003EResolution Phase\u003C\u002Fh4\u003E\u003Ca class=\"anchor\" name=\"9\" id=\"9\"\u003E\u003C\u002Fa\u003E\u003Ch3\u003EЗадача семантического парсинга\u003C\u002Fh3\u003E\u003Cp\u003EЧтобы понять \u003Cstrong\u003Eсмысл\u003C\u002Fstrong\u003E написанного кода используется \u003Cstrong\u003EResolution Phase\u003C\u002Fstrong\u003E. \u003C\u002Fp\u003E\u003Cp\u003EЗдесь PSI-дерево проходит набор этапов, в процессе которых генерируется семантическая информация, позволяющая понять (resolving) имена \u003Cstrong\u003Eфункций, типов, переменных\u003C\u002Fstrong\u003E и откуда они взялись. \u003C\u002Fp\u003E\u003Cp\u003EВсе мы в коде видели ошибки из этой стадии. \u003C\u002Fp\u003E\u003Cfigure class=\"full-width \"\u003E\u003Cimg src=\"https:\u002F\u002Fhabrastorage.org\u002Fr\u002Fw1560\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F11b\u002Fa47\u002Fd11\u002F11ba47d11cf39386fc081444fd0a1c73.png\" width=\"716\" height=\"164\" data-src=\"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F11b\u002Fa47\u002Fd11\u002F11ba47d11cf39386fc081444fd0a1c73.png\"\u002F\u003E\u003C\u002Ffigure\u003E\u003Cp\u003E \u003Cstrong\u003EСемантическая информация содержит данные о\u003C\u002Fstrong\u003E:  \u003C\u002Fp\u003E\u003Cdetails class=\"spoiler\"\u003E\u003Csummary\u003EПеременных и параметрах\u003C\u002Fsummary\u003E\u003Cdiv class=\"spoiler__content\"\u003E\u003Cfigure class=\"\"\u003E\u003Cimg src=\"https:\u002F\u002Fhabrastorage.org\u002Fr\u002Fw780q1\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F990\u002F679\u002Fb56\u002F990679b5695fc4eb454e6f5f69b88d14.jpg\" width=\"290\" height=\"204\" data-src=\"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F990\u002F679\u002Fb56\u002F990679b5695fc4eb454e6f5f69b88d14.jpg\" data-blurred=\"true\"\u002F\u003E\u003C\u002Ffigure\u003E\u003Cp\u003EНа стадии семантического анализа нужно понять, что, используя pet внутри функции play, мы используем параметр функции, объявленный в первой строке\u003C\u002Fp\u003E\u003C\u002Fdiv\u003E\u003C\u002Fdetails\u003E\u003Cdetails class=\"spoiler\"\u003E\u003Csummary\u003EТипах\u003C\u002Fsummary\u003E\u003Cdiv class=\"spoiler__content\"\u003E\u003Cfigure class=\"full-width \"\u003E\u003Cimg src=\"https:\u002F\u002Fhabrastorage.org\u002Fr\u002Fw1560\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fb06\u002F012\u002F0a7\u002Fb060120a757af3fd4cb173261860d6d3.png\" width=\"1600\" height=\"462\" data-src=\"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fb06\u002F012\u002F0a7\u002Fb060120a757af3fd4cb173261860d6d3.png\"\u002F\u003E\u003C\u002Ffigure\u003E\u003Cp\u003E\tСемантическая информация содержит данные о том, на какие типы ссылается код, в каком месте они объявлены. \u003C\u002Fp\u003E\u003C\u002Fdiv\u003E\u003C\u002Fdetails\u003E\u003Cdetails class=\"spoiler\"\u003E\u003Csummary\u003EВызовах функций\u003C\u002Fsummary\u003E\u003Cdiv class=\"spoiler__content\"\u003E\u003Cfigure class=\"full-width \"\u003E\u003Cimg src=\"https:\u002F\u002Fhabrastorage.org\u002Fr\u002Fw1560\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F4c0\u002F7be\u002F40d\u002F4c07be40d527d5ac1c9c54e9d211135e.png\" width=\"1494\" height=\"408\" data-src=\"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F4c0\u002F7be\u002F40d\u002F4c07be40d527d5ac1c9c54e9d211135e.png\"\u002F\u003E\u003C\u002Ffigure\u003E\u003Cp\u003EМожет существовать много функций \u003Cem\u003Emeow\u003C\u002Fem\u003E, и требуется определить, какую именно функцию нужно вызвать. Эта стадия занимает большую часть семантического анализа. Тк \u003Cem\u003Emeow\u003C\u002Fem\u003E может быть: обычной функцией внутри класса, extension, property. Функция может находиться внутри текущего модуля, другого модуля или в библиотеке. На этапе семантического анализа нужно найти все функции с нужным названием и выбрать наиболее подходящую функцию для конкретной ситуации. \u003C\u002Fp\u003E\u003C\u002Fdiv\u003E\u003C\u002Fdetails\u003E\u003Cp\u003E\u003Cstrong\u003EЭта стадия отвечает на похожие вопросы\u003C\u002Fstrong\u003E:\u003C\u002Fp\u003E\u003Cul\u003E\u003Cli\u003E\u003Cp\u003EОткуда появилась эта функция\u002Fпеременная\u002Fтип для использования\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003EТочно ли две строки относятся к одной и той же переменной или это разные переменные в зависимости от контекста где они используются?\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003EКакой тип у конкретного объекта?  \u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003C\u002Ful\u003E\u003Cdetails class=\"spoiler\"\u003E\u003Csummary\u003EПроизводится выведение типов\u003C\u002Fsummary\u003E\u003Cdiv class=\"spoiler__content\"\u003E\u003Cpre\u003E\u003Ccode class=\"kotlin\"\u003Eval list1 = listOf(1, 2, 3)\nval list2 = listOf(\"one\", \"two\", \"three\")\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EПредставим, что у нас есть такая запись.\u003C\u002Fp\u003E\u003Cp\u003EТут используется generic-функция \u003Cem\u003ElistOf\u003C\u002Fem\u003E\u003C\u002Fp\u003E\u003Cpre\u003E\u003Ccode class=\"kotlin\"\u003Epublic fun &lt;T&gt; listOf(vararg elements: T): List&lt;T&gt;\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EЗадача семантического анализа — вывести аргументы типа для каждого использования  \u003C\u002Fp\u003E\u003Cpre\u003E\u003Ccode class=\"kotlin\"\u003Eval list1 = listOf(1, 2, 3)\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EВ первом случае \u003Cem\u003ET = Int\u003C\u002Fem\u003E  \u003C\u002Fp\u003E\u003Cpre\u003E\u003Ccode class=\"kotlin\"\u003Eval list2 = listOf(\"one\", \"two\", \"three\")\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EВо втором — \u003Cem\u003ET = String\u003C\u002Fem\u003E.  \u003C\u002Fp\u003E\u003C\u002Fdiv\u003E\u003C\u002Fdetails\u003E\u003Ca class=\"anchor\" name=\"10\" id=\"10\"\u003E\u003C\u002Fa\u003E\u003Ch3\u003EЭтапы Resolution Phase\u003C\u002Fh3\u003E\u003Cp\u003EРеализация K1 выполняет вычисление на \u003Cstrong\u003EPSI-дереве\u003C\u002Fstrong\u003E, создает дескрипторы и \u003Cstrong\u003EBindingContext\u003C\u002Fstrong\u003E map, а затем передает все это на бэкенд. В итоге бэкенд преобразует полученную информацию в IR с помощью \u003Cstrong\u003EPsi2Ir\u003C\u002Fstrong\u003E.\u003C\u002Fp\u003E\u003Cp\u003EВся эта информация будет использоваться дальше на бэкенде:\u003C\u002Fp\u003E\u003Cfigure class=\"full-width \"\u003E\u003Cimg src=\"https:\u002F\u002Fhabrastorage.org\u002Fr\u002Fw1560\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fece\u002F610\u002F25f\u002Fece61025f9a00c4e4606f0e8d9bb1c46.png\" width=\"1600\" height=\"895\" data-src=\"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fece\u002F610\u002F25f\u002Fece61025f9a00c4e4606f0e8d9bb1c46.png\"\u002F\u003E\u003C\u002Ffigure\u003E\u003Cdetails class=\"spoiler\"\u003E\u003Csummary\u003EПример с деревом PSI и семантической информацией BindingContext\u003C\u002Fsummary\u003E\u003Cdiv class=\"spoiler__content\"\u003E\u003Cp\u003EВ этом примере можно увидеть как исходный код (строка) преобразуется в структуру (дерево) и по каждому узлу дерева добавляется дополнительная информация (семантика).\u003C\u002Fp\u003E\u003Cfigure class=\"full-width \"\u003E\u003Cimg src=\"https:\u002F\u002Fhabrastorage.org\u002Fr\u002Fw1560\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F836\u002F1fd\u002F265\u002F8361fd265640179683030531eb4af37f.png\" width=\"1600\" height=\"739\" data-src=\"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F836\u002F1fd\u002F265\u002F8361fd265640179683030531eb4af37f.png\"\u002F\u003E\u003C\u002Ffigure\u003E\u003Cp\u003E\u003C\u002Fp\u003E\u003C\u002Fdiv\u003E\u003C\u002Fdetails\u003E\u003Ca class=\"anchor\" name=\"11\" id=\"11\"\u003E\u003C\u002Fa\u003E\u003Ch4\u003EПроблемы K1\u003C\u002Fh4\u003E\u003Cp\u003EМы разобрались с тем, как работает фронтенд-реализация K1. Обозначим этот процесс на схеме K1:\u003C\u002Fp\u003E\u003Cfigure class=\"full-width \"\u003E\u003Cimg src=\"https:\u002F\u002Fhabrastorage.org\u002Fr\u002Fw1560\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F745\u002Fb50\u002F65d\u002F745b5065de514b84b60da07976b05ad0.png\" width=\"1600\" height=\"572\" data-src=\"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F745\u002Fb50\u002F65d\u002F745b5065de514b84b60da07976b05ad0.png\"\u002F\u003E\u003C\u002Ffigure\u003E\u003Cp\u003EУ этой реализации есть свои недостатки (\u003Ca href=\"https:\u002F\u002Fkotlinlang.slack.com\u002Farchives\u002FC7L3JB43G\u002Fp1622478266038500\"\u003E\u003Cu\u003Eобъяснение Дмитрия Новожилова в kotlin slack\u003C\u002Fu\u003E\u003C\u002Fa\u003E). Преобразование через \u003Cstrong\u003EPSI\u003C\u002Fstrong\u003E и \u003Cstrong\u003EBindingContext\u003C\u002Fstrong\u003E приводит к проблемам с производительностью компилятора. \u003C\u002Fp\u003E\u003Cp\u003EТк компилятор работает с ленивыми дескрипторами, то выполнение постоянно прыгает между разными частями кода, это сводит на нет некоторые JIT-оптимизации. Кроме этого много информации resolution phase хранится в большом \u003Cstrong\u003EBindingContext\u003C\u002Fstrong\u003E, из-за этого ЦП не может хорошо кэшировать объекты. \u003C\u002Fp\u003E\u003Cp\u003EВсе это ведет к проблемам с производительностью.\u003C\u002Fp\u003E\u003Ca class=\"anchor\" name=\"12\" id=\"12\"\u003E\u003C\u002Fa\u003E\u003Ch2\u003EРеализация K2\u003C\u002Fh2\u003E\u003Cp\u003EЧтобы повысить производительность компилятора и улучшить архитектуру решения, JB создала новую фронтенд-реализацию \u003Cstrong\u003EK2 (Fir frontend)\u003C\u002Fstrong\u003E.\u003C\u002Fp\u003E\u003Cp\u003EИзменение произошло в структурах данных. Вместо старых структур (\u003Cstrong\u003EPSI\u003C\u002Fstrong\u003E + \u003Cstrong\u003EBindingContext\u003C\u002Fstrong\u003E) реализация K2 использует \u003Cstrong\u003EFir (Frontend Intermediate Representation)\u003C\u002Fstrong\u003E. Это \u003Cstrong\u003Eсемантическое дерево \u003C\u002Fstrong\u003E(дерево, в узлах которого к структуре кода добавлена семантическая информация). Оно представляет исходный код.\u003C\u002Fp\u003E\u003Cfigure class=\"full-width \"\u003E\u003Cimg src=\"https:\u002F\u002Fhabrastorage.org\u002Fr\u002Fw1560\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F20e\u002F340\u002F2a3\u002F20e3402a3355374bcbf03cf3a99c238e.png\" width=\"1600\" height=\"741\" data-src=\"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F20e\u002F340\u002F2a3\u002F20e3402a3355374bcbf03cf3a99c238e.png\"\u002F\u003E\u003C\u002Ffigure\u003E\u003Ca class=\"anchor\" name=\"13\" id=\"13\"\u003E\u003C\u002Fa\u003E\u003Ch4\u003EКак работает K2\u003C\u002Fh4\u003E\u003Cp\u003EВместо того, чтобы как раньше отправлять \u003Cstrong\u003EPSI\u003C\u002Fstrong\u003E и \u003Cstrong\u003EBindingContext\u003C\u002Fstrong\u003E в Backend, в K2 на Frontend происходят дополнительные преобразования:\u003C\u002Fp\u003E\u003Col\u003E\u003Cli\u003E\u003Cp\u003E\u003Ca href=\"#31\"\u003EКомпилятор принимает raw PSI на входе (Parsing)\u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003E\u003Ca href=\"#32\"\u003EПроизводит незаполненное raw Fir-дерево (Psi2Fir)\u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003E\u003Ca href=\"#33\"\u003EСемантическая информация заполняет Fir-дерево (Resolution + Checking)\u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003E\u003Ca href=\"https:\u002F\u002F34\"\u003EПреобразует Fir в Ir (Fir2Ir)\u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003E\u003Ca href=\"https:\u002F\u002F35\"\u003EПередает Ir бэкенду \u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003C\u002Fol\u003E\u003Cp\u003EВ случае с K2, мы рассмотрим более сложный случай и пропустим те фазы, в которых K1 и K2 работают одинаково.\u003C\u002Fp\u003E\u003Cp\u003EДля примера возьмем исходный код \u003C\u002Fp\u003E\u003Cpre\u003E\u003Ccode class=\"kotlin\"\u003Eprivate val kotlinFiles = mutableListOf(1, 2, 3)\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cfigure class=\"full-width \"\u003E\u003Cimg src=\"https:\u002F\u002Fhabrastorage.org\u002Fr\u002Fw1560\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fd51\u002F12a\u002F97d\u002Fd5112a97d9581d6e903dc8ccb1e27fdf.png\" width=\"1049\" height=\"572\" data-src=\"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fd51\u002F12a\u002F97d\u002Fd5112a97d9581d6e903dc8ccb1e27fdf.png\"\u002F\u003E\u003C\u002Ffigure\u003E\u003Ca class=\"anchor\" name=\"14\" id=\"14\"\u003E\u003C\u002Fa\u003E\u003Ch3\u003EParsing\u003C\u002Fh3\u003E\u003Ca class=\"anchor\" name=\"31\" id=\"31\"\u003E\u003C\u002Fa\u003E\u003Cp\u003EНачнем с уровня PSI\u003Cstrong\u003E \u003C\u002Fstrong\u003E(до этого K1 и K2 схожи):\u003C\u002Fp\u003E\u003Cfigure class=\"full-width \"\u003E\u003Cimg src=\"https:\u002F\u002Fhabrastorage.org\u002Fr\u002Fw1560\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fa9b\u002F89f\u002Fa7b\u002Fa9b89fa7bb1d10a0c160659817323df8.png\" width=\"1442\" height=\"799\" data-src=\"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fa9b\u002F89f\u002Fa7b\u002Fa9b89fa7bb1d10a0c160659817323df8.png\"\u002F\u003E\u003C\u002Ffigure\u003E\u003Cp\u003EВ этом случае, реализация K1 просто генерировала бы дополнительные данные для отправки PSI на бэкенд. \u003C\u002Fp\u003E\u003Ca class=\"anchor\" name=\"15\" id=\"15\"\u003E\u003C\u002Fa\u003E\u003Ch3\u003EPsi2Fir\u003C\u002Fh3\u003E\u003Ca class=\"anchor\" name=\"32\" id=\"32\"\u003E\u003C\u002Fa\u003E\u003Cp\u003EВ отличие от нее, K2 компилирует этот промежуточный формат данных перед созданием Ir. В итоге получается \u003Cstrong\u003EFir \u003C\u002Fstrong\u003E— это \u003Cem\u003Emutable-\u003C\u002Fem\u003Eдерево, построенное из результатов парсера (PSI-дерева):\u003C\u002Fp\u003E\u003Cfigure class=\"full-width \"\u003E\u003Cimg src=\"https:\u002F\u002Fhabrastorage.org\u002Fr\u002Fw1560\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Ff65\u002F1b1\u002F0c0\u002Ff651b10c054bc941fb3516f04817e779.png\" width=\"1452\" height=\"812\" data-src=\"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Ff65\u002F1b1\u002F0c0\u002Ff651b10c054bc941fb3516f04817e779.png\"\u002F\u003E\u003C\u002Ffigure\u003E\u003Cp\u003EТут видно сходство между PSI и raw Fir.\u003C\u002Fp\u003E\u003Cfigure class=\"full-width \"\u003E\u003Cimg src=\"https:\u002F\u002Fhabrastorage.org\u002Fr\u002Fw1560\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F1e8\u002F868\u002F4e7\u002F1e88684e78583306c60d3baa8cc79948.png\" width=\"1756\" height=\"1060\" data-src=\"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F1e8\u002F868\u002F4e7\u002F1e88684e78583306c60d3baa8cc79948.png\"\u002F\u003E\u003C\u002Ffigure\u003E\u003Ca class=\"anchor\" name=\"16\" id=\"16\"\u003E\u003C\u002Fa\u003E\u003Ch3\u003EResolution\u003C\u002Fh3\u003E\u003Cp\u003EИтак, мы создаем raw FIR и пересылаем его нескольким обработчикам. Они представляют собой различные этапы пайплайна компилятора и заполняют дерево семантической информацией:\u003C\u002Fp\u003E\u003Cfigure class=\"full-width \"\u003E\u003Cimg src=\"https:\u002F\u002Fhabrastorage.org\u002Fr\u002Fw1560\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F10c\u002Fab4\u002F2c1\u002F10cab42c14a33d2d388845583ddf0049.png\" width=\"1453\" height=\"802\" data-src=\"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F10c\u002Fab4\u002F2c1\u002F10cab42c14a33d2d388845583ddf0049.png\"\u002F\u003E\u003C\u002Ffigure\u003E\u003Ca class=\"anchor\" name=\"33\" id=\"33\"\u003E\u003C\u002Fa\u003E\u003Cp\u003EВсе файлы в модуле проходят эти этапы одновременно. \u003C\u002Fp\u003E\u003Cp\u003EВ это время выполняются такие действия, как:\u003C\u002Fp\u003E\u003Cul\u003E\u003Cli\u003E\u003Cp\u003EВычисление import’ов\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003EПоиск идентификаторов класса для супертипов и наследников sealed классов\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003EВычисление модификаторов видимости\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003EВычисление контрактов функций\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003EВыведение типов возвращаемого значения\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003EАнализ тел функций и свойств\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003C\u002Ful\u003E\u003Cp\u003EНа стадии Resolution компилятор преобразует сгенерированное raw Fir, заполняя дерево семантической информацией: \u003C\u002Fp\u003E\u003Cfigure class=\"full-width \"\u003E\u003Cimg src=\"https:\u002F\u002Fhabrastorage.org\u002Fr\u002Fw1560\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F9ea\u002Fd4b\u002F700\u002F9ead4b70078c70c14a4d19c1d8d62f96.png\" width=\"1455\" height=\"811\" data-src=\"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F9ea\u002Fd4b\u002F700\u002F9ead4b70078c70c14a4d19c1d8d62f96.png\"\u002F\u003E\u003C\u002Ffigure\u003E\u003Cp\u003EНа этих этапах компилятор выполняет desugaring. Например, `if` можно заменить на `when` или `for` — на `while`. \u003C\u002Fp\u003E\u003Cp\u003EРаньше мы делали все это на Backend, но благодаря K2 то же самое можно делать на Frontend. \u003C\u002Fp\u003E\u003Ca class=\"anchor\" name=\"17\" id=\"17\"\u003E\u003C\u002Fa\u003E\u003Ch3\u003EChecking\u003C\u002Fh3\u003E\u003Cfigure class=\"full-width \"\u003E\u003Cimg src=\"https:\u002F\u002Fhabrastorage.org\u002Fr\u002Fw1560\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F6dc\u002F4ba\u002F282\u002F6dc4ba2823a579a6e58c74e18ed50ed4.png\" width=\"1464\" height=\"806\" data-src=\"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F6dc\u002F4ba\u002F282\u002F6dc4ba2823a579a6e58c74e18ed50ed4.png\"\u002F\u003E\u003C\u002Ffigure\u003E\u003Cp\u003EМы пришли к последней стадии — стадии проверки. Здесь компилятор берет Fir и проводит диагностику на предмет предупреждений и ошибок. \u003C\u002Fp\u003E\u003Cp\u003EЕсли ошибки появились, данные отправляются плагину IDEA — именно он подчеркивает ошибку красной линией. Компиляция останавливается, чтобы не отправлять неверный код на бэкенд. \u003C\u002Fp\u003E\u003Ca class=\"anchor\" name=\"18\" id=\"18\"\u003E\u003C\u002Fa\u003E\u003Ch3\u003EFir2Ir\u003C\u002Fh3\u003E\u003Cp\u003EЕсли ошибок нет\u003C\u002Fp\u003E\u003Cfigure class=\"full-width \"\u003E\u003Cimg src=\"https:\u002F\u002Fhabrastorage.org\u002Fr\u002Fw1560\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F128\u002F67e\u002F571\u002F12867e5715f0fa5c6650a4a3715f9eb7.png\" width=\"1460\" height=\"820\" data-src=\"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F128\u002F67e\u002F571\u002F12867e5715f0fa5c6650a4a3715f9eb7.png\"\u002F\u003E\u003C\u002Ffigure\u003E\u003Ca class=\"anchor\" name=\"34\" id=\"34\"\u003E\u003C\u002Fa\u003E\u003Cp\u003EFIR трансформируется в IR\u003C\u002Fp\u003E\u003Cfigure class=\"full-width \"\u003E\u003Cimg src=\"https:\u002F\u002Fhabrastorage.org\u002Fr\u002Fw1560\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F5f5\u002F0f6\u002F810\u002F5f50f68104937a2fbcb4f6cb3a90c1a1.png\" width=\"1455\" height=\"810\" data-src=\"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F5f5\u002F0f6\u002F810\u002F5f50f68104937a2fbcb4f6cb3a90c1a1.png\"\u002F\u003E\u003C\u002Ffigure\u003E\u003Ca class=\"anchor\" name=\"35\" id=\"35\"\u003E\u003C\u002Fa\u003E\u003Cp\u003EВ итоге мы получаем входные данные для бэкенда\u003C\u002Fp\u003E\u003Ca class=\"anchor\" name=\"19\" id=\"19\"\u003E\u003C\u002Fa\u003E\u003Ch2\u003EВизуальное сравнение результатов K1 и K2   \u003C\u002Fh2\u003E\u003Cfigure class=\"full-width \"\u003E\u003Cimg src=\"https:\u002F\u002Fhabrastorage.org\u002Fr\u002Fw1560\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F57d\u002F17a\u002F34d\u002F57d17a34de9a0b9eef198ce7dcd0216e.png\" width=\"5734\" height=\"2815\" data-src=\"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F57d\u002F17a\u002F34d\u002F57d17a34de9a0b9eef198ce7dcd0216e.png\"\u002F\u003E\u003C\u002Ffigure\u003E\u003Cp\u003EИтого в K2 мы получили Fir (одну структуру данных вместо двух в K1 версии)  \u003C\u002Fp\u003E\u003Ca class=\"anchor\" name=\"20\" id=\"20\"\u003E\u003C\u002Fa\u003E\u003Ch2\u003EBackend\u003C\u002Fh2\u003E\u003Ca class=\"anchor\" name=\"21\" id=\"21\"\u003E\u003C\u002Fa\u003E\u003Ch3\u003EЦели улучшения Backend\u003C\u002Fh3\u003E\u003Cp\u003EИзначально при разработке Kotlin компилятор не использовал промежуточное представление (IR). Тк это необязательная стадия при разработке компиляторов. \u003C\u002Fp\u003E\u003Cdetails class=\"spoiler\"\u003E\u003Csummary\u003EКаноничная архитектура компилятора\u003C\u002Fsummary\u003E\u003Cdiv class=\"spoiler__content\"\u003E\u003Cfigure class=\"full-width \"\u003E\u003Cimg src=\"https:\u002F\u002Fhabrastorage.org\u002Fr\u002Fw1560\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F48b\u002F6a1\u002F0e4\u002F48b6a10e4b25df66253d762008826cc0.png\" width=\"944\" height=\"1049\" data-src=\"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F48b\u002F6a1\u002F0e4\u002F48b6a10e4b25df66253d762008826cc0.png\"\u002F\u003E\u003C\u002Ffigure\u003E\u003Cp\u003E\u003C\u002Fp\u003E\u003C\u002Fdiv\u003E\u003C\u002Fdetails\u003E\u003Cp\u003EОтсутствие IR позволило Kotlin быстрее эволюционировать на ранних стадиях. Kotlin компилировался не только в JVM, но так же и в JS. JS высокоуровневый язык и он похож больше на Kotlin, чем на JVM байткод. Поэтому IR бы только тормозило разработку преобразования.\u003C\u002Fp\u003E\u003Cfigure class=\"full-width \"\u003E\u003Cimg src=\"https:\u002F\u002Fhabrastorage.org\u002Fr\u002Fw1560\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F06b\u002F521\u002Fb96\u002F06b521b96545144de6567e249ac0d863.png\" width=\"1258\" height=\"988\" data-src=\"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F06b\u002F521\u002Fb96\u002F06b521b96545144de6567e249ac0d863.png\"\u002F\u003E\u003C\u002Ffigure\u003E\u003Cp\u003EНо вскоре появился еще 1 native backend.\u003C\u002Fp\u003E\u003Cfigure class=\"full-width \"\u003E\u003Cimg src=\"https:\u002F\u002Fhabrastorage.org\u002Fr\u002Fw1560\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F863\u002F3a4\u002F4e3\u002F8633a44e35800c2fdc31298245f43fe8.png\" width=\"1600\" height=\"685\" data-src=\"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F863\u002F3a4\u002F4e3\u002F8633a44e35800c2fdc31298245f43fe8.png\"\u002F\u003E\u003C\u002Ffigure\u003E\u003Cp\u003EСтало понятно что все 3 бэкенда могут использовать общую логику по трансформации и упрощению кода, что позволит поддерживать фичи для разных бекендов проще. Поэтому начиная с native-backend команда Kotlin решила использовать IR, сначала только для него самого.\u003C\u002Fp\u003E\u003Cfigure class=\"full-width \"\u003E\u003Cimg src=\"https:\u002F\u002Fhabrastorage.org\u002Fr\u002Fw1560\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F2e9\u002F14e\u002Ff6f\u002F2e914ef6feb4ab75068486290e87bc95.png\" width=\"1600\" height=\"919\" data-src=\"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F2e9\u002F14e\u002Ff6f\u002F2e914ef6feb4ab75068486290e87bc95.png\"\u002F\u003E\u003C\u002Ffigure\u003E\u003Cp\u003EИтак, в качестве целей разработки новой версии можно выделить:\u003C\u002Fp\u003E\u003Cul\u003E\u003Cli\u003E\u003Cp\u003Eпереиспользование логики между разными бекендами\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003Eупрощение поддержки новых языковых возможностей\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003C\u002Ful\u003E\u003Cp\u003EНеобходимо отметить, что ускорение Backend не являлось целью. В отличие от ускорения Frontend-части.\u003C\u002Fp\u003E\u003Cp\u003EНовая реализация Backend позволила расширять компилятор с помощью компиляторных плагинов. В частности реализация Jetpack Compose полагается на новую версию бекенда c использованием IR.\u003C\u002Fp\u003E\u003Ca class=\"anchor\" name=\"22\" id=\"22\"\u003E\u003C\u002Fa\u003E\u003Ch3\u003EКак работает Backend\u003C\u002Fh3\u003E\u003Cfigure class=\"full-width \"\u003E\u003Cimg src=\"https:\u002F\u002Fhabrastorage.org\u002Fr\u002Fw1560\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fc78\u002F534\u002F63e\u002Fc7853463ed3b31b4e99c4698a6f4b4ab.png\" width=\"1426\" height=\"795\" data-src=\"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fc78\u002F534\u002F63e\u002Fc7853463ed3b31b4e99c4698a6f4b4ab.png\"\u002F\u003E\u003C\u002Ffigure\u003E\u003Cp\u003EСейчас в Kotlin есть четыре реализации backend: \u003C\u002Fp\u003E\u003Cul\u003E\u003Cli\u003E\u003Cp\u003EJVM\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003EJS\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003ENative \u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003EWASM\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003C\u002Ful\u003E\u003Cp\u003EКакой бы бэкенд вы ни использовали, обработка в нем всегда начинается с генератора IR и оптимизатора. Затем выбранная конфигурация запускает сгенерированный код:\u003C\u002Fp\u003E\u003Cp\u003E \u003C\u002Fp\u003E\u003Cfigure class=\"full-width \"\u003E\u003Cimg src=\"https:\u002F\u002Fhabrastorage.org\u002Fr\u002Fw1560\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F98b\u002Fe2d\u002F008\u002F98be2d00820accf6e676d0332f0f4f90.png\" width=\"2524\" height=\"1466\" data-src=\"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F98b\u002Fe2d\u002F008\u002F98be2d00820accf6e676d0332f0f4f90.png\"\u002F\u003E\u003C\u002Ffigure\u003E\u003Cp\u003EДля примера выберем бэкенд JVM и продолжим работу с mutableList\u003C\u002Fp\u003E\u003Ca class=\"anchor\" name=\"23\" id=\"23\"\u003E\u003C\u002Fa\u003E\u003Ch4\u003EIR\u003C\u002Fh4\u003E\u003Cfigure class=\"full-width \"\u003E\u003Cimg src=\"https:\u002F\u002Fhabrastorage.org\u002Fr\u002Fw1560\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F991\u002F90e\u002F0a2\u002F99190e0a2a44ffce6f512fe4a0aa4163.png\" width=\"1460\" height=\"814\" data-src=\"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F991\u002F90e\u002F0a2\u002F99190e0a2a44ffce6f512fe4a0aa4163.png\"\u002F\u003E\u003C\u002Ffigure\u003E\u003Cp\u003EIR это также дерево. В IR добавлена вся семантическая информация. Для человека IR на выглядит не очень читабельно, но зато такой вид гораздо понятнее для компилятора. В момент анализа IR создаются поток управления и стеки вызовов.\u003C\u002Fp\u003E\u003Cp\u003EМожно рассматривать IR как представление кода в виде дерева, которое \u003Cstrong\u003Eразработано специально для генерации кода target-платформы\u003C\u002Fstrong\u003E. В отличие от Fir на фронтенде, который проверяет смысл написанного кода.\u003C\u002Fp\u003E\u003Ca class=\"anchor\" name=\"24\" id=\"24\"\u003E\u003C\u002Fa\u003E\u003Ch4\u003EIR lowering\u003C\u002Fh4\u003E\u003Cp\u003EЗатем на IR выполняются оптимизации и упрощения это называется \u003Cstrong\u003Elowering\u003C\u002Fstrong\u003E.  Таким образом упрощается сложность Kotlin. Например в IR отсутствуют local и internal классы, они заменены отдельными классами со специальными именами. С помощью упрощений разным backend’ам не нужно бороться со сложностью языка Kotlin и реализация становится проще.\u003C\u002Fp\u003E\u003Cfigure class=\"full-width \"\u003E\u003Cimg src=\"https:\u002F\u002Fhabrastorage.org\u002Fr\u002Fw1560\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F674\u002Fcfd\u002F3bd\u002F674cfd3bd2547984874c6d26b1b7c661.png\" width=\"1449\" height=\"811\" data-src=\"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F674\u002Fcfd\u002F3bd\u002F674cfd3bd2547984874c6d26b1b7c661.png\"\u002F\u003E\u003C\u002Ffigure\u003E\u003Cp\u003EТакже на этом этапе упрощаются операции, улучшается производительность и качество машинного кода, особенно с точки зрения многопоточности.\u003C\u002Fp\u003E\u003Ca class=\"anchor\" name=\"25\" id=\"25\"\u003E\u003C\u002Fa\u003E\u003Ch4\u003ETarget code\u003C\u002Fh4\u003E\u003Cp\u003EТеперь у нас есть сгенерированный код целевой платформы. В нашем примере это JVM байт-код. Далее он отправляется на виртуальную машину, где он и будет исполняться:\u003C\u002Fp\u003E\u003Cfigure class=\"full-width \"\u003E\u003Cimg src=\"https:\u002F\u002Fhabrastorage.org\u002Fr\u002Fw1560\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F1e8\u002F495\u002Fdda\u002F1e8495dda92dc53af904e3a5756b14ee.png\" width=\"1453\" height=\"814\" data-src=\"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F1e8\u002F495\u002Fdda\u002F1e8495dda92dc53af904e3a5756b14ee.png\"\u002F\u003E\u003C\u002Ffigure\u003E\u003Cp\u003EНа этом задачи компилятора считаются выполненными.\u003C\u002Fp\u003E\u003Ca class=\"anchor\" name=\"26\" id=\"26\"\u003E\u003C\u002Fa\u003E\u003Ch2\u003EВыводы\u003C\u002Fh2\u003E\u003Cp\u003EЧто дает новый компилятор:\u003C\u002Fp\u003E\u003Cul\u003E\u003Cli\u003E\u003Cp\u003EЕдиная структура данных Fir для представления кода и семантики\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003EВозможность добавления плагинов компилятора\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003EУпрощение поддержки новых языковых возможностей для разных target-платформ.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003EУлучшение производительности компилятора и IDE (плагин Kotlin в IDE использует Frontend компилятора). \u003Ca href=\"https:\u002F\u002Fblog.jetbrains.com\u002Fkotlin\u002F2024\u002F04\u002Fk2-compiler-performance-benchmarks-and-how-to-measure-them-on-your-projects\u002F\"\u003E\u003Cu\u003EПо результатам замеров JB\u003C\u002Fu\u003E\u003C\u002Fa\u003E:\u003C\u002Fp\u003E\u003Cul\u003E\u003Cli\u003E\u003Cp\u003Eускорение компиляции на 94%\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003Eускорение фазы инициализации на 488%\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003Eускорение фазы анализа на 376%\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003C\u002Ful\u003E\u003C\u002Fli\u003E\u003C\u002Ful\u003E\u003Cp\u003EВ этой статье мы рассмотрели как работают разные версии компилятора Kotlin. Непосредственно в эту тему редко углубляются разработчики. Я надеюсь, что материал позволил заглянуть вам под капот и узнать, что же там происходит, когда вы каждый день собираете приложения на работе.\u003C\u002Fp\u003E\u003Ca class=\"anchor\" name=\"27\" id=\"27\"\u003E\u003C\u002Fa\u003E\u003Ch3\u003EДополнительные материалы\u003C\u002Fh3\u003E\u003Cul\u003E\u003Cli\u003E\u003Cp\u003EВидео \u003Ca href=\"https:\u002F\u002Fyoutu.be\u002FwUGfuWHCqrc\"\u003E\u003Cu\u003ECrash Course on the Kotlin Compiler by Amanda Hinchman-Dominguez\u003C\u002Fu\u003E\u003C\u002Fa\u003E \u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003EВидео \u003Ca href=\"https:\u002F\u002Fwww.youtube.com\u002Fwatch?v=w-GMlaziIyo\"\u003E\u003Cu\u003EKotlinConf 2018 - Writing Your First Kotlin Compiler Plugin by Kevin Most\u003C\u002Fu\u003E\u003C\u002Fa\u003E \u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003EВидео \u003Ca href=\"https:\u002F\u002Fwww.youtube.com\u002Fwatch?v=iTdJJq_LyoY\"\u003E\u003Cu\u003EWhat Everyone Must Know About The NEW Kotlin K2 Compiler\u003C\u002Fu\u003E\u003C\u002Fa\u003E \u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003EВидео \u003Ca href=\"https:\u002F\u002Fwww.droidcon.com\u002F2022\u002F06\u002F28\u002Fha-hitchhikers-guide-to-compose-compiler-composers-compiler-plugins-and-snapshots\u002F\"\u003E\u003Cu\u003EA Hitchhiker's Guide to Compose Compiler: Composers, Compiler Plugins, and Snapshots\u003C\u002Fu\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003EРепозиторий \u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fahinchman1\u002FKotlin-Compiler-Crash-Course\"\u003E\u003Cu\u003EKotlin-Compiler-Crash-Course\u003C\u002Fu\u003E\u003C\u002Fa\u003E с заметками об отладке, тестировании и настройке компилятора Kotlin \u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003EЦикл статей Crash course on the Kotlin compiler\u003C\u002Fp\u003E\u003Cul\u003E\u003Cli\u003E\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fmedium.com\u002Fgoogle-developer-experts\u002Fcrash-course-on-the-kotlin-compiler-k1-k2-frontends-backends-fe2238790bd8\"\u003E\u003Cu\u003EK1 + K2 Frontends, Backends\u003C\u002Fu\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fmedium.com\u002Fgoogle-developer-experts\u002Fcrash-course-on-the-kotlin-compiler-1-frontend-parsing-phase-9898490d922b\"\u003E\u003Cu\u003E1. Frontend: Parsing phase\u003C\u002Fu\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fdocs.google.com\u002Fdocument\u002Fd\u002F17dBSxlXRW7PRD92QZGcGeotnsPSOsp0NSdnFXXZ41sg\u002Fedit\"\u003E\u003Cu\u003E2. Frontend: Resolution phase\u003C\u002Fu\u003E\u003C\u002Fa\u003E \u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003C\u002Ful\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003EКнига “Compilers: Principles, Techniques, and Tools” by Alfred Aho, Jeffrey Ullman, Ravi Sethi, Monica Lam\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003C\u002Ful\u003E\u003Cfigure class=\"\"\u003E\u003Cimg src=\"https:\u002F\u002Fhabrastorage.org\u002Fr\u002Fw1560\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F76d\u002Fa8f\u002Fea9\u002F76da8fea949241a9417e3c6013d57c2a.png\" width=\"340\" height=\"443\" data-src=\"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F76d\u002Fa8f\u002Fea9\u002F76da8fea949241a9417e3c6013d57c2a.png\"\u002F\u003E\u003C\u002Ffigure\u003E\u003Cp\u003E\u003Cstrong\u003EДругие наши статьи по Android разработке:\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\u003Cul\u003E\u003Cli\u003E\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fhabr.com\u002Fru\u002Fcompanies\u002Fkts\u002Farticles\u002F814363\u002F\"\u003EDeveloper Keynote Google I\u002FO 2024: официальная поддержка KMP, развитие Gemini и AI в Андроиде\u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fhabr.com\u002Fru\u002Fcompanies\u002Fkts\u002Farticles\u002F767224\u002F\"\u003E4 сценария, когда нужно сделать ставку на Kotlin Multiplatform, а не Flutter\u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fhabr.com\u002Fru\u002Fcompanies\u002Fkts\u002Farticles\u002F771498\u002F\"\u003EKotlin Multiplatform перешёл в stable. Что это значит?\u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fhabr.com\u002Fru\u002Fcompanies\u002Fkts\u002Farticles\u002F798607\u002F\"\u003EКот в мешке: мастерство обработки ошибок внешних ключей SQLite\u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003C\u002Ful\u003E\u003Cp\u003E\u003C\u002Fp\u003E\u003C\u002Fdiv\u003E","tags":[{"titleHtml":"компиляторы"},{"titleHtml":"kotlin"},{"titleHtml":"k1"},{"titleHtml":"k2"},{"titleHtml":"релиз kotlin"},{"titleHtml":"kotlin 2.0"},{"titleHtml":"android"},{"titleHtml":"kmp"}],"metadata":{"stylesUrls":[],"scriptUrls":[],"shareImageUrl":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F90f\u002F8d0\u002F1d9\u002F90f8d01d9f8258baea6fa8177683e15b.png","shareImageWidth":1200,"shareImageHeight":630,"vkShareImageUrl":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F90f\u002F8d0\u002F1d9\u002F90f8d01d9f8258baea6fa8177683e15b.png","schemaJsonLd":"{\"@context\":\"http:\\\u002F\\\u002Fschema.org\",\"@type\":\"Article\",\"mainEntityOfPage\":{\"@type\":\"WebPage\",\"@id\":\"https:\\\u002F\\\u002Fhabr.com\\\u002Fru\\\u002Fcompanies\\\u002Fkts\\\u002Farticles\\\u002F813085\\\u002F\"},\"headline\":\"Как новый компилятор K2 ускоряет компиляцию Kotlin на 94%\",\"datePublished\":\"2024-05-08T16:39:14+03:00\",\"dateModified\":\"2024-07-28T20:28:19+03:00\",\"author\":{\"@type\":\"Person\",\"name\":\"Мялкин Максим\"},\"publisher\":{\"@type\":\"Organization\",\"name\":\"Habr\",\"logo\":{\"@type\":\"ImageObject\",\"url\":\"https:\\\u002F\\\u002Fhabrastorage.org\\\u002Fwebt\\\u002Fa_\\\u002Flk\\\u002F9m\\\u002Fa_lk9mjkccjox-zccjrpfolmkmq.png\"}},\"description\":\"Привет, меня зовут Мялкин Максим, я занимаюсь мобильной разработкой в KTS.Не за горами выпуск новой версии Kotlin 2.0, основной частью которого является изменени...\",\"url\":\"https:\\\u002F\\\u002Fhabr.com\\\u002Fru\\\u002Fcompanies\\\u002Fkts\\\u002Farticles\\\u002F813085\\\u002F#post-content-body\",\"about\":[\"c_kts\",\"h_mobile_dev\",\"h_android_dev\",\"h_compilers\",\"h_kotlin\",\"f_develop\"],\"image\":[\"https:\\\u002F\\\u002Fhabr.com\\\u002Fshare\\\u002Fpublication\\\u002F813085\\\u002F1056adc8ec4882d20f2cfd409566ea3e\\\u002F\",\"https:\\\u002F\\\u002Fhabrastorage.org\\\u002Fgetpro\\\u002Fhabr\\\u002Fupload_files\\\u002F6fb\\\u002F759\\\u002F1f6\\\u002F6fb7591f611b10770942a200f86839ef.png\",\"https:\\\u002F\\\u002Fhabrastorage.org\\\u002Fgetpro\\\u002Fhabr\\\u002Fupload_files\\\u002F270\\\u002F87c\\\u002Fd74\\\u002F27087cd740cefa8036228a3fabb6ca55.png\",\"https:\\\u002F\\\u002Fhabrastorage.org\\\u002Fgetpro\\\u002Fhabr\\\u002Fupload_files\\\u002F202\\\u002Ff74\\\u002F7c5\\\u002F202f747c54865c34df0132635279f51c.png\",\"https:\\\u002F\\\u002Fhabrastorage.org\\\u002Fgetpro\\\u002Fhabr\\\u002Fupload_files\\\u002F56e\\\u002F8b2\\\u002F853\\\u002F56e8b28531b3b0326d360f788f139ccb.png\",\"https:\\\u002F\\\u002Fhabrastorage.org\\\u002Fgetpro\\\u002Fhabr\\\u002Fupload_files\\\u002F1f5\\\u002F6c4\\\u002Ff1e\\\u002F1f56c4f1e203bf04bb04fb29d8663a18.png\",\"https:\\\u002F\\\u002Fhabrastorage.org\\\u002Fgetpro\\\u002Fhabr\\\u002Fupload_files\\\u002F2af\\\u002Fbfd\\\u002F412\\\u002F2afbfd412cd2a88b69f5b706e1c82cd8.png\",\"https:\\\u002F\\\u002Fhabrastorage.org\\\u002Fgetpro\\\u002Fhabr\\\u002Fupload_files\\\u002F572\\\u002F7f9\\\u002F705\\\u002F5727f97056517eff98516ca70f34d2bb.png\",\"https:\\\u002F\\\u002Fhabrastorage.org\\\u002Fgetpro\\\u002Fhabr\\\u002Fupload_files\\\u002Fadb\\\u002F053\\\u002F2c7\\\u002Fadb0532c76d3dd7f4af419179adb371a.png\",\"https:\\\u002F\\\u002Fhabrastorage.org\\\u002Fgetpro\\\u002Fhabr\\\u002Fupload_files\\\u002F33e\\\u002F6ab\\\u002Fdaa\\\u002F33e6abdaadc3bcc914c9994631c794b6.png\",\"https:\\\u002F\\\u002Fhabrastorage.org\\\u002Fgetpro\\\u002Fhabr\\\u002Fupload_files\\\u002F84b\\\u002F844\\\u002Ff04\\\u002F84b844f04ff3b6d314c6090cfa366179.png\",\"https:\\\u002F\\\u002Fhabrastorage.org\\\u002Fgetpro\\\u002Fhabr\\\u002Fupload_files\\\u002Ffb7\\\u002F6db\\\u002F748\\\u002Ffb76db748ef1fbec2e7e8288de575e6d.png\",\"https:\\\u002F\\\u002Fhabrastorage.org\\\u002Fgetpro\\\u002Fhabr\\\u002Fupload_files\\\u002Fde9\\\u002F320\\\u002F09d\\\u002Fde932009d0f8cc2fd0fd1e386ae6e491.png\",\"https:\\\u002F\\\u002Fhabrastorage.org\\\u002Fgetpro\\\u002Fhabr\\\u002Fupload_files\\\u002F165\\\u002F821\\\u002Fe8b\\\u002F165821e8b1855a9d51d6dbf38e93d51e.png\",\"https:\\\u002F\\\u002Fhabrastorage.org\\\u002Fgetpro\\\u002Fhabr\\\u002Fupload_files\\\u002F11b\\\u002Fa47\\\u002Fd11\\\u002F11ba47d11cf39386fc081444fd0a1c73.png\",\"https:\\\u002F\\\u002Fhabrastorage.org\\\u002Fgetpro\\\u002Fhabr\\\u002Fupload_files\\\u002F990\\\u002F679\\\u002Fb56\\\u002F990679b5695fc4eb454e6f5f69b88d14.jpg\",\"https:\\\u002F\\\u002Fhabrastorage.org\\\u002Fgetpro\\\u002Fhabr\\\u002Fupload_files\\\u002Fb06\\\u002F012\\\u002F0a7\\\u002Fb060120a757af3fd4cb173261860d6d3.png\",\"https:\\\u002F\\\u002Fhabrastorage.org\\\u002Fgetpro\\\u002Fhabr\\\u002Fupload_files\\\u002F4c0\\\u002F7be\\\u002F40d\\\u002F4c07be40d527d5ac1c9c54e9d211135e.png\",\"https:\\\u002F\\\u002Fhabrastorage.org\\\u002Fgetpro\\\u002Fhabr\\\u002Fupload_files\\\u002Fece\\\u002F610\\\u002F25f\\\u002Fece61025f9a00c4e4606f0e8d9bb1c46.png\",\"https:\\\u002F\\\u002Fhabrastorage.org\\\u002Fgetpro\\\u002Fhabr\\\u002Fupload_files\\\u002F836\\\u002F1fd\\\u002F265\\\u002F8361fd265640179683030531eb4af37f.png\",\"https:\\\u002F\\\u002Fhabrastorage.org\\\u002Fgetpro\\\u002Fhabr\\\u002Fupload_files\\\u002F745\\\u002Fb50\\\u002F65d\\\u002F745b5065de514b84b60da07976b05ad0.png\",\"https:\\\u002F\\\u002Fhabrastorage.org\\\u002Fgetpro\\\u002Fhabr\\\u002Fupload_files\\\u002F20e\\\u002F340\\\u002F2a3\\\u002F20e3402a3355374bcbf03cf3a99c238e.png\",\"https:\\\u002F\\\u002Fhabrastorage.org\\\u002Fgetpro\\\u002Fhabr\\\u002Fupload_files\\\u002Fd51\\\u002F12a\\\u002F97d\\\u002Fd5112a97d9581d6e903dc8ccb1e27fdf.png\",\"https:\\\u002F\\\u002Fhabrastorage.org\\\u002Fgetpro\\\u002Fhabr\\\u002Fupload_files\\\u002Fa9b\\\u002F89f\\\u002Fa7b\\\u002Fa9b89fa7bb1d10a0c160659817323df8.png\",\"https:\\\u002F\\\u002Fhabrastorage.org\\\u002Fgetpro\\\u002Fhabr\\\u002Fupload_files\\\u002Ff65\\\u002F1b1\\\u002F0c0\\\u002Ff651b10c054bc941fb3516f04817e779.png\",\"https:\\\u002F\\\u002Fhabrastorage.org\\\u002Fgetpro\\\u002Fhabr\\\u002Fupload_files\\\u002F1e8\\\u002F868\\\u002F4e7\\\u002F1e88684e78583306c60d3baa8cc79948.png\",\"https:\\\u002F\\\u002Fhabrastorage.org\\\u002Fgetpro\\\u002Fhabr\\\u002Fupload_files\\\u002F10c\\\u002Fab4\\\u002F2c1\\\u002F10cab42c14a33d2d388845583ddf0049.png\",\"https:\\\u002F\\\u002Fhabrastorage.org\\\u002Fgetpro\\\u002Fhabr\\\u002Fupload_files\\\u002F9ea\\\u002Fd4b\\\u002F700\\\u002F9ead4b70078c70c14a4d19c1d8d62f96.png\",\"https:\\\u002F\\\u002Fhabrastorage.org\\\u002Fgetpro\\\u002Fhabr\\\u002Fupload_files\\\u002F6dc\\\u002F4ba\\\u002F282\\\u002F6dc4ba2823a579a6e58c74e18ed50ed4.png\",\"https:\\\u002F\\\u002Fhabrastorage.org\\\u002Fgetpro\\\u002Fhabr\\\u002Fupload_files\\\u002F128\\\u002F67e\\\u002F571\\\u002F12867e5715f0fa5c6650a4a3715f9eb7.png\",\"https:\\\u002F\\\u002Fhabrastorage.org\\\u002Fgetpro\\\u002Fhabr\\\u002Fupload_files\\\u002F5f5\\\u002F0f6\\\u002F810\\\u002F5f50f68104937a2fbcb4f6cb3a90c1a1.png\",\"https:\\\u002F\\\u002Fhabrastorage.org\\\u002Fgetpro\\\u002Fhabr\\\u002Fupload_files\\\u002F57d\\\u002F17a\\\u002F34d\\\u002F57d17a34de9a0b9eef198ce7dcd0216e.png\",\"https:\\\u002F\\\u002Fhabrastorage.org\\\u002Fgetpro\\\u002Fhabr\\\u002Fupload_files\\\u002F48b\\\u002F6a1\\\u002F0e4\\\u002F48b6a10e4b25df66253d762008826cc0.png\",\"https:\\\u002F\\\u002Fhabrastorage.org\\\u002Fgetpro\\\u002Fhabr\\\u002Fupload_files\\\u002F06b\\\u002F521\\\u002Fb96\\\u002F06b521b96545144de6567e249ac0d863.png\",\"https:\\\u002F\\\u002Fhabrastorage.org\\\u002Fgetpro\\\u002Fhabr\\\u002Fupload_files\\\u002F863\\\u002F3a4\\\u002F4e3\\\u002F8633a44e35800c2fdc31298245f43fe8.png\",\"https:\\\u002F\\\u002Fhabrastorage.org\\\u002Fgetpro\\\u002Fhabr\\\u002Fupload_files\\\u002F2e9\\\u002F14e\\\u002Ff6f\\\u002F2e914ef6feb4ab75068486290e87bc95.png\",\"https:\\\u002F\\\u002Fhabrastorage.org\\\u002Fgetpro\\\u002Fhabr\\\u002Fupload_files\\\u002Fc78\\\u002F534\\\u002F63e\\\u002Fc7853463ed3b31b4e99c4698a6f4b4ab.png\",\"https:\\\u002F\\\u002Fhabrastorage.org\\\u002Fgetpro\\\u002Fhabr\\\u002Fupload_files\\\u002F98b\\\u002Fe2d\\\u002F008\\\u002F98be2d00820accf6e676d0332f0f4f90.png\",\"https:\\\u002F\\\u002Fhabrastorage.org\\\u002Fgetpro\\\u002Fhabr\\\u002Fupload_files\\\u002F991\\\u002F90e\\\u002F0a2\\\u002F99190e0a2a44ffce6f512fe4a0aa4163.png\",\"https:\\\u002F\\\u002Fhabrastorage.org\\\u002Fgetpro\\\u002Fhabr\\\u002Fupload_files\\\u002F674\\\u002Fcfd\\\u002F3bd\\\u002F674cfd3bd2547984874c6d26b1b7c661.png\",\"https:\\\u002F\\\u002Fhabrastorage.org\\\u002Fgetpro\\\u002Fhabr\\\u002Fupload_files\\\u002F1e8\\\u002F495\\\u002Fdda\\\u002F1e8495dda92dc53af904e3a5756b14ee.png\",\"https:\\\u002F\\\u002Fhabrastorage.org\\\u002Fgetpro\\\u002Fhabr\\\u002Fupload_files\\\u002F76d\\\u002Fa8f\\\u002Fea9\\\u002F76da8fea949241a9417e3c6013d57c2a.png\"]}","metaDescription":"Привет, меня зовут Мялкин Максим, я занимаюсь мобильной разработкой в KTS. Не за горами выпуск новой версии Kotlin 2.0, основной частью которого является изменение компилятора на K2.&nbsp; По замерам...","mainImageUrl":null,"amp":true,"customTrackerLinks":[]},"polls":[],"commentsEnabled":{"status":true,"reason":null},"rulesRemindEnabled":false,"votesEnabled":true,"status":"published","plannedPublishTime":null,"checked":null,"hasPinnedComments":false,"format":"review","banner":null,"multiwidget":null,"multiwidgetUuid":null,"readingTime":10,"complexity":"medium","isEditorial":false,"allowedFeatures":{"isTestTargetAllow":false}}},"articlesIds":{},"isLoading":false,"pagesCount":{},"route":{},"reasonsList":null,"postReasonsList":null,"view":"list","lastVisitedRoute":{},"ssrCommentsArticleIds":[""],"viewedPosts":[],"myFeedFilter":{"complexity":"all","score":"all","types":["articles","posts","news"]},"myFeedIsApplyFilters":false,"myFeedIsForce":false,"karma":{"userReasonsList":null}},"authorContribution":{"authors":{}},"betaTest":{"currentAnnouncement":null,"announcements":{},"announcementCards":null,"announcementComments":{},"announcementCommentThreads":{},"announcementCommentingStatuses":{},"archivedList":[]},"authorStatistics":{"articleRefs":{},"articleIds":{},"pagesCount":{},"route":{},"viewsCount":[],"maxStatsCount":{}},"career":{"seoLandings":[],"hubs":""},"comments":{"articleComments":{},"articlePinnedComments":{},"searchCommentsResults":null,"pagesCount":null,"commentAccess":{},"scrollParents":{},"pageArticleComments":{"lastViewedComment":0,"postId":null,"lastCommentTimestamp":"","moderated":[],"moderatedIds":[],"commentRoute":"","idempotenceKey":""}},"companies":{"companyRefs":{"kts":{"alias":"kts","imageUrl":"\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fcompany\u002Fcc2\u002Fc99\u002F64b\u002Fcc2c9964bc4927b7001827fc0b2b471b.png","titleHtml":"KTS","descriptionHtml":"Создаем цифровые продукты для бизнеса","relatedData":null,"statistics":{"subscribersCount":39444,"rating":238.52,"invest":null,"postsCount":160,"threadsCount":0,"newsCount":28,"vacanciesCount":0,"employeesCount":41,"careerRating":null},"foundationDate":{"year":"2015","month":"11","day":"09"},"location":{"city":{"id":"447159","title":"Москва"},"region":{"id":"1885","title":"Москва и Московская обл."},"country":{"id":"168","title":"Россия"}},"siteUrl":"https:\u002F\u002Fkts.tech","staffNumber":"101–200 человек","registrationDate":"2021-03-10T13:41:53+00:00","representativeUser":null,"contacts":[{"title":"Сайт","url":"https:\u002F\u002Fkts.tech","siteTitle":"KTS – цифровые продукты для бизнеса","favicon":"https:\u002F\u002Fkts.tech\u002Fstatic\u002Ffavicon\u002Ffavicon-32x32.png"}],"settings":{"analyticsSettings":[{"type":"ga","trackingId":"G-NLL0MBRHY7"},{"type":"ym","trackingId":"92872575"}],"branding":{"imageUrl":"\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fbranding\u002Fc23\u002Fa62\u002F3c3\u002Fc23a623c393d565412dad1b298427cff.jpg","linkUrl":"https:\u002F\u002Fkts.studio","pixelUrl":null,"uuid":"0191e176-5af6-70dd-acd1-d88931edc2eb"},"status":"active","isStartup":false,"hasActivePolls":false,"shouldShowHabrAds":false},"metadata":{"titleHtml":"KTS, Москва - Создаем цифровые продукты для бизнеса с 9 ноября 2015 г.","title":"KTS, Москва - Создаем цифровые продукты для бизнеса с 9 ноября 2015 г.","keywords":["kubernetes","devops","челлендж","конкурс","мерч","ios","разбор задач","mysql","wwdc","ios development","ios разработка","разработка сайтов","интеграция","three.js","туториал","metaclass","курсы программирования","школа программирования","react","курсы фронтенд"],"descriptionHtml":"160 статей от авторов компании KTS","description":"160 статей от авторов компании KTS"},"aDeskSettings":null,"careerAlias":"ktstech","schoolAlias":null}},"companyIds":{},"companyTopIds":{},"pagesCount":{},"companyProfiles":{},"companiesCategories":[],"companiesCategoriesTotalCount":0,"companiesWidgets":{},"companiesWorkers":{},"companiesFans":{},"multiwidgets":{},"route":{},"isLoading":false,"companyWorkersLoading":false,"companyFansLoading":false,"multiwidgetLoading":false,"vacancies":{},"companiesGalleries":{},"companiesBanners":{},"companiesLandingVacancies":{},"companiesTechnologies":{},"workplaceInfo":null},"companyAdmin":{"companyInfo":null,"companyInfoLoading":false,"faqArticles":null,"brandingPreviewImageUrl":null,"jivoStatus":0,"adminNotifications":null,"availableInvitesCount":{}},"companyAdd":{"currentStep":"","stepsData":{},"uncompletedSteps":[],"isStepLoading":true,"isStepCommitting":false,"isInitialized":false,"agreementContent":""},"companiesContribution":{"hubs":{},"flows":{},"companyRefs":{}},"companyHubsContribution":{"contributionRefs":{"hubRefs":{},"hubIds":{}}},"conversation":{"messages":[],"respondent":null,"isLoadMore":false},"conversations":{"conversations":[],"pagesCount":0},"docs":{"menu":{},"articles":{},"mainMenu":[],"loading":{"main":false,"dropdown":false,"article":false}},"feature":{"isProbablyVisible":true},"fixedBanner":{"isArticleStickyPanelVisible":false,"isArticleStickyPanelAtTheBottom":false,"isFixedBannerVisible":false,"isStickyPanelIconsHidden":false},"flows":{"flows":[{"id":"1","alias":"develop","title":"Разработка","titleHtml":"Разработка","route":{"name":"FLOW_PAGE","params":{"flowName":"develop"}}},{"id":"6","alias":"admin","title":"Администрирование","titleHtml":"Администрирование","route":{"name":"FLOW_PAGE","params":{"flowName":"admin"}}},{"id":"2","alias":"design","title":"Дизайн","titleHtml":"Дизайн","route":{"name":"FLOW_PAGE","params":{"flowName":"design"}}},{"id":"3","alias":"management","title":"Менеджмент","titleHtml":"Менеджмент","route":{"name":"FLOW_PAGE","params":{"flowName":"management"}}},{"id":"4","alias":"marketing","title":"Маркетинг","titleHtml":"Маркетинг","route":{"name":"FLOW_PAGE","params":{"flowName":"marketing"}}},{"id":"7","alias":"popsci","title":"Научпоп","titleHtml":"Научпоп","route":{"name":"FLOW_PAGE","params":{"flowName":"popsci"}}}],"updates":{}},"global":{"isPwa":false,"device":"mobile","isHabrCom":true,"requestId":"e5dfdc1e688bd339b8d7240d0db2bbbe"},"hubs":{"hubRefs":{},"hubIds":{},"pagesCount":{},"isLoading":false,"route":{}},"hubsBlock":{"hubRefs":{},"hubIds":{}},"i18n":{"fl":"ru","hl":"ru"},"info":{"welcomePage":{},"isLoading":true},"location":{"urlStruct":{"protocol":null,"slashes":null,"auth":null,"host":null,"port":null,"hostname":null,"hash":null,"query":{},"pathname":"\u002Fru\u002Fcompanies\u002Fkts\u002Farticles\u002F813085\u002F","path":"\u002Fru\u002Fcompanies\u002Fkts\u002Farticles\u002F813085\u002F","href":"\u002Fru\u002Fcompanies\u002Fkts\u002Farticles\u002F813085\u002F"}},"me":{"user":null,"uuid":null,"ppgDemanded":false,"karmaResetInfo":{"canReincarnate":null,"wasReincarnated":null,"currentScore":null},"notes":null,"userUpdates":{"feeds":{"newPostsCount":null,"newThreadsCount":null,"newNewsCount":null,"newCount":null},"conversationUnreadCount":0}},"mostReadingList":{"mostReadingListIds":[],"mostReadingListRefs":null,"promoPost":null},"onboarding":{"currentStep":null,"stepsData":{},"stepsErrors":{},"completedSteps":[],"isStepCommitting":false,"isCommitDisabled":true},"ppa":{"articles":{},"card":null,"transactions":null,"totalTransactions":null,"isAccessible":null},"projectsBlocks":{"activeBlocks":{"vacancies":"project-block-company-article"}},"promoData":{"isLoading":false,"hasLoaded":false,"featurer":null,"megaposts":null,"promoLinks":null,"promoPosts":null,"sticker":null},"publicationStatistics":{"statsInfo":{},"statsFunnels":{},"statsGraph":{},"defaultSuggest":{},"suggest":{},"timeTracker":{},"isTrackingActivity":false,"isUserActive":true,"otherPublicationStats":{}},"pullRefresh":{"shouldRefresh":false},"sandbox":{"articleIds":[],"articleRefs":{},"pagesCount":null,"route":{},"lastVisitedRoute":{},"isLoading":false},"search":{"searchQueryError":null},"settingsOther":{"inputs":{"uiLang":{"errors":[],"ref":null,"value":""},"articlesLangEnglish":{"errors":[],"ref":null,"value":false},"articlesLangRussian":{"errors":[],"ref":null,"value":false},"agreement":{"errors":[],"ref":null,"value":false},"email":{"errors":[],"ref":null,"value":true},"digest":{"errors":[],"ref":null,"value":true}}},"similarList":{"similarListIds":[],"similarListRefs":null},"ssr":{"error":null,"isDataLoaded":true,"isDataLoading":false,"isHydrationFailed":false,"isServer":false},"stories":{"stories":[{"id":"story-998","author":{"logo":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F91a\u002F166\u002F49f\u002F91a16649f9ef89302a5a56cfa22a451d.png","title":"Яндекс Практикум","link":"https:\u002F\u002Fu.habr.com\u002Fstories_up"},"title":"Как расти на работе?","lang":"ru","startTime":"2025-03-18T18:45:00+03:00","finishTime":"2025-03-31T19:00:00+03:00","slides":[{"id":"story-998_1","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fbf4\u002F911\u002F7e6\u002Fbf49117e637ff2099b3944f8803cd7a3.png","button":null},{"id":"story-998_2","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F3e3\u002Fc84\u002Fe83\u002F3e3c84e8330ea1ddf72e9d310457ed2f.png","button":{"title":"Расти в карьере","link":"https:\u002F\u002Fu.habr.com\u002Fstories_up","colorType":"light"}},{"id":"story-998_3","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F84b\u002F533\u002F3c3\u002F84b5333c3e77e8dac62a8b50d042acb9.png","button":{"title":"Расти в карьере","link":"https:\u002F\u002Fu.habr.com\u002Fstories_up","colorType":"light"}},{"id":"story-998_4","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F257\u002Feb0\u002F2be\u002F257eb02bea1777e13f3e647cae6e06cd.png","button":{"title":"Расти в карьере","link":"https:\u002F\u002Fu.habr.com\u002Fstories_up","colorType":"light"}},{"id":"story-998_5","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F858\u002F086\u002F0ed\u002F8580860ed3497c043c04f9a42054d74f.png","button":{"title":"Расти в карьере","link":"https:\u002F\u002Fu.habr.com\u002Fstories_up","colorType":"light"}},{"id":"story-998_6","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fcdf\u002F32f\u002F387\u002Fcdf32f38777f046c063b5182f4125e14.png","button":{"title":"Расти в карьере","link":"https:\u002F\u002Fu.habr.com\u002Fstories_up","colorType":"light"}},{"id":"story-998_7","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fd48\u002Ff2d\u002F0e2\u002Fd48f2d0e2ecd7d746d738191bb913d8f.png","button":{"title":"Расти в карьере","link":"https:\u002F\u002Fu.habr.com\u002Fstories_up","colorType":"light"}},{"id":"story-998_8","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fb38\u002Ffd7\u002Fee0\u002Fb38fd7ee04848bf3b058be7403438bd1.png","button":{"title":"Расти в карьере","link":"https:\u002F\u002Fu.habr.com\u002Fstories_up","colorType":"light"}},{"id":"story-998_9","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F79e\u002Feaa\u002F9d8\u002F79eeaa9d8af5a288ad42bd9d63b5793a.png","button":{"title":"Расти в карьере","link":"https:\u002F\u002Fu.habr.com\u002Fstories_up","colorType":"light"}},{"id":"story-998_10","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fcdc\u002F17e\u002F385\u002Fcdc17e38582dc67838b9abfb200d982e.png","button":{"title":"Расти в карьере","link":"https:\u002F\u002Fu.habr.com\u002Fstories_up","colorType":"light"}}]},{"id":"story-996","author":{"logo":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fe63\u002F36d\u002Fa24\u002Fe6336da24460ab6b9fbc347d03eb263a.png","title":"Хабр","link":null},"title":"Здоровье айтишника","lang":"ru","startTime":"2025-03-17T10:22:00+03:00","finishTime":"2025-04-13T10:22:00+03:00","slides":[{"id":"story-996_1","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fb7c\u002F6de\u002F8ea\u002Fb7c6de8ea6789dbc30f071716172b6dd.jpg","button":null},{"id":"story-996_2","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F2e7\u002F88a\u002F0fe\u002F2e788a0fe61729ca8b23eb59069c844f.jpg","button":{"title":"Личный опыт","link":"https:\u002F\u002Fu.habr.com\u002Fzd-1","colorType":"light"}},{"id":"story-996_3","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fb93\u002F6f4\u002F256\u002Fb936f425653b84fa60ab00d09f78c543.jpg","button":{"title":"Как это было","link":"https:\u002F\u002Fu.habr.com\u002Fzd-2","colorType":"light"}},{"id":"story-996_4","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fc10\u002Fd14\u002Ff5a\u002Fc10d14f5a4859fe10baecbcc2bcb8828.jpg","button":{"title":"Шея в фокусе","link":"https:\u002F\u002Fu.habr.com\u002Fzd-3","colorType":"dark"}},{"id":"story-996_5","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F535\u002Fe1b\u002F77a\u002F535e1b77a9eb896262ad73321f2ad99f.jpg","button":{"title":"Фотоинструкция","link":"https:\u002F\u002Fu.habr.com\u002Fzd-4","colorType":"light"}},{"id":"story-996_6","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F569\u002Fc39\u002F49f\u002F569c3949f5b330ea85d4a1864f481c3d.jpg","button":{"title":"Сидите (не)правильно","link":"https:\u002F\u002Fu.habr.com\u002Fzd-5","colorType":"dark"}},{"id":"story-996_7","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F1f2\u002F1de\u002Fdbf\u002F1f21dedbf2902bc4061a75b839b63595.jpg","button":{"title":"Журнал изменений","link":"https:\u002F\u002Fu.habr.com\u002Fzd-6","colorType":"dark"}},{"id":"story-996_8","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F95a\u002F164\u002F21b\u002F95a16421badc3a9f1135309ab0c42c41.jpg","button":{"title":"Альтернатива","link":"https:\u002F\u002Fu.habr.com\u002Fzd-7","colorType":"light"}},{"id":"story-996_9","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F624\u002F027\u002F54d\u002F62402754d311798af44bcfe7f9abfedc.jpg","button":{"title":"Хроника поисков","link":"https:\u002F\u002Fu.habr.com\u002Fzd-8","colorType":"dark"}}]},{"id":"story-992","author":{"logo":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F3fe\u002F2fc\u002Fb05\u002F3fe2fcb05df852d7e1e00d44e54e39ae.png","title":"Сезоны Хабра","link":"https:\u002F\u002Fu.habr.com\u002Ffnstories"},"title":"Угадайте будущее в новом сезоне","lang":"ru","startTime":"2025-03-12T19:15:00+03:00","finishTime":"2025-03-31T23:56:00+03:00","slides":[{"id":"story-992_1","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fc56\u002Faf5\u002Fc43\u002Fc56af5c4377f7f7b94f7b6ad20fc92c3.png","button":{"title":"А что за сезон?","link":"https:\u002F\u002Fu.habr.com\u002Ffnstories","colorType":"light"}},{"id":"story-992_2","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F8fa\u002Fde7\u002F65d\u002F8fade765d99207f31c597283ae6ce912.png","button":{"title":"Какие темы нужны","link":"https:\u002F\u002Fu.habr.com\u002Ffnstories","colorType":"dark"}},{"id":"story-992_3","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F23e\u002F7b9\u002Fb24\u002F23e7b9b24cb056d1a42e8d31ccea16ce.png","button":{"title":"Сезон будущего ИИ","link":"https:\u002F\u002Fu.habr.com\u002Ffnstories","colorType":"dark"}},{"id":"story-992_4","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F27b\u002Fbfc\u002Fa18\u002F27bbfca18e656ee0122b5cb8eb2cb502.png","button":{"title":"Все правила сезона","link":"https:\u002F\u002Fu.habr.com\u002Ffnstories","colorType":"dark"}},{"id":"story-992_5","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F1e0\u002F6c6\u002Ff33\u002F1e06c6f33e703bbd2b2ae3baee3376fd.png","button":{"title":"Как участвовать","link":"https:\u002F\u002Fu.habr.com\u002Ffnstories","colorType":"dark"}}]},{"id":"story-990","author":{"logo":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F282\u002Fe80\u002Fbf1\u002F282e80bf1b73484126ed53c6f3e42692.png","title":"Aeza","link":"https:\u002F\u002Fu.habr.com\u002FI72qi"},"title":"С праздником весны!","lang":"ru","startTime":"2025-03-09T10:15:00+03:00","finishTime":"2025-03-30T23:59:00+03:00","slides":[{"id":"story-990_1","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F064\u002F9dd\u002Ff59\u002F0649ddf5949cae6c9342fb62034a36ac.png","button":null},{"id":"story-990_2","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F05f\u002F96b\u002F25e\u002F05f96b25e910c32256ee0b1916f21380.png","button":{"title":"Семейная история","link":"https:\u002F\u002Fu.habr.com\u002Fey2bY","colorType":"light"}},{"id":"story-990_3","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fcd1\u002Ff5d\u002F921\u002Fcd1f5d921bb9489ac11727272660bdb6.png","button":{"title":"Движущиеся картинки","link":"https:\u002F\u002Fu.habr.com\u002FWLKXU","colorType":"light"}},{"id":"story-990_4","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fb55\u002Fd45\u002Fec5\u002Fb55d45ec50e53275c60d16ea886a0672.png","button":{"title":"Личный опыт","link":"https:\u002F\u002Fu.habr.com\u002FSxrki","colorType":"light"}},{"id":"story-990_5","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Ffa7\u002F1ce\u002Ffca\u002Ffa71cefca5ed0a3fe8b50bd703b3605f.png","button":{"title":"Алгоритм","link":"https:\u002F\u002Fu.habr.com\u002Ftbz2p","colorType":"light"}},{"id":"story-990_6","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F435\u002F89d\u002Ff90\u002F43589df9018846cc6a8eed986226b252.png","button":{"title":"Выбрать сценарий","link":"https:\u002F\u002Fu.habr.com\u002F0RCPk","colorType":"light"}},{"id":"story-990_7","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F514\u002F5f8\u002F619\u002F5145f86194ad48dad48a846b42af0f93.png","button":{"title":"Jiraзамещение","link":"https:\u002F\u002Fu.habr.com\u002FEwhYq","colorType":"light"}},{"id":"story-990_8","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F439\u002Fa83\u002Fae7\u002F439a83ae78f7ef711e3b9bbed1ec26c5.png","button":{"title":"8 вещей","link":"https:\u002F\u002Fu.habr.com\u002FVTv2r","colorType":"light"}},{"id":"story-990_9","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F02d\u002F783\u002F2f7\u002F02d7832f7b1c95d88bff9f34209e204a.png","button":{"title":"Интерфейсы","link":"https:\u002F\u002Fu.habr.com\u002FUFOMZ","colorType":"light"}},{"id":"story-990_10","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F0cb\u002Ff7f\u002F0d9\u002F0cbf7f0d905d486ce4ff82bc939b21d5.png","button":{"title":"Стикеры ваши","link":"https:\u002F\u002Fu.habr.com\u002FoA1K7","colorType":"light"}}]},{"id":"story-984","author":{"logo":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F648\u002F61b\u002F9ae\u002F64861b9aecb7c474cd94063f98045541.png","title":"Хабр","link":null},"title":"Всегда котов!","lang":"ru","startTime":"2025-03-01T00:01:09+03:00","finishTime":"2025-03-23T16:21:00+03:00","slides":[{"id":"story-984_1","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fc06\u002Fc21\u002F93f\u002Fc06c2193ff34362ac2af782cf2571f55.png","button":null},{"id":"story-984_2","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fb68\u002F15f\u002F763\u002Fb6815f7630b9c015b1e67efb5bdf12d4.jpg","button":{"title":"Сделать purrrr","link":"https:\u002F\u002Fu.habr.com\u002Fj4DN1","colorType":"light"}},{"id":"story-984_3","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F550\u002F76e\u002Fd7a\u002F55076ed7a0954e243f944fc2f330623a.png","button":{"title":"Тыгыдык","link":"https:\u002F\u002Fu.habr.com\u002Fya360_kotov","colorType":"dark"}},{"id":"story-984_4","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F2fb\u002F23b\u002F06c\u002F2fb23b06cf294c2050104b2aef589788.jpg","button":{"title":"Исследование","link":"https:\u002F\u002Fu.habr.com\u002FbO3r0","colorType":"light"}},{"id":"story-984_5","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Ff50\u002F50f\u002F0ae\u002Ff5050f0aeea1335c4f0544c1863f8342.jpg","button":{"title":"Детали проекта","link":"https:\u002F\u002Fu.habr.com\u002FQJmhe","colorType":"light"}},{"id":"story-984_6","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F825\u002F3dd\u002F5f5\u002F8253dd5f5c19dd061578f1d09310a45f.jpg","button":{"title":"Эксперименты","link":"https:\u002F\u002Fu.habr.com\u002FVaOdo","colorType":"light"}},{"id":"story-984_7","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F3fb\u002Fc92\u002F0f9\u002F3fbc920f9ea81eca2c1c027ff77fc659.jpg","button":{"title":"Это не мем","link":"https:\u002F\u002Fu.habr.com\u002F0Wb3p","colorType":"light"}},{"id":"story-984_8","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F2b4\u002F794\u002Fc33\u002F2b4794c33844e60aad9468018fd132cd.jpg","button":{"title":"В засаде","link":"https:\u002F\u002Fu.habr.com\u002FnasCD","colorType":"dark"}}]}]},"technotext":{"years":[],"technotextDocForNominees":null,"technotextDocForWinners":null,"technotextInfo":{},"technotextInfoLoading":false,"technotextWinners":{},"technotextWinnersLoading":false},"userHubsContribution":{"contributionRefs":{"hubRefs":{},"hubIds":{}}},"userInvites":{"availableInvites":0,"usedInvitesIds":[],"usedInvitesRefs":{},"usedInvitesPagesCount":0,"unusedInvitesIds":[],"unusedInvitesRefs":{},"unusedInvitesPagesCount":0},"userVotes":{"karmaVotesList":[],"karmaVotesPagesCount":null,"karmaVotesListLoading":false,"commentsVotesList":[],"commentsVotesPagesCount":null,"commentsVotesListLoading":false,"postsVotesList":[],"postsVotesPagesCount":null,"postsVotesListLoading":false,"userVotesList":[],"userVotesPagesCount":null,"userVotesListLoading":false},"users":{"authorRefs":{},"authorIds":{},"pagesCount":{},"authorProfiles":{"max1993m":{"alias":"MAX1993M","badgets":[{"title":"Захабренный","description":"Пользователь с кармой \u003E0","url":null,"isRemovable":false},{"title":"Техноавтор 2023","description":"Участник конкурса «Технотекст 2023»","url":null,"isRemovable":false}],"aboutHtml":"","contacts":[],"invitedBy":{"issuerLogin":"mercifulcarnifex","timeCreated":"2021-11-17T13:11:02+00:00"},"careerProfile":null,"companies":{"pagesCount":1,"companyIds":["kts"],"companyRefs":{"kts":{"id":"7792","alias":"kts","titleHtml":"KTS","descriptionHtml":"Создаем цифровые продукты для бизнеса","imageUrl":"\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fcompany\u002Fcc2\u002Fc99\u002F64b\u002Fcc2c9964bc4927b7001827fc0b2b471b.png","relatedData":null,"statistics":{"subscribersCount":39444,"rating":238.52,"invest":null},"commonHubs":[]}}}}},"userHubs":{},"userInvitations":{},"authorFollowers":{},"authorFollowed":{},"userSpecialization":{},"karmaStats":[],"statistics":null,"isLoading":false,"authorFollowersLoading":false,"authorFollowedLoading":false,"userHubsLoading":false,"userInvitationsLoading":false,"route":{}},"viewport":{"prevScrollY":{},"scrollY":0,"width":0},"tracker":{"notificationsLoading":false,"notificationsList":[],"notificationsPageCount":0,"pendingMarkNotificationsRead":[],"publicationsLoading":true,"publicationsList":[],"publicationsPageCount":0,"pendingDeletePublications":false,"pendingMarkPublicationsRead":false},"events":{"eventRefs":{},"eventIds":[],"pagesCount":0,"categories":[],"cities":[],"actualEvents":null,"currentEvent":null,"eventsFilter":{"city":"all","timeStarted":null,"timeEnded":null}},"wysiwyg":{"WYSIWYGRulesRefs":null}};(function(){var s;(s=document.currentScript||document.scripts[document.scripts.length-1]).parentNode.removeChild(s);}());</script><script src="https://assets.habr.com/habr-web/js/chunk-vendors.3b11d41f.js" defer></script><script src="https://assets.habr.com/habr-web/js/app.7a97ea6d.js" defer></script></div>
    <div id="overlays"><!----><!--teleport anchor--><!----><!--teleport anchor--><!----><!--teleport anchor--><!----><!--teleport anchor--><!----><!--teleport anchor--><!----><!--teleport anchor--></div>
    
    
    <script async src="https://www.googletagmanager.com/gtag/js?id=G-S28W1WC23F"></script>
    <script>
      window.dataLayer = window.dataLayer || [];
      function gtag(){dataLayer.push(arguments);}
      gtag('js', new Date());
    </script>
  
  <script type="text/javascript" >
    (function(m,e,t,r,i,k,a){m[i]=m[i]||function(){(m[i].a=m[i].a||[]).push(arguments)};
    m[i].l=1*new Date();k=e.createElement(t),a=e.getElementsByTagName(t)[0],k.async=1,k.src=r,a.parentNode.insertBefore(k,a)})
    (window, document, "script", "https://mc.yandex.ru/metrika/tag.js", "ym");

  </script>
    <script type="text/javascript">
      window.addEventListener('load', function () {
        setTimeout(() => {
          const img = new Image();
          img.src = 'https://vk.com/rtrg?p=VK-RTRG-421343-57vKE';
        }, 0);
      });
    </script>
  
    </body>

    </html>
